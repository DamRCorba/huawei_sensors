// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: huaweiV8R10-qos.proto

package huaweiV8R10_qos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QosResetATMPvcQueueRequest_ServiceClass int32

const (
	QosResetATMPvcQueueRequest_ServiceClass_AF1       QosResetATMPvcQueueRequest_ServiceClass = 0
	QosResetATMPvcQueueRequest_ServiceClass_AF2       QosResetATMPvcQueueRequest_ServiceClass = 1
	QosResetATMPvcQueueRequest_ServiceClass_AF3       QosResetATMPvcQueueRequest_ServiceClass = 2
	QosResetATMPvcQueueRequest_ServiceClass_AF4       QosResetATMPvcQueueRequest_ServiceClass = 3
	QosResetATMPvcQueueRequest_ServiceClass_BE        QosResetATMPvcQueueRequest_ServiceClass = 4
	QosResetATMPvcQueueRequest_ServiceClass_CS6       QosResetATMPvcQueueRequest_ServiceClass = 5
	QosResetATMPvcQueueRequest_ServiceClass_CS7       QosResetATMPvcQueueRequest_ServiceClass = 6
	QosResetATMPvcQueueRequest_ServiceClass_EF        QosResetATMPvcQueueRequest_ServiceClass = 7
	QosResetATMPvcQueueRequest_ServiceClass_NOTCONFIG QosResetATMPvcQueueRequest_ServiceClass = 8
)

// Enum value maps for QosResetATMPvcQueueRequest_ServiceClass.
var (
	QosResetATMPvcQueueRequest_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	QosResetATMPvcQueueRequest_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x QosResetATMPvcQueueRequest_ServiceClass) Enum() *QosResetATMPvcQueueRequest_ServiceClass {
	p := new(QosResetATMPvcQueueRequest_ServiceClass)
	*p = x
	return p
}

func (x QosResetATMPvcQueueRequest_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetATMPvcQueueRequest_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[0].Descriptor()
}

func (QosResetATMPvcQueueRequest_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[0]
}

func (x QosResetATMPvcQueueRequest_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetATMPvcQueueRequest_ServiceClass.Descriptor instead.
func (QosResetATMPvcQueueRequest_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{0, 0}
}

type QosResetBdPolicyApplyRequest_Bddirection int32

const (
	QosResetBdPolicyApplyRequest_Bddirection_INBOUND  QosResetBdPolicyApplyRequest_Bddirection = 0
	QosResetBdPolicyApplyRequest_Bddirection_OUTBOUND QosResetBdPolicyApplyRequest_Bddirection = 1
)

// Enum value maps for QosResetBdPolicyApplyRequest_Bddirection.
var (
	QosResetBdPolicyApplyRequest_Bddirection_name = map[int32]string{
		0: "Bddirection_INBOUND",
		1: "Bddirection_OUTBOUND",
	}
	QosResetBdPolicyApplyRequest_Bddirection_value = map[string]int32{
		"Bddirection_INBOUND":  0,
		"Bddirection_OUTBOUND": 1,
	}
)

func (x QosResetBdPolicyApplyRequest_Bddirection) Enum() *QosResetBdPolicyApplyRequest_Bddirection {
	p := new(QosResetBdPolicyApplyRequest_Bddirection)
	*p = x
	return p
}

func (x QosResetBdPolicyApplyRequest_Bddirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetBdPolicyApplyRequest_Bddirection) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[1].Descriptor()
}

func (QosResetBdPolicyApplyRequest_Bddirection) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[1]
}

func (x QosResetBdPolicyApplyRequest_Bddirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetBdPolicyApplyRequest_Bddirection.Descriptor instead.
func (QosResetBdPolicyApplyRequest_Bddirection) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{1, 0}
}

type QosResetBdVxlanPolicyApplyRequest_Bddirection int32

const (
	QosResetBdVxlanPolicyApplyRequest_Bddirection_INBOUND  QosResetBdVxlanPolicyApplyRequest_Bddirection = 0
	QosResetBdVxlanPolicyApplyRequest_Bddirection_OUTBOUND QosResetBdVxlanPolicyApplyRequest_Bddirection = 1
)

// Enum value maps for QosResetBdVxlanPolicyApplyRequest_Bddirection.
var (
	QosResetBdVxlanPolicyApplyRequest_Bddirection_name = map[int32]string{
		0: "Bddirection_INBOUND",
		1: "Bddirection_OUTBOUND",
	}
	QosResetBdVxlanPolicyApplyRequest_Bddirection_value = map[string]int32{
		"Bddirection_INBOUND":  0,
		"Bddirection_OUTBOUND": 1,
	}
)

func (x QosResetBdVxlanPolicyApplyRequest_Bddirection) Enum() *QosResetBdVxlanPolicyApplyRequest_Bddirection {
	p := new(QosResetBdVxlanPolicyApplyRequest_Bddirection)
	*p = x
	return p
}

func (x QosResetBdVxlanPolicyApplyRequest_Bddirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetBdVxlanPolicyApplyRequest_Bddirection) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[2].Descriptor()
}

func (QosResetBdVxlanPolicyApplyRequest_Bddirection) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[2]
}

func (x QosResetBdVxlanPolicyApplyRequest_Bddirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetBdVxlanPolicyApplyRequest_Bddirection.Descriptor instead.
func (QosResetBdVxlanPolicyApplyRequest_Bddirection) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{2, 0}
}

type QosResetEvplVxlanPolicyApplyRequest_Evpldirection int32

const (
	QosResetEvplVxlanPolicyApplyRequest_Evpldirection_OUTBOUND QosResetEvplVxlanPolicyApplyRequest_Evpldirection = 0
)

// Enum value maps for QosResetEvplVxlanPolicyApplyRequest_Evpldirection.
var (
	QosResetEvplVxlanPolicyApplyRequest_Evpldirection_name = map[int32]string{
		0: "Evpldirection_OUTBOUND",
	}
	QosResetEvplVxlanPolicyApplyRequest_Evpldirection_value = map[string]int32{
		"Evpldirection_OUTBOUND": 0,
	}
)

func (x QosResetEvplVxlanPolicyApplyRequest_Evpldirection) Enum() *QosResetEvplVxlanPolicyApplyRequest_Evpldirection {
	p := new(QosResetEvplVxlanPolicyApplyRequest_Evpldirection)
	*p = x
	return p
}

func (x QosResetEvplVxlanPolicyApplyRequest_Evpldirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetEvplVxlanPolicyApplyRequest_Evpldirection) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[3].Descriptor()
}

func (QosResetEvplVxlanPolicyApplyRequest_Evpldirection) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[3]
}

func (x QosResetEvplVxlanPolicyApplyRequest_Evpldirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetEvplVxlanPolicyApplyRequest_Evpldirection.Descriptor instead.
func (QosResetEvplVxlanPolicyApplyRequest_Evpldirection) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{3, 0}
}

type QosResetGlobalPolicyRequest_Direction int32

const (
	QosResetGlobalPolicyRequest_Direction_INBOUND  QosResetGlobalPolicyRequest_Direction = 0
	QosResetGlobalPolicyRequest_Direction_OUTBOUND QosResetGlobalPolicyRequest_Direction = 1
)

// Enum value maps for QosResetGlobalPolicyRequest_Direction.
var (
	QosResetGlobalPolicyRequest_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	QosResetGlobalPolicyRequest_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x QosResetGlobalPolicyRequest_Direction) Enum() *QosResetGlobalPolicyRequest_Direction {
	p := new(QosResetGlobalPolicyRequest_Direction)
	*p = x
	return p
}

func (x QosResetGlobalPolicyRequest_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetGlobalPolicyRequest_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[4].Descriptor()
}

func (QosResetGlobalPolicyRequest_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[4]
}

func (x QosResetGlobalPolicyRequest_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetGlobalPolicyRequest_Direction.Descriptor instead.
func (QosResetGlobalPolicyRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{4, 0}
}

type QosResetIFGQStRequest_Direction int32

const (
	QosResetIFGQStRequest_Direction_INBOUND  QosResetIFGQStRequest_Direction = 0
	QosResetIFGQStRequest_Direction_OUTBOUND QosResetIFGQStRequest_Direction = 1
)

// Enum value maps for QosResetIFGQStRequest_Direction.
var (
	QosResetIFGQStRequest_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	QosResetIFGQStRequest_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x QosResetIFGQStRequest_Direction) Enum() *QosResetIFGQStRequest_Direction {
	p := new(QosResetIFGQStRequest_Direction)
	*p = x
	return p
}

func (x QosResetIFGQStRequest_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetIFGQStRequest_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[5].Descriptor()
}

func (QosResetIFGQStRequest_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[5]
}

func (x QosResetIFGQStRequest_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetIFGQStRequest_Direction.Descriptor instead.
func (QosResetIFGQStRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{6, 0}
}

type QosResetIfCarRequest_Direction int32

const (
	QosResetIfCarRequest_Direction_INBOUND  QosResetIfCarRequest_Direction = 0
	QosResetIfCarRequest_Direction_OUTBOUND QosResetIfCarRequest_Direction = 1
)

// Enum value maps for QosResetIfCarRequest_Direction.
var (
	QosResetIfCarRequest_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	QosResetIfCarRequest_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x QosResetIfCarRequest_Direction) Enum() *QosResetIfCarRequest_Direction {
	p := new(QosResetIfCarRequest_Direction)
	*p = x
	return p
}

func (x QosResetIfCarRequest_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetIfCarRequest_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[6].Descriptor()
}

func (QosResetIfCarRequest_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[6]
}

func (x QosResetIfCarRequest_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetIfCarRequest_Direction.Descriptor instead.
func (QosResetIfCarRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{7, 0}
}

type QosResetIfGQRequest_Direction int32

const (
	QosResetIfGQRequest_Direction_INBOUND  QosResetIfGQRequest_Direction = 0
	QosResetIfGQRequest_Direction_OUTBOUND QosResetIfGQRequest_Direction = 1
)

// Enum value maps for QosResetIfGQRequest_Direction.
var (
	QosResetIfGQRequest_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	QosResetIfGQRequest_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x QosResetIfGQRequest_Direction) Enum() *QosResetIfGQRequest_Direction {
	p := new(QosResetIfGQRequest_Direction)
	*p = x
	return p
}

func (x QosResetIfGQRequest_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetIfGQRequest_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[7].Descriptor()
}

func (QosResetIfGQRequest_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[7]
}

func (x QosResetIfGQRequest_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetIfGQRequest_Direction.Descriptor instead.
func (QosResetIfGQRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{8, 0}
}

type QosResetIfQppbRequest_Direction int32

const (
	QosResetIfQppbRequest_Direction_INBOUND      QosResetIfQppbRequest_Direction = 0
	QosResetIfQppbRequest_Direction_IPPRECEDENCE QosResetIfQppbRequest_Direction = 1
	QosResetIfQppbRequest_Direction_OUTBOUND     QosResetIfQppbRequest_Direction = 2
)

// Enum value maps for QosResetIfQppbRequest_Direction.
var (
	QosResetIfQppbRequest_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_IPPRECEDENCE",
		2: "Direction_OUTBOUND",
	}
	QosResetIfQppbRequest_Direction_value = map[string]int32{
		"Direction_INBOUND":      0,
		"Direction_IPPRECEDENCE": 1,
		"Direction_OUTBOUND":     2,
	}
)

func (x QosResetIfQppbRequest_Direction) Enum() *QosResetIfQppbRequest_Direction {
	p := new(QosResetIfQppbRequest_Direction)
	*p = x
	return p
}

func (x QosResetIfQppbRequest_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetIfQppbRequest_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[8].Descriptor()
}

func (QosResetIfQppbRequest_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[8]
}

func (x QosResetIfQppbRequest_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetIfQppbRequest_Direction.Descriptor instead.
func (QosResetIfQppbRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{9, 0}
}

type QosResetIfSQRequest_Direction int32

const (
	QosResetIfSQRequest_Direction_INBOUND  QosResetIfSQRequest_Direction = 0
	QosResetIfSQRequest_Direction_OUTBOUND QosResetIfSQRequest_Direction = 1
)

// Enum value maps for QosResetIfSQRequest_Direction.
var (
	QosResetIfSQRequest_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	QosResetIfSQRequest_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x QosResetIfSQRequest_Direction) Enum() *QosResetIfSQRequest_Direction {
	p := new(QosResetIfSQRequest_Direction)
	*p = x
	return p
}

func (x QosResetIfSQRequest_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetIfSQRequest_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[9].Descriptor()
}

func (QosResetIfSQRequest_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[9]
}

func (x QosResetIfSQRequest_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetIfSQRequest_Direction.Descriptor instead.
func (QosResetIfSQRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{10, 0}
}

type QosResetLsPortQueueRequest_ServiceClass int32

const (
	QosResetLsPortQueueRequest_ServiceClass_AF1       QosResetLsPortQueueRequest_ServiceClass = 0
	QosResetLsPortQueueRequest_ServiceClass_AF2       QosResetLsPortQueueRequest_ServiceClass = 1
	QosResetLsPortQueueRequest_ServiceClass_AF3       QosResetLsPortQueueRequest_ServiceClass = 2
	QosResetLsPortQueueRequest_ServiceClass_AF4       QosResetLsPortQueueRequest_ServiceClass = 3
	QosResetLsPortQueueRequest_ServiceClass_BE        QosResetLsPortQueueRequest_ServiceClass = 4
	QosResetLsPortQueueRequest_ServiceClass_CS6       QosResetLsPortQueueRequest_ServiceClass = 5
	QosResetLsPortQueueRequest_ServiceClass_CS7       QosResetLsPortQueueRequest_ServiceClass = 6
	QosResetLsPortQueueRequest_ServiceClass_EF        QosResetLsPortQueueRequest_ServiceClass = 7
	QosResetLsPortQueueRequest_ServiceClass_NOTCONFIG QosResetLsPortQueueRequest_ServiceClass = 8
)

// Enum value maps for QosResetLsPortQueueRequest_ServiceClass.
var (
	QosResetLsPortQueueRequest_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	QosResetLsPortQueueRequest_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x QosResetLsPortQueueRequest_ServiceClass) Enum() *QosResetLsPortQueueRequest_ServiceClass {
	p := new(QosResetLsPortQueueRequest_ServiceClass)
	*p = x
	return p
}

func (x QosResetLsPortQueueRequest_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetLsPortQueueRequest_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[10].Descriptor()
}

func (QosResetLsPortQueueRequest_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[10]
}

func (x QosResetLsPortQueueRequest_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetLsPortQueueRequest_ServiceClass.Descriptor instead.
func (QosResetLsPortQueueRequest_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{11, 0}
}

type QosResetPolicyApplyRequest_Direction int32

const (
	QosResetPolicyApplyRequest_Direction_INBOUND  QosResetPolicyApplyRequest_Direction = 0
	QosResetPolicyApplyRequest_Direction_OUTBOUND QosResetPolicyApplyRequest_Direction = 1
)

// Enum value maps for QosResetPolicyApplyRequest_Direction.
var (
	QosResetPolicyApplyRequest_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	QosResetPolicyApplyRequest_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x QosResetPolicyApplyRequest_Direction) Enum() *QosResetPolicyApplyRequest_Direction {
	p := new(QosResetPolicyApplyRequest_Direction)
	*p = x
	return p
}

func (x QosResetPolicyApplyRequest_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetPolicyApplyRequest_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[11].Descriptor()
}

func (QosResetPolicyApplyRequest_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[11]
}

func (x QosResetPolicyApplyRequest_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetPolicyApplyRequest_Direction.Descriptor instead.
func (QosResetPolicyApplyRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{13, 0}
}

type QosResetPortQueueRequest_Isonboard int32

const (
	QosResetPortQueueRequest_Isonboard_NO  QosResetPortQueueRequest_Isonboard = 0
	QosResetPortQueueRequest_Isonboard_YES QosResetPortQueueRequest_Isonboard = 1
)

// Enum value maps for QosResetPortQueueRequest_Isonboard.
var (
	QosResetPortQueueRequest_Isonboard_name = map[int32]string{
		0: "Isonboard_NO",
		1: "Isonboard_YES",
	}
	QosResetPortQueueRequest_Isonboard_value = map[string]int32{
		"Isonboard_NO":  0,
		"Isonboard_YES": 1,
	}
)

func (x QosResetPortQueueRequest_Isonboard) Enum() *QosResetPortQueueRequest_Isonboard {
	p := new(QosResetPortQueueRequest_Isonboard)
	*p = x
	return p
}

func (x QosResetPortQueueRequest_Isonboard) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetPortQueueRequest_Isonboard) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[12].Descriptor()
}

func (QosResetPortQueueRequest_Isonboard) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[12]
}

func (x QosResetPortQueueRequest_Isonboard) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetPortQueueRequest_Isonboard.Descriptor instead.
func (QosResetPortQueueRequest_Isonboard) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{14, 0}
}

type QosResetPortQueueRequest_ServiceClass int32

const (
	QosResetPortQueueRequest_ServiceClass_AF1       QosResetPortQueueRequest_ServiceClass = 0
	QosResetPortQueueRequest_ServiceClass_AF2       QosResetPortQueueRequest_ServiceClass = 1
	QosResetPortQueueRequest_ServiceClass_AF3       QosResetPortQueueRequest_ServiceClass = 2
	QosResetPortQueueRequest_ServiceClass_AF4       QosResetPortQueueRequest_ServiceClass = 3
	QosResetPortQueueRequest_ServiceClass_BE        QosResetPortQueueRequest_ServiceClass = 4
	QosResetPortQueueRequest_ServiceClass_CS6       QosResetPortQueueRequest_ServiceClass = 5
	QosResetPortQueueRequest_ServiceClass_CS7       QosResetPortQueueRequest_ServiceClass = 6
	QosResetPortQueueRequest_ServiceClass_EF        QosResetPortQueueRequest_ServiceClass = 7
	QosResetPortQueueRequest_ServiceClass_NOTCONFIG QosResetPortQueueRequest_ServiceClass = 8
)

// Enum value maps for QosResetPortQueueRequest_ServiceClass.
var (
	QosResetPortQueueRequest_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	QosResetPortQueueRequest_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x QosResetPortQueueRequest_ServiceClass) Enum() *QosResetPortQueueRequest_ServiceClass {
	p := new(QosResetPortQueueRequest_ServiceClass)
	*p = x
	return p
}

func (x QosResetPortQueueRequest_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetPortQueueRequest_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[13].Descriptor()
}

func (QosResetPortQueueRequest_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[13]
}

func (x QosResetPortQueueRequest_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetPortQueueRequest_ServiceClass.Descriptor instead.
func (QosResetPortQueueRequest_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{14, 1}
}

type QosResetProUStRequest_Direction int32

const (
	QosResetProUStRequest_Direction_INBOUND  QosResetProUStRequest_Direction = 0
	QosResetProUStRequest_Direction_OUTBOUND QosResetProUStRequest_Direction = 1
)

// Enum value maps for QosResetProUStRequest_Direction.
var (
	QosResetProUStRequest_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	QosResetProUStRequest_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x QosResetProUStRequest_Direction) Enum() *QosResetProUStRequest_Direction {
	p := new(QosResetProUStRequest_Direction)
	*p = x
	return p
}

func (x QosResetProUStRequest_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetProUStRequest_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[14].Descriptor()
}

func (QosResetProUStRequest_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[14]
}

func (x QosResetProUStRequest_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetProUStRequest_Direction.Descriptor instead.
func (QosResetProUStRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{15, 0}
}

type QosResetProfileRequest_ServiceClass int32

const (
	QosResetProfileRequest_ServiceClass_AF1       QosResetProfileRequest_ServiceClass = 0
	QosResetProfileRequest_ServiceClass_AF2       QosResetProfileRequest_ServiceClass = 1
	QosResetProfileRequest_ServiceClass_AF3       QosResetProfileRequest_ServiceClass = 2
	QosResetProfileRequest_ServiceClass_AF4       QosResetProfileRequest_ServiceClass = 3
	QosResetProfileRequest_ServiceClass_BE        QosResetProfileRequest_ServiceClass = 4
	QosResetProfileRequest_ServiceClass_CS6       QosResetProfileRequest_ServiceClass = 5
	QosResetProfileRequest_ServiceClass_CS7       QosResetProfileRequest_ServiceClass = 6
	QosResetProfileRequest_ServiceClass_EF        QosResetProfileRequest_ServiceClass = 7
	QosResetProfileRequest_ServiceClass_NOTCONFIG QosResetProfileRequest_ServiceClass = 8
)

// Enum value maps for QosResetProfileRequest_ServiceClass.
var (
	QosResetProfileRequest_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	QosResetProfileRequest_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x QosResetProfileRequest_ServiceClass) Enum() *QosResetProfileRequest_ServiceClass {
	p := new(QosResetProfileRequest_ServiceClass)
	*p = x
	return p
}

func (x QosResetProfileRequest_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetProfileRequest_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[15].Descriptor()
}

func (QosResetProfileRequest_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[15]
}

func (x QosResetProfileRequest_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetProfileRequest_ServiceClass.Descriptor instead.
func (QosResetProfileRequest_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{16, 0}
}

type QosResetSlotPortQueueRequest_ServiceClass int32

const (
	QosResetSlotPortQueueRequest_ServiceClass_AF1       QosResetSlotPortQueueRequest_ServiceClass = 0
	QosResetSlotPortQueueRequest_ServiceClass_AF2       QosResetSlotPortQueueRequest_ServiceClass = 1
	QosResetSlotPortQueueRequest_ServiceClass_AF3       QosResetSlotPortQueueRequest_ServiceClass = 2
	QosResetSlotPortQueueRequest_ServiceClass_AF4       QosResetSlotPortQueueRequest_ServiceClass = 3
	QosResetSlotPortQueueRequest_ServiceClass_BE        QosResetSlotPortQueueRequest_ServiceClass = 4
	QosResetSlotPortQueueRequest_ServiceClass_CS6       QosResetSlotPortQueueRequest_ServiceClass = 5
	QosResetSlotPortQueueRequest_ServiceClass_CS7       QosResetSlotPortQueueRequest_ServiceClass = 6
	QosResetSlotPortQueueRequest_ServiceClass_EF        QosResetSlotPortQueueRequest_ServiceClass = 7
	QosResetSlotPortQueueRequest_ServiceClass_NOTCONFIG QosResetSlotPortQueueRequest_ServiceClass = 8
)

// Enum value maps for QosResetSlotPortQueueRequest_ServiceClass.
var (
	QosResetSlotPortQueueRequest_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	QosResetSlotPortQueueRequest_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x QosResetSlotPortQueueRequest_ServiceClass) Enum() *QosResetSlotPortQueueRequest_ServiceClass {
	p := new(QosResetSlotPortQueueRequest_ServiceClass)
	*p = x
	return p
}

func (x QosResetSlotPortQueueRequest_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetSlotPortQueueRequest_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[16].Descriptor()
}

func (QosResetSlotPortQueueRequest_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[16]
}

func (x QosResetSlotPortQueueRequest_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetSlotPortQueueRequest_ServiceClass.Descriptor instead.
func (QosResetSlotPortQueueRequest_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{17, 0}
}

type QosResetSlotVOQStRequest_VoqFlag int32

const (
	QosResetSlotVOQStRequest_VoqFlag_MULTICAST QosResetSlotVOQStRequest_VoqFlag = 0
	QosResetSlotVOQStRequest_VoqFlag_UNICAST   QosResetSlotVOQStRequest_VoqFlag = 1
)

// Enum value maps for QosResetSlotVOQStRequest_VoqFlag.
var (
	QosResetSlotVOQStRequest_VoqFlag_name = map[int32]string{
		0: "VoqFlag_MULTICAST",
		1: "VoqFlag_UNICAST",
	}
	QosResetSlotVOQStRequest_VoqFlag_value = map[string]int32{
		"VoqFlag_MULTICAST": 0,
		"VoqFlag_UNICAST":   1,
	}
)

func (x QosResetSlotVOQStRequest_VoqFlag) Enum() *QosResetSlotVOQStRequest_VoqFlag {
	p := new(QosResetSlotVOQStRequest_VoqFlag)
	*p = x
	return p
}

func (x QosResetSlotVOQStRequest_VoqFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetSlotVOQStRequest_VoqFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[17].Descriptor()
}

func (QosResetSlotVOQStRequest_VoqFlag) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[17]
}

func (x QosResetSlotVOQStRequest_VoqFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetSlotVOQStRequest_VoqFlag.Descriptor instead.
func (QosResetSlotVOQStRequest_VoqFlag) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{18, 0}
}

type QosResetVniGQRequest_Direction int32

const (
	QosResetVniGQRequest_Direction_INBOUND  QosResetVniGQRequest_Direction = 0
	QosResetVniGQRequest_Direction_OUTBOUND QosResetVniGQRequest_Direction = 1
)

// Enum value maps for QosResetVniGQRequest_Direction.
var (
	QosResetVniGQRequest_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	QosResetVniGQRequest_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x QosResetVniGQRequest_Direction) Enum() *QosResetVniGQRequest_Direction {
	p := new(QosResetVniGQRequest_Direction)
	*p = x
	return p
}

func (x QosResetVniGQRequest_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetVniGQRequest_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[18].Descriptor()
}

func (QosResetVniGQRequest_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[18]
}

func (x QosResetVniGQRequest_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetVniGQRequest_Direction.Descriptor instead.
func (QosResetVniGQRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{20, 0}
}

type QosResetVpnVxlanPolicyApplyRequest_Vpndirection int32

const (
	QosResetVpnVxlanPolicyApplyRequest_Vpndirection_INBOUND  QosResetVpnVxlanPolicyApplyRequest_Vpndirection = 0
	QosResetVpnVxlanPolicyApplyRequest_Vpndirection_OUTBOUND QosResetVpnVxlanPolicyApplyRequest_Vpndirection = 1
)

// Enum value maps for QosResetVpnVxlanPolicyApplyRequest_Vpndirection.
var (
	QosResetVpnVxlanPolicyApplyRequest_Vpndirection_name = map[int32]string{
		0: "Vpndirection_INBOUND",
		1: "Vpndirection_OUTBOUND",
	}
	QosResetVpnVxlanPolicyApplyRequest_Vpndirection_value = map[string]int32{
		"Vpndirection_INBOUND":  0,
		"Vpndirection_OUTBOUND": 1,
	}
)

func (x QosResetVpnVxlanPolicyApplyRequest_Vpndirection) Enum() *QosResetVpnVxlanPolicyApplyRequest_Vpndirection {
	p := new(QosResetVpnVxlanPolicyApplyRequest_Vpndirection)
	*p = x
	return p
}

func (x QosResetVpnVxlanPolicyApplyRequest_Vpndirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QosResetVpnVxlanPolicyApplyRequest_Vpndirection) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[19].Descriptor()
}

func (QosResetVpnVxlanPolicyApplyRequest_Vpndirection) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[19]
}

func (x QosResetVpnVxlanPolicyApplyRequest_Vpndirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QosResetVpnVxlanPolicyApplyRequest_Vpndirection.Descriptor instead.
func (QosResetVpnVxlanPolicyApplyRequest_Vpndirection) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{21, 0}
}

type Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass int32

const (
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass_AF1 Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass = 0
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass_AF2 Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass = 1
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass_AF3 Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass = 2
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass_AF4 Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass = 3
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass_BE  Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass = 4
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass_CS6 Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass = 5
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass_CS7 Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass = 6
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass_EF  Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass = 7
)

// Enum value maps for Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass.
var (
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass_name = map[int32]string{
		0: "CqServiceClass_AF1",
		1: "CqServiceClass_AF2",
		2: "CqServiceClass_AF3",
		3: "CqServiceClass_AF4",
		4: "CqServiceClass_BE",
		5: "CqServiceClass_CS6",
		6: "CqServiceClass_CS7",
		7: "CqServiceClass_EF",
	}
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass_value = map[string]int32{
		"CqServiceClass_AF1": 0,
		"CqServiceClass_AF2": 1,
		"CqServiceClass_AF3": 2,
		"CqServiceClass_AF4": 3,
		"CqServiceClass_BE":  4,
		"CqServiceClass_CS6": 5,
		"CqServiceClass_CS7": 6,
		"CqServiceClass_EF":  7,
	}
)

func (x Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass) Enum() *Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass {
	p := new(Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[20].Descriptor()
}

func (Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[20]
}

func (x Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass.Descriptor instead.
func (Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 0, 0, 0, 0, 0}
}

type Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass int32

const (
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass_AF1 Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass = 0
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass_AF2 Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass = 1
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass_AF3 Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass = 2
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass_AF4 Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass = 3
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass_BE  Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass = 4
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass_CS6 Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass = 5
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass_CS7 Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass = 6
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass_EF  Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass = 7
)

// Enum value maps for Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass.
var (
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass_name = map[int32]string{
		0: "FqServiceClass_AF1",
		1: "FqServiceClass_AF2",
		2: "FqServiceClass_AF3",
		3: "FqServiceClass_AF4",
		4: "FqServiceClass_BE",
		5: "FqServiceClass_CS6",
		6: "FqServiceClass_CS7",
		7: "FqServiceClass_EF",
	}
	Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass_value = map[string]int32{
		"FqServiceClass_AF1": 0,
		"FqServiceClass_AF2": 1,
		"FqServiceClass_AF3": 2,
		"FqServiceClass_AF4": 3,
		"FqServiceClass_BE":  4,
		"FqServiceClass_CS6": 5,
		"FqServiceClass_CS7": 6,
		"FqServiceClass_EF":  7,
	}
)

func (x Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass) Enum() *Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass {
	p := new(Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[21].Descriptor()
}

func (Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[21]
}

func (x Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass.Descriptor instead.
func (Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 0, 0, 0, 0, 1}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq_IS4COS      Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq_ISPRIORITY  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq = 1
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq_NOTPRIORITY Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq = 2
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq_name = map[int32]string{
		0: "Prioritymodefq_IS4COS",
		1: "Prioritymodefq_ISPRIORITY",
		2: "Prioritymodefq_NOTPRIORITY",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq_value = map[string]int32{
		"Prioritymodefq_IS4COS":      0,
		"Prioritymodefq_ISPRIORITY":  1,
		"Prioritymodefq_NOTPRIORITY": 2,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[22].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[22]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 0}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode_PQ  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode_WFQ Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode_name = map[int32]string{
		0: "QueueScheduleMode_PQ",
		1: "QueueScheduleMode_WFQ",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode_value = map[string]int32{
		"QueueScheduleMode_PQ":  0,
		"QueueScheduleMode_WFQ": 1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[23].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[23]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 0, 0, 0}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1_name = map[int32]string{
		0: "Af1_FALSE",
		1: "Af1_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1_value = map[string]int32{
		"Af1_FALSE": 0,
		"Af1_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[24].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[24]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 1, 0, 0}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2_name = map[int32]string{
		0: "Af2_FALSE",
		1: "Af2_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2_value = map[string]int32{
		"Af2_FALSE": 0,
		"Af2_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[25].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[25]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 1, 0, 1}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3_name = map[int32]string{
		0: "Af3_FALSE",
		1: "Af3_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3_value = map[string]int32{
		"Af3_FALSE": 0,
		"Af3_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[26].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[26]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 1, 0, 2}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4_name = map[int32]string{
		0: "Af4_FALSE",
		1: "Af4_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4_value = map[string]int32{
		"Af4_FALSE": 0,
		"Af4_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[27].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[27]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 1, 0, 3}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be_name = map[int32]string{
		0: "Be_FALSE",
		1: "Be_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be_value = map[string]int32{
		"Be_FALSE": 0,
		"Be_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[28].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[28]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 1, 0, 4}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6_name = map[int32]string{
		0: "Cs6_FALSE",
		1: "Cs6_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6_value = map[string]int32{
		"Cs6_FALSE": 0,
		"Cs6_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[29].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[29]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 1, 0, 5}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7_name = map[int32]string{
		0: "Cs7_FALSE",
		1: "Cs7_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7_value = map[string]int32{
		"Cs7_FALSE": 0,
		"Cs7_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[30].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[30]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 1, 0, 6}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef_name = map[int32]string{
		0: "Ef_FALSE",
		1: "Ef_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef_value = map[string]int32{
		"Ef_FALSE": 0,
		"Ef_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[31].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[31]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 1, 0, 7}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode_PQ  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode_WFQ Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode_name = map[int32]string{
		0: "QueueScheduleMode_PQ",
		1: "QueueScheduleMode_WFQ",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode_value = map[string]int32{
		"QueueScheduleMode_PQ":  0,
		"QueueScheduleMode_WFQ": 1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[32].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[32]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 1, 0, 8}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId_X_1       Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId_NOTCONFIG Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId_name = map[int32]string{
		0: "ShapId_X_1",
		1: "ShapId_NOTCONFIG",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId_value = map[string]int32{
		"ShapId_X_1":       0,
		"ShapId_NOTCONFIG": 1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[33].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[33]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 1, 0, 9}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue_COS0 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue_COS1 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue = 1
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue_COS2 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue = 2
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue_COS3 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue = 3
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue_name = map[int32]string{
		0: "CosValue_COS0",
		1: "CosValue_COS1",
		2: "CosValue_COS2",
		3: "CosValue_COS3",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue_value = map[string]int32{
		"CosValue_COS0": 0,
		"CosValue_COS1": 1,
		"CosValue_COS2": 2,
		"CosValue_COS3": 3,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[34].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[34]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 2, 0, 0}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode_LPQ Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode_PQ  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode = 1
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode_WFQ Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode = 2
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode_name = map[int32]string{
		0: "QueueScheduleMode_LPQ",
		1: "QueueScheduleMode_PQ",
		2: "QueueScheduleMode_WFQ",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode_value = map[string]int32{
		"QueueScheduleMode_LPQ": 0,
		"QueueScheduleMode_PQ":  1,
		"QueueScheduleMode_WFQ": 2,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[35].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[35]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 2, 0, 1}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass_AF1 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass_AF2 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass = 1
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass_AF3 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass = 2
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass_AF4 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass = 3
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass_BE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass = 4
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass_CS6 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass = 5
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass_CS7 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass = 6
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass_EF  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass = 7
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1": 0,
		"ServiceClass_AF2": 1,
		"ServiceClass_AF3": 2,
		"ServiceClass_AF4": 3,
		"ServiceClass_BE":  4,
		"ServiceClass_CS6": 5,
		"ServiceClass_CS7": 6,
		"ServiceClass_EF":  7,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[36].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[36]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 3, 0, 0}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter_DISABLE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter_ENABLE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter_name = map[int32]string{
		0: "Lowjitter_DISABLE",
		1: "Lowjitter_ENABLE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter_value = map[string]int32{
		"Lowjitter_DISABLE": 0,
		"Lowjitter_ENABLE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[37].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[37]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 4, 0, 0}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency_DISABLE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency_ENABLE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency_name = map[int32]string{
		0: "Lowlatency_DISABLE",
		1: "Lowlatency_ENABLE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency_value = map[string]int32{
		"Lowlatency_DISABLE": 0,
		"Lowlatency_ENABLE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[38].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[38]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 4, 0, 1}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode_LPQ Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode_PQ  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode = 1
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode_WFQ Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode = 2
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode_name = map[int32]string{
		0: "QueueScheduleMode_LPQ",
		1: "QueueScheduleMode_PQ",
		2: "QueueScheduleMode_WFQ",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode_value = map[string]int32{
		"QueueScheduleMode_LPQ": 0,
		"QueueScheduleMode_PQ":  1,
		"QueueScheduleMode_WFQ": 2,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[39].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[39]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 4, 0, 2}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass_AF1 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass_AF2 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass = 1
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass_AF3 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass = 2
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass_AF4 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass = 3
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass_BE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass = 4
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass_CS6 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass = 5
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass_CS7 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass = 6
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass_EF  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass = 7
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1": 0,
		"ServiceClass_AF2": 1,
		"ServiceClass_AF3": 2,
		"ServiceClass_AF4": 3,
		"ServiceClass_BE":  4,
		"ServiceClass_CS6": 5,
		"ServiceClass_CS7": 6,
		"ServiceClass_EF":  7,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[40].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[40]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 4, 0, 3}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass_AF1 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass_AF2 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass = 1
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass_AF3 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass = 2
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass_AF4 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass = 3
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass_BE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass = 4
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass_CS6 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass = 5
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass_CS7 Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass = 6
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass_EF  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass = 7
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1": 0,
		"ServiceClass_AF2": 1,
		"ServiceClass_AF3": 2,
		"ServiceClass_AF4": 3,
		"ServiceClass_BE":  4,
		"ServiceClass_CS6": 5,
		"ServiceClass_CS7": 6,
		"ServiceClass_EF":  7,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[41].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[41]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 5, 0, 0}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1_name = map[int32]string{
		0: "Af1_FALSE",
		1: "Af1_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1_value = map[string]int32{
		"Af1_FALSE": 0,
		"Af1_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[42].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[42]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 6, 0, 0}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2_name = map[int32]string{
		0: "Af2_FALSE",
		1: "Af2_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2_value = map[string]int32{
		"Af2_FALSE": 0,
		"Af2_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[43].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[43]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 6, 0, 1}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3_name = map[int32]string{
		0: "Af3_FALSE",
		1: "Af3_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3_value = map[string]int32{
		"Af3_FALSE": 0,
		"Af3_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[44].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[44]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 6, 0, 2}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4_name = map[int32]string{
		0: "Af4_FALSE",
		1: "Af4_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4_value = map[string]int32{
		"Af4_FALSE": 0,
		"Af4_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[45].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[45]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 6, 0, 3}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be_name = map[int32]string{
		0: "Be_FALSE",
		1: "Be_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be_value = map[string]int32{
		"Be_FALSE": 0,
		"Be_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[46].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[46]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 6, 0, 4}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6_name = map[int32]string{
		0: "Cs6_FALSE",
		1: "Cs6_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6_value = map[string]int32{
		"Cs6_FALSE": 0,
		"Cs6_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[47].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[47]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 6, 0, 5}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7_name = map[int32]string{
		0: "Cs7_FALSE",
		1: "Cs7_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7_value = map[string]int32{
		"Cs7_FALSE": 0,
		"Cs7_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[48].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[48]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 6, 0, 6}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef_name = map[int32]string{
		0: "Ef_FALSE",
		1: "Ef_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef_value = map[string]int32{
		"Ef_FALSE": 0,
		"Ef_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[49].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[49]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 6, 0, 7}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode_LPQ Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode_PQ  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode = 1
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode_WFQ Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode = 2
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode_name = map[int32]string{
		0: "QueueScheduleMode_LPQ",
		1: "QueueScheduleMode_PQ",
		2: "QueueScheduleMode_WFQ",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode_value = map[string]int32{
		"QueueScheduleMode_LPQ": 0,
		"QueueScheduleMode_PQ":  1,
		"QueueScheduleMode_WFQ": 2,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[50].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[50]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 6, 0, 8}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1_name = map[int32]string{
		0: "Af1_FALSE",
		1: "Af1_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1_value = map[string]int32{
		"Af1_FALSE": 0,
		"Af1_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[51].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[51]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 7, 0, 0}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2_name = map[int32]string{
		0: "Af2_FALSE",
		1: "Af2_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2_value = map[string]int32{
		"Af2_FALSE": 0,
		"Af2_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[52].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[52]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 7, 0, 1}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3_name = map[int32]string{
		0: "Af3_FALSE",
		1: "Af3_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3_value = map[string]int32{
		"Af3_FALSE": 0,
		"Af3_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[53].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[53]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 7, 0, 2}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4_name = map[int32]string{
		0: "Af4_FALSE",
		1: "Af4_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4_value = map[string]int32{
		"Af4_FALSE": 0,
		"Af4_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[54].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[54]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 7, 0, 3}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be_name = map[int32]string{
		0: "Be_FALSE",
		1: "Be_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be_value = map[string]int32{
		"Be_FALSE": 0,
		"Be_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[55].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[55]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 7, 0, 4}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6_name = map[int32]string{
		0: "Cs6_FALSE",
		1: "Cs6_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6_value = map[string]int32{
		"Cs6_FALSE": 0,
		"Cs6_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[56].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[56]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 7, 0, 5}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7_name = map[int32]string{
		0: "Cs7_FALSE",
		1: "Cs7_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7_value = map[string]int32{
		"Cs7_FALSE": 0,
		"Cs7_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[57].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[57]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 7, 0, 6}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef_name = map[int32]string{
		0: "Ef_FALSE",
		1: "Ef_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef_value = map[string]int32{
		"Ef_FALSE": 0,
		"Ef_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[58].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[58]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 7, 0, 7}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1_name = map[int32]string{
		0: "Af1_FALSE",
		1: "Af1_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1_value = map[string]int32{
		"Af1_FALSE": 0,
		"Af1_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[59].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[59]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 8, 0, 0}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2_name = map[int32]string{
		0: "Af2_FALSE",
		1: "Af2_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2_value = map[string]int32{
		"Af2_FALSE": 0,
		"Af2_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[60].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[60]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 8, 0, 1}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3_name = map[int32]string{
		0: "Af3_FALSE",
		1: "Af3_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3_value = map[string]int32{
		"Af3_FALSE": 0,
		"Af3_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[61].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[61]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 8, 0, 2}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4_name = map[int32]string{
		0: "Af4_FALSE",
		1: "Af4_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4_value = map[string]int32{
		"Af4_FALSE": 0,
		"Af4_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[62].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[62]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 8, 0, 3}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be_name = map[int32]string{
		0: "Be_FALSE",
		1: "Be_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be_value = map[string]int32{
		"Be_FALSE": 0,
		"Be_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[63].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[63]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 8, 0, 4}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6_name = map[int32]string{
		0: "Cs6_FALSE",
		1: "Cs6_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6_value = map[string]int32{
		"Cs6_FALSE": 0,
		"Cs6_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[64].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[64]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 8, 0, 5}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7 int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7 = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7 = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7_name = map[int32]string{
		0: "Cs7_FALSE",
		1: "Cs7_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7_value = map[string]int32{
		"Cs7_FALSE": 0,
		"Cs7_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7 {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[65].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[65]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 8, 0, 6}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef_FALSE Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef_TRUE  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef = 1
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef_name = map[int32]string{
		0: "Ef_FALSE",
		1: "Ef_TRUE",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef_value = map[string]int32{
		"Ef_FALSE": 0,
		"Ef_TRUE":  1,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[66].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[66]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 8, 0, 7}
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode int32

const (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode_LPQ Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode = 0
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode_PQ  Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode = 1
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode_WFQ Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode = 2
)

// Enum value maps for Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode.
var (
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode_name = map[int32]string{
		0: "QueueScheduleMode_LPQ",
		1: "QueueScheduleMode_PQ",
		2: "QueueScheduleMode_WFQ",
	}
	Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode_value = map[string]int32{
		"QueueScheduleMode_LPQ": 0,
		"QueueScheduleMode_PQ":  1,
		"QueueScheduleMode_WFQ": 2,
	}
)

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode) Enum() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode {
	p := new(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[67].Descriptor()
}

func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[67]
}

func (x Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode.Descriptor instead.
func (Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 8, 0, 8}
}

type Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass int32

const (
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass_COS0 Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass = 0
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass_COS1 Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass = 1
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass_COS2 Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass = 2
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass_COS3 Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass = 3
)

// Enum value maps for Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass.
var (
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass_name = map[int32]string{
		0: "FfqosServiceClass_COS0",
		1: "FfqosServiceClass_COS1",
		2: "FfqosServiceClass_COS2",
		3: "FfqosServiceClass_COS3",
	}
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass_value = map[string]int32{
		"FfqosServiceClass_COS0": 0,
		"FfqosServiceClass_COS1": 1,
		"FfqosServiceClass_COS2": 2,
		"FfqosServiceClass_COS3": 3,
	}
)

func (x Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass) Enum() *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass {
	p := new(Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[68].Descriptor()
}

func (Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[68]
}

func (x Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass.Descriptor instead.
func (Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 2, 0, 0, 0, 0}
}

type Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass int32

const (
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass_AF1 Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass = 0
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass_AF2 Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass = 1
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass_AF3 Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass = 2
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass_AF4 Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass = 3
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass_BE  Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass = 4
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass_CS6 Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass = 5
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass_CS7 Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass = 6
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass_EF  Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass = 7
)

// Enum value maps for Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass.
var (
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass_name = map[int32]string{
		0: "FqosServiceClass_AF1",
		1: "FqosServiceClass_AF2",
		2: "FqosServiceClass_AF3",
		3: "FqosServiceClass_AF4",
		4: "FqosServiceClass_BE",
		5: "FqosServiceClass_CS6",
		6: "FqosServiceClass_CS7",
		7: "FqosServiceClass_EF",
	}
	Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass_value = map[string]int32{
		"FqosServiceClass_AF1": 0,
		"FqosServiceClass_AF2": 1,
		"FqosServiceClass_AF3": 2,
		"FqosServiceClass_AF4": 3,
		"FqosServiceClass_BE":  4,
		"FqosServiceClass_CS6": 5,
		"FqosServiceClass_CS7": 6,
		"FqosServiceClass_EF":  7,
	}
)

func (x Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass) Enum() *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass {
	p := new(Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[69].Descriptor()
}

func (Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[69]
}

func (x Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass.Descriptor instead.
func (Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 2, 0, 0, 0, 1}
}

type Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction int32

const (
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction_INBOUND  Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction = 0
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction_OUTBOUND Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction = 1
)

// Enum value maps for Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction.
var (
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction) Enum() *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction {
	p := new(Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[70].Descriptor()
}

func (Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[70]
}

func (x Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction.Descriptor instead.
func (Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 3, 0, 0}
}

type Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass int32

const (
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass_AF1   Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass = 0
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass_AF2   Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass = 1
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass_AF3   Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass = 2
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass_AF4   Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass = 3
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass_BE    Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass = 4
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass_CS6   Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass = 5
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass_CS7   Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass = 6
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass_EF    Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass = 7
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass_TOTAL Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass = 8
)

// Enum value maps for Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass.
var (
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_TOTAL",
	}
	Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":   0,
		"ServiceClass_AF2":   1,
		"ServiceClass_AF3":   2,
		"ServiceClass_AF4":   3,
		"ServiceClass_BE":    4,
		"ServiceClass_CS6":   5,
		"ServiceClass_CS7":   6,
		"ServiceClass_EF":    7,
		"ServiceClass_TOTAL": 8,
	}
)

func (x Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass) Enum() *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass {
	p := new(Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[71].Descriptor()
}

func (Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[71]
}

func (x Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass.Descriptor instead.
func (Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 3, 0, 0, 0, 0}
}

type Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency int32

const (
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency_DISABLE Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency = 0
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency_ENABLE  Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency = 1
)

// Enum value maps for Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency.
var (
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency_name = map[int32]string{
		0: "Lowlatency_DISABLE",
		1: "Lowlatency_ENABLE",
	}
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency_value = map[string]int32{
		"Lowlatency_DISABLE": 0,
		"Lowlatency_ENABLE":  1,
	}
)

func (x Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency) Enum() *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency {
	p := new(Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency)
	*p = x
	return p
}

func (x Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[72].Descriptor()
}

func (Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[72]
}

func (x Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency.Descriptor instead.
func (Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 5, 0, 0, 0, 0}
}

type Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode int32

const (
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode_LPQ Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode = 0
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode_PQ  Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode = 1
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode_WFQ Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode = 2
)

// Enum value maps for Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode.
var (
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode_name = map[int32]string{
		0: "QueueScheduleMode_LPQ",
		1: "QueueScheduleMode_PQ",
		2: "QueueScheduleMode_WFQ",
	}
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode_value = map[string]int32{
		"QueueScheduleMode_LPQ": 0,
		"QueueScheduleMode_PQ":  1,
		"QueueScheduleMode_WFQ": 2,
	}
)

func (x Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode) Enum() *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode {
	p := new(Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode)
	*p = x
	return p
}

func (x Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[73].Descriptor()
}

func (Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[73]
}

func (x Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode.Descriptor instead.
func (Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 5, 0, 0, 0, 1}
}

type Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass int32

const (
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass_AF1       Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass = 0
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass_AF2       Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass = 1
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass_AF3       Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass = 2
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass_AF4       Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass = 3
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass_BE        Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass = 4
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass_CS6       Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass = 5
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass_CS7       Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass = 6
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass_EF        Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass = 7
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass_NOTCONFIG Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass = 8
)

// Enum value maps for Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass.
var (
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass) Enum() *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass {
	p := new(Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[74].Descriptor()
}

func (Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[74]
}

func (x Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass.Descriptor instead.
func (Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 5, 0, 0, 0, 2}
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction int32

const (
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction_INBOUND  Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction = 0
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction_OUTBOUND Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction = 1
)

// Enum value maps for Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction.
var (
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction) Enum() *Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction {
	p := new(Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[75].Descriptor()
}

func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[75]
}

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction.Descriptor instead.
func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0, 0}
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType int32

const (
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType_CE_VID     Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType = 0
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType_EVC_CE_VID Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType = 1
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType_NONE       Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType = 2
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType_PE_CE_VID  Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType = 3
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType_PE_VID     Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType = 4
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType_VID        Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType = 5
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType_VID_CE_VID Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType = 6
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType_VLAN       Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType = 7
)

// Enum value maps for Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType.
var (
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType_name = map[int32]string{
		0: "IdentifyType_CE_VID",
		1: "IdentifyType_EVC_CE_VID",
		2: "IdentifyType_NONE",
		3: "IdentifyType_PE_CE_VID",
		4: "IdentifyType_PE_VID",
		5: "IdentifyType_VID",
		6: "IdentifyType_VID_CE_VID",
		7: "IdentifyType_VLAN",
	}
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType_value = map[string]int32{
		"IdentifyType_CE_VID":     0,
		"IdentifyType_EVC_CE_VID": 1,
		"IdentifyType_NONE":       2,
		"IdentifyType_PE_CE_VID":  3,
		"IdentifyType_PE_VID":     4,
		"IdentifyType_VID":        5,
		"IdentifyType_VID_CE_VID": 6,
		"IdentifyType_VLAN":       7,
	}
)

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType) Enum() *Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType {
	p := new(Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[76].Descriptor()
}

func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[76]
}

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType.Descriptor instead.
func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0, 1}
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType int32

const (
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType_INTERFACE Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType = 0
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType_PE        Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType = 1
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType_VLAN      Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType = 2
)

// Enum value maps for Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType.
var (
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType_name = map[int32]string{
		0: "ProAppType_INTERFACE",
		1: "ProAppType_PE",
		2: "ProAppType_VLAN",
	}
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType_value = map[string]int32{
		"ProAppType_INTERFACE": 0,
		"ProAppType_PE":        1,
		"ProAppType_VLAN":      2,
	}
)

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType) Enum() *Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType {
	p := new(Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[77].Descriptor()
}

func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[77]
}

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType.Descriptor instead.
func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0, 2}
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass int32

const (
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass_AF1   Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass = 0
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass_AF2   Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass = 1
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass_AF3   Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass = 2
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass_AF4   Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass = 3
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass_BE    Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass = 4
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass_CS6   Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass = 5
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass_CS7   Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass = 6
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass_EF    Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass = 7
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass_TOTAL Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass = 8
)

// Enum value maps for Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass.
var (
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_TOTAL",
	}
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":   0,
		"ServiceClass_AF2":   1,
		"ServiceClass_AF3":   2,
		"ServiceClass_AF4":   3,
		"ServiceClass_BE":    4,
		"ServiceClass_CS6":   5,
		"ServiceClass_CS7":   6,
		"ServiceClass_EF":    7,
		"ServiceClass_TOTAL": 8,
	}
)

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass) Enum() *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass {
	p := new(Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[78].Descriptor()
}

func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[78]
}

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass.Descriptor instead.
func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0, 0, 0, 0}
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType int32

const (
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType_BROADCAST      Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType = 0
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType_BU             Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType = 1
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType_BUM            Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType = 2
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType_CAR            Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType = 3
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType_L2_FORWARD     Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType = 4
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType_L3_FORWARD     Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType = 5
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType_MULTICAST      Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType = 6
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType_UNKNOW_UNICAST Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType = 7
)

// Enum value maps for Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType.
var (
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType_name = map[int32]string{
		0: "CarType_BROADCAST",
		1: "CarType_BU",
		2: "CarType_BUM",
		3: "CarType_CAR",
		4: "CarType_L2_FORWARD",
		5: "CarType_L3_FORWARD",
		6: "CarType_MULTICAST",
		7: "CarType_UNKNOW_UNICAST",
	}
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType_value = map[string]int32{
		"CarType_BROADCAST":      0,
		"CarType_BU":             1,
		"CarType_BUM":            2,
		"CarType_CAR":            3,
		"CarType_L2_FORWARD":     4,
		"CarType_L3_FORWARD":     5,
		"CarType_MULTICAST":      6,
		"CarType_UNKNOW_UNICAST": 7,
	}
)

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType) Enum() *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType {
	p := new(Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[79].Descriptor()
}

func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[79]
}

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType.Descriptor instead.
func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0, 1, 0, 0}
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass int32

const (
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass_AF1   Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass = 0
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass_AF2   Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass = 1
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass_AF3   Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass = 2
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass_AF4   Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass = 3
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass_BE    Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass = 4
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass_CS6   Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass = 5
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass_CS7   Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass = 6
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass_EF    Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass = 7
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass_TOTAL Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass = 8
)

// Enum value maps for Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass.
var (
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_TOTAL",
	}
	Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":   0,
		"ServiceClass_AF2":   1,
		"ServiceClass_AF3":   2,
		"ServiceClass_AF4":   3,
		"ServiceClass_BE":    4,
		"ServiceClass_CS6":   5,
		"ServiceClass_CS7":   6,
		"ServiceClass_EF":    7,
		"ServiceClass_TOTAL": 8,
	}
)

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass) Enum() *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass {
	p := new(Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[80].Descriptor()
}

func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[80]
}

func (x Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass.Descriptor instead.
func (Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0, 2, 0, 0}
}

type Qos_Hqos_HqosProfiles_HqosProfile_TimeRange int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_TimeRange_ISTIMERANGE  Qos_Hqos_HqosProfiles_HqosProfile_TimeRange = 0
	Qos_Hqos_HqosProfiles_HqosProfile_TimeRange_NOTTIMERANGE Qos_Hqos_HqosProfiles_HqosProfile_TimeRange = 1
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_TimeRange.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_TimeRange_name = map[int32]string{
		0: "TimeRange_ISTIMERANGE",
		1: "TimeRange_NOTTIMERANGE",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_TimeRange_value = map[string]int32{
		"TimeRange_ISTIMERANGE":  0,
		"TimeRange_NOTTIMERANGE": 1,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_TimeRange) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_TimeRange {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_TimeRange)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_TimeRange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_TimeRange) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[81].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_TimeRange) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[81]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_TimeRange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_TimeRange.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_TimeRange) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 0}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType_BROADCAST      Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType_BU             Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType = 1
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType_BUM            Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType = 2
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType_CAR            Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType = 3
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType_L2_FORWARD     Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType = 4
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType_L3_FORWARD     Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType = 5
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType_MULTICAST      Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType = 6
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType_UNKNOW_UNICAST Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType = 7
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType_name = map[int32]string{
		0: "CarType_BROADCAST",
		1: "CarType_BU",
		2: "CarType_BUM",
		3: "CarType_CAR",
		4: "CarType_L2_FORWARD",
		5: "CarType_L3_FORWARD",
		6: "CarType_MULTICAST",
		7: "CarType_UNKNOW_UNICAST",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType_value = map[string]int32{
		"CarType_BROADCAST":      0,
		"CarType_BU":             1,
		"CarType_BUM":            2,
		"CarType_CAR":            3,
		"CarType_L2_FORWARD":     4,
		"CarType_L3_FORWARD":     5,
		"CarType_MULTICAST":      6,
		"CarType_UNKNOW_UNICAST": 7,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[82].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[82]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 1, 0, 0}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction_ALL      Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction_INBOUND  Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction = 1
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction_OUTBOUND Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction = 2
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction_name = map[int32]string{
		0: "Direction_ALL",
		1: "Direction_INBOUND",
		2: "Direction_OUTBOUND",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction_value = map[string]int32{
		"Direction_ALL":      0,
		"Direction_INBOUND":  1,
		"Direction_OUTBOUND": 2,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[83].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[83]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 1, 0, 1}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction_DISCARD Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction_PASS    Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction = 1
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction_name = map[int32]string{
		0: "GreenAction_DISCARD",
		1: "GreenAction_PASS",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction_value = map[string]int32{
		"GreenAction_DISCARD": 0,
		"GreenAction_PASS":    1,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[84].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[84]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 1, 0, 2}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor_GREEN  Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor_RED    Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor = 1
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor_YELLOW Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor = 2
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor_name = map[int32]string{
		0: "GreenColor_GREEN",
		1: "GreenColor_RED",
		2: "GreenColor_YELLOW",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor_value = map[string]int32{
		"GreenColor_GREEN":  0,
		"GreenColor_RED":    1,
		"GreenColor_YELLOW": 2,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[85].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[85]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 1, 0, 3}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass_AF1       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass_AF2       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass = 1
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass_AF3       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass = 2
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass_AF4       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass = 3
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass_BE        Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass = 4
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass_CS6       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass = 5
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass_CS7       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass = 6
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass_EF        Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass = 7
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass_NOTCONFIG Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass = 8
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass_name = map[int32]string{
		0: "GreenServiceClass_AF1",
		1: "GreenServiceClass_AF2",
		2: "GreenServiceClass_AF3",
		3: "GreenServiceClass_AF4",
		4: "GreenServiceClass_BE",
		5: "GreenServiceClass_CS6",
		6: "GreenServiceClass_CS7",
		7: "GreenServiceClass_EF",
		8: "GreenServiceClass_NOTCONFIG",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass_value = map[string]int32{
		"GreenServiceClass_AF1":       0,
		"GreenServiceClass_AF2":       1,
		"GreenServiceClass_AF3":       2,
		"GreenServiceClass_AF4":       3,
		"GreenServiceClass_BE":        4,
		"GreenServiceClass_CS6":       5,
		"GreenServiceClass_CS7":       6,
		"GreenServiceClass_EF":        7,
		"GreenServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[86].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[86]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 1, 0, 4}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction_DISCARD Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction_PASS    Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction = 1
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction_name = map[int32]string{
		0: "RedAction_DISCARD",
		1: "RedAction_PASS",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction_value = map[string]int32{
		"RedAction_DISCARD": 0,
		"RedAction_PASS":    1,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[87].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[87]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 1, 0, 5}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor_GREEN  Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor_RED    Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor = 1
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor_YELLOW Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor = 2
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor_name = map[int32]string{
		0: "RedColor_GREEN",
		1: "RedColor_RED",
		2: "RedColor_YELLOW",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor_value = map[string]int32{
		"RedColor_GREEN":  0,
		"RedColor_RED":    1,
		"RedColor_YELLOW": 2,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[88].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[88]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 1, 0, 6}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass_AF1       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass_AF2       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass = 1
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass_AF3       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass = 2
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass_AF4       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass = 3
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass_BE        Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass = 4
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass_CS6       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass = 5
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass_CS7       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass = 6
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass_EF        Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass = 7
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass_NOTCONFIG Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass = 8
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass_name = map[int32]string{
		0: "RedServiceClass_AF1",
		1: "RedServiceClass_AF2",
		2: "RedServiceClass_AF3",
		3: "RedServiceClass_AF4",
		4: "RedServiceClass_BE",
		5: "RedServiceClass_CS6",
		6: "RedServiceClass_CS7",
		7: "RedServiceClass_EF",
		8: "RedServiceClass_NOTCONFIG",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass_value = map[string]int32{
		"RedServiceClass_AF1":       0,
		"RedServiceClass_AF2":       1,
		"RedServiceClass_AF3":       2,
		"RedServiceClass_AF4":       3,
		"RedServiceClass_BE":        4,
		"RedServiceClass_CS6":       5,
		"RedServiceClass_CS7":       6,
		"RedServiceClass_EF":        7,
		"RedServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[89].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[89]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 1, 0, 7}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction_DISCARD Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction_PASS    Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction = 1
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction_name = map[int32]string{
		0: "YellowAction_DISCARD",
		1: "YellowAction_PASS",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction_value = map[string]int32{
		"YellowAction_DISCARD": 0,
		"YellowAction_PASS":    1,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[90].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[90]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 1, 0, 8}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor_GREEN  Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor_RED    Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor = 1
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor_YELLOW Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor = 2
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor_name = map[int32]string{
		0: "YellowColor_GREEN",
		1: "YellowColor_RED",
		2: "YellowColor_YELLOW",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor_value = map[string]int32{
		"YellowColor_GREEN":  0,
		"YellowColor_RED":    1,
		"YellowColor_YELLOW": 2,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[91].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[91]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 1, 0, 9}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass_AF1       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass_AF2       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass = 1
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass_AF3       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass = 2
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass_AF4       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass = 3
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass_BE        Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass = 4
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass_CS6       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass = 5
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass_CS7       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass = 6
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass_EF        Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass = 7
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass_NOTCONFIG Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass = 8
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass_name = map[int32]string{
		0: "YellowServiceClass_AF1",
		1: "YellowServiceClass_AF2",
		2: "YellowServiceClass_AF3",
		3: "YellowServiceClass_AF4",
		4: "YellowServiceClass_BE",
		5: "YellowServiceClass_CS6",
		6: "YellowServiceClass_CS7",
		7: "YellowServiceClass_EF",
		8: "YellowServiceClass_NOTCONFIG",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass_value = map[string]int32{
		"YellowServiceClass_AF1":       0,
		"YellowServiceClass_AF2":       1,
		"YellowServiceClass_AF3":       2,
		"YellowServiceClass_AF4":       3,
		"YellowServiceClass_BE":        4,
		"YellowServiceClass_CS6":       5,
		"YellowServiceClass_CS7":       6,
		"YellowServiceClass_EF":        7,
		"YellowServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[92].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[92]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 1, 0, 10}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction_ALL      Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction_INBOUND  Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction = 1
	Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction_OUTBOUND Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction = 2
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction_name = map[int32]string{
		0: "Direction_ALL",
		1: "Direction_INBOUND",
		2: "Direction_OUTBOUND",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction_value = map[string]int32{
		"Direction_ALL":      0,
		"Direction_INBOUND":  1,
		"Direction_OUTBOUND": 2,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[93].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[93]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 3, 0, 0}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard_DISABLE Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard_ENABLE  Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard = 1
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard_name = map[int32]string{
		0: "AdjustOnCard_DISABLE",
		1: "AdjustOnCard_ENABLE",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard_value = map[string]int32{
		"AdjustOnCard_DISABLE": 0,
		"AdjustOnCard_ENABLE":  1,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[94].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[94]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 4, 0, 0}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction_ALL      Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction_INBOUND  Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction = 1
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction_OUTBOUND Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction = 2
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction_name = map[int32]string{
		0: "Direction_ALL",
		1: "Direction_INBOUND",
		2: "Direction_OUTBOUND",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction_value = map[string]int32{
		"Direction_ALL":      0,
		"Direction_INBOUND":  1,
		"Direction_OUTBOUND": 2,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[95].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[95]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 4, 0, 1}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID_HIGH Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID_LOW  Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID = 1
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID_name = map[int32]string{
		0: "PriorityLevelID_HIGH",
		1: "PriorityLevelID_LOW",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID_value = map[string]int32{
		"PriorityLevelID_HIGH": 0,
		"PriorityLevelID_LOW":  1,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[96].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[96]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 4, 0, 2}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard_DISABLE Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard_ENABLE  Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard = 1
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard_name = map[int32]string{
		0: "AdjustOnCard_DISABLE",
		1: "AdjustOnCard_ENABLE",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard_value = map[string]int32{
		"AdjustOnCard_DISABLE": 0,
		"AdjustOnCard_ENABLE":  1,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[97].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[97]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 5, 0, 0}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction_ALL      Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction_INBOUND  Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction = 1
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction_OUTBOUND Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction = 2
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction_name = map[int32]string{
		0: "Direction_ALL",
		1: "Direction_INBOUND",
		2: "Direction_OUTBOUND",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction_value = map[string]int32{
		"Direction_ALL":      0,
		"Direction_INBOUND":  1,
		"Direction_OUTBOUND": 2,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[98].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[98]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 5, 0, 1}
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID int32

const (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID_HIGH Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID = 0
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID_LOW  Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID = 1
)

// Enum value maps for Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID.
var (
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID_name = map[int32]string{
		0: "PriorityLevelID_HIGH",
		1: "PriorityLevelID_LOW",
	}
	Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID_value = map[string]int32{
		"PriorityLevelID_HIGH": 0,
		"PriorityLevelID_LOW":  1,
	}
)

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID) Enum() *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID {
	p := new(Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID)
	*p = x
	return p
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[99].Descriptor()
}

func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[99]
}

func (x Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID.Descriptor instead.
func (Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 5, 0, 2}
}

type Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction int32

const (
	Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction_INBOUND  Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction = 0
	Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction_OUTBOUND Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction = 1
)

// Enum value maps for Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction.
var (
	Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction) Enum() *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction {
	p := new(Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[100].Descriptor()
}

func (Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[100]
}

func (x Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction.Descriptor instead.
func (Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 8, 0, 0, 0, 0}
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq int32

const (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq_ISPRIORITY  Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq = 0
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq_NOTPRIORITY Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq = 1
)

// Enum value maps for Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq.
var (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq_name = map[int32]string{
		0: "Prioritymodegq_ISPRIORITY",
		1: "Prioritymodegq_NOTPRIORITY",
	}
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq_value = map[string]int32{
		"Prioritymodegq_ISPRIORITY":  0,
		"Prioritymodegq_NOTPRIORITY": 1,
	}
)

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq) Enum() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq {
	p := new(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq)
	*p = x
	return p
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[101].Descriptor()
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[101]
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq.Descriptor instead.
func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 0}
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction int32

const (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction_OUTBOUND Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction = 0
)

// Enum value maps for Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction.
var (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction_name = map[int32]string{
		0: "Direction_OUTBOUND",
	}
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction_value = map[string]int32{
		"Direction_OUTBOUND": 0,
	}
)

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction) Enum() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction {
	p := new(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[102].Descriptor()
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[102]
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction.Descriptor instead.
func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 0, 0, 0}
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode int32

const (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode_NONE     Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode = 0
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode_TEMPLATE Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode = 1
)

// Enum value maps for Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode.
var (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode_name = map[int32]string{
		0: "Mode_NONE",
		1: "Mode_TEMPLATE",
	}
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode_value = map[string]int32{
		"Mode_NONE":     0,
		"Mode_TEMPLATE": 1,
	}
)

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode) Enum() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode {
	p := new(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode)
	*p = x
	return p
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[103].Descriptor()
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[103]
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode.Descriptor instead.
func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 1, 0, 0}
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction int32

const (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction_OUTBOUND Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction = 0
)

// Enum value maps for Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction.
var (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction_name = map[int32]string{
		0: "Direction_OUTBOUND",
	}
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction_value = map[string]int32{
		"Direction_OUTBOUND": 0,
	}
)

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction) Enum() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction {
	p := new(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[104].Descriptor()
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[104]
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction.Descriptor instead.
func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 2, 0, 0}
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority int32

const (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority_NOPRIO Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority = 0
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority_PRIO0  Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority = 1
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority_PRIO1  Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority = 2
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority_PRIO2  Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority = 3
)

// Enum value maps for Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority.
var (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority_name = map[int32]string{
		0: "Priority_NOPRIO",
		1: "Priority_PRIO0",
		2: "Priority_PRIO1",
		3: "Priority_PRIO2",
	}
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority_value = map[string]int32{
		"Priority_NOPRIO": 0,
		"Priority_PRIO0":  1,
		"Priority_PRIO1":  2,
		"Priority_PRIO2":  3,
	}
)

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority) Enum() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority {
	p := new(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority)
	*p = x
	return p
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[105].Descriptor()
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[105]
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority.Descriptor instead.
func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 2, 0, 1}
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction int32

const (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction_INBOUND  Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction = 0
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction_OUTBOUND Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction = 1
)

// Enum value maps for Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction.
var (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction) Enum() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction {
	p := new(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[106].Descriptor()
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[106]
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction.Descriptor instead.
func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 3, 0, 0}
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction int32

const (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction_INBOUND  Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction = 0
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction_OUTBOUND Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction = 1
)

// Enum value maps for Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction.
var (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction) Enum() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction {
	p := new(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[107].Descriptor()
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[107]
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction.Descriptor instead.
func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 4, 0, 0}
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass int32

const (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass_AF1       Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass = 0
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass_AF2       Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass = 1
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass_AF3       Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass = 2
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass_AF4       Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass = 3
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass_BE        Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass = 4
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass_CS6       Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass = 5
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass_CS7       Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass = 6
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass_EF        Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass = 7
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass_NOTCONFIG Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass = 8
)

// Enum value maps for Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass.
var (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass) Enum() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass {
	p := new(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[108].Descriptor()
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[108]
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass.Descriptor instead.
func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 4, 0, 1}
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction int32

const (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction_OUTBOUND Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction = 0
)

// Enum value maps for Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction.
var (
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction_name = map[int32]string{
		0: "Direction_OUTBOUND",
	}
	Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction_value = map[string]int32{
		"Direction_OUTBOUND": 0,
	}
)

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction) Enum() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction {
	p := new(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[109].Descriptor()
}

func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[109]
}

func (x Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction.Descriptor instead.
func (Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 5, 0, 0}
}

type Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction int32

const (
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction_INBOUND  Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction = 0
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction_OUTBOUND Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction = 1
)

// Enum value maps for Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction.
var (
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction) Enum() *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction {
	p := new(Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction)
	*p = x
	return p
}

func (x Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[110].Descriptor()
}

func (Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[110]
}

func (x Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction.Descriptor instead.
func (Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 10, 0, 0}
}

type Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType int32

const (
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType_BROADCAST      Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType = 0
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType_BU             Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType = 1
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType_BUM            Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType = 2
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType_CAR            Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType = 3
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType_L2_FORWARD     Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType = 4
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType_L3_FORWARD     Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType = 5
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType_MULTICAST      Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType = 6
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType_UNKNOW_UNICAST Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType = 7
)

// Enum value maps for Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType.
var (
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType_name = map[int32]string{
		0: "CarType_BROADCAST",
		1: "CarType_BU",
		2: "CarType_BUM",
		3: "CarType_CAR",
		4: "CarType_L2_FORWARD",
		5: "CarType_L3_FORWARD",
		6: "CarType_MULTICAST",
		7: "CarType_UNKNOW_UNICAST",
	}
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType_value = map[string]int32{
		"CarType_BROADCAST":      0,
		"CarType_BU":             1,
		"CarType_BUM":            2,
		"CarType_CAR":            3,
		"CarType_L2_FORWARD":     4,
		"CarType_L3_FORWARD":     5,
		"CarType_MULTICAST":      6,
		"CarType_UNKNOW_UNICAST": 7,
	}
)

func (x Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType) Enum() *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType {
	p := new(Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType)
	*p = x
	return p
}

func (x Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[111].Descriptor()
}

func (Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[111]
}

func (x Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType.Descriptor instead.
func (Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 10, 0, 0, 0, 0}
}

type Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass int32

const (
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass_AF1   Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass = 0
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass_AF2   Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass = 1
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass_AF3   Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass = 2
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass_AF4   Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass = 3
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass_BE    Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass = 4
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass_CS6   Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass = 5
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass_CS7   Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass = 6
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass_EF    Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass = 7
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass_TOTAL Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass = 8
)

// Enum value maps for Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass.
var (
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_TOTAL",
	}
	Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":   0,
		"ServiceClass_AF2":   1,
		"ServiceClass_AF3":   2,
		"ServiceClass_AF4":   3,
		"ServiceClass_BE":    4,
		"ServiceClass_CS6":   5,
		"ServiceClass_CS7":   6,
		"ServiceClass_EF":    7,
		"ServiceClass_TOTAL": 8,
	}
)

func (x Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass) Enum() *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass {
	p := new(Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass)
	*p = x
	return p
}

func (x Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[112].Descriptor()
}

func (Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[112]
}

func (x Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass.Descriptor instead.
func (Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 10, 0, 1, 0, 0}
}

type Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType int32

const (
	Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType_ACLLOG Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType = 0
)

// Enum value maps for Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType.
var (
	Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType_name = map[int32]string{
		0: "AcllogType_ACLLOG",
	}
	Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType_value = map[string]int32{
		"AcllogType_ACLLOG": 0,
	}
)

func (x Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType) Enum() *Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType {
	p := new(Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType)
	*p = x
	return p
}

func (x Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[113].Descriptor()
}

func (Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[113]
}

func (x Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType.Descriptor instead.
func (Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 1, 0, 0}
}

type Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass int32

const (
	Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass_AF1       Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass = 0
	Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass_AF2       Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass = 1
	Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass_AF3       Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass = 2
	Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass_AF4       Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass = 3
	Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass_BE        Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass = 4
	Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass_CS6       Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass = 5
	Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass_CS7       Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass = 6
	Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass_EF        Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass = 7
	Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass_NOTCONFIG Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass = 8
)

// Enum value maps for Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass.
var (
	Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass_name = map[int32]string{
		0: "ServicebdClass_AF1",
		1: "ServicebdClass_AF2",
		2: "ServicebdClass_AF3",
		3: "ServicebdClass_AF4",
		4: "ServicebdClass_BE",
		5: "ServicebdClass_CS6",
		6: "ServicebdClass_CS7",
		7: "ServicebdClass_EF",
		8: "ServicebdClass_NOTCONFIG",
	}
	Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass_value = map[string]int32{
		"ServicebdClass_AF1":       0,
		"ServicebdClass_AF2":       1,
		"ServicebdClass_AF3":       2,
		"ServicebdClass_AF4":       3,
		"ServicebdClass_BE":        4,
		"ServicebdClass_CS6":       5,
		"ServicebdClass_CS7":       6,
		"ServicebdClass_EF":        7,
		"ServicebdClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass) Enum() *Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass {
	p := new(Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass)
	*p = x
	return p
}

func (x Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[114].Descriptor()
}

func (Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[114]
}

func (x Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass.Descriptor instead.
func (Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 0, 0, 0}
}

type Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType int32

const (
	Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType_DSCP        Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType = 0
	Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType_INNER_8021P Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType = 1
	Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType_MPLS_EXP    Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType = 2
	Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType_NONE        Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType = 3
	Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType_OUTER_8021P Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType = 4
)

// Enum value maps for Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType.
var (
	Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType_name = map[int32]string{
		0: "MapbdType_DSCP",
		1: "MapbdType_INNER_8021P",
		2: "MapbdType_MPLS_EXP",
		3: "MapbdType_NONE",
		4: "MapbdType_OUTER_8021P",
	}
	Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType_value = map[string]int32{
		"MapbdType_DSCP":        0,
		"MapbdType_INNER_8021P": 1,
		"MapbdType_MPLS_EXP":    2,
		"MapbdType_NONE":        3,
		"MapbdType_OUTER_8021P": 4,
	}
)

func (x Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType) Enum() *Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType {
	p := new(Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType)
	*p = x
	return p
}

func (x Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[115].Descriptor()
}

func (Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[115]
}

func (x Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType.Descriptor instead.
func (Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 1, 0, 0}
}

type Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType int32

const (
	Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType_DISABLE Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType = 0
	Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType_ENABLE  Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType = 1
)

// Enum value maps for Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType.
var (
	Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType_name = map[int32]string{
		0: "OperatebdType_DISABLE",
		1: "OperatebdType_ENABLE",
	}
	Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType_value = map[string]int32{
		"OperatebdType_DISABLE": 0,
		"OperatebdType_ENABLE":  1,
	}
)

func (x Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType) Enum() *Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType {
	p := new(Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType)
	*p = x
	return p
}

func (x Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[116].Descriptor()
}

func (Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[116]
}

func (x Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType.Descriptor instead.
func (Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 1, 0, 1}
}

type Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection int32

const (
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection_INBOUND  Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection = 0
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection_OUTBOUND Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection = 1
)

// Enum value maps for Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection.
var (
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection_name = map[int32]string{
		0: "Bddirection_INBOUND",
		1: "Bddirection_OUTBOUND",
	}
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection_value = map[string]int32{
		"Bddirection_INBOUND":  0,
		"Bddirection_OUTBOUND": 1,
	}
)

func (x Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection) Enum() *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection {
	p := new(Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection)
	*p = x
	return p
}

func (x Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[117].Descriptor()
}

func (Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[117]
}

func (x Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection.Descriptor instead.
func (Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 2, 0, 0}
}

type Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer int32

const (
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer_ALL  Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer = 0
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer_LINK Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer = 1
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer_MPLS Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer = 2
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer_NONE Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer = 3
)

// Enum value maps for Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer.
var (
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer_name = map[int32]string{
		0: "Bdlayer_ALL",
		1: "Bdlayer_LINK",
		2: "Bdlayer_MPLS",
		3: "Bdlayer_NONE",
	}
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer_value = map[string]int32{
		"Bdlayer_ALL":  0,
		"Bdlayer_LINK": 1,
		"Bdlayer_MPLS": 2,
		"Bdlayer_NONE": 3,
	}
)

func (x Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer) Enum() *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer {
	p := new(Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer)
	*p = x
	return p
}

func (x Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[118].Descriptor()
}

func (Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[118]
}

func (x Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer.Descriptor instead.
func (Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 2, 0, 1}
}

type Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass int32

const (
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass_AF1   Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass = 0
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass_AF2   Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass = 1
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass_AF3   Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass = 2
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass_AF4   Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass = 3
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass_BE    Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass = 4
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass_CS6   Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass = 5
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass_CS7   Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass = 6
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass_EF    Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass = 7
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass_TOTAL Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass = 8
)

// Enum value maps for Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass.
var (
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_TOTAL",
	}
	Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":   0,
		"ServiceClass_AF2":   1,
		"ServiceClass_AF3":   2,
		"ServiceClass_AF4":   3,
		"ServiceClass_BE":    4,
		"ServiceClass_CS6":   5,
		"ServiceClass_CS7":   6,
		"ServiceClass_EF":    7,
		"ServiceClass_TOTAL": 8,
	}
)

func (x Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass) Enum() *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass {
	p := new(Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[119].Descriptor()
}

func (Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[119]
}

func (x Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass.Descriptor instead.
func (Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 2, 0, 0, 0, 0}
}

type Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType int32

const (
	Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType_IN_OUTBOUND Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType = 0
	Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType_INBOUND     Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType = 1
	Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType_OUTBOUND    Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType = 2
)

// Enum value maps for Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType.
var (
	Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType_name = map[int32]string{
		0: "DirectbdType_IN_OUTBOUND",
		1: "DirectbdType_INBOUND",
		2: "DirectbdType_OUTBOUND",
	}
	Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType_value = map[string]int32{
		"DirectbdType_IN_OUTBOUND": 0,
		"DirectbdType_INBOUND":     1,
		"DirectbdType_OUTBOUND":    2,
	}
)

func (x Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType) Enum() *Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType {
	p := new(Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType)
	*p = x
	return p
}

func (x Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[120].Descriptor()
}

func (Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[120]
}

func (x Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType.Descriptor instead.
func (Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 3, 0, 0}
}

type Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType int32

const (
	Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType_X_8021P     Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType = 0
	Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType_DS          Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType = 1
	Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType_INNER_8021P Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType = 2
	Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType_OUTER_8021P Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType = 3
)

// Enum value maps for Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType.
var (
	Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType_name = map[int32]string{
		0: "TrustbdType_X_8021P",
		1: "TrustbdType_DS",
		2: "TrustbdType_INNER_8021P",
		3: "TrustbdType_OUTER_8021P",
	}
	Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType_value = map[string]int32{
		"TrustbdType_X_8021P":     0,
		"TrustbdType_DS":          1,
		"TrustbdType_INNER_8021P": 2,
		"TrustbdType_OUTER_8021P": 3,
	}
)

func (x Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType) Enum() *Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType {
	p := new(Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType)
	*p = x
	return p
}

func (x Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[121].Descriptor()
}

func (Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[121]
}

func (x Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType.Descriptor instead.
func (Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 3, 0, 1}
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode int32

const (
	Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode_EXCLUDE     Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode = 0
	Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode_NON_EXCLUDE Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode = 1
)

// Enum value maps for Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode.
var (
	Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode_name = map[int32]string{
		0: "ExcludeMode_EXCLUDE",
		1: "ExcludeMode_NON_EXCLUDE",
	}
	Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode_value = map[string]int32{
		"ExcludeMode_EXCLUDE":     0,
		"ExcludeMode_NON_EXCLUDE": 1,
	}
)

func (x Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode) Enum() *Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode {
	p := new(Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode)
	*p = x
	return p
}

func (x Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[122].Descriptor()
}

func (Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[122]
}

func (x Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode.Descriptor instead.
func (Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 4, 0, 0}
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection int32

const (
	Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection_INBOUND  Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection = 0
	Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection_OUTBOUND Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection = 1
)

// Enum value maps for Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection.
var (
	Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection_name = map[int32]string{
		0: "Bddirection_INBOUND",
		1: "Bddirection_OUTBOUND",
	}
	Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection_value = map[string]int32{
		"Bddirection_INBOUND":  0,
		"Bddirection_OUTBOUND": 1,
	}
)

func (x Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection) Enum() *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection {
	p := new(Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection)
	*p = x
	return p
}

func (x Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[123].Descriptor()
}

func (Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[123]
}

func (x Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection.Descriptor instead.
func (Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 6, 0, 0}
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer int32

const (
	Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer_LINK Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer = 0
	Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer_NONE Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer = 1
)

// Enum value maps for Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer.
var (
	Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer_name = map[int32]string{
		0: "Bdlayer_LINK",
		1: "Bdlayer_NONE",
	}
	Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer_value = map[string]int32{
		"Bdlayer_LINK": 0,
		"Bdlayer_NONE": 1,
	}
)

func (x Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer) Enum() *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer {
	p := new(Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer)
	*p = x
	return p
}

func (x Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[124].Descriptor()
}

func (Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[124]
}

func (x Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer.Descriptor instead.
func (Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 6, 0, 1}
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType int32

const (
	Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType_X_8021P Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType = 0
	Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType_DS      Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType = 1
)

// Enum value maps for Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType.
var (
	Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType_name = map[int32]string{
		0: "TrustbdType_X_8021P",
		1: "TrustbdType_DS",
	}
	Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType_value = map[string]int32{
		"TrustbdType_X_8021P": 0,
		"TrustbdType_DS":      1,
	}
)

func (x Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType) Enum() *Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType {
	p := new(Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType)
	*p = x
	return p
}

func (x Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[125].Descriptor()
}

func (Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[125]
}

func (x Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType.Descriptor instead.
func (Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 7, 0, 0}
}

type Qos_QosBaHosts_QosBaHost_Color int32

const (
	Qos_QosBaHosts_QosBaHost_Color_GREEN  Qos_QosBaHosts_QosBaHost_Color = 0
	Qos_QosBaHosts_QosBaHost_Color_RED    Qos_QosBaHosts_QosBaHost_Color = 1
	Qos_QosBaHosts_QosBaHost_Color_YELLOW Qos_QosBaHosts_QosBaHost_Color = 2
)

// Enum value maps for Qos_QosBaHosts_QosBaHost_Color.
var (
	Qos_QosBaHosts_QosBaHost_Color_name = map[int32]string{
		0: "Color_GREEN",
		1: "Color_RED",
		2: "Color_YELLOW",
	}
	Qos_QosBaHosts_QosBaHost_Color_value = map[string]int32{
		"Color_GREEN":  0,
		"Color_RED":    1,
		"Color_YELLOW": 2,
	}
)

func (x Qos_QosBaHosts_QosBaHost_Color) Enum() *Qos_QosBaHosts_QosBaHost_Color {
	p := new(Qos_QosBaHosts_QosBaHost_Color)
	*p = x
	return p
}

func (x Qos_QosBaHosts_QosBaHost_Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBaHosts_QosBaHost_Color) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[126].Descriptor()
}

func (Qos_QosBaHosts_QosBaHost_Color) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[126]
}

func (x Qos_QosBaHosts_QosBaHost_Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBaHosts_QosBaHost_Color.Descriptor instead.
func (Qos_QosBaHosts_QosBaHost_Color) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 3, 0, 0}
}

type Qos_QosBaHosts_QosBaHost_Cosvalue int32

const (
	Qos_QosBaHosts_QosBaHost_Cosvalue_AF1       Qos_QosBaHosts_QosBaHost_Cosvalue = 0
	Qos_QosBaHosts_QosBaHost_Cosvalue_AF2       Qos_QosBaHosts_QosBaHost_Cosvalue = 1
	Qos_QosBaHosts_QosBaHost_Cosvalue_AF3       Qos_QosBaHosts_QosBaHost_Cosvalue = 2
	Qos_QosBaHosts_QosBaHost_Cosvalue_AF4       Qos_QosBaHosts_QosBaHost_Cosvalue = 3
	Qos_QosBaHosts_QosBaHost_Cosvalue_BE        Qos_QosBaHosts_QosBaHost_Cosvalue = 4
	Qos_QosBaHosts_QosBaHost_Cosvalue_CS6       Qos_QosBaHosts_QosBaHost_Cosvalue = 5
	Qos_QosBaHosts_QosBaHost_Cosvalue_CS7       Qos_QosBaHosts_QosBaHost_Cosvalue = 6
	Qos_QosBaHosts_QosBaHost_Cosvalue_EF        Qos_QosBaHosts_QosBaHost_Cosvalue = 7
	Qos_QosBaHosts_QosBaHost_Cosvalue_NOTCONFIG Qos_QosBaHosts_QosBaHost_Cosvalue = 8
)

// Enum value maps for Qos_QosBaHosts_QosBaHost_Cosvalue.
var (
	Qos_QosBaHosts_QosBaHost_Cosvalue_name = map[int32]string{
		0: "Cosvalue_AF1",
		1: "Cosvalue_AF2",
		2: "Cosvalue_AF3",
		3: "Cosvalue_AF4",
		4: "Cosvalue_BE",
		5: "Cosvalue_CS6",
		6: "Cosvalue_CS7",
		7: "Cosvalue_EF",
		8: "Cosvalue_NOTCONFIG",
	}
	Qos_QosBaHosts_QosBaHost_Cosvalue_value = map[string]int32{
		"Cosvalue_AF1":       0,
		"Cosvalue_AF2":       1,
		"Cosvalue_AF3":       2,
		"Cosvalue_AF4":       3,
		"Cosvalue_BE":        4,
		"Cosvalue_CS6":       5,
		"Cosvalue_CS7":       6,
		"Cosvalue_EF":        7,
		"Cosvalue_NOTCONFIG": 8,
	}
)

func (x Qos_QosBaHosts_QosBaHost_Cosvalue) Enum() *Qos_QosBaHosts_QosBaHost_Cosvalue {
	p := new(Qos_QosBaHosts_QosBaHost_Cosvalue)
	*p = x
	return p
}

func (x Qos_QosBaHosts_QosBaHost_Cosvalue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBaHosts_QosBaHost_Cosvalue) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[127].Descriptor()
}

func (Qos_QosBaHosts_QosBaHost_Cosvalue) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[127]
}

func (x Qos_QosBaHosts_QosBaHost_Cosvalue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBaHosts_QosBaHost_Cosvalue.Descriptor instead.
func (Qos_QosBaHosts_QosBaHost_Cosvalue) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 3, 0, 1}
}

type Qos_QosBuffers_QosBuffer_QueueType int32

const (
	Qos_QosBuffers_QosBuffer_QueueType_AF1   Qos_QosBuffers_QosBuffer_QueueType = 0
	Qos_QosBuffers_QosBuffer_QueueType_AF2   Qos_QosBuffers_QosBuffer_QueueType = 1
	Qos_QosBuffers_QosBuffer_QueueType_AF3   Qos_QosBuffers_QosBuffer_QueueType = 2
	Qos_QosBuffers_QosBuffer_QueueType_AF4   Qos_QosBuffers_QosBuffer_QueueType = 3
	Qos_QosBuffers_QosBuffer_QueueType_BE    Qos_QosBuffers_QosBuffer_QueueType = 4
	Qos_QosBuffers_QosBuffer_QueueType_CS6   Qos_QosBuffers_QosBuffer_QueueType = 5
	Qos_QosBuffers_QosBuffer_QueueType_CS7   Qos_QosBuffers_QosBuffer_QueueType = 6
	Qos_QosBuffers_QosBuffer_QueueType_EF    Qos_QosBuffers_QosBuffer_QueueType = 7
	Qos_QosBuffers_QosBuffer_QueueType_TOTAL Qos_QosBuffers_QosBuffer_QueueType = 8
)

// Enum value maps for Qos_QosBuffers_QosBuffer_QueueType.
var (
	Qos_QosBuffers_QosBuffer_QueueType_name = map[int32]string{
		0: "QueueType_AF1",
		1: "QueueType_AF2",
		2: "QueueType_AF3",
		3: "QueueType_AF4",
		4: "QueueType_BE",
		5: "QueueType_CS6",
		6: "QueueType_CS7",
		7: "QueueType_EF",
		8: "QueueType_TOTAL",
	}
	Qos_QosBuffers_QosBuffer_QueueType_value = map[string]int32{
		"QueueType_AF1":   0,
		"QueueType_AF2":   1,
		"QueueType_AF3":   2,
		"QueueType_AF4":   3,
		"QueueType_BE":    4,
		"QueueType_CS6":   5,
		"QueueType_CS7":   6,
		"QueueType_EF":    7,
		"QueueType_TOTAL": 8,
	}
)

func (x Qos_QosBuffers_QosBuffer_QueueType) Enum() *Qos_QosBuffers_QosBuffer_QueueType {
	p := new(Qos_QosBuffers_QosBuffer_QueueType)
	*p = x
	return p
}

func (x Qos_QosBuffers_QosBuffer_QueueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosBuffers_QosBuffer_QueueType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[128].Descriptor()
}

func (Qos_QosBuffers_QosBuffer_QueueType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[128]
}

func (x Qos_QosBuffers_QosBuffer_QueueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosBuffers_QosBuffer_QueueType.Descriptor instead.
func (Qos_QosBuffers_QosBuffer_QueueType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 4, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType_ACLLOG Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType_name = map[int32]string{
		0: "ActionType_ACLLOG",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType_value = map[string]int32{
		"ActionType_ACLLOG": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[129].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[129]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 0, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure_ENABLE Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure_name = map[int32]string{
		0: "IsConfigure_ENABLE",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure_value = map[string]int32{
		"IsConfigure_ENABLE": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[130].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[130]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 0, 0, 1}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType_CAR Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType_name = map[int32]string{
		0: "ActionType_CAR",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType_value = map[string]int32{
		"ActionType_CAR": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[131].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[131]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 1, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware_FALSE Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware_TRUE  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware_name = map[int32]string{
		0: "ColorAware_FALSE",
		1: "ColorAware_TRUE",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware_value = map[string]int32{
		"ColorAware_FALSE": 0,
		"ColorAware_TRUE":  1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[132].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[132]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 1, 0, 1}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction_DISCARD Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction_PASS    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction_name = map[int32]string{
		0: "GreenAction_DISCARD",
		1: "GreenAction_PASS",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction_value = map[string]int32{
		"GreenAction_DISCARD": 0,
		"GreenAction_PASS":    1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[133].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[133]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 1, 0, 2}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor_GREEN  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor_RED    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor_YELLOW Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor = 2
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor_name = map[int32]string{
		0: "GreenColor_GREEN",
		1: "GreenColor_RED",
		2: "GreenColor_YELLOW",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor_value = map[string]int32{
		"GreenColor_GREEN":  0,
		"GreenColor_RED":    1,
		"GreenColor_YELLOW": 2,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[134].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[134]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 1, 0, 3}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass_AF1       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass_AF2       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass_AF3       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass_AF4       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass = 3
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass_BE        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass = 4
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass_CS6       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass = 5
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass_CS7       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass = 6
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass_EF        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass = 7
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass_NOTCONFIG Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass = 8
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass_name = map[int32]string{
		0: "GreenServiceClass_AF1",
		1: "GreenServiceClass_AF2",
		2: "GreenServiceClass_AF3",
		3: "GreenServiceClass_AF4",
		4: "GreenServiceClass_BE",
		5: "GreenServiceClass_CS6",
		6: "GreenServiceClass_CS7",
		7: "GreenServiceClass_EF",
		8: "GreenServiceClass_NOTCONFIG",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass_value = map[string]int32{
		"GreenServiceClass_AF1":       0,
		"GreenServiceClass_AF2":       1,
		"GreenServiceClass_AF3":       2,
		"GreenServiceClass_AF4":       3,
		"GreenServiceClass_BE":        4,
		"GreenServiceClass_CS6":       5,
		"GreenServiceClass_CS7":       6,
		"GreenServiceClass_EF":        7,
		"GreenServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[135].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[135]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 1, 0, 4}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType_BPS Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType_PPS Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType_name = map[int32]string{
		0: "LimitType_BPS",
		1: "LimitType_PPS",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType_value = map[string]int32{
		"LimitType_BPS": 0,
		"LimitType_PPS": 1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[136].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[136]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 1, 0, 5}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction_DISCARD Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction_PASS    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction_name = map[int32]string{
		0: "RedAction_DISCARD",
		1: "RedAction_PASS",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction_value = map[string]int32{
		"RedAction_DISCARD": 0,
		"RedAction_PASS":    1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[137].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[137]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 1, 0, 6}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor_GREEN  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor_RED    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor_YELLOW Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor = 2
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor_name = map[int32]string{
		0: "RedColor_GREEN",
		1: "RedColor_RED",
		2: "RedColor_YELLOW",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor_value = map[string]int32{
		"RedColor_GREEN":  0,
		"RedColor_RED":    1,
		"RedColor_YELLOW": 2,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[138].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[138]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 1, 0, 7}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass_AF1       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass_AF2       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass_AF3       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass_AF4       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass = 3
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass_BE        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass = 4
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass_CS6       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass = 5
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass_CS7       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass = 6
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass_EF        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass = 7
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass_NOTCONFIG Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass = 8
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass_name = map[int32]string{
		0: "RedServiceClass_AF1",
		1: "RedServiceClass_AF2",
		2: "RedServiceClass_AF3",
		3: "RedServiceClass_AF4",
		4: "RedServiceClass_BE",
		5: "RedServiceClass_CS6",
		6: "RedServiceClass_CS7",
		7: "RedServiceClass_EF",
		8: "RedServiceClass_NOTCONFIG",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass_value = map[string]int32{
		"RedServiceClass_AF1":       0,
		"RedServiceClass_AF2":       1,
		"RedServiceClass_AF3":       2,
		"RedServiceClass_AF4":       3,
		"RedServiceClass_BE":        4,
		"RedServiceClass_CS6":       5,
		"RedServiceClass_CS7":       6,
		"RedServiceClass_EF":        7,
		"RedServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[139].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[139]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 1, 0, 8}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction_DISCARD Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction_PASS    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction_name = map[int32]string{
		0: "YellowAction_DISCARD",
		1: "YellowAction_PASS",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction_value = map[string]int32{
		"YellowAction_DISCARD": 0,
		"YellowAction_PASS":    1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[140].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[140]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 1, 0, 9}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor_GREEN  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor_RED    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor_YELLOW Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor = 2
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor_name = map[int32]string{
		0: "YellowColor_GREEN",
		1: "YellowColor_RED",
		2: "YellowColor_YELLOW",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor_value = map[string]int32{
		"YellowColor_GREEN":  0,
		"YellowColor_RED":    1,
		"YellowColor_YELLOW": 2,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[141].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[141]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 1, 0, 10}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass_AF1       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass_AF2       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass_AF3       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass_AF4       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass = 3
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass_BE        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass = 4
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass_CS6       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass = 5
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass_CS7       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass = 6
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass_EF        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass = 7
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass_NOTCONFIG Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass = 8
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass_name = map[int32]string{
		0: "YellowServiceClass_AF1",
		1: "YellowServiceClass_AF2",
		2: "YellowServiceClass_AF3",
		3: "YellowServiceClass_AF4",
		4: "YellowServiceClass_BE",
		5: "YellowServiceClass_CS6",
		6: "YellowServiceClass_CS7",
		7: "YellowServiceClass_EF",
		8: "YellowServiceClass_NOTCONFIG",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass_value = map[string]int32{
		"YellowServiceClass_AF1":       0,
		"YellowServiceClass_AF2":       1,
		"YellowServiceClass_AF3":       2,
		"YellowServiceClass_AF4":       3,
		"YellowServiceClass_BE":        4,
		"YellowServiceClass_CS6":       5,
		"YellowServiceClass_CS7":       6,
		"YellowServiceClass_EF":        7,
		"YellowServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[142].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[142]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 1, 0, 11}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType_CAR Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType_name = map[int32]string{
		0: "ActionType_CAR",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType_value = map[string]int32{
		"ActionType_CAR": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[143].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[143]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 2, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware_FALSE Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware_TRUE  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware_name = map[int32]string{
		0: "ColorAware_FALSE",
		1: "ColorAware_TRUE",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware_value = map[string]int32{
		"ColorAware_FALSE": 0,
		"ColorAware_TRUE":  1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[144].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[144]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 2, 0, 1}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction_DISCARD Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction_PASS    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction_name = map[int32]string{
		0: "GreenAction_DISCARD",
		1: "GreenAction_PASS",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction_value = map[string]int32{
		"GreenAction_DISCARD": 0,
		"GreenAction_PASS":    1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[145].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[145]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 2, 0, 2}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor_GREEN  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor_RED    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor_YELLOW Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor = 2
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor_name = map[int32]string{
		0: "GreenColor_GREEN",
		1: "GreenColor_RED",
		2: "GreenColor_YELLOW",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor_value = map[string]int32{
		"GreenColor_GREEN":  0,
		"GreenColor_RED":    1,
		"GreenColor_YELLOW": 2,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[146].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[146]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 2, 0, 3}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass_AF1       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass_AF2       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass_AF3       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass_AF4       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass = 3
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass_BE        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass = 4
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass_CS6       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass = 5
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass_CS7       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass = 6
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass_EF        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass = 7
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass_NOTCONFIG Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass = 8
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass_name = map[int32]string{
		0: "GreenServiceClass_AF1",
		1: "GreenServiceClass_AF2",
		2: "GreenServiceClass_AF3",
		3: "GreenServiceClass_AF4",
		4: "GreenServiceClass_BE",
		5: "GreenServiceClass_CS6",
		6: "GreenServiceClass_CS7",
		7: "GreenServiceClass_EF",
		8: "GreenServiceClass_NOTCONFIG",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass_value = map[string]int32{
		"GreenServiceClass_AF1":       0,
		"GreenServiceClass_AF2":       1,
		"GreenServiceClass_AF3":       2,
		"GreenServiceClass_AF4":       3,
		"GreenServiceClass_BE":        4,
		"GreenServiceClass_CS6":       5,
		"GreenServiceClass_CS7":       6,
		"GreenServiceClass_EF":        7,
		"GreenServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[147].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[147]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 2, 0, 4}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType_BPS Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType_PPS Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType_name = map[int32]string{
		0: "LimitType_BPS",
		1: "LimitType_PPS",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType_value = map[string]int32{
		"LimitType_BPS": 0,
		"LimitType_PPS": 1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[148].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[148]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 2, 0, 5}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction_DISCARD Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction_PASS    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction_name = map[int32]string{
		0: "RedAction_DISCARD",
		1: "RedAction_PASS",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction_value = map[string]int32{
		"RedAction_DISCARD": 0,
		"RedAction_PASS":    1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[149].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[149]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 2, 0, 6}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor_GREEN  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor_RED    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor_YELLOW Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor = 2
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor_name = map[int32]string{
		0: "RedColor_GREEN",
		1: "RedColor_RED",
		2: "RedColor_YELLOW",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor_value = map[string]int32{
		"RedColor_GREEN":  0,
		"RedColor_RED":    1,
		"RedColor_YELLOW": 2,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[150].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[150]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 2, 0, 7}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass_AF1       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass_AF2       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass_AF3       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass_AF4       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass = 3
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass_BE        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass = 4
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass_CS6       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass = 5
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass_CS7       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass = 6
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass_EF        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass = 7
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass_NOTCONFIG Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass = 8
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass_name = map[int32]string{
		0: "RedServiceClass_AF1",
		1: "RedServiceClass_AF2",
		2: "RedServiceClass_AF3",
		3: "RedServiceClass_AF4",
		4: "RedServiceClass_BE",
		5: "RedServiceClass_CS6",
		6: "RedServiceClass_CS7",
		7: "RedServiceClass_EF",
		8: "RedServiceClass_NOTCONFIG",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass_value = map[string]int32{
		"RedServiceClass_AF1":       0,
		"RedServiceClass_AF2":       1,
		"RedServiceClass_AF3":       2,
		"RedServiceClass_AF4":       3,
		"RedServiceClass_BE":        4,
		"RedServiceClass_CS6":       5,
		"RedServiceClass_CS7":       6,
		"RedServiceClass_EF":        7,
		"RedServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[151].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[151]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 2, 0, 8}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction_DISCARD Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction_PASS    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction_name = map[int32]string{
		0: "YellowAction_DISCARD",
		1: "YellowAction_PASS",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction_value = map[string]int32{
		"YellowAction_DISCARD": 0,
		"YellowAction_PASS":    1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[152].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[152]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 2, 0, 9}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor_GREEN  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor_RED    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor_YELLOW Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor = 2
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor_name = map[int32]string{
		0: "YellowColor_GREEN",
		1: "YellowColor_RED",
		2: "YellowColor_YELLOW",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor_value = map[string]int32{
		"YellowColor_GREEN":  0,
		"YellowColor_RED":    1,
		"YellowColor_YELLOW": 2,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[153].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[153]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 2, 0, 10}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass_AF1       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass_AF2       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass_AF3       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass_AF4       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass = 3
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass_BE        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass = 4
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass_CS6       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass = 5
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass_CS7       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass = 6
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass_EF        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass = 7
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass_NOTCONFIG Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass = 8
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass_name = map[int32]string{
		0: "YellowServiceClass_AF1",
		1: "YellowServiceClass_AF2",
		2: "YellowServiceClass_AF3",
		3: "YellowServiceClass_AF4",
		4: "YellowServiceClass_BE",
		5: "YellowServiceClass_CS6",
		6: "YellowServiceClass_CS7",
		7: "YellowServiceClass_EF",
		8: "YellowServiceClass_NOTCONFIG",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass_value = map[string]int32{
		"YellowServiceClass_AF1":       0,
		"YellowServiceClass_AF2":       1,
		"YellowServiceClass_AF3":       2,
		"YellowServiceClass_AF4":       3,
		"YellowServiceClass_BE":        4,
		"YellowServiceClass_CS6":       5,
		"YellowServiceClass_CS7":       6,
		"YellowServiceClass_EF":        7,
		"YellowServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[154].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[154]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 2, 0, 11}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType_FILTER Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType_name = map[int32]string{
		0: "ActionType_FILTER",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType_value = map[string]int32{
		"ActionType_FILTER": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[155].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[155]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 3, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter_DENY   Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter_PERMIT Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter_name = map[int32]string{
		0: "Filter_DENY",
		1: "Filter_PERMIT",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter_value = map[string]int32{
		"Filter_DENY":   0,
		"Filter_PERMIT": 1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[156].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[156]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 3, 0, 1}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority_INCPRI Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority_name = map[int32]string{
		0: "Priority_INCPRI",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority_value = map[string]int32{
		"Priority_INCPRI": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[157].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[157]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 4, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction_DISCARD Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction_PASS    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction_name = map[int32]string{
		0: "GreenAction_DISCARD",
		1: "GreenAction_PASS",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction_value = map[string]int32{
		"GreenAction_DISCARD": 0,
		"GreenAction_PASS":    1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[158].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[158]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 5, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor_GREEN  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor_RED    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor_YELLOW Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor = 2
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor_name = map[int32]string{
		0: "GreenColor_GREEN",
		1: "GreenColor_RED",
		2: "GreenColor_YELLOW",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor_value = map[string]int32{
		"GreenColor_GREEN":  0,
		"GreenColor_RED":    1,
		"GreenColor_YELLOW": 2,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[159].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[159]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 5, 0, 1}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass_AF1       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass_AF2       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass_AF3       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass_AF4       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass = 3
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass_BE        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass = 4
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass_CS6       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass = 5
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass_CS7       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass = 6
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass_EF        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass = 7
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass_NOTCONFIG Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass = 8
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass_name = map[int32]string{
		0: "GreenServiceClass_AF1",
		1: "GreenServiceClass_AF2",
		2: "GreenServiceClass_AF3",
		3: "GreenServiceClass_AF4",
		4: "GreenServiceClass_BE",
		5: "GreenServiceClass_CS6",
		6: "GreenServiceClass_CS7",
		7: "GreenServiceClass_EF",
		8: "GreenServiceClass_NOTCONFIG",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass_value = map[string]int32{
		"GreenServiceClass_AF1":       0,
		"GreenServiceClass_AF2":       1,
		"GreenServiceClass_AF3":       2,
		"GreenServiceClass_AF4":       3,
		"GreenServiceClass_BE":        4,
		"GreenServiceClass_CS6":       5,
		"GreenServiceClass_CS7":       6,
		"GreenServiceClass_EF":        7,
		"GreenServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[160].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[160]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 5, 0, 2}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction_DISCARD Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction_PASS    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction_name = map[int32]string{
		0: "RedAction_DISCARD",
		1: "RedAction_PASS",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction_value = map[string]int32{
		"RedAction_DISCARD": 0,
		"RedAction_PASS":    1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[161].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[161]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 5, 0, 3}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor_GREEN  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor_RED    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor_YELLOW Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor = 2
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor_name = map[int32]string{
		0: "RedColor_GREEN",
		1: "RedColor_RED",
		2: "RedColor_YELLOW",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor_value = map[string]int32{
		"RedColor_GREEN":  0,
		"RedColor_RED":    1,
		"RedColor_YELLOW": 2,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[162].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[162]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 5, 0, 4}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass_AF1       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass_AF2       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass_AF3       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass_AF4       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass = 3
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass_BE        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass = 4
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass_CS6       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass = 5
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass_CS7       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass = 6
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass_EF        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass = 7
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass_NOTCONFIG Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass = 8
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass_name = map[int32]string{
		0: "RedServiceClass_AF1",
		1: "RedServiceClass_AF2",
		2: "RedServiceClass_AF3",
		3: "RedServiceClass_AF4",
		4: "RedServiceClass_BE",
		5: "RedServiceClass_CS6",
		6: "RedServiceClass_CS7",
		7: "RedServiceClass_EF",
		8: "RedServiceClass_NOTCONFIG",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass_value = map[string]int32{
		"RedServiceClass_AF1":       0,
		"RedServiceClass_AF2":       1,
		"RedServiceClass_AF3":       2,
		"RedServiceClass_AF4":       3,
		"RedServiceClass_BE":        4,
		"RedServiceClass_CS6":       5,
		"RedServiceClass_CS7":       6,
		"RedServiceClass_EF":        7,
		"RedServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[163].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[163]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 5, 0, 5}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType_BROADCAST_SUPPRESSION       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType_MULTICAST_SUPPRESSION       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType_UNKNOWN_UNICAST_SUPPRESSION Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType = 2
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType_name = map[int32]string{
		0: "SuppressType_BROADCAST_SUPPRESSION",
		1: "SuppressType_MULTICAST_SUPPRESSION",
		2: "SuppressType_UNKNOWN_UNICAST_SUPPRESSION",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType_value = map[string]int32{
		"SuppressType_BROADCAST_SUPPRESSION":       0,
		"SuppressType_MULTICAST_SUPPRESSION":       1,
		"SuppressType_UNKNOWN_UNICAST_SUPPRESSION": 2,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[164].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[164]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 5, 0, 6}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType_LOADBALANCE Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType_name = map[int32]string{
		0: "ActionType_LOADBALANCE",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType_value = map[string]int32{
		"ActionType_LOADBALANCE": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[165].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[165]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 6, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType_FLOW   Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType_FLOWL2 Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType_FLOWL3 Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType_PACKET Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType = 3
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType_name = map[int32]string{
		0: "BalanceType_FLOW",
		1: "BalanceType_FLOWL2",
		2: "BalanceType_FLOWL3",
		3: "BalanceType_PACKET",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType_value = map[string]int32{
		"BalanceType_FLOW":   0,
		"BalanceType_FLOWL2": 1,
		"BalanceType_FLOWL3": 2,
		"BalanceType_PACKET": 3,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[166].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[166]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 6, 0, 1}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType_IPV4 Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType_IPV6 Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType_name = map[int32]string{
		0: "FlowType_IPV4",
		1: "FlowType_IPV6",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType_value = map[string]int32{
		"FlowType_IPV4": 0,
		"FlowType_IPV6": 1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[167].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[167]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 8, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType_FIXPACKETS    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType_FIXTIME       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType_RANDOMPACKETS Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType = 2
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType_name = map[int32]string{
		0: "SampleType_FIXPACKETS",
		1: "SampleType_FIXTIME",
		2: "SampleType_RANDOMPACKETS",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType_value = map[string]int32{
		"SampleType_FIXPACKETS":    0,
		"SampleType_FIXTIME":       1,
		"SampleType_RANDOMPACKETS": 2,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[168].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[168]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 8, 0, 1}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType_PORTMIRROR Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType_name = map[int32]string{
		0: "ActionType_PORTMIRROR",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType_value = map[string]int32{
		"ActionType_PORTMIRROR": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[169].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[169]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 9, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable_ENABLE Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable_name = map[int32]string{
		0: "Enable_ENABLE",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable_value = map[string]int32{
		"Enable_ENABLE": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[170].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[170]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 9, 0, 1}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType_REDIRECTLSP Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType_name = map[int32]string{
		0: "ActionType_REDIRECTLSP",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType_value = map[string]int32{
		"ActionType_REDIRECTLSP": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[171].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[171]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 10, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType_DESTADDR  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType_INTERFACE Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType_NHP       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType_SECONDARY Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType = 3
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType_name = map[int32]string{
		0: "ConfigType_DESTADDR",
		1: "ConfigType_INTERFACE",
		2: "ConfigType_NHP",
		3: "ConfigType_SECONDARY",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType_value = map[string]int32{
		"ConfigType_DESTADDR":  0,
		"ConfigType_INTERFACE": 1,
		"ConfigType_NHP":       2,
		"ConfigType_SECONDARY": 3,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[172].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[172]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 10, 0, 1}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary_ENABLE Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary_name = map[int32]string{
		0: "Secondary_ENABLE",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary_value = map[string]int32{
		"Secondary_ENABLE": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[173].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[173]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 10, 0, 2}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType_BACKUP       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType_BACKUPNQA    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType_BACKUPVPN    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType_BACKUPVPNNQA Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType = 3
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType_DIRECT       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType = 4
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType_name = map[int32]string{
		0: "RdrType_BACKUP",
		1: "RdrType_BACKUPNQA",
		2: "RdrType_BACKUPVPN",
		3: "RdrType_BACKUPVPNNQA",
		4: "RdrType_DIRECT",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType_value = map[string]int32{
		"RdrType_BACKUP":       0,
		"RdrType_BACKUPNQA":    1,
		"RdrType_BACKUPVPN":    2,
		"RdrType_BACKUPVPNNQA": 3,
		"RdrType_DIRECT":       4,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[174].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[174]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 11, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType_BACKUP       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType_BACKUPNQA    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType_BACKUPVPN    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType_BACKUPVPNNQA Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType = 3
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType_DIRECT       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType = 4
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType_name = map[int32]string{
		0: "RdrType_BACKUP",
		1: "RdrType_BACKUPNQA",
		2: "RdrType_BACKUPVPN",
		3: "RdrType_BACKUPVPNNQA",
		4: "RdrType_DIRECT",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType_value = map[string]int32{
		"RdrType_BACKUP":       0,
		"RdrType_BACKUPNQA":    1,
		"RdrType_BACKUPVPN":    2,
		"RdrType_BACKUPVPNNQA": 3,
		"RdrType_DIRECT":       4,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[175].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[175]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 12, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType_REDIRECTMLDPTUNNEL Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType_name = map[int32]string{
		0: "ActionType_REDIRECTMLDPTUNNEL",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType_value = map[string]int32{
		"ActionType_REDIRECTMLDPTUNNEL": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[176].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[176]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 13, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType_BACKUP       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType_BACKUPNQA    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType_BACKUPVPN    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType_BACKUPVPNNQA Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType = 3
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType_DIRECT       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType = 4
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType_name = map[int32]string{
		0: "RdrType_BACKUP",
		1: "RdrType_BACKUPNQA",
		2: "RdrType_BACKUPVPN",
		3: "RdrType_BACKUPVPNNQA",
		4: "RdrType_DIRECT",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType_value = map[string]int32{
		"RdrType_BACKUP":       0,
		"RdrType_BACKUPNQA":    1,
		"RdrType_BACKUPVPN":    2,
		"RdrType_BACKUPVPNNQA": 3,
		"RdrType_DIRECT":       4,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[177].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[177]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 14, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType_BACKUP       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType_BACKUPNQA    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType_BACKUPVPN    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType_BACKUPVPNNQA Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType = 3
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType_DIRECT       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType = 4
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType_name = map[int32]string{
		0: "RdrType_BACKUP",
		1: "RdrType_BACKUPNQA",
		2: "RdrType_BACKUPVPN",
		3: "RdrType_BACKUPVPNNQA",
		4: "RdrType_DIRECT",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType_value = map[string]int32{
		"RdrType_BACKUP":       0,
		"RdrType_BACKUPNQA":    1,
		"RdrType_BACKUPVPN":    2,
		"RdrType_BACKUPVPNNQA": 3,
		"RdrType_DIRECT":       4,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[178].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[178]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 15, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar_DISABLE Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar_ENABLE  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar_name = map[int32]string{
		0: "QosHierarchicalCar_DISABLE",
		1: "QosHierarchicalCar_ENABLE",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar_value = map[string]int32{
		"QosHierarchicalCar_DISABLE": 0,
		"QosHierarchicalCar_ENABLE":  1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[179].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[179]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 16, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType_REDIRECTTUNNEL Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType_name = map[int32]string{
		0: "ActionType_REDIRECTTUNNEL",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType_value = map[string]int32{
		"ActionType_REDIRECTTUNNEL": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[180].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[180]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 17, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType_REDIRECTVPNGROUP Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType_name = map[int32]string{
		0: "ActionType_REDIRECTVPNGROUP",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType_value = map[string]int32{
		"ActionType_REDIRECTVPNGROUP": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[181].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[181]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 18, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType_REMARK8021P        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType_REMARKINNER8021P   Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType_REMARKIPDF         Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType_REMARKIPPRECEDENCE Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType = 3
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType_REMARKIPV4DSCP     Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType = 4
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType_REMARKIPV6DSCP     Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType = 5
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType_REMARKMPLSEXP      Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType = 6
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType_REMARKOUTER8021P   Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType = 7
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType_REMARKTOS          Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType = 8
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType_REMARKTTL          Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType = 9
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType_name = map[int32]string{
		0: "ActionType_REMARK8021P",
		1: "ActionType_REMARKINNER8021P",
		2: "ActionType_REMARKIPDF",
		3: "ActionType_REMARKIPPRECEDENCE",
		4: "ActionType_REMARKIPV4DSCP",
		5: "ActionType_REMARKIPV6DSCP",
		6: "ActionType_REMARKMPLSEXP",
		7: "ActionType_REMARKOUTER8021P",
		8: "ActionType_REMARKTOS",
		9: "ActionType_REMARKTTL",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType_value = map[string]int32{
		"ActionType_REMARK8021P":        0,
		"ActionType_REMARKINNER8021P":   1,
		"ActionType_REMARKIPDF":         2,
		"ActionType_REMARKIPPRECEDENCE": 3,
		"ActionType_REMARKIPV4DSCP":     4,
		"ActionType_REMARKIPV6DSCP":     5,
		"ActionType_REMARKMPLSEXP":      6,
		"ActionType_REMARKOUTER8021P":   7,
		"ActionType_REMARKTOS":          8,
		"ActionType_REMARKTTL":          9,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[182].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[182]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 19, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType_SERVICECLASS Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType_name = map[int32]string{
		0: "ActionType_SERVICECLASS",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType_value = map[string]int32{
		"ActionType_SERVICECLASS": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[183].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[183]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 20, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color_GREEN  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color_RED    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color_YELLOW Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color = 2
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color_name = map[int32]string{
		0: "Color_GREEN",
		1: "Color_RED",
		2: "Color_YELLOW",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color_value = map[string]int32{
		"Color_GREEN":  0,
		"Color_RED":    1,
		"Color_YELLOW": 2,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[184].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[184]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 20, 0, 1}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag_DISABLE Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag_ENABLE  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag_name = map[int32]string{
		0: "RemarkFlag_DISABLE",
		1: "RemarkFlag_ENABLE",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag_value = map[string]int32{
		"RemarkFlag_DISABLE": 0,
		"RemarkFlag_ENABLE":  1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[185].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[185]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 20, 0, 2}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass_AF1       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass_AF2       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass = 1
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass_AF3       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass = 2
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass_AF4       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass = 3
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass_BE        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass = 4
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass_CS6       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass = 5
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass_CS7       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass = 6
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass_EF        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass = 7
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass_NOTCONFIG Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass = 8
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[186].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[186]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 20, 0, 3}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType_BPS Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType_PPS Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType_name = map[int32]string{
		0: "StatisticsType_BPS",
		1: "StatisticsType_PPS",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType_value = map[string]int32{
		"StatisticsType_BPS": 0,
		"StatisticsType_PPS": 1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[187].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[187]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 21, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType_URPF Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType = 0
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType_name = map[int32]string{
		0: "ActionType_URPF",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType_value = map[string]int32{
		"ActionType_URPF": 0,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[188].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[188]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 22, 0, 0}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault_DISABLE Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault_ENABLE  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault_name = map[int32]string{
		0: "AllowDefault_DISABLE",
		1: "AllowDefault_ENABLE",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault_value = map[string]int32{
		"AllowDefault_DISABLE": 0,
		"AllowDefault_ENABLE":  1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[189].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[189]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 22, 0, 1}
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType int32

const (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType_LOOSE  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType = 0
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType_STRICT Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType = 1
)

// Enum value maps for Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType.
var (
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType_name = map[int32]string{
		0: "CheckType_LOOSE",
		1: "CheckType_STRICT",
	}
	Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType_value = map[string]int32{
		"CheckType_LOOSE":  0,
		"CheckType_STRICT": 1,
	}
)

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType) Enum() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType {
	p := new(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[190].Descriptor()
}

func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[190]
}

func (x Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType.Descriptor instead.
func (Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 22, 0, 2}
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_Operator int32

const (
	Qos_QosCbQos_QosClassifiers_QosClassifier_Operator_AND Qos_QosCbQos_QosClassifiers_QosClassifier_Operator = 0
	Qos_QosCbQos_QosClassifiers_QosClassifier_Operator_OR  Qos_QosCbQos_QosClassifiers_QosClassifier_Operator = 1
)

// Enum value maps for Qos_QosCbQos_QosClassifiers_QosClassifier_Operator.
var (
	Qos_QosCbQos_QosClassifiers_QosClassifier_Operator_name = map[int32]string{
		0: "Operator_AND",
		1: "Operator_OR",
	}
	Qos_QosCbQos_QosClassifiers_QosClassifier_Operator_value = map[string]int32{
		"Operator_AND": 0,
		"Operator_OR":  1,
	}
)

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_Operator) Enum() *Qos_QosCbQos_QosClassifiers_QosClassifier_Operator {
	p := new(Qos_QosCbQos_QosClassifiers_QosClassifier_Operator)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[191].Descriptor()
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_Operator) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[191]
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_Operator.Descriptor instead.
func (Qos_QosCbQos_QosClassifiers_QosClassifier_Operator) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 0}
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily int32

const (
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily_IPV4 Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily = 0
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily_IPV6 Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily = 1
)

// Enum value maps for Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily.
var (
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily_name = map[int32]string{
		0: "ProtoFamily_IPV4",
		1: "ProtoFamily_IPV6",
	}
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily_value = map[string]int32{
		"ProtoFamily_IPV4": 0,
		"ProtoFamily_IPV6": 1,
	}
)

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily) Enum() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily {
	p := new(Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[192].Descriptor()
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[192]
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily.Descriptor instead.
func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 4, 0, 0}
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType int32

const (
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType_DESTINATION Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType = 0
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType_SOURCE      Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType = 1
)

// Enum value maps for Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType.
var (
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType_name = map[int32]string{
		0: "AddressType_DESTINATION",
		1: "AddressType_SOURCE",
	}
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType_value = map[string]int32{
		"AddressType_DESTINATION": 0,
		"AddressType_SOURCE":      1,
	}
)

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType) Enum() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType {
	p := new(Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[193].Descriptor()
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[193]
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType.Descriptor instead.
func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 5, 0, 0}
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType int32

const (
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType_DESTINATION Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType = 0
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType_SOURCE      Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType = 1
)

// Enum value maps for Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType.
var (
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType_name = map[int32]string{
		0: "MacType_DESTINATION",
		1: "MacType_SOURCE",
	}
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType_value = map[string]int32{
		"MacType_DESTINATION": 0,
		"MacType_SOURCE":      1,
	}
)

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType) Enum() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType {
	p := new(Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[194].Descriptor()
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[194]
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType.Descriptor instead.
func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 6, 0, 0}
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType int32

const (
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType_X_8021P       Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType = 0
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType_DSCP          Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType = 1
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType_DSCP6         Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType = 2
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType_IPPRECEDENCE  Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType = 3
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType_MPLSEXP       Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType = 4
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType_SERVICE_CLASS Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType = 5
)

// Enum value maps for Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType.
var (
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType_name = map[int32]string{
		0: "PriorityType_X_8021P",
		1: "PriorityType_DSCP",
		2: "PriorityType_DSCP6",
		3: "PriorityType_IPPRECEDENCE",
		4: "PriorityType_MPLSEXP",
		5: "PriorityType_SERVICE_CLASS",
	}
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType_value = map[string]int32{
		"PriorityType_X_8021P":       0,
		"PriorityType_DSCP":          1,
		"PriorityType_DSCP6":         2,
		"PriorityType_IPPRECEDENCE":  3,
		"PriorityType_MPLSEXP":       4,
		"PriorityType_SERVICE_CLASS": 5,
	}
)

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType) Enum() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType {
	p := new(Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[195].Descriptor()
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[195]
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType.Descriptor instead.
func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 7, 0, 0}
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass int32

const (
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass_AF1 Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass = 0
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass_AF2 Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass = 1
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass_AF3 Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass = 2
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass_AF4 Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass = 3
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass_BE  Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass = 4
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass_CS6 Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass = 5
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass_CS7 Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass = 6
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass_EF  Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass = 7
)

// Enum value maps for Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass.
var (
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
	}
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1": 0,
		"ServiceClass_AF2": 1,
		"ServiceClass_AF3": 2,
		"ServiceClass_AF4": 3,
		"ServiceClass_BE":  4,
		"ServiceClass_CS6": 5,
		"ServiceClass_CS7": 6,
		"ServiceClass_EF":  7,
	}
)

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass) Enum() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass {
	p := new(Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[196].Descriptor()
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[196]
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass.Descriptor instead.
func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 7, 0, 1}
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily int32

const (
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily_IPV6 Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily = 0
)

// Enum value maps for Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily.
var (
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily_name = map[int32]string{
		0: "ProtoFamily_IPV6",
	}
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily_value = map[string]int32{
		"ProtoFamily_IPV6": 0,
	}
)

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily) Enum() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily {
	p := new(Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[197].Descriptor()
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[197]
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily.Descriptor instead.
func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 8, 0, 0}
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType int32

const (
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType_ACK         Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType = 0
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType_CWR         Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType = 1
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType_ECE         Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType = 2
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType_ESTABLISHED Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType = 3
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType_FIN         Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType = 4
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType_NOTCONFIG   Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType = 5
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType_NS          Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType = 6
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType_PSH         Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType = 7
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType_RST         Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType = 8
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType_SYN         Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType = 9
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType_URG         Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType = 10
)

// Enum value maps for Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType.
var (
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType_name = map[int32]string{
		0:  "BitMatchType_ACK",
		1:  "BitMatchType_CWR",
		2:  "BitMatchType_ECE",
		3:  "BitMatchType_ESTABLISHED",
		4:  "BitMatchType_FIN",
		5:  "BitMatchType_NOTCONFIG",
		6:  "BitMatchType_NS",
		7:  "BitMatchType_PSH",
		8:  "BitMatchType_RST",
		9:  "BitMatchType_SYN",
		10: "BitMatchType_URG",
	}
	Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType_value = map[string]int32{
		"BitMatchType_ACK":         0,
		"BitMatchType_CWR":         1,
		"BitMatchType_ECE":         2,
		"BitMatchType_ESTABLISHED": 3,
		"BitMatchType_FIN":         4,
		"BitMatchType_NOTCONFIG":   5,
		"BitMatchType_NS":          6,
		"BitMatchType_PSH":         7,
		"BitMatchType_RST":         8,
		"BitMatchType_SYN":         9,
		"BitMatchType_URG":         10,
	}
)

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType) Enum() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType {
	p := new(Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[198].Descriptor()
}

func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[198]
}

func (x Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType.Descriptor instead.
func (Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 9, 0, 0}
}

type Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode int32

const (
	Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode_DISABLE Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode = 0
	Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode_ENABLE  Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode = 1
)

// Enum value maps for Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode.
var (
	Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode_name = map[int32]string{
		0: "ShareMode_DISABLE",
		1: "ShareMode_ENABLE",
	}
	Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode_value = map[string]int32{
		"ShareMode_DISABLE": 0,
		"ShareMode_ENABLE":  1,
	}
)

func (x Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode) Enum() *Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode {
	p := new(Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[199].Descriptor()
}

func (Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[199]
}

func (x Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode.Descriptor instead.
func (Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 3, 0, 0}
}

type Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag int32

const (
	Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag_DISABLE Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag = 0
	Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag_ENABLE  Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag = 1
)

// Enum value maps for Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag.
var (
	Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag_name = map[int32]string{
		0: "StatFlag_DISABLE",
		1: "StatFlag_ENABLE",
	}
	Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag_value = map[string]int32{
		"StatFlag_DISABLE": 0,
		"StatFlag_ENABLE":  1,
	}
)

func (x Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag) Enum() *Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag {
	p := new(Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[200].Descriptor()
}

func (Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[200]
}

func (x Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag.Descriptor instead.
func (Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 3, 0, 1}
}

type Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType int32

const (
	Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType_SERVICEGROUP Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType = 0
	Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType_USERGROUP    Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType = 1
)

// Enum value maps for Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType.
var (
	Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType_name = map[int32]string{
		0: "GroupType_SERVICEGROUP",
		1: "GroupType_USERGROUP",
	}
	Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType_value = map[string]int32{
		"GroupType_SERVICEGROUP": 0,
		"GroupType_USERGROUP":    1,
	}
)

func (x Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType) Enum() *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType {
	p := new(Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[201].Descriptor()
}

func (Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[201]
}

func (x Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType.Descriptor instead.
func (Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 3, 0, 0, 0, 0}
}

type Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection int32

const (
	Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection_DESTINATION Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection = 0
	Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection_SOURCE      Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection = 1
)

// Enum value maps for Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection.
var (
	Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection_name = map[int32]string{
		0: "StreamDirection_DESTINATION",
		1: "StreamDirection_SOURCE",
	}
	Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection_value = map[string]int32{
		"StreamDirection_DESTINATION": 0,
		"StreamDirection_SOURCE":      1,
	}
)

func (x Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection) Enum() *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection {
	p := new(Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection)
	*p = x
	return p
}

func (x Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[202].Descriptor()
}

func (Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[202]
}

func (x Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection.Descriptor instead.
func (Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 3, 0, 0, 0, 1}
}

type Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction int32

const (
	Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction_IN_OUTBOUND Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction = 0
	Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction_INBOUND     Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction = 1
	Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction_OUTBOUND    Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction = 2
)

// Enum value maps for Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction.
var (
	Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction_name = map[int32]string{
		0: "Direction_IN_OUTBOUND",
		1: "Direction_INBOUND",
		2: "Direction_OUTBOUND",
	}
	Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction_value = map[string]int32{
		"Direction_IN_OUTBOUND": 0,
		"Direction_INBOUND":     1,
		"Direction_OUTBOUND":    2,
	}
)

func (x Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction) Enum() *Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction {
	p := new(Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction)
	*p = x
	return p
}

func (x Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[203].Descriptor()
}

func (Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[203]
}

func (x Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction.Descriptor instead.
func (Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7, 0, 0, 0, 0}
}

type Qos_QosDss_QosDs_QosBas_QosBa_BaType int32

const (
	Qos_QosDss_QosDs_QosBas_QosBa_BaType_X_8021P      Qos_QosDss_QosDs_QosBas_QosBa_BaType = 0
	Qos_QosDss_QosDs_QosBas_QosBa_BaType_IPDSCP       Qos_QosDss_QosDs_QosBas_QosBa_BaType = 1
	Qos_QosDss_QosDs_QosBas_QosBa_BaType_MPLSEXP      Qos_QosDss_QosDs_QosBas_QosBa_BaType = 2
	Qos_QosDss_QosDs_QosBas_QosBa_BaType_USERPRIORITY Qos_QosDss_QosDs_QosBas_QosBa_BaType = 3
)

// Enum value maps for Qos_QosDss_QosDs_QosBas_QosBa_BaType.
var (
	Qos_QosDss_QosDs_QosBas_QosBa_BaType_name = map[int32]string{
		0: "BaType_X_8021P",
		1: "BaType_IPDSCP",
		2: "BaType_MPLSEXP",
		3: "BaType_USERPRIORITY",
	}
	Qos_QosDss_QosDs_QosBas_QosBa_BaType_value = map[string]int32{
		"BaType_X_8021P":      0,
		"BaType_IPDSCP":       1,
		"BaType_MPLSEXP":      2,
		"BaType_USERPRIORITY": 3,
	}
)

func (x Qos_QosDss_QosDs_QosBas_QosBa_BaType) Enum() *Qos_QosDss_QosDs_QosBas_QosBa_BaType {
	p := new(Qos_QosDss_QosDs_QosBas_QosBa_BaType)
	*p = x
	return p
}

func (x Qos_QosDss_QosDs_QosBas_QosBa_BaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosDss_QosDs_QosBas_QosBa_BaType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[204].Descriptor()
}

func (Qos_QosDss_QosDs_QosBas_QosBa_BaType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[204]
}

func (x Qos_QosDss_QosDs_QosBas_QosBa_BaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosDss_QosDs_QosBas_QosBa_BaType.Descriptor instead.
func (Qos_QosDss_QosDs_QosBas_QosBa_BaType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7, 0, 1, 0, 0}
}

type Qos_QosDss_QosDs_QosBas_QosBa_Color int32

const (
	Qos_QosDss_QosDs_QosBas_QosBa_Color_GREEN  Qos_QosDss_QosDs_QosBas_QosBa_Color = 0
	Qos_QosDss_QosDs_QosBas_QosBa_Color_RED    Qos_QosDss_QosDs_QosBas_QosBa_Color = 1
	Qos_QosDss_QosDs_QosBas_QosBa_Color_YELLOW Qos_QosDss_QosDs_QosBas_QosBa_Color = 2
)

// Enum value maps for Qos_QosDss_QosDs_QosBas_QosBa_Color.
var (
	Qos_QosDss_QosDs_QosBas_QosBa_Color_name = map[int32]string{
		0: "Color_GREEN",
		1: "Color_RED",
		2: "Color_YELLOW",
	}
	Qos_QosDss_QosDs_QosBas_QosBa_Color_value = map[string]int32{
		"Color_GREEN":  0,
		"Color_RED":    1,
		"Color_YELLOW": 2,
	}
)

func (x Qos_QosDss_QosDs_QosBas_QosBa_Color) Enum() *Qos_QosDss_QosDs_QosBas_QosBa_Color {
	p := new(Qos_QosDss_QosDs_QosBas_QosBa_Color)
	*p = x
	return p
}

func (x Qos_QosDss_QosDs_QosBas_QosBa_Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosDss_QosDs_QosBas_QosBa_Color) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[205].Descriptor()
}

func (Qos_QosDss_QosDs_QosBas_QosBa_Color) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[205]
}

func (x Qos_QosDss_QosDs_QosBas_QosBa_Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosDss_QosDs_QosBas_QosBa_Color.Descriptor instead.
func (Qos_QosDss_QosDs_QosBas_QosBa_Color) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7, 0, 1, 0, 1}
}

type Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass int32

const (
	Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass_AF1       Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass = 0
	Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass_AF2       Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass = 1
	Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass_AF3       Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass = 2
	Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass_AF4       Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass = 3
	Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass_BE        Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass = 4
	Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass_CS6       Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass = 5
	Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass_CS7       Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass = 6
	Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass_EF        Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass = 7
	Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass_NOTCONFIG Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass = 8
)

// Enum value maps for Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass.
var (
	Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass) Enum() *Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass {
	p := new(Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[206].Descriptor()
}

func (Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[206]
}

func (x Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass.Descriptor instead.
func (Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7, 0, 1, 0, 2}
}

type Qos_QosDss_QosDs_QosPhbs_QosPhb_Color int32

const (
	Qos_QosDss_QosDs_QosPhbs_QosPhb_Color_GREEN  Qos_QosDss_QosDs_QosPhbs_QosPhb_Color = 0
	Qos_QosDss_QosDs_QosPhbs_QosPhb_Color_RED    Qos_QosDss_QosDs_QosPhbs_QosPhb_Color = 1
	Qos_QosDss_QosDs_QosPhbs_QosPhb_Color_YELLOW Qos_QosDss_QosDs_QosPhbs_QosPhb_Color = 2
)

// Enum value maps for Qos_QosDss_QosDs_QosPhbs_QosPhb_Color.
var (
	Qos_QosDss_QosDs_QosPhbs_QosPhb_Color_name = map[int32]string{
		0: "Color_GREEN",
		1: "Color_RED",
		2: "Color_YELLOW",
	}
	Qos_QosDss_QosDs_QosPhbs_QosPhb_Color_value = map[string]int32{
		"Color_GREEN":  0,
		"Color_RED":    1,
		"Color_YELLOW": 2,
	}
)

func (x Qos_QosDss_QosDs_QosPhbs_QosPhb_Color) Enum() *Qos_QosDss_QosDs_QosPhbs_QosPhb_Color {
	p := new(Qos_QosDss_QosDs_QosPhbs_QosPhb_Color)
	*p = x
	return p
}

func (x Qos_QosDss_QosDs_QosPhbs_QosPhb_Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosDss_QosDs_QosPhbs_QosPhb_Color) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[207].Descriptor()
}

func (Qos_QosDss_QosDs_QosPhbs_QosPhb_Color) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[207]
}

func (x Qos_QosDss_QosDs_QosPhbs_QosPhb_Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosDss_QosDs_QosPhbs_QosPhb_Color.Descriptor instead.
func (Qos_QosDss_QosDs_QosPhbs_QosPhb_Color) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7, 0, 2, 0, 0}
}

type Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType int32

const (
	Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType_X_8021P      Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType = 0
	Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType_IPDSCP       Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType = 1
	Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType_MPLSEXP      Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType = 2
	Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType_USERPRIORITY Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType = 3
)

// Enum value maps for Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType.
var (
	Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType_name = map[int32]string{
		0: "PhbType_X_8021P",
		1: "PhbType_IPDSCP",
		2: "PhbType_MPLSEXP",
		3: "PhbType_USERPRIORITY",
	}
	Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType_value = map[string]int32{
		"PhbType_X_8021P":      0,
		"PhbType_IPDSCP":       1,
		"PhbType_MPLSEXP":      2,
		"PhbType_USERPRIORITY": 3,
	}
)

func (x Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType) Enum() *Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType {
	p := new(Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType)
	*p = x
	return p
}

func (x Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[208].Descriptor()
}

func (Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[208]
}

func (x Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType.Descriptor instead.
func (Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7, 0, 2, 0, 1}
}

type Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass int32

const (
	Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass_AF1       Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass = 0
	Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass_AF2       Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass = 1
	Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass_AF3       Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass = 2
	Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass_AF4       Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass = 3
	Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass_BE        Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass = 4
	Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass_CS6       Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass = 5
	Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass_CS7       Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass = 6
	Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass_EF        Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass = 7
	Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass_NOTCONFIG Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass = 8
)

// Enum value maps for Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass.
var (
	Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass) Enum() *Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass {
	p := new(Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[209].Descriptor()
}

func (Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[209]
}

func (x Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass.Descriptor instead.
func (Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7, 0, 2, 0, 2}
}

type Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection int32

const (
	Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection_OUTBOUND Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection = 0
)

// Enum value maps for Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection.
var (
	Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection_name = map[int32]string{
		0: "Evpldirection_OUTBOUND",
	}
	Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection_value = map[string]int32{
		"Evpldirection_OUTBOUND": 0,
	}
)

func (x Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection) Enum() *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection {
	p := new(Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection)
	*p = x
	return p
}

func (x Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[210].Descriptor()
}

func (Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[210]
}

func (x Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection.Descriptor instead.
func (Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8, 0, 1, 0, 0}
}

type Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer int32

const (
	Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer_LINK Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer = 0
	Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer_NONE Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer = 1
)

// Enum value maps for Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer.
var (
	Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer_name = map[int32]string{
		0: "Evpllayer_LINK",
		1: "Evpllayer_NONE",
	}
	Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer_value = map[string]int32{
		"Evpllayer_LINK": 0,
		"Evpllayer_NONE": 1,
	}
)

func (x Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer) Enum() *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer {
	p := new(Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer)
	*p = x
	return p
}

func (x Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[211].Descriptor()
}

func (Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[211]
}

func (x Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer.Descriptor instead.
func (Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8, 0, 1, 0, 1}
}

type Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType int32

const (
	Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType_X_8021P Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType = 0
	Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType_DS      Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType = 1
)

// Enum value maps for Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType.
var (
	Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType_name = map[int32]string{
		0: "TrustevplType_X_8021P",
		1: "TrustevplType_DS",
	}
	Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType_value = map[string]int32{
		"TrustevplType_X_8021P": 0,
		"TrustevplType_DS":      1,
	}
)

func (x Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType) Enum() *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType {
	p := new(Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType)
	*p = x
	return p
}

func (x Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[212].Descriptor()
}

func (Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[212]
}

func (x Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType.Descriptor instead.
func (Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8, 0, 2, 0, 0}
}

type Qos_QosGlobalPolicys_QosGlobalPolicy_Direction int32

const (
	Qos_QosGlobalPolicys_QosGlobalPolicy_Direction_INBOUND  Qos_QosGlobalPolicys_QosGlobalPolicy_Direction = 0
	Qos_QosGlobalPolicys_QosGlobalPolicy_Direction_OUTBOUND Qos_QosGlobalPolicys_QosGlobalPolicy_Direction = 1
)

// Enum value maps for Qos_QosGlobalPolicys_QosGlobalPolicy_Direction.
var (
	Qos_QosGlobalPolicys_QosGlobalPolicy_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_QosGlobalPolicys_QosGlobalPolicy_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_QosGlobalPolicys_QosGlobalPolicy_Direction) Enum() *Qos_QosGlobalPolicys_QosGlobalPolicy_Direction {
	p := new(Qos_QosGlobalPolicys_QosGlobalPolicy_Direction)
	*p = x
	return p
}

func (x Qos_QosGlobalPolicys_QosGlobalPolicy_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosGlobalPolicys_QosGlobalPolicy_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[213].Descriptor()
}

func (Qos_QosGlobalPolicys_QosGlobalPolicy_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[213]
}

func (x Qos_QosGlobalPolicys_QosGlobalPolicy_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosGlobalPolicys_QosGlobalPolicy_Direction.Descriptor instead.
func (Qos_QosGlobalPolicys_QosGlobalPolicy_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 9, 0, 0}
}

type Qos_QosGlobalPolicys_QosGlobalPolicy_UclType int32

const (
	Qos_QosGlobalPolicys_QosGlobalPolicy_UclType_ACL Qos_QosGlobalPolicys_QosGlobalPolicy_UclType = 0
	Qos_QosGlobalPolicys_QosGlobalPolicy_UclType_UCL Qos_QosGlobalPolicys_QosGlobalPolicy_UclType = 1
)

// Enum value maps for Qos_QosGlobalPolicys_QosGlobalPolicy_UclType.
var (
	Qos_QosGlobalPolicys_QosGlobalPolicy_UclType_name = map[int32]string{
		0: "UclType_ACL",
		1: "UclType_UCL",
	}
	Qos_QosGlobalPolicys_QosGlobalPolicy_UclType_value = map[string]int32{
		"UclType_ACL": 0,
		"UclType_UCL": 1,
	}
)

func (x Qos_QosGlobalPolicys_QosGlobalPolicy_UclType) Enum() *Qos_QosGlobalPolicys_QosGlobalPolicy_UclType {
	p := new(Qos_QosGlobalPolicys_QosGlobalPolicy_UclType)
	*p = x
	return p
}

func (x Qos_QosGlobalPolicys_QosGlobalPolicy_UclType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosGlobalPolicys_QosGlobalPolicy_UclType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[214].Descriptor()
}

func (Qos_QosGlobalPolicys_QosGlobalPolicy_UclType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[214]
}

func (x Qos_QosGlobalPolicys_QosGlobalPolicy_UclType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosGlobalPolicys_QosGlobalPolicy_UclType.Descriptor instead.
func (Qos_QosGlobalPolicys_QosGlobalPolicy_UclType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 9, 0, 1}
}

type Qos_QosGlobalQppbs_QosGlobalQppb_Value int32

const (
	Qos_QosGlobalQppbs_QosGlobalQppb_Value_DESTINATION Qos_QosGlobalQppbs_QosGlobalQppb_Value = 0
	Qos_QosGlobalQppbs_QosGlobalQppb_Value_SOURCE      Qos_QosGlobalQppbs_QosGlobalQppb_Value = 1
)

// Enum value maps for Qos_QosGlobalQppbs_QosGlobalQppb_Value.
var (
	Qos_QosGlobalQppbs_QosGlobalQppb_Value_name = map[int32]string{
		0: "Value_DESTINATION",
		1: "Value_SOURCE",
	}
	Qos_QosGlobalQppbs_QosGlobalQppb_Value_value = map[string]int32{
		"Value_DESTINATION": 0,
		"Value_SOURCE":      1,
	}
)

func (x Qos_QosGlobalQppbs_QosGlobalQppb_Value) Enum() *Qos_QosGlobalQppbs_QosGlobalQppb_Value {
	p := new(Qos_QosGlobalQppbs_QosGlobalQppb_Value)
	*p = x
	return p
}

func (x Qos_QosGlobalQppbs_QosGlobalQppb_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosGlobalQppbs_QosGlobalQppb_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[215].Descriptor()
}

func (Qos_QosGlobalQppbs_QosGlobalQppb_Value) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[215]
}

func (x Qos_QosGlobalQppbs_QosGlobalQppb_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosGlobalQppbs_QosGlobalQppb_Value.Descriptor instead.
func (Qos_QosGlobalQppbs_QosGlobalQppb_Value) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 10, 0, 0}
}

type Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability int32

const (
	Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability_E Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability = 0
	Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability_M Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability = 1
	Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability_N Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability = 2
	Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability_S Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability = 3
	Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability_U Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability = 4
)

// Enum value maps for Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability.
var (
	Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability_name = map[int32]string{
		0: "Ability_E",
		1: "Ability_M",
		2: "Ability_N",
		3: "Ability_S",
		4: "Ability_U",
	}
	Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability_value = map[string]int32{
		"Ability_E": 0,
		"Ability_M": 1,
		"Ability_N": 2,
		"Ability_S": 3,
		"Ability_U": 4,
	}
)

func (x Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability) Enum() *Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability {
	p := new(Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability)
	*p = x
	return p
}

func (x Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[216].Descriptor()
}

func (Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[216]
}

func (x Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability.Descriptor instead.
func (Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 11, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType int32

const (
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType_NOT_CONFIG Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType = 0
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType_QINQ       Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType = 1
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType_USER_VLAN  Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType.
var (
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType_name = map[int32]string{
		0: "AnyOtherType_NOT_CONFIG",
		1: "AnyOtherType_QINQ",
		2: "AnyOtherType_USER_VLAN",
	}
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType_value = map[string]int32{
		"AnyOtherType_NOT_CONFIG": 0,
		"AnyOtherType_QINQ":       1,
		"AnyOtherType_USER_VLAN":  2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType) Enum() *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType {
	p := new(Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[217].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[217]
}

func (x Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 0, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction int32

const (
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction_ALL      Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction = 0
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction_INBOUND  Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction = 1
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction_OUTBOUND Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction.
var (
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction_name = map[int32]string{
		0: "Direction_ALL",
		1: "Direction_INBOUND",
		2: "Direction_OUTBOUND",
	}
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction_value = map[string]int32{
		"Direction_ALL":      0,
		"Direction_INBOUND":  1,
		"Direction_OUTBOUND": 2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction) Enum() *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction {
	p := new(Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[218].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[218]
}

func (x Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 0, 0, 1}
}

type Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType int32

const (
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType_ACCESS_LINE_ID Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType = 0
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType_CE_VID         Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType = 1
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType_NONE           Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType = 2
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType_OPTION82       Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType = 3
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType_PE_CE_VID      Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType = 4
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType_PE_VID         Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType = 5
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType_VLAN_ID        Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType = 6
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType.
var (
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType_name = map[int32]string{
		0: "IdentifyType_ACCESS_LINE_ID",
		1: "IdentifyType_CE_VID",
		2: "IdentifyType_NONE",
		3: "IdentifyType_OPTION82",
		4: "IdentifyType_PE_CE_VID",
		5: "IdentifyType_PE_VID",
		6: "IdentifyType_VLAN_ID",
	}
	Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType_value = map[string]int32{
		"IdentifyType_ACCESS_LINE_ID": 0,
		"IdentifyType_CE_VID":         1,
		"IdentifyType_NONE":           2,
		"IdentifyType_OPTION82":       3,
		"IdentifyType_PE_CE_VID":      4,
		"IdentifyType_PE_VID":         5,
		"IdentifyType_VLAN_ID":        6,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType) Enum() *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType {
	p := new(Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[219].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[219]
}

func (x Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 0, 0, 2}
}

type Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority int32

const (
	Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority_HIGH Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority = 0
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority.
var (
	Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority_name = map[int32]string{
		0: "Priority_HIGH",
	}
	Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority_value = map[string]int32{
		"Priority_HIGH": 0,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority) Enum() *Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority {
	p := new(Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[220].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[220]
}

func (x Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 1, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction int32

const (
	Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction_OUTBOUND Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction = 0
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction.
var (
	Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction_name = map[int32]string{
		0: "Direction_OUTBOUND",
	}
	Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction_value = map[string]int32{
		"Direction_OUTBOUND": 0,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction) Enum() *Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction {
	p := new(Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[221].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[221]
}

func (x Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 2, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass int32

const (
	Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass_AF1       Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass = 0
	Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass_AF2       Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass = 1
	Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass_AF3       Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass = 2
	Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass_AF4       Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass = 3
	Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass_BE        Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass = 4
	Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass_CS6       Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass = 5
	Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass_CS7       Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass = 6
	Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass_EF        Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass = 7
	Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass_NOTCONFIG Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass = 8
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass.
var (
	Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass) Enum() *Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass {
	p := new(Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[222].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[222]
}

func (x Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 3, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable int32

const (
	Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable_ENABLE Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable = 0
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable.
var (
	Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable_name = map[int32]string{
		0: "DeiEnable_ENABLE",
	}
	Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable_value = map[string]int32{
		"DeiEnable_ENABLE": 0,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable) Enum() *Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable {
	p := new(Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[223].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[223]
}

func (x Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 4, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType int32

const (
	Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType_CELL  Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType = 0
	Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType_FRAME Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType.
var (
	Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType_name = map[int32]string{
		0: "ModeType_CELL",
		1: "ModeType_FRAME",
	}
	Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType_value = map[string]int32{
		"ModeType_CELL":  0,
		"ModeType_FRAME": 1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType) Enum() *Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType {
	p := new(Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[224].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[224]
}

func (x Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 6, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction int32

const (
	Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction_INBOUND  Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction = 0
	Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction_OUTBOUND Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction.
var (
	Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction) Enum() *Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction {
	p := new(Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[225].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[225]
}

func (x Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 7, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection int32

const (
	Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection_INBOUND  Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection = 0
	Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection_OUTBOUND Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection.
var (
	Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection_name = map[int32]string{
		0: "GqDirection_INBOUND",
		1: "GqDirection_OUTBOUND",
	}
	Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection_value = map[string]int32{
		"GqDirection_INBOUND":  0,
		"GqDirection_OUTBOUND": 1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection) Enum() *Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection {
	p := new(Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[226].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[226]
}

func (x Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 8, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier int32

const (
	Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier_NONE Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier = 0
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier.
var (
	Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier_name = map[int32]string{
		0: "GqIdentifier_NONE",
	}
	Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier_value = map[string]int32{
		"GqIdentifier_NONE": 0,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier) Enum() *Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier {
	p := new(Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[227].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[227]
}

func (x Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 8, 0, 1}
}

type Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode int32

const (
	Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode_ACHARDPIPE_MODE Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode = 0
	Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode_EXCLUSIVE_MODE  Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode = 1
	Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode_SHARE_MODE      Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode.
var (
	Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode_name = map[int32]string{
		0: "QosHardPipeMode_ACHARDPIPE_MODE",
		1: "QosHardPipeMode_EXCLUSIVE_MODE",
		2: "QosHardPipeMode_SHARE_MODE",
	}
	Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode_value = map[string]int32{
		"QosHardPipeMode_ACHARDPIPE_MODE": 0,
		"QosHardPipeMode_EXCLUSIVE_MODE":  1,
		"QosHardPipeMode_SHARE_MODE":      2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode) Enum() *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode {
	p := new(Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[228].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[228]
}

func (x Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 9, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction int32

const (
	Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction_INBOUND  Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction = 0
	Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction_OUTBOUND Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction.
var (
	Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction) Enum() *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction {
	p := new(Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[229].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[229]
}

func (x Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 9, 0, 0, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction int32

const (
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction_INBOUND  Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction = 0
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction_OUTBOUND Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction.
var (
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction) Enum() *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction {
	p := new(Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[230].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[230]
}

func (x Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 10, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass int32

const (
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass_AF1       Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass = 0
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass_AF2       Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass = 1
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass_AF3       Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass = 2
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass_AF4       Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass = 3
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass_BE        Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass = 4
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass_CS6       Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass = 5
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass_CS7       Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass = 6
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass_EF        Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass = 7
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass_NOTCONFIG Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass = 8
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass.
var (
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass_name = map[int32]string{
		0: "ServicebdClass_AF1",
		1: "ServicebdClass_AF2",
		2: "ServicebdClass_AF3",
		3: "ServicebdClass_AF4",
		4: "ServicebdClass_BE",
		5: "ServicebdClass_CS6",
		6: "ServicebdClass_CS7",
		7: "ServicebdClass_EF",
		8: "ServicebdClass_NOTCONFIG",
	}
	Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass_value = map[string]int32{
		"ServicebdClass_AF1":       0,
		"ServicebdClass_AF2":       1,
		"ServicebdClass_AF3":       2,
		"ServicebdClass_AF4":       3,
		"ServicebdClass_BE":        4,
		"ServicebdClass_CS6":       5,
		"ServicebdClass_CS7":       6,
		"ServicebdClass_EF":        7,
		"ServicebdClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass) Enum() *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass {
	p := new(Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[231].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[231]
}

func (x Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 10, 0, 1}
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction_INBOUND  Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction = 0
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction_OUTBOUND Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction.
var (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction) Enum() *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[232].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[232]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction_DISCARD Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction = 0
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction_PASS    Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction.
var (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction_name = map[int32]string{
		0: "GreenAction_DISCARD",
		1: "GreenAction_PASS",
	}
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction_value = map[string]int32{
		"GreenAction_DISCARD": 0,
		"GreenAction_PASS":    1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction) Enum() *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[233].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[233]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 1}
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor_GREEN  Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor = 0
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor_RED    Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor = 1
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor_YELLOW Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor.
var (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor_name = map[int32]string{
		0: "GreenColor_GREEN",
		1: "GreenColor_RED",
		2: "GreenColor_YELLOW",
	}
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor_value = map[string]int32{
		"GreenColor_GREEN":  0,
		"GreenColor_RED":    1,
		"GreenColor_YELLOW": 2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor) Enum() *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[234].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[234]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 2}
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass_AF1       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass = 0
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass_AF2       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass = 1
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass_AF3       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass = 2
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass_AF4       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass = 3
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass_BE        Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass = 4
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass_CS6       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass = 5
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass_CS7       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass = 6
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass_EF        Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass = 7
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass_NOTCONFIG Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass = 8
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass.
var (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass_name = map[int32]string{
		0: "GreenServiceClass_AF1",
		1: "GreenServiceClass_AF2",
		2: "GreenServiceClass_AF3",
		3: "GreenServiceClass_AF4",
		4: "GreenServiceClass_BE",
		5: "GreenServiceClass_CS6",
		6: "GreenServiceClass_CS7",
		7: "GreenServiceClass_EF",
		8: "GreenServiceClass_NOTCONFIG",
	}
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass_value = map[string]int32{
		"GreenServiceClass_AF1":       0,
		"GreenServiceClass_AF2":       1,
		"GreenServiceClass_AF3":       2,
		"GreenServiceClass_AF4":       3,
		"GreenServiceClass_BE":        4,
		"GreenServiceClass_CS6":       5,
		"GreenServiceClass_CS7":       6,
		"GreenServiceClass_EF":        7,
		"GreenServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass) Enum() *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[235].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[235]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 3}
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier_CE_VID     Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier = 0
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier_NO         Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier = 1
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier_NONE       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier = 2
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier_VID        Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier = 3
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier_VID_CE_VID Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier = 4
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier.
var (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier_name = map[int32]string{
		0: "Identifier_CE_VID",
		1: "Identifier_NO",
		2: "Identifier_NONE",
		3: "Identifier_VID",
		4: "Identifier_VID_CE_VID",
	}
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier_value = map[string]int32{
		"Identifier_CE_VID":     0,
		"Identifier_NO":         1,
		"Identifier_NONE":       2,
		"Identifier_VID":        3,
		"Identifier_VID_CE_VID": 4,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier) Enum() *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[236].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[236]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 4}
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction_DISCARD Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction = 0
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction_PASS    Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction.
var (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction_name = map[int32]string{
		0: "RedAction_DISCARD",
		1: "RedAction_PASS",
	}
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction_value = map[string]int32{
		"RedAction_DISCARD": 0,
		"RedAction_PASS":    1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction) Enum() *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[237].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[237]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 5}
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor_GREEN  Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor = 0
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor_RED    Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor = 1
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor_YELLOW Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor.
var (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor_name = map[int32]string{
		0: "RedColor_GREEN",
		1: "RedColor_RED",
		2: "RedColor_YELLOW",
	}
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor_value = map[string]int32{
		"RedColor_GREEN":  0,
		"RedColor_RED":    1,
		"RedColor_YELLOW": 2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor) Enum() *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[238].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[238]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 6}
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass_AF1       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass = 0
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass_AF2       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass = 1
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass_AF3       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass = 2
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass_AF4       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass = 3
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass_BE        Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass = 4
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass_CS6       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass = 5
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass_CS7       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass = 6
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass_EF        Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass = 7
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass_NOTCONFIG Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass = 8
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass.
var (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass_name = map[int32]string{
		0: "RedServiceClass_AF1",
		1: "RedServiceClass_AF2",
		2: "RedServiceClass_AF3",
		3: "RedServiceClass_AF4",
		4: "RedServiceClass_BE",
		5: "RedServiceClass_CS6",
		6: "RedServiceClass_CS7",
		7: "RedServiceClass_EF",
		8: "RedServiceClass_NOTCONFIG",
	}
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass_value = map[string]int32{
		"RedServiceClass_AF1":       0,
		"RedServiceClass_AF2":       1,
		"RedServiceClass_AF3":       2,
		"RedServiceClass_AF4":       3,
		"RedServiceClass_BE":        4,
		"RedServiceClass_CS6":       5,
		"RedServiceClass_CS7":       6,
		"RedServiceClass_EF":        7,
		"RedServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass) Enum() *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[239].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[239]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 7}
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction_DISCARD Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction = 0
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction_PASS    Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction.
var (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction_name = map[int32]string{
		0: "YellowAction_DISCARD",
		1: "YellowAction_PASS",
	}
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction_value = map[string]int32{
		"YellowAction_DISCARD": 0,
		"YellowAction_PASS":    1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction) Enum() *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[240].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[240]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 8}
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor_GREEN  Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor = 0
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor_RED    Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor = 1
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor_YELLOW Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor.
var (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor_name = map[int32]string{
		0: "YellowColor_GREEN",
		1: "YellowColor_RED",
		2: "YellowColor_YELLOW",
	}
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor_value = map[string]int32{
		"YellowColor_GREEN":  0,
		"YellowColor_RED":    1,
		"YellowColor_YELLOW": 2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor) Enum() *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[241].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[241]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 9}
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass_AF1       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass = 0
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass_AF2       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass = 1
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass_AF3       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass = 2
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass_AF4       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass = 3
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass_BE        Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass = 4
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass_CS6       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass = 5
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass_CS7       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass = 6
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass_EF        Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass = 7
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass_NOTCONFIG Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass = 8
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass.
var (
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass_name = map[int32]string{
		0: "YellowServiceClass_AF1",
		1: "YellowServiceClass_AF2",
		2: "YellowServiceClass_AF3",
		3: "YellowServiceClass_AF4",
		4: "YellowServiceClass_BE",
		5: "YellowServiceClass_CS6",
		6: "YellowServiceClass_CS7",
		7: "YellowServiceClass_EF",
		8: "YellowServiceClass_NOTCONFIG",
	}
	Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass_value = map[string]int32{
		"YellowServiceClass_AF1":       0,
		"YellowServiceClass_AF2":       1,
		"YellowServiceClass_AF3":       2,
		"YellowServiceClass_AF4":       3,
		"YellowServiceClass_BE":        4,
		"YellowServiceClass_CS6":       5,
		"YellowServiceClass_CS7":       6,
		"YellowServiceClass_EF":        7,
		"YellowServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass) Enum() *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[242].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[242]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 10}
}

type Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType_DSCP        Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType = 0
	Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType_INNER_8021P Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType = 1
	Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType_MPLS_EXP    Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType = 2
	Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType_NONE        Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType = 3
	Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType_OUTER_8021P Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType = 4
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType.
var (
	Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType_name = map[int32]string{
		0: "MapType_DSCP",
		1: "MapType_INNER_8021P",
		2: "MapType_MPLS_EXP",
		3: "MapType_NONE",
		4: "MapType_OUTER_8021P",
	}
	Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType_value = map[string]int32{
		"MapType_DSCP":        0,
		"MapType_INNER_8021P": 1,
		"MapType_MPLS_EXP":    2,
		"MapType_NONE":        3,
		"MapType_OUTER_8021P": 4,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType) Enum() *Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[243].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[243]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 12, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType_DISABLE Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType = 0
	Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType_ENABLE  Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType.
var (
	Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType_name = map[int32]string{
		0: "OperateType_DISABLE",
		1: "OperateType_ENABLE",
	}
	Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType_value = map[string]int32{
		"OperateType_DISABLE": 0,
		"OperateType_ENABLE":  1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType) Enum() *Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[244].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[244]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 12, 0, 1}
}

type Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID_DISABLE Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID = 0
	Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID_ENABLE  Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID.
var (
	Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID_name = map[int32]string{
		0: "LocalID_DISABLE",
		1: "LocalID_ENABLE",
	}
	Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID_value = map[string]int32{
		"LocalID_DISABLE": 0,
		"LocalID_ENABLE":  1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID) Enum() *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[245].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[245]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 13, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode_INBOUND      Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode = 0
	Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode_IPPRECEDENCE Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode = 1
	Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode_OUTBOUND     Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode.
var (
	Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode_name = map[int32]string{
		0: "Mode_INBOUND",
		1: "Mode_IPPRECEDENCE",
		2: "Mode_OUTBOUND",
	}
	Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode_value = map[string]int32{
		"Mode_INBOUND":      0,
		"Mode_IPPRECEDENCE": 1,
		"Mode_OUTBOUND":     2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode) Enum() *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[246].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[246]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 13, 0, 1}
}

type Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value_DESTINATION Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value = 0
	Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value_SOURCE      Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value.
var (
	Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value_name = map[int32]string{
		0: "Value_DESTINATION",
		1: "Value_SOURCE",
	}
	Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value_value = map[string]int32{
		"Value_DESTINATION": 0,
		"Value_SOURCE":      1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value) Enum() *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[247].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[247]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 13, 0, 2}
}

type Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType_IN_OUTBOUND Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType = 0
	Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType_INBOUND     Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType = 1
	Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType_OUTBOUND    Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType.
var (
	Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType_name = map[int32]string{
		0: "DirectType_IN_OUTBOUND",
		1: "DirectType_INBOUND",
		2: "DirectType_OUTBOUND",
	}
	Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType_value = map[string]int32{
		"DirectType_IN_OUTBOUND": 0,
		"DirectType_INBOUND":     1,
		"DirectType_OUTBOUND":    2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType) Enum() *Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[248].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[248]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 14, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType int32

const (
	Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType_X_8021P     Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType = 0
	Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType_DS          Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType = 1
	Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType_INNER_8021P Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType = 2
	Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType_OUTER_8021P Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType = 3
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType.
var (
	Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType_name = map[int32]string{
		0: "TrustType_X_8021P",
		1: "TrustType_DS",
		2: "TrustType_INNER_8021P",
		3: "TrustType_OUTER_8021P",
	}
	Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType_value = map[string]int32{
		"TrustType_X_8021P":     0,
		"TrustType_DS":          1,
		"TrustType_INNER_8021P": 2,
		"TrustType_OUTER_8021P": 3,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType) Enum() *Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType {
	p := new(Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[249].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[249]
}

func (x Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 14, 0, 1}
}

type Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype int32

const (
	Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype_LDP_TRAFFIC Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype = 0
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype.
var (
	Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype_name = map[int32]string{
		0: "Traffictype_LDP_TRAFFIC",
	}
	Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype_value = map[string]int32{
		"Traffictype_LDP_TRAFFIC": 0,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype) Enum() *Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype {
	p := new(Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[250].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[250]
}

func (x Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 15, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction int32

const (
	Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction_INBOUND  Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction = 0
	Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction_OUTBOUND Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction.
var (
	Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction) Enum() *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction {
	p := new(Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[251].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[251]
}

func (x Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 17, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode int32

const (
	Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode_DISTRIBUTE Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode = 0
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode.
var (
	Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode_name = map[int32]string{
		0: "Mode_DISTRIBUTE",
	}
	Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode_value = map[string]int32{
		"Mode_DISTRIBUTE": 0,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode) Enum() *Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode {
	p := new(Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[252].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[252]
}

func (x Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 18, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType int32

const (
	Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType_PORTQUEUE   Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType = 0
	Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType_PORTSHAPING Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType = 1
	Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType_PROFILECAR  Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType = 2
	Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType_QOSCAR      Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType = 3
	Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType_TRAFFICCAR  Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType = 4
	Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType_USERQUEUE   Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType = 5
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType.
var (
	Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType_name = map[int32]string{
		0: "QosType_PORTQUEUE",
		1: "QosType_PORTSHAPING",
		2: "QosType_PROFILECAR",
		3: "QosType_QOSCAR",
		4: "QosType_TRAFFICCAR",
		5: "QosType_USERQUEUE",
	}
	Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType_value = map[string]int32{
		"QosType_PORTQUEUE":   0,
		"QosType_PORTSHAPING": 1,
		"QosType_PROFILECAR":  2,
		"QosType_QOSCAR":      3,
		"QosType_TRAFFICCAR":  4,
		"QosType_USERQUEUE":   5,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType) Enum() *Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType {
	p := new(Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[253].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[253]
}

func (x Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 18, 0, 1}
}

type Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType int32

const (
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType_DROPBYTES     Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType = 0
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType_DROPPKTS      Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType = 1
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType_DROPPKTSRATIO Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType.
var (
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType_name = map[int32]string{
		0: "DiscardType_DROPBYTES",
		1: "DiscardType_DROPPKTS",
		2: "DiscardType_DROPPKTSRATIO",
	}
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType_value = map[string]int32{
		"DiscardType_DROPBYTES":     0,
		"DiscardType_DROPPKTS":      1,
		"DiscardType_DROPPKTSRATIO": 2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType) Enum() *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType {
	p := new(Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[254].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[254]
}

func (x Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 20, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass int32

const (
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass_AF1 Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass = 0
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass_AF2 Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass = 1
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass_AF3 Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass = 2
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass_AF4 Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass = 3
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass_BE  Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass = 4
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass_CS6 Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass = 5
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass_CS7 Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass = 6
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass_EF  Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass = 7
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass.
var (
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
	}
	Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1": 0,
		"ServiceClass_AF2": 1,
		"ServiceClass_AF3": 2,
		"ServiceClass_AF4": 3,
		"ServiceClass_BE":  4,
		"ServiceClass_CS6": 5,
		"ServiceClass_CS7": 6,
		"ServiceClass_EF":  7,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass) Enum() *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass {
	p := new(Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[255].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[255]
}

func (x Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 20, 0, 1}
}

type Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction int32

const (
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction_INBOUND  Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction = 0
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction_OUTBOUND Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction.
var (
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction) Enum() *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction {
	p := new(Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[256].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[256]
}

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 21, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier int32

const (
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier_CE_VID     Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier = 0
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier_NO         Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier = 1
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier_NONE       Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier = 2
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier_VID        Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier = 3
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier_VID_CE_VID Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier = 4
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier.
var (
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier_name = map[int32]string{
		0: "Identifier_CE_VID",
		1: "Identifier_NO",
		2: "Identifier_NONE",
		3: "Identifier_VID",
		4: "Identifier_VID_CE_VID",
	}
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier_value = map[string]int32{
		"Identifier_CE_VID":     0,
		"Identifier_NO":         1,
		"Identifier_NONE":       2,
		"Identifier_VID":        3,
		"Identifier_VID_CE_VID": 4,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier) Enum() *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier {
	p := new(Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[257].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[257]
}

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 21, 0, 1}
}

type Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer int32

const (
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer_ALL  Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer = 0
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer_LINK Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer = 1
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer_MPLS Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer = 2
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer_NONE Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer = 3
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer.
var (
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer_name = map[int32]string{
		0: "Layer_ALL",
		1: "Layer_LINK",
		2: "Layer_MPLS",
		3: "Layer_NONE",
	}
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer_value = map[string]int32{
		"Layer_ALL":  0,
		"Layer_LINK": 1,
		"Layer_MPLS": 2,
		"Layer_NONE": 3,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer) Enum() *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer {
	p := new(Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[258].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[258]
}

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 21, 0, 2}
}

type Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass int32

const (
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass_AF1   Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass = 0
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass_AF2   Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass = 1
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass_AF3   Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass = 2
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass_AF4   Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass = 3
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass_BE    Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass = 4
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass_CS6   Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass = 5
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass_CS7   Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass = 6
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass_EF    Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass = 7
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass_TOTAL Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass = 8
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass.
var (
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_TOTAL",
	}
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":   0,
		"ServiceClass_AF2":   1,
		"ServiceClass_AF3":   2,
		"ServiceClass_AF4":   3,
		"ServiceClass_BE":    4,
		"ServiceClass_CS6":   5,
		"ServiceClass_CS7":   6,
		"ServiceClass_EF":    7,
		"ServiceClass_TOTAL": 8,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass) Enum() *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass {
	p := new(Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[259].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[259]
}

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 21, 0, 0, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction int32

const (
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction_DESTINATION Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction = 0
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction_SOURCE      Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction.
var (
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction_name = map[int32]string{
		0: "Direction_DESTINATION",
		1: "Direction_SOURCE",
	}
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction_value = map[string]int32{
		"Direction_DESTINATION": 0,
		"Direction_SOURCE":      1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction) Enum() *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction {
	p := new(Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[260].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[260]
}

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 21, 0, 1, 0, 0, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol int32

const (
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol_IPV4 Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol = 0
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol_IPV6 Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol.
var (
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol_name = map[int32]string{
		0: "Protocol_IPV4",
		1: "Protocol_IPV6",
	}
	Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol_value = map[string]int32{
		"Protocol_IPV4": 0,
		"Protocol_IPV6": 1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol) Enum() *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol {
	p := new(Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[261].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[261]
}

func (x Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 21, 0, 1, 0, 0, 0, 1}
}

type Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass int32

const (
	Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass_AF1 Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass = 0
	Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass_AF2 Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass = 1
	Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass_AF3 Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass = 2
	Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass_AF4 Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass = 3
	Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass_BE  Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass = 4
	Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass_CS6 Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass = 5
	Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass_CS7 Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass = 6
	Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass_EF  Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass = 7
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass.
var (
	Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
	}
	Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1": 0,
		"ServiceClass_AF2": 1,
		"ServiceClass_AF3": 2,
		"ServiceClass_AF4": 3,
		"ServiceClass_BE":  4,
		"ServiceClass_CS6": 5,
		"ServiceClass_CS7": 6,
		"ServiceClass_EF":  7,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass) Enum() *Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass {
	p := new(Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[262].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[262]
}

func (x Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 22, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency int32

const (
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency_DISABLE Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency = 0
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency_ENABLE  Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency.
var (
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency_name = map[int32]string{
		0: "Lowlatency_DISABLE",
		1: "Lowlatency_ENABLE",
	}
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency_value = map[string]int32{
		"Lowlatency_DISABLE": 0,
		"Lowlatency_ENABLE":  1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency) Enum() *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency {
	p := new(Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[263].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[263]
}

func (x Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 23, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode int32

const (
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode_LPQ Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode = 0
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode_PQ  Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode = 1
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode_WFQ Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode.
var (
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode_name = map[int32]string{
		0: "QueueScheduleMode_LPQ",
		1: "QueueScheduleMode_PQ",
		2: "QueueScheduleMode_WFQ",
	}
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode_value = map[string]int32{
		"QueueScheduleMode_LPQ": 0,
		"QueueScheduleMode_PQ":  1,
		"QueueScheduleMode_WFQ": 2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode) Enum() *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode {
	p := new(Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[264].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[264]
}

func (x Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 23, 0, 1}
}

type Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass int32

const (
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass_AF1 Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass = 0
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass_AF2 Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass = 1
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass_AF3 Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass = 2
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass_AF4 Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass = 3
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass_BE  Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass = 4
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass_CS6 Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass = 5
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass_CS7 Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass = 6
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass_EF  Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass = 7
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass.
var (
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
	}
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1": 0,
		"ServiceClass_AF2": 1,
		"ServiceClass_AF3": 2,
		"ServiceClass_AF4": 3,
		"ServiceClass_BE":  4,
		"ServiceClass_CS6": 5,
		"ServiceClass_CS7": 6,
		"ServiceClass_EF":  7,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass) Enum() *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass {
	p := new(Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[265].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[265]
}

func (x Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 23, 0, 2}
}

type Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard int32

const (
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard_NO  Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard = 0
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard_YES Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard.
var (
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard_name = map[int32]string{
		0: "Isonboard_NO",
		1: "Isonboard_YES",
	}
	Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard_value = map[string]int32{
		"Isonboard_NO":  0,
		"Isonboard_YES": 1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard) Enum() *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard {
	p := new(Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[266].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[266]
}

func (x Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 23, 0, 0, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType int32

const (
	Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType_X_256K Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType = 0
	Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType_X_512K Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType = 1
	Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType_OTHER  Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType.
var (
	Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType_name = map[int32]string{
		0: "ShapingType_X_256K",
		1: "ShapingType_X_512K",
		2: "ShapingType_OTHER",
	}
	Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType_value = map[string]int32{
		"ShapingType_X_256K": 0,
		"ShapingType_X_512K": 1,
		"ShapingType_OTHER":  2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType) Enum() *Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType {
	p := new(Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[267].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[267]
}

func (x Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 24, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority int32

const (
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority_LPQ Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority = 0
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority_PQ  Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority = 1
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority_WFQ Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority.
var (
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority_name = map[int32]string{
		0: "Priority_LPQ",
		1: "Priority_PQ",
		2: "Priority_WFQ",
	}
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority_value = map[string]int32{
		"Priority_LPQ": 0,
		"Priority_PQ":  1,
		"Priority_WFQ": 2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority) Enum() *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority {
	p := new(Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[268].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[268]
}

func (x Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 25, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass int32

const (
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass_AF1 Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass = 0
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass_AF2 Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass = 1
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass_AF3 Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass = 2
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass_AF4 Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass = 3
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass_BE  Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass = 4
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass_CS6 Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass = 5
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass_CS7 Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass = 6
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass_EF  Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass = 7
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass.
var (
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
	}
	Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1": 0,
		"ServiceClass_AF2": 1,
		"ServiceClass_AF3": 2,
		"ServiceClass_AF4": 3,
		"ServiceClass_BE":  4,
		"ServiceClass_CS6": 5,
		"ServiceClass_CS7": 6,
		"ServiceClass_EF":  7,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass) Enum() *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass {
	p := new(Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[269].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[269]
}

func (x Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 25, 0, 1}
}

type Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass int32

const (
	Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass_AF1       Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass = 0
	Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass_AF2       Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass = 1
	Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass_AF3       Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass = 2
	Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass_AF4       Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass = 3
	Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass_BE        Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass = 4
	Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass_CS6       Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass = 5
	Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass_CS7       Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass = 6
	Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass_EF        Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass = 7
	Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass_NOTCONFIG Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass = 8
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass.
var (
	Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass) Enum() *Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass {
	p := new(Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[270].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[270]
}

func (x Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 26, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch int32

const (
	Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch_AF1       Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch = 0
	Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch_AF2       Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch = 1
	Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch_AF3       Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch = 2
	Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch_AF4       Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch = 3
	Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch_BE        Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch = 4
	Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch_CS6       Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch = 5
	Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch_CS7       Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch = 6
	Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch_EF        Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch = 7
	Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch_NOTCONFIG Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch = 8
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch.
var (
	Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch_name = map[int32]string{
		0: "ServicebdClasssch_AF1",
		1: "ServicebdClasssch_AF2",
		2: "ServicebdClasssch_AF3",
		3: "ServicebdClasssch_AF4",
		4: "ServicebdClasssch_BE",
		5: "ServicebdClasssch_CS6",
		6: "ServicebdClasssch_CS7",
		7: "ServicebdClasssch_EF",
		8: "ServicebdClasssch_NOTCONFIG",
	}
	Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch_value = map[string]int32{
		"ServicebdClasssch_AF1":       0,
		"ServicebdClasssch_AF2":       1,
		"ServicebdClasssch_AF3":       2,
		"ServicebdClasssch_AF4":       3,
		"ServicebdClasssch_BE":        4,
		"ServicebdClasssch_CS6":       5,
		"ServicebdClasssch_CS7":       6,
		"ServicebdClasssch_EF":        7,
		"ServicebdClasssch_NOTCONFIG": 8,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch) Enum() *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch {
	p := new(Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[271].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[271]
}

func (x Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 28, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction int32

const (
	Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction_INBOUND  Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction = 0
	Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction_OUTBOUND Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction.
var (
	Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction) Enum() *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction {
	p := new(Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[272].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[272]
}

func (x Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 29, 0, 0}
}

type Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan int32

const (
	Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan_NO  Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan = 0
	Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan_YES Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan.
var (
	Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan_name = map[int32]string{
		0: "Eachvlan_NO",
		1: "Eachvlan_YES",
	}
	Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan_value = map[string]int32{
		"Eachvlan_NO":  0,
		"Eachvlan_YES": 1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan) Enum() *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan {
	p := new(Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[273].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[273]
}

func (x Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 29, 0, 1}
}

type Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType int32

const (
	Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType_DOT1Q Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType = 0
	Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType_QINQ  Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType = 1
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType.
var (
	Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType_name = map[int32]string{
		0: "VlanType_DOT1Q",
		1: "VlanType_QINQ",
	}
	Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType_value = map[string]int32{
		"VlanType_DOT1Q": 0,
		"VlanType_QINQ":  1,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType) Enum() *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType {
	p := new(Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[274].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[274]
}

func (x Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 29, 0, 2}
}

type Qos_QosIfQoss_QosIfQos_QosVllPipe_Color int32

const (
	Qos_QosIfQoss_QosIfQos_QosVllPipe_Color_GREEN  Qos_QosIfQoss_QosIfQos_QosVllPipe_Color = 0
	Qos_QosIfQoss_QosIfQos_QosVllPipe_Color_RED    Qos_QosIfQoss_QosIfQos_QosVllPipe_Color = 1
	Qos_QosIfQoss_QosIfQos_QosVllPipe_Color_YELLOW Qos_QosIfQoss_QosIfQos_QosVllPipe_Color = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosVllPipe_Color.
var (
	Qos_QosIfQoss_QosIfQos_QosVllPipe_Color_name = map[int32]string{
		0: "Color_GREEN",
		1: "Color_RED",
		2: "Color_YELLOW",
	}
	Qos_QosIfQoss_QosIfQos_QosVllPipe_Color_value = map[string]int32{
		"Color_GREEN":  0,
		"Color_RED":    1,
		"Color_YELLOW": 2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_Color) Enum() *Qos_QosIfQoss_QosIfQos_QosVllPipe_Color {
	p := new(Qos_QosIfQoss_QosIfQos_QosVllPipe_Color)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosVllPipe_Color) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[275].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosVllPipe_Color) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[275]
}

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosVllPipe_Color.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosVllPipe_Color) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 30, 0}
}

type Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode int32

const (
	Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode_PIPE      Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode = 0
	Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode_SHORTPIPE Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode = 1
	Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode_UNIFORM   Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode.
var (
	Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode_name = map[int32]string{
		0: "EgPipeMode_PIPE",
		1: "EgPipeMode_SHORTPIPE",
		2: "EgPipeMode_UNIFORM",
	}
	Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode_value = map[string]int32{
		"EgPipeMode_PIPE":      0,
		"EgPipeMode_SHORTPIPE": 1,
		"EgPipeMode_UNIFORM":   2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode) Enum() *Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode {
	p := new(Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[276].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[276]
}

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 30, 1}
}

type Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode int32

const (
	Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode_PIPE      Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode = 0
	Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode_SHORTPIPE Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode = 1
	Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode_UNIFORM   Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode.
var (
	Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode_name = map[int32]string{
		0: "IngPipeMode_PIPE",
		1: "IngPipeMode_SHORTPIPE",
		2: "IngPipeMode_UNIFORM",
	}
	Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode_value = map[string]int32{
		"IngPipeMode_PIPE":      0,
		"IngPipeMode_SHORTPIPE": 1,
		"IngPipeMode_UNIFORM":   2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode) Enum() *Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode {
	p := new(Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[277].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[277]
}

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 30, 2}
}

type Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode int32

const (
	Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode_PIPE      Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode = 0
	Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode_SHORTPIPE Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode = 1
	Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode_UNIFORM   Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode.
var (
	Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode_name = map[int32]string{
		0: "PipeMode_PIPE",
		1: "PipeMode_SHORTPIPE",
		2: "PipeMode_UNIFORM",
	}
	Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode_value = map[string]int32{
		"PipeMode_PIPE":      0,
		"PipeMode_SHORTPIPE": 1,
		"PipeMode_UNIFORM":   2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode) Enum() *Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode {
	p := new(Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[278].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[278]
}

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 30, 3}
}

type Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass int32

const (
	Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass_AF1 Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass = 0
	Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass_AF2 Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass = 1
	Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass_AF3 Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass = 2
	Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass_AF4 Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass = 3
	Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass_BE  Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass = 4
	Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass_CS6 Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass = 5
	Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass_CS7 Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass = 6
	Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass_EF  Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass = 7
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass.
var (
	Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
	}
	Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1": 0,
		"ServiceClass_AF2": 1,
		"ServiceClass_AF3": 2,
		"ServiceClass_AF4": 3,
		"ServiceClass_BE":  4,
		"ServiceClass_CS6": 5,
		"ServiceClass_CS7": 6,
		"ServiceClass_EF":  7,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass) Enum() *Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass {
	p := new(Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[279].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[279]
}

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 30, 4}
}

type Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType int32

const (
	Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType_INPRI  Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType = 0
	Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType_IPDSCP Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType = 1
	Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType_OUTPRI Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType.
var (
	Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType_name = map[int32]string{
		0: "TrustType_INPRI",
		1: "TrustType_IPDSCP",
		2: "TrustType_OUTPRI",
	}
	Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType_value = map[string]int32{
		"TrustType_INPRI":  0,
		"TrustType_IPDSCP": 1,
		"TrustType_OUTPRI": 2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType) Enum() *Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType {
	p := new(Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[280].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[280]
}

func (x Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 30, 5}
}

type Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority int32

const (
	Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority_LPQ Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority = 0
	Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority_PQ  Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority = 1
	Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority_WFQ Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority = 2
)

// Enum value maps for Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority.
var (
	Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority_name = map[int32]string{
		0: "Priority_LPQ",
		1: "Priority_PQ",
		2: "Priority_WFQ",
	}
	Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority_value = map[string]int32{
		"Priority_LPQ": 0,
		"Priority_PQ":  1,
		"Priority_WFQ": 2,
	}
)

func (x Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority) Enum() *Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority {
	p := new(Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority)
	*p = x
	return p
}

func (x Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[281].Descriptor()
}

func (Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[281]
}

func (x Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority.Descriptor instead.
func (Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 31, 0, 0}
}

type Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction int32

const (
	Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction_INBOUND  Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction = 0
	Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction_OUTBOUND Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction = 1
)

// Enum value maps for Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction.
var (
	Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction) Enum() *Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction {
	p := new(Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction)
	*p = x
	return p
}

func (x Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[282].Descriptor()
}

func (Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[282]
}

func (x Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction.Descriptor instead.
func (Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 13, 0, 0}
}

type Qos_QosIfQppbCfgs_QosIfQppbCfg_State int32

const (
	Qos_QosIfQppbCfgs_QosIfQppbCfg_State_ACTIVE   Qos_QosIfQppbCfgs_QosIfQppbCfg_State = 0
	Qos_QosIfQppbCfgs_QosIfQppbCfg_State_ACTIVE_P Qos_QosIfQppbCfgs_QosIfQppbCfg_State = 1
	Qos_QosIfQppbCfgs_QosIfQppbCfg_State_INACTIVE Qos_QosIfQppbCfgs_QosIfQppbCfg_State = 2
)

// Enum value maps for Qos_QosIfQppbCfgs_QosIfQppbCfg_State.
var (
	Qos_QosIfQppbCfgs_QosIfQppbCfg_State_name = map[int32]string{
		0: "State_ACTIVE",
		1: "State_ACTIVE_P",
		2: "State_INACTIVE",
	}
	Qos_QosIfQppbCfgs_QosIfQppbCfg_State_value = map[string]int32{
		"State_ACTIVE":   0,
		"State_ACTIVE_P": 1,
		"State_INACTIVE": 2,
	}
)

func (x Qos_QosIfQppbCfgs_QosIfQppbCfg_State) Enum() *Qos_QosIfQppbCfgs_QosIfQppbCfg_State {
	p := new(Qos_QosIfQppbCfgs_QosIfQppbCfg_State)
	*p = x
	return p
}

func (x Qos_QosIfQppbCfgs_QosIfQppbCfg_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosIfQppbCfgs_QosIfQppbCfg_State) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[283].Descriptor()
}

func (Qos_QosIfQppbCfgs_QosIfQppbCfg_State) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[283]
}

func (x Qos_QosIfQppbCfgs_QosIfQppbCfg_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosIfQppbCfgs_QosIfQppbCfg_State.Descriptor instead.
func (Qos_QosIfQppbCfgs_QosIfQppbCfg_State) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 13, 0, 1}
}

type Qos_QosInfUsers_QosInfUser_Direction int32

const (
	Qos_QosInfUsers_QosInfUser_Direction_INBOUND  Qos_QosInfUsers_QosInfUser_Direction = 0
	Qos_QosInfUsers_QosInfUser_Direction_OUTBOUND Qos_QosInfUsers_QosInfUser_Direction = 1
)

// Enum value maps for Qos_QosInfUsers_QosInfUser_Direction.
var (
	Qos_QosInfUsers_QosInfUser_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_QosInfUsers_QosInfUser_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_QosInfUsers_QosInfUser_Direction) Enum() *Qos_QosInfUsers_QosInfUser_Direction {
	p := new(Qos_QosInfUsers_QosInfUser_Direction)
	*p = x
	return p
}

func (x Qos_QosInfUsers_QosInfUser_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosInfUsers_QosInfUser_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[284].Descriptor()
}

func (Qos_QosInfUsers_QosInfUser_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[284]
}

func (x Qos_QosInfUsers_QosInfUser_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosInfUsers_QosInfUser_Direction.Descriptor instead.
func (Qos_QosInfUsers_QosInfUser_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 14, 0, 0}
}

type Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType int32

const (
	Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType_CAR     Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType = 0
	Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType_L2CAR   Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType = 1
	Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType_L2L3CAR Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType = 2
	Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType_L3CAR   Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType = 3
	Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType_SQ      Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType = 4
	Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType_SQCAR   Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType = 5
	Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType_NULL    Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType = 6
)

// Enum value maps for Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType.
var (
	Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType_name = map[int32]string{
		0: "ResType_CAR",
		1: "ResType_L2CAR",
		2: "ResType_L2L3CAR",
		3: "ResType_L3CAR",
		4: "ResType_SQ",
		5: "ResType_SQCAR",
		6: "ResType_NULL",
	}
	Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType_value = map[string]int32{
		"ResType_CAR":     0,
		"ResType_L2CAR":   1,
		"ResType_L2L3CAR": 2,
		"ResType_L3CAR":   3,
		"ResType_SQ":      4,
		"ResType_SQCAR":   5,
		"ResType_NULL":    6,
	}
)

func (x Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType) Enum() *Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType {
	p := new(Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType)
	*p = x
	return p
}

func (x Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[285].Descriptor()
}

func (Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[285]
}

func (x Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType.Descriptor instead.
func (Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 14, 0, 0, 0, 0}
}

type Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass int32

const (
	Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass_AF1   Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass = 0
	Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass_AF2   Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass = 1
	Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass_AF3   Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass = 2
	Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass_AF4   Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass = 3
	Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass_BE    Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass = 4
	Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass_CS6   Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass = 5
	Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass_CS7   Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass = 6
	Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass_EF    Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass = 7
	Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass_TOTAL Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass = 8
)

// Enum value maps for Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass.
var (
	Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_TOTAL",
	}
	Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":   0,
		"ServiceClass_AF2":   1,
		"ServiceClass_AF3":   2,
		"ServiceClass_AF4":   3,
		"ServiceClass_BE":    4,
		"ServiceClass_CS6":   5,
		"ServiceClass_CS7":   6,
		"ServiceClass_EF":    7,
		"ServiceClass_TOTAL": 8,
	}
)

func (x Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass) Enum() *Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass {
	p := new(Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[286].Descriptor()
}

func (Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[286]
}

func (x Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass.Descriptor instead.
func (Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 14, 0, 1, 0, 0}
}

type Qos_QosLowLaEns_QosLowLaEn_EnableType int32

const (
	Qos_QosLowLaEns_QosLowLaEn_EnableType_FLOWQUEUE      Qos_QosLowLaEns_QosLowLaEn_EnableType = 0
	Qos_QosLowLaEns_QosLowLaEn_EnableType_SUBPORTQUEUE   Qos_QosLowLaEns_QosLowLaEn_EnableType = 1
	Qos_QosLowLaEns_QosLowLaEn_EnableType_USERGROUPQUEUE Qos_QosLowLaEns_QosLowLaEn_EnableType = 2
)

// Enum value maps for Qos_QosLowLaEns_QosLowLaEn_EnableType.
var (
	Qos_QosLowLaEns_QosLowLaEn_EnableType_name = map[int32]string{
		0: "EnableType_FLOWQUEUE",
		1: "EnableType_SUBPORTQUEUE",
		2: "EnableType_USERGROUPQUEUE",
	}
	Qos_QosLowLaEns_QosLowLaEn_EnableType_value = map[string]int32{
		"EnableType_FLOWQUEUE":      0,
		"EnableType_SUBPORTQUEUE":   1,
		"EnableType_USERGROUPQUEUE": 2,
	}
)

func (x Qos_QosLowLaEns_QosLowLaEn_EnableType) Enum() *Qos_QosLowLaEns_QosLowLaEn_EnableType {
	p := new(Qos_QosLowLaEns_QosLowLaEn_EnableType)
	*p = x
	return p
}

func (x Qos_QosLowLaEns_QosLowLaEn_EnableType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLowLaEns_QosLowLaEn_EnableType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[287].Descriptor()
}

func (Qos_QosLowLaEns_QosLowLaEn_EnableType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[287]
}

func (x Qos_QosLowLaEns_QosLowLaEn_EnableType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLowLaEns_QosLowLaEn_EnableType.Descriptor instead.
func (Qos_QosLowLaEns_QosLowLaEn_EnableType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 15, 0, 0}
}

type Qos_QosLowLaEns_QosLowLaEn_EnableValue int32

const (
	Qos_QosLowLaEns_QosLowLaEn_EnableValue_ENABLE Qos_QosLowLaEns_QosLowLaEn_EnableValue = 0
)

// Enum value maps for Qos_QosLowLaEns_QosLowLaEn_EnableValue.
var (
	Qos_QosLowLaEns_QosLowLaEn_EnableValue_name = map[int32]string{
		0: "EnableValue_ENABLE",
	}
	Qos_QosLowLaEns_QosLowLaEn_EnableValue_value = map[string]int32{
		"EnableValue_ENABLE": 0,
	}
)

func (x Qos_QosLowLaEns_QosLowLaEn_EnableValue) Enum() *Qos_QosLowLaEns_QosLowLaEn_EnableValue {
	p := new(Qos_QosLowLaEns_QosLowLaEn_EnableValue)
	*p = x
	return p
}

func (x Qos_QosLowLaEns_QosLowLaEn_EnableValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLowLaEns_QosLowLaEn_EnableValue) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[288].Descriptor()
}

func (Qos_QosLowLaEns_QosLowLaEn_EnableValue) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[288]
}

func (x Qos_QosLowLaEns_QosLowLaEn_EnableValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLowLaEns_QosLowLaEn_EnableValue.Descriptor instead.
func (Qos_QosLowLaEns_QosLowLaEn_EnableValue) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 15, 0, 1}
}

type Qos_QosLsIfQoss_QosLsIfQos_IfPhyType int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_IfPhyType_ATM             Qos_QosLsIfQoss_QosLsIfQos_IfPhyType = 0
	Qos_QosLsIfQoss_QosLsIfQos_IfPhyType_GLOBAL_MP_GROUP Qos_QosLsIfQoss_QosLsIfQos_IfPhyType = 1
	Qos_QosLsIfQoss_QosLsIfQos_IfPhyType_MP_GROUP        Qos_QosLsIfQoss_QosLsIfQos_IfPhyType = 2
	Qos_QosLsIfQoss_QosLsIfQos_IfPhyType_SERIAL          Qos_QosLsIfQoss_QosLsIfQos_IfPhyType = 3
	Qos_QosLsIfQoss_QosLsIfQos_IfPhyType_TRUNK_SERIAL    Qos_QosLsIfQoss_QosLsIfQos_IfPhyType = 4
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_IfPhyType.
var (
	Qos_QosLsIfQoss_QosLsIfQos_IfPhyType_name = map[int32]string{
		0: "IfPhyType_ATM",
		1: "IfPhyType_GLOBAL_MP_GROUP",
		2: "IfPhyType_MP_GROUP",
		3: "IfPhyType_SERIAL",
		4: "IfPhyType_TRUNK_SERIAL",
	}
	Qos_QosLsIfQoss_QosLsIfQos_IfPhyType_value = map[string]int32{
		"IfPhyType_ATM":             0,
		"IfPhyType_GLOBAL_MP_GROUP": 1,
		"IfPhyType_MP_GROUP":        2,
		"IfPhyType_SERIAL":          3,
		"IfPhyType_TRUNK_SERIAL":    4,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_IfPhyType) Enum() *Qos_QosLsIfQoss_QosLsIfQos_IfPhyType {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_IfPhyType)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_IfPhyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_IfPhyType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[289].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_IfPhyType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[289]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_IfPhyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_IfPhyType.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_IfPhyType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0}
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode_NOT_CONFIG  Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode = 0
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode_PIR_PERCENT Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode = 1
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode_PIR_VALUE   Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode = 2
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode.
var (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode_name = map[int32]string{
		0: "PirSetMode_NOT_CONFIG",
		1: "PirSetMode_PIR_PERCENT",
		2: "PirSetMode_PIR_VALUE",
	}
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode_value = map[string]int32{
		"PirSetMode_NOT_CONFIG":  0,
		"PirSetMode_PIR_PERCENT": 1,
		"PirSetMode_PIR_VALUE":   2,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode) Enum() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[290].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[290]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0, 0, 0, 0, 0}
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode_PQ  Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode = 0
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode_WFQ Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode = 1
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode.
var (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode_name = map[int32]string{
		0: "PvcQueueMode_PQ",
		1: "PvcQueueMode_WFQ",
	}
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode_value = map[string]int32{
		"PvcQueueMode_PQ":  0,
		"PvcQueueMode_WFQ": 1,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode) Enum() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[291].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[291]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0, 0, 0, 0, 1}
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass_AF1       Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass = 0
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass_AF2       Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass = 1
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass_AF3       Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass = 2
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass_AF4       Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass = 3
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass_BE        Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass = 4
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass_CS6       Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass = 5
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass_CS7       Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass = 6
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass_EF        Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass = 7
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass_NOTCONFIG Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass = 8
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass.
var (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass) Enum() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[292].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[292]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0, 0, 0, 0, 2}
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass_AF1       Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass = 0
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass_AF2       Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass = 1
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass_AF3       Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass = 2
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass_AF4       Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass = 3
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass_BE        Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass = 4
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass_CS6       Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass = 5
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass_CS7       Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass = 6
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass_EF        Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass = 7
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass_NOTCONFIG Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass = 8
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass.
var (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass) Enum() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[293].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[293]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0, 0, 1, 0}
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor_GREEN  Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor = 0
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor_RED    Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor = 1
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor_YELLOW Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor = 2
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor.
var (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor_name = map[int32]string{
		0: "TrafficQColor_GREEN",
		1: "TrafficQColor_RED",
		2: "TrafficQColor_YELLOW",
	}
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor_value = map[string]int32{
		"TrafficQColor_GREEN":  0,
		"TrafficQColor_RED":    1,
		"TrafficQColor_YELLOW": 2,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor) Enum() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[294].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[294]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0, 0, 1, 1}
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode_DISABLE Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode = 0
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode_ENABLE  Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode = 1
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode.
var (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode_name = map[int32]string{
		0: "TrafficQMode_DISABLE",
		1: "TrafficQMode_ENABLE",
	}
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode_value = map[string]int32{
		"TrafficQMode_DISABLE": 0,
		"TrafficQMode_ENABLE":  1,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode) Enum() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[295].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[295]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0, 0, 1, 2}
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType_IN_OUTBOUND Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType = 0
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType_INBOUND     Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType = 1
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType_OUTBOUND    Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType = 2
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType.
var (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType_name = map[int32]string{
		0: "DirectType_IN_OUTBOUND",
		1: "DirectType_INBOUND",
		2: "DirectType_OUTBOUND",
	}
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType_value = map[string]int32{
		"DirectType_IN_OUTBOUND": 0,
		"DirectType_INBOUND":     1,
		"DirectType_OUTBOUND":    2,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType) Enum() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[296].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[296]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0, 0, 2, 0, 0}
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass_AF1       Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass = 0
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass_AF2       Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass = 1
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass_AF3       Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass = 2
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass_AF4       Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass = 3
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass_BE        Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass = 4
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass_CS6       Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass = 5
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass_CS7       Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass = 6
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass_EF        Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass = 7
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass_NOTCONFIG Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass = 8
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass.
var (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass) Enum() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[297].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[297]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 1, 0, 0, 0}
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor_GREEN  Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor = 0
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor_RED    Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor = 1
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor_YELLOW Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor = 2
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor.
var (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor_name = map[int32]string{
		0: "TrafficQColor_GREEN",
		1: "TrafficQColor_RED",
		2: "TrafficQColor_YELLOW",
	}
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor_value = map[string]int32{
		"TrafficQColor_GREEN":  0,
		"TrafficQColor_RED":    1,
		"TrafficQColor_YELLOW": 2,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor) Enum() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[298].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[298]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 1, 0, 0, 1}
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode_DISABLE Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode = 0
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode_ENABLE  Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode = 1
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode.
var (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode_name = map[int32]string{
		0: "TrafficQMode_DISABLE",
		1: "TrafficQMode_ENABLE",
	}
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode_value = map[string]int32{
		"TrafficQMode_DISABLE": 0,
		"TrafficQMode_ENABLE":  1,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode) Enum() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[299].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[299]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 1, 0, 0, 2}
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType_IN_OUTBOUND Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType = 0
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType_INBOUND     Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType = 1
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType_OUTBOUND    Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType = 2
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType.
var (
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType_name = map[int32]string{
		0: "DirectType_IN_OUTBOUND",
		1: "DirectType_INBOUND",
		2: "DirectType_OUTBOUND",
	}
	Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType_value = map[string]int32{
		"DirectType_IN_OUTBOUND": 0,
		"DirectType_INBOUND":     1,
		"DirectType_OUTBOUND":    2,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType) Enum() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[300].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[300]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 1, 0, 1, 0, 0}
}

type Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass_AF1       Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass = 0
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass_AF2       Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass = 1
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass_AF3       Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass = 2
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass_AF4       Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass = 3
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass_BE        Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass = 4
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass_CS6       Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass = 5
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass_CS7       Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass = 6
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass_EF        Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass = 7
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass_NOTCONFIG Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass = 8
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass.
var (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass) Enum() *Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[301].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[301]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 2, 0}
}

type Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor_GREEN  Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor = 0
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor_RED    Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor = 1
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor_YELLOW Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor = 2
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor.
var (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor_name = map[int32]string{
		0: "TrafficQColor_GREEN",
		1: "TrafficQColor_RED",
		2: "TrafficQColor_YELLOW",
	}
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor_value = map[string]int32{
		"TrafficQColor_GREEN":  0,
		"TrafficQColor_RED":    1,
		"TrafficQColor_YELLOW": 2,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor) Enum() *Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[302].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[302]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 2, 1}
}

type Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode_DISABLE Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode = 0
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode_ENABLE  Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode = 1
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode.
var (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode_name = map[int32]string{
		0: "TrafficQMode_DISABLE",
		1: "TrafficQMode_ENABLE",
	}
	Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode_value = map[string]int32{
		"TrafficQMode_DISABLE": 0,
		"TrafficQMode_ENABLE":  1,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode) Enum() *Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[303].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[303]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 2, 2}
}

type Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode_CIR_PERCENT Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode = 0
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode_CIR_VALUE   Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode = 1
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode_NOT_CONFIG  Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode = 2
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode.
var (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode_name = map[int32]string{
		0: "CirMode_CIR_PERCENT",
		1: "CirMode_CIR_VALUE",
		2: "CirMode_NOT_CONFIG",
	}
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode_value = map[string]int32{
		"CirMode_CIR_PERCENT": 0,
		"CirMode_CIR_VALUE":   1,
		"CirMode_NOT_CONFIG":  2,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode) Enum() *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[304].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[304]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 3, 0, 0}
}

type Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType_NEW_CONFIGURE    Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType = 0
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType_RESET_QUEUELIMIT Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType = 1
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType_RESET_SHAPING    Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType = 2
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType.
var (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType_name = map[int32]string{
		0: "OperType_NEW_CONFIGURE",
		1: "OperType_RESET_QUEUELIMIT",
		2: "OperType_RESET_SHAPING",
	}
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType_value = map[string]int32{
		"OperType_NEW_CONFIGURE":    0,
		"OperType_RESET_QUEUELIMIT": 1,
		"OperType_RESET_SHAPING":    2,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType) Enum() *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[305].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[305]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 3, 0, 1}
}

type Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode_NOT_CONFIG  Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode = 0
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode_PIR_PERCENT Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode = 1
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode_PIR_VALUE   Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode = 2
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode.
var (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode_name = map[int32]string{
		0: "PirMode_NOT_CONFIG",
		1: "PirMode_PIR_PERCENT",
		2: "PirMode_PIR_VALUE",
	}
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode_value = map[string]int32{
		"PirMode_NOT_CONFIG":  0,
		"PirMode_PIR_PERCENT": 1,
		"PirMode_PIR_VALUE":   2,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode) Enum() *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[306].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[306]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 3, 0, 2}
}

type Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode_PQ  Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode = 0
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode_WFQ Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode = 1
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode.
var (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode_name = map[int32]string{
		0: "ScheduleMode_PQ",
		1: "ScheduleMode_WFQ",
	}
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode_value = map[string]int32{
		"ScheduleMode_PQ":  0,
		"ScheduleMode_WFQ": 1,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode) Enum() *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[307].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[307]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 3, 0, 3}
}

type Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass int32

const (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass_AF1       Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass = 0
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass_AF2       Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass = 1
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass_AF3       Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass = 2
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass_AF4       Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass = 3
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass_BE        Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass = 4
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass_CS6       Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass = 5
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass_CS7       Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass = 6
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass_EF        Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass = 7
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass_NOTCONFIG Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass = 8
)

// Enum value maps for Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass.
var (
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass) Enum() *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass {
	p := new(Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[308].Descriptor()
}

func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[308]
}

func (x Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass.Descriptor instead.
func (Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 3, 0, 4}
}

type Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec int32

const (
	Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec_DISABLE Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec = 0
	Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec_ENABLE  Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec = 1
)

// Enum value maps for Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec.
var (
	Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec_name = map[int32]string{
		0: "QosLsPortQueueWeightSpec_DISABLE",
		1: "QosLsPortQueueWeightSpec_ENABLE",
	}
	Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec_value = map[string]int32{
		"QosLsPortQueueWeightSpec_DISABLE": 0,
		"QosLsPortQueueWeightSpec_ENABLE":  1,
	}
)

func (x Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec) Enum() *Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec {
	p := new(Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec)
	*p = x
	return p
}

func (x Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[309].Descriptor()
}

func (Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[309]
}

func (x Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec.Descriptor instead.
func (Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 17, 0}
}

type Qos_QosPQschedules_QosPQschedule_QosDirection int32

const (
	Qos_QosPQschedules_QosPQschedule_QosDirection_INBOUND  Qos_QosPQschedules_QosPQschedule_QosDirection = 0
	Qos_QosPQschedules_QosPQschedule_QosDirection_OUTBOUND Qos_QosPQschedules_QosPQschedule_QosDirection = 1
)

// Enum value maps for Qos_QosPQschedules_QosPQschedule_QosDirection.
var (
	Qos_QosPQschedules_QosPQschedule_QosDirection_name = map[int32]string{
		0: "QosDirection_INBOUND",
		1: "QosDirection_OUTBOUND",
	}
	Qos_QosPQschedules_QosPQschedule_QosDirection_value = map[string]int32{
		"QosDirection_INBOUND":  0,
		"QosDirection_OUTBOUND": 1,
	}
)

func (x Qos_QosPQschedules_QosPQschedule_QosDirection) Enum() *Qos_QosPQschedules_QosPQschedule_QosDirection {
	p := new(Qos_QosPQschedules_QosPQschedule_QosDirection)
	*p = x
	return p
}

func (x Qos_QosPQschedules_QosPQschedule_QosDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosPQschedules_QosPQschedule_QosDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[310].Descriptor()
}

func (Qos_QosPQschedules_QosPQschedule_QosDirection) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[310]
}

func (x Qos_QosPQschedules_QosPQschedule_QosDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosPQschedules_QosPQschedule_QosDirection.Descriptor instead.
func (Qos_QosPQschedules_QosPQschedule_QosDirection) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 18, 0, 0}
}

type Qos_QosPQschedules_QosPQschedule_QosMode int32

const (
	Qos_QosPQschedules_QosPQschedule_QosMode_HIGH Qos_QosPQschedules_QosPQschedule_QosMode = 0
	Qos_QosPQschedules_QosPQschedule_QosMode_LOW  Qos_QosPQschedules_QosPQschedule_QosMode = 1
)

// Enum value maps for Qos_QosPQschedules_QosPQschedule_QosMode.
var (
	Qos_QosPQschedules_QosPQschedule_QosMode_name = map[int32]string{
		0: "QosMode_HIGH",
		1: "QosMode_LOW",
	}
	Qos_QosPQschedules_QosPQschedule_QosMode_value = map[string]int32{
		"QosMode_HIGH": 0,
		"QosMode_LOW":  1,
	}
)

func (x Qos_QosPQschedules_QosPQschedule_QosMode) Enum() *Qos_QosPQschedules_QosPQschedule_QosMode {
	p := new(Qos_QosPQschedules_QosPQschedule_QosMode)
	*p = x
	return p
}

func (x Qos_QosPQschedules_QosPQschedule_QosMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosPQschedules_QosPQschedule_QosMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[311].Descriptor()
}

func (Qos_QosPQschedules_QosPQschedule_QosMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[311]
}

func (x Qos_QosPQschedules_QosPQschedule_QosMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosPQschedules_QosPQschedule_QosMode.Descriptor instead.
func (Qos_QosPQschedules_QosPQschedule_QosMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 18, 0, 1}
}

type Qos_QosPackEnables_QosPackEnable_EnableType int32

const (
	Qos_QosPackEnables_QosPackEnable_EnableType_DISABLE Qos_QosPackEnables_QosPackEnable_EnableType = 0
	Qos_QosPackEnables_QosPackEnable_EnableType_ENABLE  Qos_QosPackEnables_QosPackEnable_EnableType = 1
)

// Enum value maps for Qos_QosPackEnables_QosPackEnable_EnableType.
var (
	Qos_QosPackEnables_QosPackEnable_EnableType_name = map[int32]string{
		0: "EnableType_DISABLE",
		1: "EnableType_ENABLE",
	}
	Qos_QosPackEnables_QosPackEnable_EnableType_value = map[string]int32{
		"EnableType_DISABLE": 0,
		"EnableType_ENABLE":  1,
	}
)

func (x Qos_QosPackEnables_QosPackEnable_EnableType) Enum() *Qos_QosPackEnables_QosPackEnable_EnableType {
	p := new(Qos_QosPackEnables_QosPackEnable_EnableType)
	*p = x
	return p
}

func (x Qos_QosPackEnables_QosPackEnable_EnableType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosPackEnables_QosPackEnable_EnableType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[312].Descriptor()
}

func (Qos_QosPackEnables_QosPackEnable_EnableType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[312]
}

func (x Qos_QosPackEnables_QosPackEnable_EnableType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosPackEnables_QosPackEnable_EnableType.Descriptor instead.
func (Qos_QosPackEnables_QosPackEnable_EnableType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 19, 0, 0}
}

type Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType int32

const (
	Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType_AF1   Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType = 0
	Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType_AF2   Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType = 1
	Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType_AF3   Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType = 2
	Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType_AF4   Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType = 3
	Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType_BE    Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType = 4
	Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType_CS6   Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType = 5
	Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType_CS7   Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType = 6
	Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType_EF    Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType = 7
	Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType_TOTAL Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType = 8
)

// Enum value maps for Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType.
var (
	Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType_name = map[int32]string{
		0: "QueueType_AF1",
		1: "QueueType_AF2",
		2: "QueueType_AF3",
		3: "QueueType_AF4",
		4: "QueueType_BE",
		5: "QueueType_CS6",
		6: "QueueType_CS7",
		7: "QueueType_EF",
		8: "QueueType_TOTAL",
	}
	Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType_value = map[string]int32{
		"QueueType_AF1":   0,
		"QueueType_AF2":   1,
		"QueueType_AF3":   2,
		"QueueType_AF4":   3,
		"QueueType_BE":    4,
		"QueueType_CS6":   5,
		"QueueType_CS7":   6,
		"QueueType_EF":    7,
		"QueueType_TOTAL": 8,
	}
)

func (x Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType) Enum() *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType {
	p := new(Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType)
	*p = x
	return p
}

func (x Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[313].Descriptor()
}

func (Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[313]
}

func (x Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType.Descriptor instead.
func (Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 22, 0, 0}
}

type Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily int32

const (
	Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily_IPV4     Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily = 0
	Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily_IPV4IPV6 Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily = 1
	Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily_IPV6     Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily = 2
)

// Enum value maps for Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily.
var (
	Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily_name = map[int32]string{
		0: "IPFamily_IPV4",
		1: "IPFamily_IPV4IPV6",
		2: "IPFamily_IPV6",
	}
	Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily_value = map[string]int32{
		"IPFamily_IPV4":     0,
		"IPFamily_IPV4IPV6": 1,
		"IPFamily_IPV6":     2,
	}
)

func (x Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily) Enum() *Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily {
	p := new(Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily)
	*p = x
	return p
}

func (x Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[314].Descriptor()
}

func (Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[314]
}

func (x Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily.Descriptor instead.
func (Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 24, 0, 0}
}

type Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass int32

const (
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass_AF1       Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass = 0
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass_AF2       Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass = 1
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass_AF3       Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass = 2
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass_AF4       Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass = 3
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass_BE        Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass = 4
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass_CS6       Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass = 5
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass_CS7       Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass = 6
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass_EF        Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass = 7
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass_NOTCONFIG Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass = 8
)

// Enum value maps for Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass.
var (
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass) Enum() *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass {
	p := new(Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[315].Descriptor()
}

func (Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[315]
}

func (x Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass.Descriptor instead.
func (Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 25, 0, 0, 0, 0}
}

type Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType int32

const (
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType_IN_OUTBOUND Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType = 0
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType_INBOUND     Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType = 1
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType_OUTBOUND    Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType = 2
)

// Enum value maps for Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType.
var (
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType_name = map[int32]string{
		0: "DirectType_IN_OUTBOUND",
		1: "DirectType_INBOUND",
		2: "DirectType_OUTBOUND",
	}
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType_value = map[string]int32{
		"DirectType_IN_OUTBOUND": 0,
		"DirectType_INBOUND":     1,
		"DirectType_OUTBOUND":    2,
	}
)

func (x Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType) Enum() *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType {
	p := new(Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType)
	*p = x
	return p
}

func (x Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[316].Descriptor()
}

func (Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[316]
}

func (x Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType.Descriptor instead.
func (Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 25, 0, 1, 0, 0}
}

type Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad int32

const (
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad_DISABLE Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad = 0
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad_ENABLE  Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad = 1
)

// Enum value maps for Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad.
var (
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad_name = map[int32]string{
		0: "OffLoad_DISABLE",
		1: "OffLoad_ENABLE",
	}
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad_value = map[string]int32{
		"OffLoad_DISABLE": 0,
		"OffLoad_ENABLE":  1,
	}
)

func (x Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad) Enum() *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad {
	p := new(Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad)
	*p = x
	return p
}

func (x Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[317].Descriptor()
}

func (Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[317]
}

func (x Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad.Descriptor instead.
func (Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 25, 0, 1, 0, 1}
}

type Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType int32

const (
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType_X_8021P     Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType = 0
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType_DS          Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType = 1
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType_INNER_8021P Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType = 2
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType_OUTER_8021P Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType = 3
)

// Enum value maps for Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType.
var (
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType_name = map[int32]string{
		0: "TrustType_X_8021P",
		1: "TrustType_DS",
		2: "TrustType_INNER_8021P",
		3: "TrustType_OUTER_8021P",
	}
	Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType_value = map[string]int32{
		"TrustType_X_8021P":     0,
		"TrustType_DS":          1,
		"TrustType_INNER_8021P": 2,
		"TrustType_OUTER_8021P": 3,
	}
)

func (x Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType) Enum() *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType {
	p := new(Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType)
	*p = x
	return p
}

func (x Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[318].Descriptor()
}

func (Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[318]
}

func (x Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType.Descriptor instead.
func (Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 25, 0, 1, 0, 2}
}

type Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType int32

const (
	Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType_BANDWIDTH Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType = 0
	Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType_QUANTITY  Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType = 1
)

// Enum value maps for Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType.
var (
	Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType_name = map[int32]string{
		0: "AlmType_BANDWIDTH",
		1: "AlmType_QUANTITY",
	}
	Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType_value = map[string]int32{
		"AlmType_BANDWIDTH": 0,
		"AlmType_QUANTITY":  1,
	}
)

func (x Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType) Enum() *Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType {
	p := new(Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType)
	*p = x
	return p
}

func (x Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[319].Descriptor()
}

func (Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[319]
}

func (x Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType.Descriptor instead.
func (Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 26, 0, 0}
}

type Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool int32

const (
	Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool_ALL    Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool = 0
	Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool_POOL_0 Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool = 1
	Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool_POOL_1 Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool = 2
)

// Enum value maps for Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool.
var (
	Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool_name = map[int32]string{
		0: "Pool_ALL",
		1: "Pool_POOL_0",
		2: "Pool_POOL_1",
	}
	Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool_value = map[string]int32{
		"Pool_ALL":    0,
		"Pool_POOL_0": 1,
		"Pool_POOL_1": 2,
	}
)

func (x Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool) Enum() *Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool {
	p := new(Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool)
	*p = x
	return p
}

func (x Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[320].Descriptor()
}

func (Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[320]
}

func (x Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool.Descriptor instead.
func (Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 26, 0, 1}
}

type Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown int32

const (
	Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown_DOWN Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown = 0
	Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown_UP   Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown = 1
)

// Enum value maps for Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown.
var (
	Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown_name = map[int32]string{
		0: "UpOrDown_DOWN",
		1: "UpOrDown_UP",
	}
	Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown_value = map[string]int32{
		"UpOrDown_DOWN": 0,
		"UpOrDown_UP":   1,
	}
)

func (x Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown) Enum() *Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown {
	p := new(Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown)
	*p = x
	return p
}

func (x Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[321].Descriptor()
}

func (Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[321]
}

func (x Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown.Descriptor instead.
func (Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 27, 0, 0}
}

type Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos int32

const (
	Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos_X_0 Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos = 0
	Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos_X_1 Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos = 1
	Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos_X_2 Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos = 2
	Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos_X_3 Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos = 3
	Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos_X_4 Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos = 4
)

// Enum value maps for Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos.
var (
	Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos_name = map[int32]string{
		0: "Cos_X_0",
		1: "Cos_X_1",
		2: "Cos_X_2",
		3: "Cos_X_3",
		4: "Cos_X_4",
	}
	Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos_value = map[string]int32{
		"Cos_X_0": 0,
		"Cos_X_1": 1,
		"Cos_X_2": 2,
		"Cos_X_3": 3,
		"Cos_X_4": 4,
	}
)

func (x Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos) Enum() *Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos {
	p := new(Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos)
	*p = x
	return p
}

func (x Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[322].Descriptor()
}

func (Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[322]
}

func (x Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos.Descriptor instead.
func (Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 29, 0, 0}
}

type Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority int32

const (
	Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority_HIGH Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority = 0
)

// Enum value maps for Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority.
var (
	Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority_name = map[int32]string{
		0: "Priority_HIGH",
	}
	Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority_value = map[string]int32{
		"Priority_HIGH": 0,
	}
)

func (x Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority) Enum() *Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority {
	p := new(Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority)
	*p = x
	return p
}

func (x Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[323].Descriptor()
}

func (Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[323]
}

func (x Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority.Descriptor instead.
func (Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 29, 0, 1}
}

type Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass int32

const (
	Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass_AF1 Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass = 0
	Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass_AF2 Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass = 1
	Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass_AF3 Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass = 2
	Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass_AF4 Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass = 3
	Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass_BE  Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass = 4
	Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass_CS6 Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass = 5
	Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass_CS7 Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass = 6
	Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass_EF  Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass = 7
)

// Enum value maps for Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass.
var (
	Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
	}
	Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1": 0,
		"ServiceClass_AF2": 1,
		"ServiceClass_AF3": 2,
		"ServiceClass_AF4": 3,
		"ServiceClass_BE":  4,
		"ServiceClass_CS6": 5,
		"ServiceClass_CS7": 6,
		"ServiceClass_EF":  7,
	}
)

func (x Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass) Enum() *Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass {
	p := new(Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[324].Descriptor()
}

func (Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[324]
}

func (x Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass.Descriptor instead.
func (Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 30, 0, 0}
}

type Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType int32

const (
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType_DROPBYTES     Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType = 0
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType_DROPPKTS      Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType = 1
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType_DROPPKTSRATIO Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType = 2
)

// Enum value maps for Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType.
var (
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType_name = map[int32]string{
		0: "DiscardType_DROPBYTES",
		1: "DiscardType_DROPPKTS",
		2: "DiscardType_DROPPKTSRATIO",
	}
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType_value = map[string]int32{
		"DiscardType_DROPBYTES":     0,
		"DiscardType_DROPPKTS":      1,
		"DiscardType_DROPPKTSRATIO": 2,
	}
)

func (x Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType) Enum() *Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType {
	p := new(Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType)
	*p = x
	return p
}

func (x Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[325].Descriptor()
}

func (Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[325]
}

func (x Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType.Descriptor instead.
func (Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 31, 0, 0}
}

type Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass int32

const (
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass_AF1 Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass = 0
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass_AF2 Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass = 1
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass_AF3 Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass = 2
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass_AF4 Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass = 3
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass_BE  Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass = 4
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass_CS6 Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass = 5
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass_CS7 Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass = 6
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass_EF  Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass = 7
)

// Enum value maps for Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass.
var (
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
	}
	Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1": 0,
		"ServiceClass_AF2": 1,
		"ServiceClass_AF3": 2,
		"ServiceClass_AF4": 3,
		"ServiceClass_BE":  4,
		"ServiceClass_CS6": 5,
		"ServiceClass_CS7": 6,
		"ServiceClass_EF":  7,
	}
)

func (x Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass) Enum() *Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass {
	p := new(Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[326].Descriptor()
}

func (Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[326]
}

func (x Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass.Descriptor instead.
func (Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 31, 0, 1}
}

type Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable_ENABLE Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable = 0
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable.
var (
	Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable_name = map[int32]string{
		0: "QosEnable_ENABLE",
	}
	Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable_value = map[string]int32{
		"QosEnable_ENABLE": 0,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable) Enum() *Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[327].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[327]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 1, 0, 0}
}

type Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag_DISABLE Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag = 0
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag.
var (
	Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag_name = map[int32]string{
		0: "DisableFlag_DISABLE",
	}
	Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag_value = map[string]int32{
		"DisableFlag_DISABLE": 0,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag) Enum() *Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[328].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[328]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 2, 0, 0}
}

type Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType_VLL Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType = 0
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType.
var (
	Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType_name = map[int32]string{
		0: "DisableFwdType_VLL",
	}
	Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType_value = map[string]int32{
		"DisableFwdType_VLL": 0,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType) Enum() *Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[329].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[329]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 3, 0, 0}
}

type Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable_ENABLE Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable = 0
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable.
var (
	Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable_name = map[int32]string{
		0: "Enable_ENABLE",
	}
	Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable_value = map[string]int32{
		"Enable_ENABLE": 0,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable) Enum() *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[330].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[330]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 4, 0, 0}
}

type Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType_FOUR  Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType = 0
	Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType_ONE   Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType = 1
	Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType_THREE Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType = 2
	Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType_TWO   Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType = 3
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType.
var (
	Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType_name = map[int32]string{
		0: "CosType_FOUR",
		1: "CosType_ONE",
		2: "CosType_THREE",
		3: "CosType_TWO",
	}
	Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType_value = map[string]int32{
		"CosType_FOUR":  0,
		"CosType_ONE":   1,
		"CosType_THREE": 2,
		"CosType_TWO":   3,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType) Enum() *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[331].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[331]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 4, 0, 0, 0, 0}
}

type Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag_MULTICAST Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag = 0
	Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag_UNICAST   Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag = 1
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag.
var (
	Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag_name = map[int32]string{
		0: "VoqFlag_MULTICAST",
		1: "VoqFlag_UNICAST",
	}
	Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag_value = map[string]int32{
		"VoqFlag_MULTICAST": 0,
		"VoqFlag_UNICAST":   1,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag) Enum() *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[332].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[332]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 4, 0, 0, 0, 1}
}

type Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass_AF1       Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass = 0
	Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass_AF2       Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass = 1
	Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass_AF3       Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass = 2
	Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass_AF4       Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass = 3
	Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass_BE        Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass = 4
	Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass_CS6       Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass = 5
	Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass_CS7       Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass = 6
	Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass_EF        Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass = 7
	Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass_NOTCONFIG Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass = 8
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass.
var (
	Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass) Enum() *Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[333].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[333]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 5, 0, 0}
}

type Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority_BOTH Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority = 0
	Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority_HP   Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority = 1
	Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority_LP   Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority = 2
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority.
var (
	Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority_name = map[int32]string{
		0: "Priority_BOTH",
		1: "Priority_HP",
		2: "Priority_LP",
	}
	Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority_value = map[string]int32{
		"Priority_BOTH": 0,
		"Priority_HP":   1,
		"Priority_LP":   2,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority) Enum() *Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[334].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[334]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 7, 0, 0}
}

type Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode_MASK Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode = 0
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode.
var (
	Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode_name = map[int32]string{
		0: "MatchMode_MASK",
	}
	Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode_value = map[string]int32{
		"MatchMode_MASK": 0,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode) Enum() *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[335].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[335]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 8, 0, 0}
}

type Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode_ENABLE Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode = 0
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode.
var (
	Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode_name = map[int32]string{
		0: "MatchMode_ENABLE",
	}
	Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode_value = map[string]int32{
		"MatchMode_ENABLE": 0,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode) Enum() *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[336].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[336]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 9, 0, 0}
}

type Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction_INBOUND  Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction = 0
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction_OUTBOUND Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction = 1
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction.
var (
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction_name = map[int32]string{
		0: "Direction_INBOUND",
		1: "Direction_OUTBOUND",
	}
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction_value = map[string]int32{
		"Direction_INBOUND":  0,
		"Direction_OUTBOUND": 1,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction) Enum() *Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[337].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[337]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 15, 0, 0}
}

type Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass_AF1       Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass = 0
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass_AF2       Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass = 1
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass_AF3       Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass = 2
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass_AF4       Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass = 3
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass_BE        Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass = 4
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass_CS6       Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass = 5
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass_CS7       Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass = 6
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass_EF        Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass = 7
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass_NOTCONFIG Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass = 8
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass.
var (
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
		8: "ServiceClass_NOTCONFIG",
	}
	Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1":       0,
		"ServiceClass_AF2":       1,
		"ServiceClass_AF3":       2,
		"ServiceClass_AF4":       3,
		"ServiceClass_BE":        4,
		"ServiceClass_CS6":       5,
		"ServiceClass_CS7":       6,
		"ServiceClass_EF":        7,
		"ServiceClass_NOTCONFIG": 8,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass) Enum() *Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[338].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[338]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 15, 0, 1}
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType_OFF Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType = 0
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType.
var (
	Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType_name = map[int32]string{
		0: "FqPirType_OFF",
	}
	Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType_value = map[string]int32{
		"FqPirType_OFF": 0,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType) Enum() *Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[339].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[339]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 16, 0, 0}
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode_LPQ Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode = 0
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode_PQ  Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode = 1
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode_WFQ Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode = 2
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode.
var (
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode_name = map[int32]string{
		0: "QueueScheduleMode_LPQ",
		1: "QueueScheduleMode_PQ",
		2: "QueueScheduleMode_WFQ",
	}
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode_value = map[string]int32{
		"QueueScheduleMode_LPQ": 0,
		"QueueScheduleMode_PQ":  1,
		"QueueScheduleMode_WFQ": 2,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode) Enum() *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[340].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[340]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 17, 0, 0}
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass_AF1 Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass = 0
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass_AF2 Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass = 1
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass_AF3 Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass = 2
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass_AF4 Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass = 3
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass_BE  Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass = 4
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass_CS6 Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass = 5
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass_CS7 Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass = 6
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass_EF  Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass = 7
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass.
var (
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
	}
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1": 0,
		"ServiceClass_AF2": 1,
		"ServiceClass_AF3": 2,
		"ServiceClass_AF4": 3,
		"ServiceClass_BE":  4,
		"ServiceClass_CS6": 5,
		"ServiceClass_CS7": 6,
		"ServiceClass_EF":  7,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass) Enum() *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[341].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[341]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 17, 0, 1}
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType_X_256K Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType = 0
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType_X_512K Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType = 1
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType_OTHER  Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType = 2
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType.
var (
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType_name = map[int32]string{
		0: "ShapingType_X_256K",
		1: "ShapingType_X_512K",
		2: "ShapingType_OTHER",
	}
	Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType_value = map[string]int32{
		"ShapingType_X_256K": 0,
		"ShapingType_X_512K": 1,
		"ShapingType_OTHER":  2,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType) Enum() *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[342].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[342]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 18, 0, 0}
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType int32

const (
	Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType_DESTUSER     Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType = 0
	Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType_INTERFACEACL Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType = 1
)

// Enum value maps for Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType.
var (
	Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType_name = map[int32]string{
		0: "MatchType_DESTUSER",
		1: "MatchType_INTERFACEACL",
	}
	Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType_value = map[string]int32{
		"MatchType_DESTUSER":     0,
		"MatchType_INTERFACEACL": 1,
	}
)

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType) Enum() *Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType {
	p := new(Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType)
	*p = x
	return p
}

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[343].Descriptor()
}

func (Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[343]
}

func (x Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType.Descriptor instead.
func (Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 26, 0, 0}
}

type Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction int32

const (
	Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction_OUTBOUND Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction = 0
)

// Enum value maps for Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction.
var (
	Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction_name = map[int32]string{
		0: "Direction_OUTBOUND",
	}
	Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction_value = map[string]int32{
		"Direction_OUTBOUND": 0,
	}
)

func (x Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction) Enum() *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction {
	p := new(Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction)
	*p = x
	return p
}

func (x Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[344].Descriptor()
}

func (Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[344]
}

func (x Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction.Descriptor instead.
func (Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 33, 0, 0, 0, 0}
}

type Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction int32

const (
	Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction_OUTBOUND Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction = 0
)

// Enum value maps for Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction.
var (
	Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction_name = map[int32]string{
		0: "Direction_OUTBOUND",
	}
	Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction_value = map[string]int32{
		"Direction_OUTBOUND": 0,
	}
)

func (x Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction) Enum() *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction {
	p := new(Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction)
	*p = x
	return p
}

func (x Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[345].Descriptor()
}

func (Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[345]
}

func (x Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction.Descriptor instead.
func (Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 33, 0, 2, 0, 0}
}

type Qos_QosSystemViews_QosSystemView_ResType int32

const (
	Qos_QosSystemViews_QosSystemView_ResType_SYSTEMVIEW Qos_QosSystemViews_QosSystemView_ResType = 0
)

// Enum value maps for Qos_QosSystemViews_QosSystemView_ResType.
var (
	Qos_QosSystemViews_QosSystemView_ResType_name = map[int32]string{
		0: "ResType_SYSTEMVIEW",
	}
	Qos_QosSystemViews_QosSystemView_ResType_value = map[string]int32{
		"ResType_SYSTEMVIEW": 0,
	}
)

func (x Qos_QosSystemViews_QosSystemView_ResType) Enum() *Qos_QosSystemViews_QosSystemView_ResType {
	p := new(Qos_QosSystemViews_QosSystemView_ResType)
	*p = x
	return p
}

func (x Qos_QosSystemViews_QosSystemView_ResType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSystemViews_QosSystemView_ResType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[346].Descriptor()
}

func (Qos_QosSystemViews_QosSystemView_ResType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[346]
}

func (x Qos_QosSystemViews_QosSystemView_ResType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSystemViews_QosSystemView_ResType.Descriptor instead.
func (Qos_QosSystemViews_QosSystemView_ResType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34, 0, 0}
}

type Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType int32

const (
	Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType_LEASED_LINE_ACCESS Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType = 0
	Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType_NOTCONFIG          Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType = 1
)

// Enum value maps for Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType.
var (
	Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType_name = map[int32]string{
		0: "AccessType_LEASED_LINE_ACCESS",
		1: "AccessType_NOTCONFIG",
	}
	Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType_value = map[string]int32{
		"AccessType_LEASED_LINE_ACCESS": 0,
		"AccessType_NOTCONFIG":          1,
	}
)

func (x Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType) Enum() *Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType {
	p := new(Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType)
	*p = x
	return p
}

func (x Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[347].Descriptor()
}

func (Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[347]
}

func (x Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType.Descriptor instead.
func (Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34, 0, 0, 0, 0}
}

type Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType int32

const (
	Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType_L2TP_LAYER_EXCLUDE Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType = 0
	Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType_LINK_LAYER_EXCLUDE Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType = 1
)

// Enum value maps for Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType.
var (
	Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType_name = map[int32]string{
		0: "ExcLayeType_L2TP_LAYER_EXCLUDE",
		1: "ExcLayeType_LINK_LAYER_EXCLUDE",
	}
	Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType_value = map[string]int32{
		"ExcLayeType_L2TP_LAYER_EXCLUDE": 0,
		"ExcLayeType_LINK_LAYER_EXCLUDE": 1,
	}
)

func (x Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType) Enum() *Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType {
	p := new(Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType)
	*p = x
	return p
}

func (x Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[348].Descriptor()
}

func (Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[348]
}

func (x Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType.Descriptor instead.
func (Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34, 0, 0, 0, 1}
}

type Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType int32

const (
	Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType_LAC    Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType = 0
	Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType_LNS    Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType = 1
	Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType_LNSLAC Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType = 2
)

// Enum value maps for Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType.
var (
	Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType_name = map[int32]string{
		0: "RedbackType_LAC",
		1: "RedbackType_LNS",
		2: "RedbackType_LNSLAC",
	}
	Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType_value = map[string]int32{
		"RedbackType_LAC":    0,
		"RedbackType_LNS":    1,
		"RedbackType_LNSLAC": 2,
	}
)

func (x Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType) Enum() *Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType {
	p := new(Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType)
	*p = x
	return p
}

func (x Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[349].Descriptor()
}

func (Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[349]
}

func (x Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType.Descriptor instead.
func (Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34, 0, 1, 0, 0}
}

type Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType int32

const (
	Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType_MODE2 Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType = 0
	Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType_MODE3 Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType = 1
)

// Enum value maps for Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType.
var (
	Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType_name = map[int32]string{
		0: "ModeType_MODE2",
		1: "ModeType_MODE3",
	}
	Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType_value = map[string]int32{
		"ModeType_MODE2": 0,
		"ModeType_MODE3": 1,
	}
)

func (x Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType) Enum() *Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType {
	p := new(Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType)
	*p = x
	return p
}

func (x Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[350].Descriptor()
}

func (Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[350]
}

func (x Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType.Descriptor instead.
func (Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34, 0, 2, 0, 0}
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode int32

const (
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode_EXCLUDE     Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode = 0
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode_NON_EXCLUDE Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode = 1
)

// Enum value maps for Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode.
var (
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode_name = map[int32]string{
		0: "ExcludeMode_EXCLUDE",
		1: "ExcludeMode_NON_EXCLUDE",
	}
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode_value = map[string]int32{
		"ExcludeMode_EXCLUDE":     0,
		"ExcludeMode_NON_EXCLUDE": 1,
	}
)

func (x Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode) Enum() *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode {
	p := new(Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode)
	*p = x
	return p
}

func (x Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[351].Descriptor()
}

func (Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[351]
}

func (x Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode.Descriptor instead.
func (Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 0, 0, 0}
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection int32

const (
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection_INBOUND  Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection = 0
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection_OUTBOUND Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection = 1
)

// Enum value maps for Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection.
var (
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection_name = map[int32]string{
		0: "Vpndirection_INBOUND",
		1: "Vpndirection_OUTBOUND",
	}
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection_value = map[string]int32{
		"Vpndirection_INBOUND":  0,
		"Vpndirection_OUTBOUND": 1,
	}
)

func (x Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection) Enum() *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection {
	p := new(Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection)
	*p = x
	return p
}

func (x Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[352].Descriptor()
}

func (Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[352]
}

func (x Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection.Descriptor instead.
func (Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 2, 0, 0}
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer int32

const (
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer_LINK Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer = 0
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer_NONE Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer = 1
)

// Enum value maps for Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer.
var (
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer_name = map[int32]string{
		0: "Vpnlayer_LINK",
		1: "Vpnlayer_NONE",
	}
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer_value = map[string]int32{
		"Vpnlayer_LINK": 0,
		"Vpnlayer_NONE": 1,
	}
)

func (x Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer) Enum() *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer {
	p := new(Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer)
	*p = x
	return p
}

func (x Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[353].Descriptor()
}

func (Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[353]
}

func (x Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer.Descriptor instead.
func (Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 2, 0, 1}
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType int32

const (
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType_X_8021P Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType = 0
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType_DS      Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType = 1
)

// Enum value maps for Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType.
var (
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType_name = map[int32]string{
		0: "TrustvpnType_X_8021P",
		1: "TrustvpnType_DS",
	}
	Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType_value = map[string]int32{
		"TrustvpnType_X_8021P": 0,
		"TrustvpnType_DS":      1,
	}
)

func (x Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType) Enum() *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType {
	p := new(Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType)
	*p = x
	return p
}

func (x Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[354].Descriptor()
}

func (Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[354]
}

func (x Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType.Descriptor instead.
func (Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 3, 0, 0}
}

type Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color int32

const (
	Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color_GREEN  Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color = 0
	Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color_RED    Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color = 1
	Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color_YELLOW Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color = 2
)

// Enum value maps for Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color.
var (
	Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color_name = map[int32]string{
		0: "Color_GREEN",
		1: "Color_RED",
		2: "Color_YELLOW",
	}
	Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color_value = map[string]int32{
		"Color_GREEN":  0,
		"Color_RED":    1,
		"Color_YELLOW": 2,
	}
)

func (x Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color) Enum() *Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color {
	p := new(Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color)
	*p = x
	return p
}

func (x Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[355].Descriptor()
}

func (Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[355]
}

func (x Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color.Descriptor instead.
func (Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 0, 0, 0, 0, 0}
}

type Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color int32

const (
	Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color_GREEN  Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color = 0
	Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color_RED    Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color = 1
	Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color_YELLOW Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color = 2
)

// Enum value maps for Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color.
var (
	Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color_name = map[int32]string{
		0: "Color_GREEN",
		1: "Color_RED",
		2: "Color_YELLOW",
	}
	Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color_value = map[string]int32{
		"Color_GREEN":  0,
		"Color_RED":    1,
		"Color_YELLOW": 2,
	}
)

func (x Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color) Enum() *Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color {
	p := new(Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color)
	*p = x
	return p
}

func (x Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[356].Descriptor()
}

func (Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[356]
}

func (x Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color.Descriptor instead.
func (Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 1, 0, 0, 0, 0}
}

type Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass int32

const (
	Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass_AF1 Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass = 0
	Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass_AF2 Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass = 1
	Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass_AF3 Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass = 2
	Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass_AF4 Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass = 3
	Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass_BE  Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass = 4
	Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass_CS6 Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass = 5
	Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass_CS7 Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass = 6
	Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass_EF  Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass = 7
)

// Enum value maps for Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass.
var (
	Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass_name = map[int32]string{
		0: "ServiceClass_AF1",
		1: "ServiceClass_AF2",
		2: "ServiceClass_AF3",
		3: "ServiceClass_AF4",
		4: "ServiceClass_BE",
		5: "ServiceClass_CS6",
		6: "ServiceClass_CS7",
		7: "ServiceClass_EF",
	}
	Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass_value = map[string]int32{
		"ServiceClass_AF1": 0,
		"ServiceClass_AF2": 1,
		"ServiceClass_AF3": 2,
		"ServiceClass_AF4": 3,
		"ServiceClass_BE":  4,
		"ServiceClass_CS6": 5,
		"ServiceClass_CS7": 6,
		"ServiceClass_EF":  7,
	}
)

func (x Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass) Enum() *Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass {
	p := new(Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass)
	*p = x
	return p
}

func (x Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[357].Descriptor()
}

func (Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[357]
}

func (x Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass.Descriptor instead.
func (Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 2, 0, 0}
}

type Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType int32

const (
	Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType_BOTHSPEED Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType = 0
	Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType_HIGHSPEED Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType = 1
	Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType_LOWSPEED  Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType = 2
)

// Enum value maps for Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType.
var (
	Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType_name = map[int32]string{
		0: "SpeedType_BOTHSPEED",
		1: "SpeedType_HIGHSPEED",
		2: "SpeedType_LOWSPEED",
	}
	Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType_value = map[string]int32{
		"SpeedType_BOTHSPEED": 0,
		"SpeedType_HIGHSPEED": 1,
		"SpeedType_LOWSPEED":  2,
	}
)

func (x Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType) Enum() *Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType {
	p := new(Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType)
	*p = x
	return p
}

func (x Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[358].Descriptor()
}

func (Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[358]
}

func (x Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType.Descriptor instead.
func (Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 2, 0, 1}
}

type Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color int32

const (
	Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color_GREEN  Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color = 0
	Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color_RED    Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color = 1
	Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color_YELLOW Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color = 2
)

// Enum value maps for Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color.
var (
	Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color_name = map[int32]string{
		0: "Color_GREEN",
		1: "Color_RED",
		2: "Color_YELLOW",
	}
	Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color_value = map[string]int32{
		"Color_GREEN":  0,
		"Color_RED":    1,
		"Color_YELLOW": 2,
	}
)

func (x Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color) Enum() *Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color {
	p := new(Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color)
	*p = x
	return p
}

func (x Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color) Descriptor() protoreflect.EnumDescriptor {
	return file_huaweiV8R10_qos_proto_enumTypes[359].Descriptor()
}

func (Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color) Type() protoreflect.EnumType {
	return &file_huaweiV8R10_qos_proto_enumTypes[359]
}

func (x Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color.Descriptor instead.
func (Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color) EnumDescriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 3, 0, 0, 0, 0}
}

type QosResetATMPvcQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfName       string                                  `protobuf:"bytes,1,opt,name=ifName,proto3" json:"ifName,omitempty"`
	ServiceClass QosResetATMPvcQueueRequest_ServiceClass `protobuf:"varint,2,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.QosResetATMPvcQueueRequest_ServiceClass" json:"serviceClass,omitempty"`
	Vci          uint32                                  `protobuf:"varint,3,opt,name=vci,proto3" json:"vci,omitempty"`
	Vpi          uint32                                  `protobuf:"varint,4,opt,name=vpi,proto3" json:"vpi,omitempty"`
}

func (x *QosResetATMPvcQueueRequest) Reset() {
	*x = QosResetATMPvcQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetATMPvcQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetATMPvcQueueRequest) ProtoMessage() {}

func (x *QosResetATMPvcQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetATMPvcQueueRequest.ProtoReflect.Descriptor instead.
func (*QosResetATMPvcQueueRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{0}
}

func (x *QosResetATMPvcQueueRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *QosResetATMPvcQueueRequest) GetServiceClass() QosResetATMPvcQueueRequest_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return QosResetATMPvcQueueRequest_ServiceClass_AF1
}

func (x *QosResetATMPvcQueueRequest) GetVci() uint32 {
	if x != nil {
		return x.Vci
	}
	return 0
}

func (x *QosResetATMPvcQueueRequest) GetVpi() uint32 {
	if x != nil {
		return x.Vpi
	}
	return 0
}

type QosResetBdPolicyApplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BdName      uint32                                   `protobuf:"varint,1,opt,name=bdName,proto3" json:"bdName,omitempty"`
	Bddirection QosResetBdPolicyApplyRequest_Bddirection `protobuf:"varint,2,opt,name=bddirection,proto3,enum=huaweiV8R10_qos.QosResetBdPolicyApplyRequest_Bddirection" json:"bddirection,omitempty"`
}

func (x *QosResetBdPolicyApplyRequest) Reset() {
	*x = QosResetBdPolicyApplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetBdPolicyApplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetBdPolicyApplyRequest) ProtoMessage() {}

func (x *QosResetBdPolicyApplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetBdPolicyApplyRequest.ProtoReflect.Descriptor instead.
func (*QosResetBdPolicyApplyRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{1}
}

func (x *QosResetBdPolicyApplyRequest) GetBdName() uint32 {
	if x != nil {
		return x.BdName
	}
	return 0
}

func (x *QosResetBdPolicyApplyRequest) GetBddirection() QosResetBdPolicyApplyRequest_Bddirection {
	if x != nil {
		return x.Bddirection
	}
	return QosResetBdPolicyApplyRequest_Bddirection_INBOUND
}

type QosResetBdVxlanPolicyApplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BdName      uint32                                        `protobuf:"varint,1,opt,name=bdName,proto3" json:"bdName,omitempty"`
	Bddirection QosResetBdVxlanPolicyApplyRequest_Bddirection `protobuf:"varint,2,opt,name=bddirection,proto3,enum=huaweiV8R10_qos.QosResetBdVxlanPolicyApplyRequest_Bddirection" json:"bddirection,omitempty"`
}

func (x *QosResetBdVxlanPolicyApplyRequest) Reset() {
	*x = QosResetBdVxlanPolicyApplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetBdVxlanPolicyApplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetBdVxlanPolicyApplyRequest) ProtoMessage() {}

func (x *QosResetBdVxlanPolicyApplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetBdVxlanPolicyApplyRequest.ProtoReflect.Descriptor instead.
func (*QosResetBdVxlanPolicyApplyRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{2}
}

func (x *QosResetBdVxlanPolicyApplyRequest) GetBdName() uint32 {
	if x != nil {
		return x.BdName
	}
	return 0
}

func (x *QosResetBdVxlanPolicyApplyRequest) GetBddirection() QosResetBdVxlanPolicyApplyRequest_Bddirection {
	if x != nil {
		return x.Bddirection
	}
	return QosResetBdVxlanPolicyApplyRequest_Bddirection_INBOUND
}

type QosResetEvplVxlanPolicyApplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvplName      uint32                                            `protobuf:"varint,1,opt,name=evplName,proto3" json:"evplName,omitempty"`
	Evpldirection QosResetEvplVxlanPolicyApplyRequest_Evpldirection `protobuf:"varint,2,opt,name=evpldirection,proto3,enum=huaweiV8R10_qos.QosResetEvplVxlanPolicyApplyRequest_Evpldirection" json:"evpldirection,omitempty"`
}

func (x *QosResetEvplVxlanPolicyApplyRequest) Reset() {
	*x = QosResetEvplVxlanPolicyApplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetEvplVxlanPolicyApplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetEvplVxlanPolicyApplyRequest) ProtoMessage() {}

func (x *QosResetEvplVxlanPolicyApplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetEvplVxlanPolicyApplyRequest.ProtoReflect.Descriptor instead.
func (*QosResetEvplVxlanPolicyApplyRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{3}
}

func (x *QosResetEvplVxlanPolicyApplyRequest) GetEvplName() uint32 {
	if x != nil {
		return x.EvplName
	}
	return 0
}

func (x *QosResetEvplVxlanPolicyApplyRequest) GetEvpldirection() QosResetEvplVxlanPolicyApplyRequest_Evpldirection {
	if x != nil {
		return x.Evpldirection
	}
	return QosResetEvplVxlanPolicyApplyRequest_Evpldirection_OUTBOUND
}

type QosResetGlobalPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction QosResetGlobalPolicyRequest_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.QosResetGlobalPolicyRequest_Direction" json:"direction,omitempty"`
}

func (x *QosResetGlobalPolicyRequest) Reset() {
	*x = QosResetGlobalPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetGlobalPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetGlobalPolicyRequest) ProtoMessage() {}

func (x *QosResetGlobalPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetGlobalPolicyRequest.ProtoReflect.Descriptor instead.
func (*QosResetGlobalPolicyRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{4}
}

func (x *QosResetGlobalPolicyRequest) GetDirection() QosResetGlobalPolicyRequest_Direction {
	if x != nil {
		return x.Direction
	}
	return QosResetGlobalPolicyRequest_Direction_INBOUND
}

type QosResetHardPipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfName string `protobuf:"bytes,1,opt,name=ifName,proto3" json:"ifName,omitempty"`
}

func (x *QosResetHardPipeRequest) Reset() {
	*x = QosResetHardPipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetHardPipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetHardPipeRequest) ProtoMessage() {}

func (x *QosResetHardPipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetHardPipeRequest.ProtoReflect.Descriptor instead.
func (*QosResetHardPipeRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{5}
}

func (x *QosResetHardPipeRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

type QosResetIFGQStRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction QosResetIFGQStRequest_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.QosResetIFGQStRequest_Direction" json:"direction,omitempty"`
	IfName    string                          `protobuf:"bytes,2,opt,name=ifName,proto3" json:"ifName,omitempty"`
}

func (x *QosResetIFGQStRequest) Reset() {
	*x = QosResetIFGQStRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetIFGQStRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetIFGQStRequest) ProtoMessage() {}

func (x *QosResetIFGQStRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetIFGQStRequest.ProtoReflect.Descriptor instead.
func (*QosResetIFGQStRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{6}
}

func (x *QosResetIFGQStRequest) GetDirection() QosResetIFGQStRequest_Direction {
	if x != nil {
		return x.Direction
	}
	return QosResetIFGQStRequest_Direction_INBOUND
}

func (x *QosResetIFGQStRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

type QosResetIfCarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction QosResetIfCarRequest_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.QosResetIfCarRequest_Direction" json:"direction,omitempty"`
	IfName    string                         `protobuf:"bytes,2,opt,name=ifName,proto3" json:"ifName,omitempty"`
}

func (x *QosResetIfCarRequest) Reset() {
	*x = QosResetIfCarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetIfCarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetIfCarRequest) ProtoMessage() {}

func (x *QosResetIfCarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetIfCarRequest.ProtoReflect.Descriptor instead.
func (*QosResetIfCarRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{7}
}

func (x *QosResetIfCarRequest) GetDirection() QosResetIfCarRequest_Direction {
	if x != nil {
		return x.Direction
	}
	return QosResetIfCarRequest_Direction_INBOUND
}

func (x *QosResetIfCarRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

type QosResetIfGQRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppCeVlan uint32                        `protobuf:"varint,1,opt,name=appCeVlan,proto3" json:"appCeVlan,omitempty"`
	AppPeVlan uint32                        `protobuf:"varint,2,opt,name=appPeVlan,proto3" json:"appPeVlan,omitempty"`
	Direction QosResetIfGQRequest_Direction `protobuf:"varint,3,opt,name=direction,proto3,enum=huaweiV8R10_qos.QosResetIfGQRequest_Direction" json:"direction,omitempty"`
	IfName    string                        `protobuf:"bytes,4,opt,name=ifName,proto3" json:"ifName,omitempty"`
}

func (x *QosResetIfGQRequest) Reset() {
	*x = QosResetIfGQRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetIfGQRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetIfGQRequest) ProtoMessage() {}

func (x *QosResetIfGQRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetIfGQRequest.ProtoReflect.Descriptor instead.
func (*QosResetIfGQRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{8}
}

func (x *QosResetIfGQRequest) GetAppCeVlan() uint32 {
	if x != nil {
		return x.AppCeVlan
	}
	return 0
}

func (x *QosResetIfGQRequest) GetAppPeVlan() uint32 {
	if x != nil {
		return x.AppPeVlan
	}
	return 0
}

func (x *QosResetIfGQRequest) GetDirection() QosResetIfGQRequest_Direction {
	if x != nil {
		return x.Direction
	}
	return QosResetIfGQRequest_Direction_INBOUND
}

func (x *QosResetIfGQRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

type QosResetIfQppbRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction QosResetIfQppbRequest_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.QosResetIfQppbRequest_Direction" json:"direction,omitempty"`
	IfName    string                          `protobuf:"bytes,2,opt,name=ifName,proto3" json:"ifName,omitempty"`
}

func (x *QosResetIfQppbRequest) Reset() {
	*x = QosResetIfQppbRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetIfQppbRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetIfQppbRequest) ProtoMessage() {}

func (x *QosResetIfQppbRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetIfQppbRequest.ProtoReflect.Descriptor instead.
func (*QosResetIfQppbRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{9}
}

func (x *QosResetIfQppbRequest) GetDirection() QosResetIfQppbRequest_Direction {
	if x != nil {
		return x.Direction
	}
	return QosResetIfQppbRequest_Direction_INBOUND
}

func (x *QosResetIfQppbRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

type QosResetIfSQRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction QosResetIfSQRequest_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.QosResetIfSQRequest_Direction" json:"direction,omitempty"`
	IfName    string                        `protobuf:"bytes,2,opt,name=ifName,proto3" json:"ifName,omitempty"`
}

func (x *QosResetIfSQRequest) Reset() {
	*x = QosResetIfSQRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetIfSQRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetIfSQRequest) ProtoMessage() {}

func (x *QosResetIfSQRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetIfSQRequest.ProtoReflect.Descriptor instead.
func (*QosResetIfSQRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{10}
}

func (x *QosResetIfSQRequest) GetDirection() QosResetIfSQRequest_Direction {
	if x != nil {
		return x.Direction
	}
	return QosResetIfSQRequest_Direction_INBOUND
}

func (x *QosResetIfSQRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

type QosResetLsPortQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfName       string                                  `protobuf:"bytes,1,opt,name=ifName,proto3" json:"ifName,omitempty"`
	ServiceClass QosResetLsPortQueueRequest_ServiceClass `protobuf:"varint,2,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.QosResetLsPortQueueRequest_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *QosResetLsPortQueueRequest) Reset() {
	*x = QosResetLsPortQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetLsPortQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetLsPortQueueRequest) ProtoMessage() {}

func (x *QosResetLsPortQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetLsPortQueueRequest.ProtoReflect.Descriptor instead.
func (*QosResetLsPortQueueRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{11}
}

func (x *QosResetLsPortQueueRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *QosResetLsPortQueueRequest) GetServiceClass() QosResetLsPortQueueRequest_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return QosResetLsPortQueueRequest_ServiceClass_AF1
}

type QosResetLvHardPipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfName string `protobuf:"bytes,1,opt,name=ifName,proto3" json:"ifName,omitempty"`
}

func (x *QosResetLvHardPipeRequest) Reset() {
	*x = QosResetLvHardPipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetLvHardPipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetLvHardPipeRequest) ProtoMessage() {}

func (x *QosResetLvHardPipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetLvHardPipeRequest.ProtoReflect.Descriptor instead.
func (*QosResetLvHardPipeRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{12}
}

func (x *QosResetLvHardPipeRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

type QosResetPolicyApplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction QosResetPolicyApplyRequest_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.QosResetPolicyApplyRequest_Direction" json:"direction,omitempty"`
	GroupId   uint32                               `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	IfName    string                               `protobuf:"bytes,3,opt,name=ifName,proto3" json:"ifName,omitempty"`
}

func (x *QosResetPolicyApplyRequest) Reset() {
	*x = QosResetPolicyApplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetPolicyApplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetPolicyApplyRequest) ProtoMessage() {}

func (x *QosResetPolicyApplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetPolicyApplyRequest.ProtoReflect.Descriptor instead.
func (*QosResetPolicyApplyRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{13}
}

func (x *QosResetPolicyApplyRequest) GetDirection() QosResetPolicyApplyRequest_Direction {
	if x != nil {
		return x.Direction
	}
	return QosResetPolicyApplyRequest_Direction_INBOUND
}

func (x *QosResetPolicyApplyRequest) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *QosResetPolicyApplyRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

type QosResetPortQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfName       string                                `protobuf:"bytes,1,opt,name=ifName,proto3" json:"ifName,omitempty"`
	Isonboard    QosResetPortQueueRequest_Isonboard    `protobuf:"varint,2,opt,name=isonboard,proto3,enum=huaweiV8R10_qos.QosResetPortQueueRequest_Isonboard" json:"isonboard,omitempty"`
	ServiceClass QosResetPortQueueRequest_ServiceClass `protobuf:"varint,3,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.QosResetPortQueueRequest_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *QosResetPortQueueRequest) Reset() {
	*x = QosResetPortQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetPortQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetPortQueueRequest) ProtoMessage() {}

func (x *QosResetPortQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetPortQueueRequest.ProtoReflect.Descriptor instead.
func (*QosResetPortQueueRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{14}
}

func (x *QosResetPortQueueRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *QosResetPortQueueRequest) GetIsonboard() QosResetPortQueueRequest_Isonboard {
	if x != nil {
		return x.Isonboard
	}
	return QosResetPortQueueRequest_Isonboard_NO
}

func (x *QosResetPortQueueRequest) GetServiceClass() QosResetPortQueueRequest_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return QosResetPortQueueRequest_ServiceClass_AF1
}

type QosResetProUStRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction QosResetProUStRequest_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.QosResetProUStRequest_Direction" json:"direction,omitempty"`
	UserID    uint32                          `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *QosResetProUStRequest) Reset() {
	*x = QosResetProUStRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetProUStRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetProUStRequest) ProtoMessage() {}

func (x *QosResetProUStRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetProUStRequest.ProtoReflect.Descriptor instead.
func (*QosResetProUStRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{15}
}

func (x *QosResetProUStRequest) GetDirection() QosResetProUStRequest_Direction {
	if x != nil {
		return x.Direction
	}
	return QosResetProUStRequest_Direction_INBOUND
}

func (x *QosResetProUStRequest) GetUserID() uint32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type QosResetProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfName       string                              `protobuf:"bytes,1,opt,name=ifName,proto3" json:"ifName,omitempty"`
	ServiceClass QosResetProfileRequest_ServiceClass `protobuf:"varint,2,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.QosResetProfileRequest_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *QosResetProfileRequest) Reset() {
	*x = QosResetProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetProfileRequest) ProtoMessage() {}

func (x *QosResetProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetProfileRequest.ProtoReflect.Descriptor instead.
func (*QosResetProfileRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{16}
}

func (x *QosResetProfileRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *QosResetProfileRequest) GetServiceClass() QosResetProfileRequest_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return QosResetProfileRequest_ServiceClass_AF1
}

type QosResetSlotPortQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceClass QosResetSlotPortQueueRequest_ServiceClass `protobuf:"varint,1,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.QosResetSlotPortQueueRequest_ServiceClass" json:"serviceClass,omitempty"`
	Slotid       string                                    `protobuf:"bytes,2,opt,name=slotid,proto3" json:"slotid,omitempty"`
}

func (x *QosResetSlotPortQueueRequest) Reset() {
	*x = QosResetSlotPortQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetSlotPortQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetSlotPortQueueRequest) ProtoMessage() {}

func (x *QosResetSlotPortQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetSlotPortQueueRequest.ProtoReflect.Descriptor instead.
func (*QosResetSlotPortQueueRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{17}
}

func (x *QosResetSlotPortQueueRequest) GetServiceClass() QosResetSlotPortQueueRequest_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return QosResetSlotPortQueueRequest_ServiceClass_AF1
}

func (x *QosResetSlotPortQueueRequest) GetSlotid() string {
	if x != nil {
		return x.Slotid
	}
	return ""
}

type QosResetSlotVOQStRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DesSlotID string                           `protobuf:"bytes,1,opt,name=desSlotID,proto3" json:"desSlotID,omitempty"`
	Slotid    string                           `protobuf:"bytes,2,opt,name=slotid,proto3" json:"slotid,omitempty"`
	VoqFlag   QosResetSlotVOQStRequest_VoqFlag `protobuf:"varint,3,opt,name=voqFlag,proto3,enum=huaweiV8R10_qos.QosResetSlotVOQStRequest_VoqFlag" json:"voqFlag,omitempty"`
}

func (x *QosResetSlotVOQStRequest) Reset() {
	*x = QosResetSlotVOQStRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetSlotVOQStRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetSlotVOQStRequest) ProtoMessage() {}

func (x *QosResetSlotVOQStRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetSlotVOQStRequest.ProtoReflect.Descriptor instead.
func (*QosResetSlotVOQStRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{18}
}

func (x *QosResetSlotVOQStRequest) GetDesSlotID() string {
	if x != nil {
		return x.DesSlotID
	}
	return ""
}

func (x *QosResetSlotVOQStRequest) GetSlotid() string {
	if x != nil {
		return x.Slotid
	}
	return ""
}

func (x *QosResetSlotVOQStRequest) GetVoqFlag() QosResetSlotVOQStRequest_VoqFlag {
	if x != nil {
		return x.VoqFlag
	}
	return QosResetSlotVOQStRequest_VoqFlag_MULTICAST
}

type QosResetSubPortQStRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfName string `protobuf:"bytes,1,opt,name=ifName,proto3" json:"ifName,omitempty"`
}

func (x *QosResetSubPortQStRequest) Reset() {
	*x = QosResetSubPortQStRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetSubPortQStRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetSubPortQStRequest) ProtoMessage() {}

func (x *QosResetSubPortQStRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetSubPortQStRequest.ProtoReflect.Descriptor instead.
func (*QosResetSubPortQStRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{19}
}

func (x *QosResetSubPortQStRequest) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

type QosResetVniGQRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction QosResetVniGQRequest_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.QosResetVniGQRequest_Direction" json:"direction,omitempty"`
	VniID     uint32                         `protobuf:"varint,2,opt,name=vniID,proto3" json:"vniID,omitempty"`
}

func (x *QosResetVniGQRequest) Reset() {
	*x = QosResetVniGQRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetVniGQRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetVniGQRequest) ProtoMessage() {}

func (x *QosResetVniGQRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetVniGQRequest.ProtoReflect.Descriptor instead.
func (*QosResetVniGQRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{20}
}

func (x *QosResetVniGQRequest) GetDirection() QosResetVniGQRequest_Direction {
	if x != nil {
		return x.Direction
	}
	return QosResetVniGQRequest_Direction_INBOUND
}

func (x *QosResetVniGQRequest) GetVniID() uint32 {
	if x != nil {
		return x.VniID
	}
	return 0
}

type QosResetVpnVxlanPolicyApplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpnName      string                                          `protobuf:"bytes,1,opt,name=vpnName,proto3" json:"vpnName,omitempty"`
	Vpndirection QosResetVpnVxlanPolicyApplyRequest_Vpndirection `protobuf:"varint,2,opt,name=vpndirection,proto3,enum=huaweiV8R10_qos.QosResetVpnVxlanPolicyApplyRequest_Vpndirection" json:"vpndirection,omitempty"`
}

func (x *QosResetVpnVxlanPolicyApplyRequest) Reset() {
	*x = QosResetVpnVxlanPolicyApplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QosResetVpnVxlanPolicyApplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QosResetVpnVxlanPolicyApplyRequest) ProtoMessage() {}

func (x *QosResetVpnVxlanPolicyApplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QosResetVpnVxlanPolicyApplyRequest.ProtoReflect.Descriptor instead.
func (*QosResetVpnVxlanPolicyApplyRequest) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{21}
}

func (x *QosResetVpnVxlanPolicyApplyRequest) GetVpnName() string {
	if x != nil {
		return x.VpnName
	}
	return ""
}

func (x *QosResetVpnVxlanPolicyApplyRequest) GetVpndirection() QosResetVpnVxlanPolicyApplyRequest_Vpndirection {
	if x != nil {
		return x.Vpndirection
	}
	return QosResetVpnVxlanPolicyApplyRequest_Vpndirection_INBOUND
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{22}
}

type Qos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hqos                      *Qos_Hqos                      `protobuf:"bytes,1,opt,name=hqos,proto3" json:"hqos,omitempty"`
	QosAclLogParaCfs          *Qos_QosAclLogParaCfs          `protobuf:"bytes,2,opt,name=qosAclLogParaCfs,proto3" json:"qosAclLogParaCfs,omitempty"`
	QosBDQoss                 *Qos_QosBDQoss                 `protobuf:"bytes,3,opt,name=qosBDQoss,proto3" json:"qosBDQoss,omitempty"`
	QosBaHosts                *Qos_QosBaHosts                `protobuf:"bytes,4,opt,name=qosBaHosts,proto3" json:"qosBaHosts,omitempty"`
	QosBuffers                *Qos_QosBuffers                `protobuf:"bytes,5,opt,name=qosBuffers,proto3" json:"qosBuffers,omitempty"`
	QosCbQos                  *Qos_QosCbQos                  `protobuf:"bytes,6,opt,name=qosCbQos,proto3" json:"qosCbQos,omitempty"`
	QosChannelProfileTmps     *Qos_QosChannelProfileTmps     `protobuf:"bytes,7,opt,name=qosChannelProfileTmps,proto3" json:"qosChannelProfileTmps,omitempty"`
	QosDss                    *Qos_QosDss                    `protobuf:"bytes,8,opt,name=qosDss,proto3" json:"qosDss,omitempty"`
	QosEVPLQoss               *Qos_QosEVPLQoss               `protobuf:"bytes,9,opt,name=qosEVPLQoss,proto3" json:"qosEVPLQoss,omitempty"`
	QosGlobalPolicys          *Qos_QosGlobalPolicys          `protobuf:"bytes,10,opt,name=qosGlobalPolicys,proto3" json:"qosGlobalPolicys,omitempty"`
	QosGlobalQppbs            *Qos_QosGlobalQppbs            `protobuf:"bytes,11,opt,name=qosGlobalQppbs,proto3" json:"qosGlobalQppbs,omitempty"`
	QosHardPipeAbilitys       *Qos_QosHardPipeAbilitys       `protobuf:"bytes,12,opt,name=qosHardPipeAbilitys,proto3" json:"qosHardPipeAbilitys,omitempty"`
	QosIfQoss                 *Qos_QosIfQoss                 `protobuf:"bytes,13,opt,name=qosIfQoss,proto3" json:"qosIfQoss,omitempty"`
	QosIfQppbCfgs             *Qos_QosIfQppbCfgs             `protobuf:"bytes,14,opt,name=qosIfQppbCfgs,proto3" json:"qosIfQppbCfgs,omitempty"`
	QosInfUsers               *Qos_QosInfUsers               `protobuf:"bytes,15,opt,name=qosInfUsers,proto3" json:"qosInfUsers,omitempty"`
	QosLowLaEns               *Qos_QosLowLaEns               `protobuf:"bytes,16,opt,name=qosLowLaEns,proto3" json:"qosLowLaEns,omitempty"`
	QosLsIfQoss               *Qos_QosLsIfQoss               `protobuf:"bytes,17,opt,name=qosLsIfQoss,proto3" json:"qosLsIfQoss,omitempty"`
	QosLsQosGlobalPara        *Qos_QosLsQosGlobalPara        `protobuf:"bytes,18,opt,name=qosLsQosGlobalPara,proto3" json:"qosLsQosGlobalPara,omitempty"`
	QosPQschedules            *Qos_QosPQschedules            `protobuf:"bytes,19,opt,name=qosPQschedules,proto3" json:"qosPQschedules,omitempty"`
	QosPackEnables            *Qos_QosPackEnables            `protobuf:"bytes,20,opt,name=qosPackEnables,proto3" json:"qosPackEnables,omitempty"`
	QosPirPrecisions          *Qos_QosPirPrecisions          `protobuf:"bytes,21,opt,name=qosPirPrecisions,proto3" json:"qosPirPrecisions,omitempty"`
	QosPolicyMatchIpOnlys     *Qos_QosPolicyMatchIpOnlys     `protobuf:"bytes,22,opt,name=qosPolicyMatchIpOnlys,proto3" json:"qosPolicyMatchIpOnlys,omitempty"`
	QosPortQueueStatInfos     *Qos_QosPortQueueStatInfos     `protobuf:"bytes,23,opt,name=qosPortQueueStatInfos,proto3" json:"qosPortQueueStatInfos,omitempty"`
	QosQppbPolicys            *Qos_QosQppbPolicys            `protobuf:"bytes,24,opt,name=qosQppbPolicys,proto3" json:"qosQppbPolicys,omitempty"`
	QosRdrRouteFlts           *Qos_QosRdrRouteFlts           `protobuf:"bytes,25,opt,name=qosRdrRouteFlts,proto3" json:"qosRdrRouteFlts,omitempty"`
	QosRemoteIfQoss           *Qos_QosRemoteIfQoss           `protobuf:"bytes,26,opt,name=qosRemoteIfQoss,proto3" json:"qosRemoteIfQoss,omitempty"`
	QosSlotChannelAlarms      *Qos_QosSlotChannelAlarms      `protobuf:"bytes,27,opt,name=qosSlotChannelAlarms,proto3" json:"qosSlotChannelAlarms,omitempty"`
	QosSlotChannelPres        *Qos_QosSlotChannelPres        `protobuf:"bytes,28,opt,name=qosSlotChannelPres,proto3" json:"qosSlotChannelPres,omitempty"`
	QosSlotChannelProfileApps *Qos_QosSlotChannelProfileApps `protobuf:"bytes,29,opt,name=qosSlotChannelProfileApps,proto3" json:"qosSlotChannelProfileApps,omitempty"`
	QosSlotCvgPcds            *Qos_QosSlotCvgPcds            `protobuf:"bytes,30,opt,name=qosSlotCvgPcds,proto3" json:"qosSlotCvgPcds,omitempty"`
	QosSlotPQAlarms           *Qos_QosSlotPQAlarms           `protobuf:"bytes,31,opt,name=qosSlotPQAlarms,proto3" json:"qosSlotPQAlarms,omitempty"`
	QosSlotPQDiscardAlarms    *Qos_QosSlotPQDiscardAlarms    `protobuf:"bytes,32,opt,name=qosSlotPQDiscardAlarms,proto3" json:"qosSlotPQDiscardAlarms,omitempty"`
	QosSlotQoss               *Qos_QosSlotQoss               `protobuf:"bytes,33,opt,name=qosSlotQoss,proto3" json:"qosSlotQoss,omitempty"`
	QosSubPortQueues          *Qos_QosSubPortQueues          `protobuf:"bytes,34,opt,name=qosSubPortQueues,proto3" json:"qosSubPortQueues,omitempty"`
	QosSystemViews            *Qos_QosSystemViews            `protobuf:"bytes,35,opt,name=qosSystemViews,proto3" json:"qosSystemViews,omitempty"`
	QosVPNQoss                *Qos_QosVPNQoss                `protobuf:"bytes,36,opt,name=qosVPNQoss,proto3" json:"qosVPNQoss,omitempty"`
	QosWred                   *Qos_QosWred                   `protobuf:"bytes,37,opt,name=qosWred,proto3" json:"qosWred,omitempty"`
}

func (x *Qos) Reset() {
	*x = Qos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos) ProtoMessage() {}

func (x *Qos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos.ProtoReflect.Descriptor instead.
func (*Qos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23}
}

func (x *Qos) GetHqos() *Qos_Hqos {
	if x != nil {
		return x.Hqos
	}
	return nil
}

func (x *Qos) GetQosAclLogParaCfs() *Qos_QosAclLogParaCfs {
	if x != nil {
		return x.QosAclLogParaCfs
	}
	return nil
}

func (x *Qos) GetQosBDQoss() *Qos_QosBDQoss {
	if x != nil {
		return x.QosBDQoss
	}
	return nil
}

func (x *Qos) GetQosBaHosts() *Qos_QosBaHosts {
	if x != nil {
		return x.QosBaHosts
	}
	return nil
}

func (x *Qos) GetQosBuffers() *Qos_QosBuffers {
	if x != nil {
		return x.QosBuffers
	}
	return nil
}

func (x *Qos) GetQosCbQos() *Qos_QosCbQos {
	if x != nil {
		return x.QosCbQos
	}
	return nil
}

func (x *Qos) GetQosChannelProfileTmps() *Qos_QosChannelProfileTmps {
	if x != nil {
		return x.QosChannelProfileTmps
	}
	return nil
}

func (x *Qos) GetQosDss() *Qos_QosDss {
	if x != nil {
		return x.QosDss
	}
	return nil
}

func (x *Qos) GetQosEVPLQoss() *Qos_QosEVPLQoss {
	if x != nil {
		return x.QosEVPLQoss
	}
	return nil
}

func (x *Qos) GetQosGlobalPolicys() *Qos_QosGlobalPolicys {
	if x != nil {
		return x.QosGlobalPolicys
	}
	return nil
}

func (x *Qos) GetQosGlobalQppbs() *Qos_QosGlobalQppbs {
	if x != nil {
		return x.QosGlobalQppbs
	}
	return nil
}

func (x *Qos) GetQosHardPipeAbilitys() *Qos_QosHardPipeAbilitys {
	if x != nil {
		return x.QosHardPipeAbilitys
	}
	return nil
}

func (x *Qos) GetQosIfQoss() *Qos_QosIfQoss {
	if x != nil {
		return x.QosIfQoss
	}
	return nil
}

func (x *Qos) GetQosIfQppbCfgs() *Qos_QosIfQppbCfgs {
	if x != nil {
		return x.QosIfQppbCfgs
	}
	return nil
}

func (x *Qos) GetQosInfUsers() *Qos_QosInfUsers {
	if x != nil {
		return x.QosInfUsers
	}
	return nil
}

func (x *Qos) GetQosLowLaEns() *Qos_QosLowLaEns {
	if x != nil {
		return x.QosLowLaEns
	}
	return nil
}

func (x *Qos) GetQosLsIfQoss() *Qos_QosLsIfQoss {
	if x != nil {
		return x.QosLsIfQoss
	}
	return nil
}

func (x *Qos) GetQosLsQosGlobalPara() *Qos_QosLsQosGlobalPara {
	if x != nil {
		return x.QosLsQosGlobalPara
	}
	return nil
}

func (x *Qos) GetQosPQschedules() *Qos_QosPQschedules {
	if x != nil {
		return x.QosPQschedules
	}
	return nil
}

func (x *Qos) GetQosPackEnables() *Qos_QosPackEnables {
	if x != nil {
		return x.QosPackEnables
	}
	return nil
}

func (x *Qos) GetQosPirPrecisions() *Qos_QosPirPrecisions {
	if x != nil {
		return x.QosPirPrecisions
	}
	return nil
}

func (x *Qos) GetQosPolicyMatchIpOnlys() *Qos_QosPolicyMatchIpOnlys {
	if x != nil {
		return x.QosPolicyMatchIpOnlys
	}
	return nil
}

func (x *Qos) GetQosPortQueueStatInfos() *Qos_QosPortQueueStatInfos {
	if x != nil {
		return x.QosPortQueueStatInfos
	}
	return nil
}

func (x *Qos) GetQosQppbPolicys() *Qos_QosQppbPolicys {
	if x != nil {
		return x.QosQppbPolicys
	}
	return nil
}

func (x *Qos) GetQosRdrRouteFlts() *Qos_QosRdrRouteFlts {
	if x != nil {
		return x.QosRdrRouteFlts
	}
	return nil
}

func (x *Qos) GetQosRemoteIfQoss() *Qos_QosRemoteIfQoss {
	if x != nil {
		return x.QosRemoteIfQoss
	}
	return nil
}

func (x *Qos) GetQosSlotChannelAlarms() *Qos_QosSlotChannelAlarms {
	if x != nil {
		return x.QosSlotChannelAlarms
	}
	return nil
}

func (x *Qos) GetQosSlotChannelPres() *Qos_QosSlotChannelPres {
	if x != nil {
		return x.QosSlotChannelPres
	}
	return nil
}

func (x *Qos) GetQosSlotChannelProfileApps() *Qos_QosSlotChannelProfileApps {
	if x != nil {
		return x.QosSlotChannelProfileApps
	}
	return nil
}

func (x *Qos) GetQosSlotCvgPcds() *Qos_QosSlotCvgPcds {
	if x != nil {
		return x.QosSlotCvgPcds
	}
	return nil
}

func (x *Qos) GetQosSlotPQAlarms() *Qos_QosSlotPQAlarms {
	if x != nil {
		return x.QosSlotPQAlarms
	}
	return nil
}

func (x *Qos) GetQosSlotPQDiscardAlarms() *Qos_QosSlotPQDiscardAlarms {
	if x != nil {
		return x.QosSlotPQDiscardAlarms
	}
	return nil
}

func (x *Qos) GetQosSlotQoss() *Qos_QosSlotQoss {
	if x != nil {
		return x.QosSlotQoss
	}
	return nil
}

func (x *Qos) GetQosSubPortQueues() *Qos_QosSubPortQueues {
	if x != nil {
		return x.QosSubPortQueues
	}
	return nil
}

func (x *Qos) GetQosSystemViews() *Qos_QosSystemViews {
	if x != nil {
		return x.QosSystemViews
	}
	return nil
}

func (x *Qos) GetQosVPNQoss() *Qos_QosVPNQoss {
	if x != nil {
		return x.QosVPNQoss
	}
	return nil
}

func (x *Qos) GetQosWred() *Qos_QosWred {
	if x != nil {
		return x.QosWred
	}
	return nil
}

type HwXQoSPortQueueAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceIndex int32  `protobuf:"varint,1,opt,name=InterfaceIndex,proto3" json:"InterfaceIndex,omitempty"`
	Queue          string `protobuf:"bytes,2,opt,name=Queue,proto3" json:"Queue,omitempty"`
	TrunkIndex     int32  `protobuf:"varint,3,opt,name=TrunkIndex,proto3" json:"TrunkIndex,omitempty"`
}

func (x *HwXQoSPortQueueAlarm) Reset() {
	*x = HwXQoSPortQueueAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HwXQoSPortQueueAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HwXQoSPortQueueAlarm) ProtoMessage() {}

func (x *HwXQoSPortQueueAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HwXQoSPortQueueAlarm.ProtoReflect.Descriptor instead.
func (*HwXQoSPortQueueAlarm) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{24}
}

func (x *HwXQoSPortQueueAlarm) GetInterfaceIndex() int32 {
	if x != nil {
		return x.InterfaceIndex
	}
	return 0
}

func (x *HwXQoSPortQueueAlarm) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *HwXQoSPortQueueAlarm) GetTrunkIndex() int32 {
	if x != nil {
		return x.TrunkIndex
	}
	return 0
}

type HwXQoSPortQueueAlarmClear struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceIndex int32  `protobuf:"varint,1,opt,name=InterfaceIndex,proto3" json:"InterfaceIndex,omitempty"`
	Queue          string `protobuf:"bytes,2,opt,name=Queue,proto3" json:"Queue,omitempty"`
	TrunkIndex     int32  `protobuf:"varint,3,opt,name=TrunkIndex,proto3" json:"TrunkIndex,omitempty"`
}

func (x *HwXQoSPortQueueAlarmClear) Reset() {
	*x = HwXQoSPortQueueAlarmClear{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HwXQoSPortQueueAlarmClear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HwXQoSPortQueueAlarmClear) ProtoMessage() {}

func (x *HwXQoSPortQueueAlarmClear) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HwXQoSPortQueueAlarmClear.ProtoReflect.Descriptor instead.
func (*HwXQoSPortQueueAlarmClear) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{25}
}

func (x *HwXQoSPortQueueAlarmClear) GetInterfaceIndex() int32 {
	if x != nil {
		return x.InterfaceIndex
	}
	return 0
}

func (x *HwXQoSPortQueueAlarmClear) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *HwXQoSPortQueueAlarmClear) GetTrunkIndex() int32 {
	if x != nil {
		return x.TrunkIndex
	}
	return 0
}

type Qos_Hqos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosFlowMappings      *Qos_Hqos_HqosFlowMappings      `protobuf:"bytes,1,opt,name=hqosFlowMappings,proto3" json:"hqosFlowMappings,omitempty"`
	HqosFlowQueues        *Qos_Hqos_HqosFlowQueues        `protobuf:"bytes,2,opt,name=hqosFlowQueues,proto3" json:"hqosFlowQueues,omitempty"`
	HqosFourFlowMappings  *Qos_Hqos_HqosFourFlowMappings  `protobuf:"bytes,3,opt,name=hqosFourFlowMappings,proto3" json:"hqosFourFlowMappings,omitempty"`
	HqosIFUserQueues      *Qos_Hqos_HqosIFUserQueues      `protobuf:"bytes,4,opt,name=hqosIFUserQueues,proto3" json:"hqosIFUserQueues,omitempty"`
	HqosPortQTempApplys   *Qos_Hqos_HqosPortQTempApplys   `protobuf:"bytes,5,opt,name=hqosPortQTempApplys,proto3" json:"hqosPortQTempApplys,omitempty"`
	HqosPortQTemps        *Qos_Hqos_HqosPortQTemps        `protobuf:"bytes,6,opt,name=hqosPortQTemps,proto3" json:"hqosPortQTemps,omitempty"`
	HqosProfileApplys     *Qos_Hqos_HqosProfileApplys     `protobuf:"bytes,7,opt,name=hqosProfileApplys,proto3" json:"hqosProfileApplys,omitempty"`
	HqosProfiles          *Qos_Hqos_HqosProfiles          `protobuf:"bytes,8,opt,name=hqosProfiles,proto3" json:"hqosProfiles,omitempty"`
	HqosServiceTemplates  *Qos_Hqos_HqosServiceTemplates  `protobuf:"bytes,9,opt,name=hqosServiceTemplates,proto3" json:"hqosServiceTemplates,omitempty"`
	HqosUserGroupQueues   *Qos_Hqos_HqosUserGroupQueues   `protobuf:"bytes,10,opt,name=hqosUserGroupQueues,proto3" json:"hqosUserGroupQueues,omitempty"`
	HqosVNIQOSProAppNodes *Qos_Hqos_HqosVNIQOSProAppNodes `protobuf:"bytes,11,opt,name=hqosVNIQOSProAppNodes,proto3" json:"hqosVNIQOSProAppNodes,omitempty"`
}

func (x *Qos_Hqos) Reset() {
	*x = Qos_Hqos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos) ProtoMessage() {}

func (x *Qos_Hqos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos.ProtoReflect.Descriptor instead.
func (*Qos_Hqos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0}
}

func (x *Qos_Hqos) GetHqosFlowMappings() *Qos_Hqos_HqosFlowMappings {
	if x != nil {
		return x.HqosFlowMappings
	}
	return nil
}

func (x *Qos_Hqos) GetHqosFlowQueues() *Qos_Hqos_HqosFlowQueues {
	if x != nil {
		return x.HqosFlowQueues
	}
	return nil
}

func (x *Qos_Hqos) GetHqosFourFlowMappings() *Qos_Hqos_HqosFourFlowMappings {
	if x != nil {
		return x.HqosFourFlowMappings
	}
	return nil
}

func (x *Qos_Hqos) GetHqosIFUserQueues() *Qos_Hqos_HqosIFUserQueues {
	if x != nil {
		return x.HqosIFUserQueues
	}
	return nil
}

func (x *Qos_Hqos) GetHqosPortQTempApplys() *Qos_Hqos_HqosPortQTempApplys {
	if x != nil {
		return x.HqosPortQTempApplys
	}
	return nil
}

func (x *Qos_Hqos) GetHqosPortQTemps() *Qos_Hqos_HqosPortQTemps {
	if x != nil {
		return x.HqosPortQTemps
	}
	return nil
}

func (x *Qos_Hqos) GetHqosProfileApplys() *Qos_Hqos_HqosProfileApplys {
	if x != nil {
		return x.HqosProfileApplys
	}
	return nil
}

func (x *Qos_Hqos) GetHqosProfiles() *Qos_Hqos_HqosProfiles {
	if x != nil {
		return x.HqosProfiles
	}
	return nil
}

func (x *Qos_Hqos) GetHqosServiceTemplates() *Qos_Hqos_HqosServiceTemplates {
	if x != nil {
		return x.HqosServiceTemplates
	}
	return nil
}

func (x *Qos_Hqos) GetHqosUserGroupQueues() *Qos_Hqos_HqosUserGroupQueues {
	if x != nil {
		return x.HqosUserGroupQueues
	}
	return nil
}

func (x *Qos_Hqos) GetHqosVNIQOSProAppNodes() *Qos_Hqos_HqosVNIQOSProAppNodes {
	if x != nil {
		return x.HqosVNIQOSProAppNodes
	}
	return nil
}

type Qos_QosAclLogParaCfs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosAclLogParaCf []*Qos_QosAclLogParaCfs_QosAclLogParaCf `protobuf:"bytes,1,rep,name=qosAclLogParaCf,proto3" json:"qosAclLogParaCf,omitempty"`
}

func (x *Qos_QosAclLogParaCfs) Reset() {
	*x = Qos_QosAclLogParaCfs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosAclLogParaCfs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosAclLogParaCfs) ProtoMessage() {}

func (x *Qos_QosAclLogParaCfs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosAclLogParaCfs.ProtoReflect.Descriptor instead.
func (*Qos_QosAclLogParaCfs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 1}
}

func (x *Qos_QosAclLogParaCfs) GetQosAclLogParaCf() []*Qos_QosAclLogParaCfs_QosAclLogParaCf {
	if x != nil {
		return x.QosAclLogParaCf
	}
	return nil
}

type Qos_QosBDQoss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBDQos []*Qos_QosBDQoss_QosBDQos `protobuf:"bytes,1,rep,name=qosBDQos,proto3" json:"qosBDQos,omitempty"`
}

func (x *Qos_QosBDQoss) Reset() {
	*x = Qos_QosBDQoss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss) ProtoMessage() {}

func (x *Qos_QosBDQoss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2}
}

func (x *Qos_QosBDQoss) GetQosBDQos() []*Qos_QosBDQoss_QosBDQos {
	if x != nil {
		return x.QosBDQos
	}
	return nil
}

type Qos_QosBaHosts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBaHost []*Qos_QosBaHosts_QosBaHost `protobuf:"bytes,1,rep,name=qosBaHost,proto3" json:"qosBaHost,omitempty"`
}

func (x *Qos_QosBaHosts) Reset() {
	*x = Qos_QosBaHosts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBaHosts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBaHosts) ProtoMessage() {}

func (x *Qos_QosBaHosts) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBaHosts.ProtoReflect.Descriptor instead.
func (*Qos_QosBaHosts) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 3}
}

func (x *Qos_QosBaHosts) GetQosBaHost() []*Qos_QosBaHosts_QosBaHost {
	if x != nil {
		return x.QosBaHost
	}
	return nil
}

type Qos_QosBuffers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBuffer []*Qos_QosBuffers_QosBuffer `protobuf:"bytes,1,rep,name=qosBuffer,proto3" json:"qosBuffer,omitempty"`
}

func (x *Qos_QosBuffers) Reset() {
	*x = Qos_QosBuffers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBuffers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBuffers) ProtoMessage() {}

func (x *Qos_QosBuffers) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBuffers.ProtoReflect.Descriptor instead.
func (*Qos_QosBuffers) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 4}
}

func (x *Qos_QosBuffers) GetQosBuffer() []*Qos_QosBuffers_QosBuffer {
	if x != nil {
		return x.QosBuffer
	}
	return nil
}

type Qos_QosCbQos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBehaviors     *Qos_QosCbQos_QosBehaviors     `protobuf:"bytes,1,opt,name=qosBehaviors,proto3" json:"qosBehaviors,omitempty"`
	QosClassifiers   *Qos_QosCbQos_QosClassifiers   `protobuf:"bytes,2,opt,name=qosClassifiers,proto3" json:"qosClassifiers,omitempty"`
	QosMqcStatistics *Qos_QosCbQos_QosMqcStatistics `protobuf:"bytes,3,opt,name=qosMqcStatistics,proto3" json:"qosMqcStatistics,omitempty"`
	QosPolicys       *Qos_QosCbQos_QosPolicys       `protobuf:"bytes,4,opt,name=qosPolicys,proto3" json:"qosPolicys,omitempty"`
	QosVpnGroups     *Qos_QosCbQos_QosVpnGroups     `protobuf:"bytes,5,opt,name=qosVpnGroups,proto3" json:"qosVpnGroups,omitempty"`
}

func (x *Qos_QosCbQos) Reset() {
	*x = Qos_QosCbQos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos) ProtoMessage() {}

func (x *Qos_QosCbQos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5}
}

func (x *Qos_QosCbQos) GetQosBehaviors() *Qos_QosCbQos_QosBehaviors {
	if x != nil {
		return x.QosBehaviors
	}
	return nil
}

func (x *Qos_QosCbQos) GetQosClassifiers() *Qos_QosCbQos_QosClassifiers {
	if x != nil {
		return x.QosClassifiers
	}
	return nil
}

func (x *Qos_QosCbQos) GetQosMqcStatistics() *Qos_QosCbQos_QosMqcStatistics {
	if x != nil {
		return x.QosMqcStatistics
	}
	return nil
}

func (x *Qos_QosCbQos) GetQosPolicys() *Qos_QosCbQos_QosPolicys {
	if x != nil {
		return x.QosPolicys
	}
	return nil
}

func (x *Qos_QosCbQos) GetQosVpnGroups() *Qos_QosCbQos_QosVpnGroups {
	if x != nil {
		return x.QosVpnGroups
	}
	return nil
}

type Qos_QosChannelProfileTmps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosChannelProfileTmp []*Qos_QosChannelProfileTmps_QosChannelProfileTmp `protobuf:"bytes,1,rep,name=qosChannelProfileTmp,proto3" json:"qosChannelProfileTmp,omitempty"`
}

func (x *Qos_QosChannelProfileTmps) Reset() {
	*x = Qos_QosChannelProfileTmps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosChannelProfileTmps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosChannelProfileTmps) ProtoMessage() {}

func (x *Qos_QosChannelProfileTmps) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosChannelProfileTmps.ProtoReflect.Descriptor instead.
func (*Qos_QosChannelProfileTmps) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 6}
}

func (x *Qos_QosChannelProfileTmps) GetQosChannelProfileTmp() []*Qos_QosChannelProfileTmps_QosChannelProfileTmp {
	if x != nil {
		return x.QosChannelProfileTmp
	}
	return nil
}

type Qos_QosDss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosDs []*Qos_QosDss_QosDs `protobuf:"bytes,1,rep,name=qosDs,proto3" json:"qosDs,omitempty"`
}

func (x *Qos_QosDss) Reset() {
	*x = Qos_QosDss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosDss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosDss) ProtoMessage() {}

func (x *Qos_QosDss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosDss.ProtoReflect.Descriptor instead.
func (*Qos_QosDss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7}
}

func (x *Qos_QosDss) GetQosDs() []*Qos_QosDss_QosDs {
	if x != nil {
		return x.QosDs
	}
	return nil
}

type Qos_QosEVPLQoss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosEVPLQos []*Qos_QosEVPLQoss_QosEVPLQos `protobuf:"bytes,1,rep,name=qosEVPLQos,proto3" json:"qosEVPLQos,omitempty"`
}

func (x *Qos_QosEVPLQoss) Reset() {
	*x = Qos_QosEVPLQoss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosEVPLQoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosEVPLQoss) ProtoMessage() {}

func (x *Qos_QosEVPLQoss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosEVPLQoss.ProtoReflect.Descriptor instead.
func (*Qos_QosEVPLQoss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8}
}

func (x *Qos_QosEVPLQoss) GetQosEVPLQos() []*Qos_QosEVPLQoss_QosEVPLQos {
	if x != nil {
		return x.QosEVPLQos
	}
	return nil
}

type Qos_QosGlobalPolicys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosGlobalPolicy []*Qos_QosGlobalPolicys_QosGlobalPolicy `protobuf:"bytes,1,rep,name=qosGlobalPolicy,proto3" json:"qosGlobalPolicy,omitempty"`
}

func (x *Qos_QosGlobalPolicys) Reset() {
	*x = Qos_QosGlobalPolicys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosGlobalPolicys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosGlobalPolicys) ProtoMessage() {}

func (x *Qos_QosGlobalPolicys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosGlobalPolicys.ProtoReflect.Descriptor instead.
func (*Qos_QosGlobalPolicys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 9}
}

func (x *Qos_QosGlobalPolicys) GetQosGlobalPolicy() []*Qos_QosGlobalPolicys_QosGlobalPolicy {
	if x != nil {
		return x.QosGlobalPolicy
	}
	return nil
}

type Qos_QosGlobalQppbs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosGlobalQppb []*Qos_QosGlobalQppbs_QosGlobalQppb `protobuf:"bytes,1,rep,name=qosGlobalQppb,proto3" json:"qosGlobalQppb,omitempty"`
}

func (x *Qos_QosGlobalQppbs) Reset() {
	*x = Qos_QosGlobalQppbs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosGlobalQppbs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosGlobalQppbs) ProtoMessage() {}

func (x *Qos_QosGlobalQppbs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosGlobalQppbs.ProtoReflect.Descriptor instead.
func (*Qos_QosGlobalQppbs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 10}
}

func (x *Qos_QosGlobalQppbs) GetQosGlobalQppb() []*Qos_QosGlobalQppbs_QosGlobalQppb {
	if x != nil {
		return x.QosGlobalQppb
	}
	return nil
}

type Qos_QosHardPipeAbilitys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosHardPipeAbility []*Qos_QosHardPipeAbilitys_QosHardPipeAbility `protobuf:"bytes,1,rep,name=qosHardPipeAbility,proto3" json:"qosHardPipeAbility,omitempty"`
}

func (x *Qos_QosHardPipeAbilitys) Reset() {
	*x = Qos_QosHardPipeAbilitys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosHardPipeAbilitys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosHardPipeAbilitys) ProtoMessage() {}

func (x *Qos_QosHardPipeAbilitys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosHardPipeAbilitys.ProtoReflect.Descriptor instead.
func (*Qos_QosHardPipeAbilitys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 11}
}

func (x *Qos_QosHardPipeAbilitys) GetQosHardPipeAbility() []*Qos_QosHardPipeAbilitys_QosHardPipeAbility {
	if x != nil {
		return x.QosHardPipeAbility
	}
	return nil
}

type Qos_QosIfQoss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosIfQos []*Qos_QosIfQoss_QosIfQos `protobuf:"bytes,1,rep,name=qosIfQos,proto3" json:"qosIfQos,omitempty"`
}

func (x *Qos_QosIfQoss) Reset() {
	*x = Qos_QosIfQoss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss) ProtoMessage() {}

func (x *Qos_QosIfQoss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12}
}

func (x *Qos_QosIfQoss) GetQosIfQos() []*Qos_QosIfQoss_QosIfQos {
	if x != nil {
		return x.QosIfQos
	}
	return nil
}

type Qos_QosIfQppbCfgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosIfQppbCfg []*Qos_QosIfQppbCfgs_QosIfQppbCfg `protobuf:"bytes,1,rep,name=qosIfQppbCfg,proto3" json:"qosIfQppbCfg,omitempty"`
}

func (x *Qos_QosIfQppbCfgs) Reset() {
	*x = Qos_QosIfQppbCfgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQppbCfgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQppbCfgs) ProtoMessage() {}

func (x *Qos_QosIfQppbCfgs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQppbCfgs.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQppbCfgs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 13}
}

func (x *Qos_QosIfQppbCfgs) GetQosIfQppbCfg() []*Qos_QosIfQppbCfgs_QosIfQppbCfg {
	if x != nil {
		return x.QosIfQppbCfg
	}
	return nil
}

type Qos_QosInfUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosInfUser []*Qos_QosInfUsers_QosInfUser `protobuf:"bytes,1,rep,name=qosInfUser,proto3" json:"qosInfUser,omitempty"`
}

func (x *Qos_QosInfUsers) Reset() {
	*x = Qos_QosInfUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosInfUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosInfUsers) ProtoMessage() {}

func (x *Qos_QosInfUsers) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosInfUsers.ProtoReflect.Descriptor instead.
func (*Qos_QosInfUsers) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 14}
}

func (x *Qos_QosInfUsers) GetQosInfUser() []*Qos_QosInfUsers_QosInfUser {
	if x != nil {
		return x.QosInfUser
	}
	return nil
}

type Qos_QosLowLaEns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLowLaEn []*Qos_QosLowLaEns_QosLowLaEn `protobuf:"bytes,1,rep,name=qosLowLaEn,proto3" json:"qosLowLaEn,omitempty"`
}

func (x *Qos_QosLowLaEns) Reset() {
	*x = Qos_QosLowLaEns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLowLaEns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLowLaEns) ProtoMessage() {}

func (x *Qos_QosLowLaEns) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLowLaEns.ProtoReflect.Descriptor instead.
func (*Qos_QosLowLaEns) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 15}
}

func (x *Qos_QosLowLaEns) GetQosLowLaEn() []*Qos_QosLowLaEns_QosLowLaEn {
	if x != nil {
		return x.QosLowLaEn
	}
	return nil
}

type Qos_QosLsIfQoss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLsIfQos []*Qos_QosLsIfQoss_QosLsIfQos `protobuf:"bytes,1,rep,name=qosLsIfQos,proto3" json:"qosLsIfQos,omitempty"`
}

func (x *Qos_QosLsIfQoss) Reset() {
	*x = Qos_QosLsIfQoss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss) ProtoMessage() {}

func (x *Qos_QosLsIfQoss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16}
}

func (x *Qos_QosLsIfQoss) GetQosLsIfQos() []*Qos_QosLsIfQoss_QosLsIfQos {
	if x != nil {
		return x.QosLsIfQos
	}
	return nil
}

type Qos_QosLsQosGlobalPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLsPortQueueWeightSpec Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec `protobuf:"varint,1,opt,name=qosLsPortQueueWeightSpec,proto3,enum=huaweiV8R10_qos.Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec" json:"qosLsPortQueueWeightSpec,omitempty"`
}

func (x *Qos_QosLsQosGlobalPara) Reset() {
	*x = Qos_QosLsQosGlobalPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsQosGlobalPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsQosGlobalPara) ProtoMessage() {}

func (x *Qos_QosLsQosGlobalPara) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsQosGlobalPara.ProtoReflect.Descriptor instead.
func (*Qos_QosLsQosGlobalPara) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 17}
}

func (x *Qos_QosLsQosGlobalPara) GetQosLsPortQueueWeightSpec() Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec {
	if x != nil {
		return x.QosLsPortQueueWeightSpec
	}
	return Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec_DISABLE
}

type Qos_QosPQschedules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPQschedule []*Qos_QosPQschedules_QosPQschedule `protobuf:"bytes,1,rep,name=qosPQschedule,proto3" json:"qosPQschedule,omitempty"`
}

func (x *Qos_QosPQschedules) Reset() {
	*x = Qos_QosPQschedules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosPQschedules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosPQschedules) ProtoMessage() {}

func (x *Qos_QosPQschedules) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosPQschedules.ProtoReflect.Descriptor instead.
func (*Qos_QosPQschedules) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 18}
}

func (x *Qos_QosPQschedules) GetQosPQschedule() []*Qos_QosPQschedules_QosPQschedule {
	if x != nil {
		return x.QosPQschedule
	}
	return nil
}

type Qos_QosPackEnables struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPackEnable []*Qos_QosPackEnables_QosPackEnable `protobuf:"bytes,1,rep,name=qosPackEnable,proto3" json:"qosPackEnable,omitempty"`
}

func (x *Qos_QosPackEnables) Reset() {
	*x = Qos_QosPackEnables{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosPackEnables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosPackEnables) ProtoMessage() {}

func (x *Qos_QosPackEnables) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosPackEnables.ProtoReflect.Descriptor instead.
func (*Qos_QosPackEnables) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 19}
}

func (x *Qos_QosPackEnables) GetQosPackEnable() []*Qos_QosPackEnables_QosPackEnable {
	if x != nil {
		return x.QosPackEnable
	}
	return nil
}

type Qos_QosPirPrecisions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPirPrecision []*Qos_QosPirPrecisions_QosPirPrecision `protobuf:"bytes,1,rep,name=qosPirPrecision,proto3" json:"qosPirPrecision,omitempty"`
}

func (x *Qos_QosPirPrecisions) Reset() {
	*x = Qos_QosPirPrecisions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosPirPrecisions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosPirPrecisions) ProtoMessage() {}

func (x *Qos_QosPirPrecisions) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosPirPrecisions.ProtoReflect.Descriptor instead.
func (*Qos_QosPirPrecisions) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 20}
}

func (x *Qos_QosPirPrecisions) GetQosPirPrecision() []*Qos_QosPirPrecisions_QosPirPrecision {
	if x != nil {
		return x.QosPirPrecision
	}
	return nil
}

type Qos_QosPolicyMatchIpOnlys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPolicyMatchIpOnly []*Qos_QosPolicyMatchIpOnlys_QosPolicyMatchIpOnly `protobuf:"bytes,1,rep,name=qosPolicyMatchIpOnly,proto3" json:"qosPolicyMatchIpOnly,omitempty"`
}

func (x *Qos_QosPolicyMatchIpOnlys) Reset() {
	*x = Qos_QosPolicyMatchIpOnlys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosPolicyMatchIpOnlys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosPolicyMatchIpOnlys) ProtoMessage() {}

func (x *Qos_QosPolicyMatchIpOnlys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosPolicyMatchIpOnlys.ProtoReflect.Descriptor instead.
func (*Qos_QosPolicyMatchIpOnlys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 21}
}

func (x *Qos_QosPolicyMatchIpOnlys) GetQosPolicyMatchIpOnly() []*Qos_QosPolicyMatchIpOnlys_QosPolicyMatchIpOnly {
	if x != nil {
		return x.QosPolicyMatchIpOnly
	}
	return nil
}

type Qos_QosPortQueueStatInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPortQueueStatInfo []*Qos_QosPortQueueStatInfos_QosPortQueueStatInfo `protobuf:"bytes,1,rep,name=qosPortQueueStatInfo,proto3" json:"qosPortQueueStatInfo,omitempty"`
}

func (x *Qos_QosPortQueueStatInfos) Reset() {
	*x = Qos_QosPortQueueStatInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosPortQueueStatInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosPortQueueStatInfos) ProtoMessage() {}

func (x *Qos_QosPortQueueStatInfos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosPortQueueStatInfos.ProtoReflect.Descriptor instead.
func (*Qos_QosPortQueueStatInfos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 22}
}

func (x *Qos_QosPortQueueStatInfos) GetQosPortQueueStatInfo() []*Qos_QosPortQueueStatInfos_QosPortQueueStatInfo {
	if x != nil {
		return x.QosPortQueueStatInfo
	}
	return nil
}

type Qos_QosQppbPolicys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosQppbPolicy []*Qos_QosQppbPolicys_QosQppbPolicy `protobuf:"bytes,1,rep,name=qosQppbPolicy,proto3" json:"qosQppbPolicy,omitempty"`
}

func (x *Qos_QosQppbPolicys) Reset() {
	*x = Qos_QosQppbPolicys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosQppbPolicys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosQppbPolicys) ProtoMessage() {}

func (x *Qos_QosQppbPolicys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosQppbPolicys.ProtoReflect.Descriptor instead.
func (*Qos_QosQppbPolicys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 23}
}

func (x *Qos_QosQppbPolicys) GetQosQppbPolicy() []*Qos_QosQppbPolicys_QosQppbPolicy {
	if x != nil {
		return x.QosQppbPolicy
	}
	return nil
}

type Qos_QosRdrRouteFlts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRdrRouteFlt []*Qos_QosRdrRouteFlts_QosRdrRouteFlt `protobuf:"bytes,1,rep,name=qosRdrRouteFlt,proto3" json:"qosRdrRouteFlt,omitempty"`
}

func (x *Qos_QosRdrRouteFlts) Reset() {
	*x = Qos_QosRdrRouteFlts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosRdrRouteFlts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosRdrRouteFlts) ProtoMessage() {}

func (x *Qos_QosRdrRouteFlts) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosRdrRouteFlts.ProtoReflect.Descriptor instead.
func (*Qos_QosRdrRouteFlts) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 24}
}

func (x *Qos_QosRdrRouteFlts) GetQosRdrRouteFlt() []*Qos_QosRdrRouteFlts_QosRdrRouteFlt {
	if x != nil {
		return x.QosRdrRouteFlt
	}
	return nil
}

type Qos_QosRemoteIfQoss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRemoteIfQos []*Qos_QosRemoteIfQoss_QosRemoteIfQos `protobuf:"bytes,1,rep,name=qosRemoteIfQos,proto3" json:"qosRemoteIfQos,omitempty"`
}

func (x *Qos_QosRemoteIfQoss) Reset() {
	*x = Qos_QosRemoteIfQoss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosRemoteIfQoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosRemoteIfQoss) ProtoMessage() {}

func (x *Qos_QosRemoteIfQoss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosRemoteIfQoss.ProtoReflect.Descriptor instead.
func (*Qos_QosRemoteIfQoss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 25}
}

func (x *Qos_QosRemoteIfQoss) GetQosRemoteIfQos() []*Qos_QosRemoteIfQoss_QosRemoteIfQos {
	if x != nil {
		return x.QosRemoteIfQos
	}
	return nil
}

type Qos_QosSlotChannelAlarms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotChannelAlarm []*Qos_QosSlotChannelAlarms_QosSlotChannelAlarm `protobuf:"bytes,1,rep,name=qosSlotChannelAlarm,proto3" json:"qosSlotChannelAlarm,omitempty"`
}

func (x *Qos_QosSlotChannelAlarms) Reset() {
	*x = Qos_QosSlotChannelAlarms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotChannelAlarms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotChannelAlarms) ProtoMessage() {}

func (x *Qos_QosSlotChannelAlarms) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotChannelAlarms.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotChannelAlarms) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 26}
}

func (x *Qos_QosSlotChannelAlarms) GetQosSlotChannelAlarm() []*Qos_QosSlotChannelAlarms_QosSlotChannelAlarm {
	if x != nil {
		return x.QosSlotChannelAlarm
	}
	return nil
}

type Qos_QosSlotChannelPres struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotChannelPre []*Qos_QosSlotChannelPres_QosSlotChannelPre `protobuf:"bytes,1,rep,name=qosSlotChannelPre,proto3" json:"qosSlotChannelPre,omitempty"`
}

func (x *Qos_QosSlotChannelPres) Reset() {
	*x = Qos_QosSlotChannelPres{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotChannelPres) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotChannelPres) ProtoMessage() {}

func (x *Qos_QosSlotChannelPres) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotChannelPres.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotChannelPres) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 27}
}

func (x *Qos_QosSlotChannelPres) GetQosSlotChannelPre() []*Qos_QosSlotChannelPres_QosSlotChannelPre {
	if x != nil {
		return x.QosSlotChannelPre
	}
	return nil
}

type Qos_QosSlotChannelProfileApps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotChannelProfileApp []*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp `protobuf:"bytes,1,rep,name=qosSlotChannelProfileApp,proto3" json:"qosSlotChannelProfileApp,omitempty"`
}

func (x *Qos_QosSlotChannelProfileApps) Reset() {
	*x = Qos_QosSlotChannelProfileApps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotChannelProfileApps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotChannelProfileApps) ProtoMessage() {}

func (x *Qos_QosSlotChannelProfileApps) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotChannelProfileApps.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotChannelProfileApps) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 28}
}

func (x *Qos_QosSlotChannelProfileApps) GetQosSlotChannelProfileApp() []*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp {
	if x != nil {
		return x.QosSlotChannelProfileApp
	}
	return nil
}

type Qos_QosSlotCvgPcds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotCvgPcd []*Qos_QosSlotCvgPcds_QosSlotCvgPcd `protobuf:"bytes,1,rep,name=qosSlotCvgPcd,proto3" json:"qosSlotCvgPcd,omitempty"`
}

func (x *Qos_QosSlotCvgPcds) Reset() {
	*x = Qos_QosSlotCvgPcds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotCvgPcds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotCvgPcds) ProtoMessage() {}

func (x *Qos_QosSlotCvgPcds) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotCvgPcds.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotCvgPcds) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 29}
}

func (x *Qos_QosSlotCvgPcds) GetQosSlotCvgPcd() []*Qos_QosSlotCvgPcds_QosSlotCvgPcd {
	if x != nil {
		return x.QosSlotCvgPcd
	}
	return nil
}

type Qos_QosSlotPQAlarms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotPQAlarm []*Qos_QosSlotPQAlarms_QosSlotPQAlarm `protobuf:"bytes,1,rep,name=qosSlotPQAlarm,proto3" json:"qosSlotPQAlarm,omitempty"`
}

func (x *Qos_QosSlotPQAlarms) Reset() {
	*x = Qos_QosSlotPQAlarms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotPQAlarms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotPQAlarms) ProtoMessage() {}

func (x *Qos_QosSlotPQAlarms) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotPQAlarms.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotPQAlarms) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 30}
}

func (x *Qos_QosSlotPQAlarms) GetQosSlotPQAlarm() []*Qos_QosSlotPQAlarms_QosSlotPQAlarm {
	if x != nil {
		return x.QosSlotPQAlarm
	}
	return nil
}

type Qos_QosSlotPQDiscardAlarms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotPQDiscardAlarm []*Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm `protobuf:"bytes,1,rep,name=qosSlotPQDiscardAlarm,proto3" json:"qosSlotPQDiscardAlarm,omitempty"`
}

func (x *Qos_QosSlotPQDiscardAlarms) Reset() {
	*x = Qos_QosSlotPQDiscardAlarms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotPQDiscardAlarms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotPQDiscardAlarms) ProtoMessage() {}

func (x *Qos_QosSlotPQDiscardAlarms) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotPQDiscardAlarms.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotPQDiscardAlarms) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 31}
}

func (x *Qos_QosSlotPQDiscardAlarms) GetQosSlotPQDiscardAlarm() []*Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm {
	if x != nil {
		return x.QosSlotPQDiscardAlarm
	}
	return nil
}

type Qos_QosSlotQoss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotQos []*Qos_QosSlotQoss_QosSlotQos `protobuf:"bytes,1,rep,name=qosSlotQos,proto3" json:"qosSlotQos,omitempty"`
}

func (x *Qos_QosSlotQoss) Reset() {
	*x = Qos_QosSlotQoss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss) ProtoMessage() {}

func (x *Qos_QosSlotQoss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32}
}

func (x *Qos_QosSlotQoss) GetQosSlotQos() []*Qos_QosSlotQoss_QosSlotQos {
	if x != nil {
		return x.QosSlotQos
	}
	return nil
}

type Qos_QosSubPortQueues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSubPortQueue []*Qos_QosSubPortQueues_QosSubPortQueue `protobuf:"bytes,1,rep,name=qosSubPortQueue,proto3" json:"qosSubPortQueue,omitempty"`
}

func (x *Qos_QosSubPortQueues) Reset() {
	*x = Qos_QosSubPortQueues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSubPortQueues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSubPortQueues) ProtoMessage() {}

func (x *Qos_QosSubPortQueues) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSubPortQueues.ProtoReflect.Descriptor instead.
func (*Qos_QosSubPortQueues) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 33}
}

func (x *Qos_QosSubPortQueues) GetQosSubPortQueue() []*Qos_QosSubPortQueues_QosSubPortQueue {
	if x != nil {
		return x.QosSubPortQueue
	}
	return nil
}

type Qos_QosSystemViews struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSystemView []*Qos_QosSystemViews_QosSystemView `protobuf:"bytes,1,rep,name=qosSystemView,proto3" json:"qosSystemView,omitempty"`
}

func (x *Qos_QosSystemViews) Reset() {
	*x = Qos_QosSystemViews{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSystemViews) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSystemViews) ProtoMessage() {}

func (x *Qos_QosSystemViews) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSystemViews.ProtoReflect.Descriptor instead.
func (*Qos_QosSystemViews) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34}
}

func (x *Qos_QosSystemViews) GetQosSystemView() []*Qos_QosSystemViews_QosSystemView {
	if x != nil {
		return x.QosSystemView
	}
	return nil
}

type Qos_QosVPNQoss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosVPNQos []*Qos_QosVPNQoss_QosVPNQos `protobuf:"bytes,1,rep,name=qosVPNQos,proto3" json:"qosVPNQos,omitempty"`
}

func (x *Qos_QosVPNQoss) Reset() {
	*x = Qos_QosVPNQoss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosVPNQoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosVPNQoss) ProtoMessage() {}

func (x *Qos_QosVPNQoss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosVPNQoss.ProtoReflect.Descriptor instead.
func (*Qos_QosVPNQoss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35}
}

func (x *Qos_QosVPNQoss) GetQosVPNQos() []*Qos_QosVPNQoss_QosVPNQos {
	if x != nil {
		return x.QosVPNQos
	}
	return nil
}

type Qos_QosWred struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosFlowWreds  *Qos_QosWred_QosFlowWreds  `protobuf:"bytes,1,opt,name=qosFlowWreds,proto3" json:"qosFlowWreds,omitempty"`
	QosPortWreds  *Qos_QosWred_QosPortWreds  `protobuf:"bytes,2,opt,name=qosPortWreds,proto3" json:"qosPortWreds,omitempty"`
	QosWredQueues *Qos_QosWred_QosWredQueues `protobuf:"bytes,3,opt,name=qosWredQueues,proto3" json:"qosWredQueues,omitempty"`
	QosWreds      *Qos_QosWred_QosWreds      `protobuf:"bytes,4,opt,name=qosWreds,proto3" json:"qosWreds,omitempty"`
}

func (x *Qos_QosWred) Reset() {
	*x = Qos_QosWred{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred) ProtoMessage() {}

func (x *Qos_QosWred) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred.ProtoReflect.Descriptor instead.
func (*Qos_QosWred) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36}
}

func (x *Qos_QosWred) GetQosFlowWreds() *Qos_QosWred_QosFlowWreds {
	if x != nil {
		return x.QosFlowWreds
	}
	return nil
}

func (x *Qos_QosWred) GetQosPortWreds() *Qos_QosWred_QosPortWreds {
	if x != nil {
		return x.QosPortWreds
	}
	return nil
}

func (x *Qos_QosWred) GetQosWredQueues() *Qos_QosWred_QosWredQueues {
	if x != nil {
		return x.QosWredQueues
	}
	return nil
}

func (x *Qos_QosWred) GetQosWreds() *Qos_QosWred_QosWreds {
	if x != nil {
		return x.QosWreds
	}
	return nil
}

type Qos_Hqos_HqosFlowMappings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosFlowMapping []*Qos_Hqos_HqosFlowMappings_HqosFlowMapping `protobuf:"bytes,1,rep,name=hqosFlowMapping,proto3" json:"hqosFlowMapping,omitempty"`
}

func (x *Qos_Hqos_HqosFlowMappings) Reset() {
	*x = Qos_Hqos_HqosFlowMappings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowMappings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowMappings) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowMappings) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowMappings.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowMappings) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 0}
}

func (x *Qos_Hqos_HqosFlowMappings) GetHqosFlowMapping() []*Qos_Hqos_HqosFlowMappings_HqosFlowMapping {
	if x != nil {
		return x.HqosFlowMapping
	}
	return nil
}

type Qos_Hqos_HqosFlowQueues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosFlowQueue []*Qos_Hqos_HqosFlowQueues_HqosFlowQueue `protobuf:"bytes,1,rep,name=hqosFlowQueue,proto3" json:"hqosFlowQueue,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues) Reset() {
	*x = Qos_Hqos_HqosFlowQueues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1}
}

func (x *Qos_Hqos_HqosFlowQueues) GetHqosFlowQueue() []*Qos_Hqos_HqosFlowQueues_HqosFlowQueue {
	if x != nil {
		return x.HqosFlowQueue
	}
	return nil
}

type Qos_Hqos_HqosFourFlowMappings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosFourFlowMapping []*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping `protobuf:"bytes,1,rep,name=hqosFourFlowMapping,proto3" json:"hqosFourFlowMapping,omitempty"`
}

func (x *Qos_Hqos_HqosFourFlowMappings) Reset() {
	*x = Qos_Hqos_HqosFourFlowMappings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFourFlowMappings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFourFlowMappings) ProtoMessage() {}

func (x *Qos_Hqos_HqosFourFlowMappings) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFourFlowMappings.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFourFlowMappings) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 2}
}

func (x *Qos_Hqos_HqosFourFlowMappings) GetHqosFourFlowMapping() []*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping {
	if x != nil {
		return x.HqosFourFlowMapping
	}
	return nil
}

type Qos_Hqos_HqosIFUserQueues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosIFUserQueue []*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue `protobuf:"bytes,1,rep,name=hqosIFUserQueue,proto3" json:"hqosIFUserQueue,omitempty"`
}

func (x *Qos_Hqos_HqosIFUserQueues) Reset() {
	*x = Qos_Hqos_HqosIFUserQueues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosIFUserQueues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosIFUserQueues) ProtoMessage() {}

func (x *Qos_Hqos_HqosIFUserQueues) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosIFUserQueues.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosIFUserQueues) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 3}
}

func (x *Qos_Hqos_HqosIFUserQueues) GetHqosIFUserQueue() []*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue {
	if x != nil {
		return x.HqosIFUserQueue
	}
	return nil
}

type Qos_Hqos_HqosPortQTempApplys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosPortQTempApply []*Qos_Hqos_HqosPortQTempApplys_HqosPortQTempApply `protobuf:"bytes,1,rep,name=hqosPortQTempApply,proto3" json:"hqosPortQTempApply,omitempty"`
}

func (x *Qos_Hqos_HqosPortQTempApplys) Reset() {
	*x = Qos_Hqos_HqosPortQTempApplys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosPortQTempApplys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosPortQTempApplys) ProtoMessage() {}

func (x *Qos_Hqos_HqosPortQTempApplys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosPortQTempApplys.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosPortQTempApplys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 4}
}

func (x *Qos_Hqos_HqosPortQTempApplys) GetHqosPortQTempApply() []*Qos_Hqos_HqosPortQTempApplys_HqosPortQTempApply {
	if x != nil {
		return x.HqosPortQTempApply
	}
	return nil
}

type Qos_Hqos_HqosPortQTemps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosPortQTemp []*Qos_Hqos_HqosPortQTemps_HqosPortQTemp `protobuf:"bytes,1,rep,name=hqosPortQTemp,proto3" json:"hqosPortQTemp,omitempty"`
}

func (x *Qos_Hqos_HqosPortQTemps) Reset() {
	*x = Qos_Hqos_HqosPortQTemps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosPortQTemps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosPortQTemps) ProtoMessage() {}

func (x *Qos_Hqos_HqosPortQTemps) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosPortQTemps.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosPortQTemps) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 5}
}

func (x *Qos_Hqos_HqosPortQTemps) GetHqosPortQTemp() []*Qos_Hqos_HqosPortQTemps_HqosPortQTemp {
	if x != nil {
		return x.HqosPortQTemp
	}
	return nil
}

type Qos_Hqos_HqosProfileApplys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosProfileApply []*Qos_Hqos_HqosProfileApplys_HqosProfileApply `protobuf:"bytes,1,rep,name=hqosProfileApply,proto3" json:"hqosProfileApply,omitempty"`
}

func (x *Qos_Hqos_HqosProfileApplys) Reset() {
	*x = Qos_Hqos_HqosProfileApplys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfileApplys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfileApplys) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfileApplys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfileApplys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6}
}

func (x *Qos_Hqos_HqosProfileApplys) GetHqosProfileApply() []*Qos_Hqos_HqosProfileApplys_HqosProfileApply {
	if x != nil {
		return x.HqosProfileApply
	}
	return nil
}

type Qos_Hqos_HqosProfiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosProfile []*Qos_Hqos_HqosProfiles_HqosProfile `protobuf:"bytes,1,rep,name=hqosProfile,proto3" json:"hqosProfile,omitempty"`
}

func (x *Qos_Hqos_HqosProfiles) Reset() {
	*x = Qos_Hqos_HqosProfiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfiles) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfiles) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfiles) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7}
}

func (x *Qos_Hqos_HqosProfiles) GetHqosProfile() []*Qos_Hqos_HqosProfiles_HqosProfile {
	if x != nil {
		return x.HqosProfile
	}
	return nil
}

type Qos_Hqos_HqosServiceTemplates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosServiceTemplate []*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate `protobuf:"bytes,1,rep,name=hqosServiceTemplate,proto3" json:"hqosServiceTemplate,omitempty"`
}

func (x *Qos_Hqos_HqosServiceTemplates) Reset() {
	*x = Qos_Hqos_HqosServiceTemplates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosServiceTemplates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosServiceTemplates) ProtoMessage() {}

func (x *Qos_Hqos_HqosServiceTemplates) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosServiceTemplates.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosServiceTemplates) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 8}
}

func (x *Qos_Hqos_HqosServiceTemplates) GetHqosServiceTemplate() []*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate {
	if x != nil {
		return x.HqosServiceTemplate
	}
	return nil
}

type Qos_Hqos_HqosUserGroupQueues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosUserGroupQueue []*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue `protobuf:"bytes,1,rep,name=hqosUserGroupQueue,proto3" json:"hqosUserGroupQueue,omitempty"`
}

func (x *Qos_Hqos_HqosUserGroupQueues) Reset() {
	*x = Qos_Hqos_HqosUserGroupQueues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosUserGroupQueues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosUserGroupQueues) ProtoMessage() {}

func (x *Qos_Hqos_HqosUserGroupQueues) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosUserGroupQueues) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9}
}

func (x *Qos_Hqos_HqosUserGroupQueues) GetHqosUserGroupQueue() []*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue {
	if x != nil {
		return x.HqosUserGroupQueue
	}
	return nil
}

type Qos_Hqos_HqosVNIQOSProAppNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosVNIQOSProAppNode []*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode `protobuf:"bytes,1,rep,name=hqosVNIQOSProAppNode,proto3" json:"hqosVNIQOSProAppNode,omitempty"`
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes) Reset() {
	*x = Qos_Hqos_HqosVNIQOSProAppNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosVNIQOSProAppNodes) ProtoMessage() {}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosVNIQOSProAppNodes.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosVNIQOSProAppNodes) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 10}
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes) GetHqosVNIQOSProAppNode() []*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode {
	if x != nil {
		return x.HqosVNIQOSProAppNode
	}
	return nil
}

type Qos_Hqos_HqosFlowMappings_HqosFlowMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowMappingName string                                                  `protobuf:"bytes,1,opt,name=flowMappingName,proto3" json:"flowMappingName,omitempty"`
	HqosFMParams    *Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams `protobuf:"bytes,2,opt,name=hqosFMParams,proto3" json:"hqosFMParams,omitempty"`
}

func (x *Qos_Hqos_HqosFlowMappings_HqosFlowMapping) Reset() {
	*x = Qos_Hqos_HqosFlowMappings_HqosFlowMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowMappings_HqosFlowMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowMappings_HqosFlowMapping) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowMappings_HqosFlowMapping) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowMappings_HqosFlowMapping.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowMappings_HqosFlowMapping) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 0, 0}
}

func (x *Qos_Hqos_HqosFlowMappings_HqosFlowMapping) GetFlowMappingName() string {
	if x != nil {
		return x.FlowMappingName
	}
	return ""
}

func (x *Qos_Hqos_HqosFlowMappings_HqosFlowMapping) GetHqosFMParams() *Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams {
	if x != nil {
		return x.HqosFMParams
	}
	return nil
}

type Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosFMParam []*Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam `protobuf:"bytes,1,rep,name=hqosFMParam,proto3" json:"hqosFMParam,omitempty"`
}

func (x *Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams) Reset() {
	*x = Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 0, 0, 0}
}

func (x *Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams) GetHqosFMParam() []*Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam {
	if x != nil {
		return x.HqosFMParam
	}
	return nil
}

type Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CqServiceClass Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass `protobuf:"varint,1,opt,name=cqServiceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass" json:"cqServiceClass,omitempty"`
	FqServiceClass Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass `protobuf:"varint,2,opt,name=fqServiceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass" json:"fqServiceClass,omitempty"`
}

func (x *Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam) Reset() {
	*x = Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 0, 0, 0, 0}
}

func (x *Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam) GetCqServiceClass() Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass {
	if x != nil {
		return x.CqServiceClass
	}
	return Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass_AF1
}

func (x *Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam) GetFqServiceClass() Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass {
	if x != nil {
		return x.FqServiceClass
	}
	return Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass_AF1
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowQueueName             string                                                           `protobuf:"bytes,1,opt,name=flowQueueName,proto3" json:"flowQueueName,omitempty"`
	HqosPriorityScheduleModes *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes `protobuf:"bytes,2,opt,name=hqosPriorityScheduleModes,proto3" json:"hqosPriorityScheduleModes,omitempty"`
	HqosPriorityShareShapings *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings `protobuf:"bytes,3,opt,name=hqosPriorityShareShapings,proto3" json:"hqosPriorityShareShapings,omitempty"`
	HqosQueue4Coss            *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss            `protobuf:"bytes,4,opt,name=hqosQueue4coss,proto3" json:"hqosQueue4coss,omitempty"`
	HqosQueuePrioritys        *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys        `protobuf:"bytes,5,opt,name=hqosQueuePrioritys,proto3" json:"hqosQueuePrioritys,omitempty"`
	HqosQueues                *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues                `protobuf:"bytes,6,opt,name=hqosQueues,proto3" json:"hqosQueues,omitempty"`
	HqosRdmDscrds             *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds             `protobuf:"bytes,7,opt,name=hqosRdmDscrds,proto3" json:"hqosRdmDscrds,omitempty"`
	HqosShareShapeIDs         *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs         `protobuf:"bytes,8,opt,name=hqosShareShapeIDs,proto3" json:"hqosShareShapeIDs,omitempty"`
	HqosShareShapeRdms        *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms        `protobuf:"bytes,9,opt,name=hqosShareShapeRdms,proto3" json:"hqosShareShapeRdms,omitempty"`
	HqosShareShapes           *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes           `protobuf:"bytes,10,opt,name=hqosShareShapes,proto3" json:"hqosShareShapes,omitempty"`
	Prioritymodefq            Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq             `protobuf:"varint,11,opt,name=prioritymodefq,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq" json:"prioritymodefq,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue) GetFlowQueueName() string {
	if x != nil {
		return x.FlowQueueName
	}
	return ""
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue) GetHqosPriorityScheduleModes() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes {
	if x != nil {
		return x.HqosPriorityScheduleModes
	}
	return nil
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue) GetHqosPriorityShareShapings() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings {
	if x != nil {
		return x.HqosPriorityShareShapings
	}
	return nil
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue) GetHqosQueue4Coss() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss {
	if x != nil {
		return x.HqosQueue4Coss
	}
	return nil
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue) GetHqosQueuePrioritys() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys {
	if x != nil {
		return x.HqosQueuePrioritys
	}
	return nil
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue) GetHqosQueues() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues {
	if x != nil {
		return x.HqosQueues
	}
	return nil
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue) GetHqosRdmDscrds() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds {
	if x != nil {
		return x.HqosRdmDscrds
	}
	return nil
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue) GetHqosShareShapeIDs() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs {
	if x != nil {
		return x.HqosShareShapeIDs
	}
	return nil
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue) GetHqosShareShapeRdms() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms {
	if x != nil {
		return x.HqosShareShapeRdms
	}
	return nil
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue) GetHqosShareShapes() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes {
	if x != nil {
		return x.HqosShareShapes
	}
	return nil
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue) GetPrioritymodefq() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq {
	if x != nil {
		return x.Prioritymodefq
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq_IS4COS
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosPriorityScheduleMode []*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode `protobuf:"bytes,1,rep,name=hqosPriorityScheduleMode,proto3" json:"hqosPriorityScheduleMode,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 0}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes) GetHqosPriorityScheduleMode() []*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode {
	if x != nil {
		return x.HqosPriorityScheduleMode
	}
	return nil
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosPriorityShareShaping []*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping `protobuf:"bytes,1,rep,name=hqosPriorityShareShaping,proto3" json:"hqosPriorityShareShaping,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 1}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings) GetHqosPriorityShareShaping() []*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping {
	if x != nil {
		return x.HqosPriorityShareShaping
	}
	return nil
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosQueue4Cos []*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos `protobuf:"bytes,1,rep,name=hqosQueue4cos,proto3" json:"hqosQueue4cos,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 2}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss) GetHqosQueue4Cos() []*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos {
	if x != nil {
		return x.HqosQueue4Cos
	}
	return nil
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosQueuePriority []*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority `protobuf:"bytes,1,rep,name=hqosQueuePriority,proto3" json:"hqosQueuePriority,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 3}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys) GetHqosQueuePriority() []*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority {
	if x != nil {
		return x.HqosQueuePriority
	}
	return nil
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosQueue []*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue `protobuf:"bytes,1,rep,name=hqosQueue,proto3" json:"hqosQueue,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 4}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues) GetHqosQueue() []*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue {
	if x != nil {
		return x.HqosQueue
	}
	return nil
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosRdmDscrd []*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd `protobuf:"bytes,1,rep,name=hqosRdmDscrd,proto3" json:"hqosRdmDscrd,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 5}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds) GetHqosRdmDscrd() []*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd {
	if x != nil {
		return x.HqosRdmDscrd
	}
	return nil
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosShareShapeID *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID `protobuf:"bytes,1,opt,name=hqosShareShapeID,proto3" json:"hqosShareShapeID,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 6}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs) GetHqosShareShapeID() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID {
	if x != nil {
		return x.HqosShareShapeID
	}
	return nil
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosShareShapeRdm *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm `protobuf:"bytes,1,opt,name=hqosShareShapeRdm,proto3" json:"hqosShareShapeRdm,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 7}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms) GetHqosShareShapeRdm() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm {
	if x != nil {
		return x.HqosShareShapeRdm
	}
	return nil
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosShareShape *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape `protobuf:"bytes,1,opt,name=hqosShareShape,proto3" json:"hqosShareShape,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 8}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes) GetHqosShareShape() *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape {
	if x != nil {
		return x.HqosShareShape
	}
	return nil
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority          uint32                                                                                                     `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	QueueScheduleMode Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode `protobuf:"varint,2,opt,name=queueScheduleMode,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode" json:"queueScheduleMode,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode) ProtoMessage() {
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 0, 0}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode) GetQueueScheduleMode() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode {
	if x != nil {
		return x.QueueScheduleMode
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode_PQ
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Af1               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1               `protobuf:"varint,1,opt,name=af1,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1" json:"af1,omitempty"`
	Af2               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2               `protobuf:"varint,2,opt,name=af2,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2" json:"af2,omitempty"`
	Af3               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3               `protobuf:"varint,3,opt,name=af3,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3" json:"af3,omitempty"`
	Af4               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4               `protobuf:"varint,4,opt,name=af4,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4" json:"af4,omitempty"`
	Be                Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be                `protobuf:"varint,5,opt,name=be,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be" json:"be,omitempty"`
	Cs6               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6               `protobuf:"varint,6,opt,name=cs6,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6" json:"cs6,omitempty"`
	Cs7               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7               `protobuf:"varint,7,opt,name=cs7,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7" json:"cs7,omitempty"`
	Ef                Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef                `protobuf:"varint,8,opt,name=ef,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef" json:"ef,omitempty"`
	Pbs               uint32                                                                                                     `protobuf:"varint,9,opt,name=pbs,proto3" json:"pbs,omitempty"`
	QueueScheduleMode Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode `protobuf:"varint,10,opt,name=queueScheduleMode,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode" json:"queueScheduleMode,omitempty"`
	ShapId            Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId            `protobuf:"varint,11,opt,name=shapId,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId" json:"shapId,omitempty"`
	ShareShapingPir   uint32                                                                                                     `protobuf:"varint,12,opt,name=shareShapingPir,proto3" json:"shareShapingPir,omitempty"`
	Weight            uint32                                                                                                     `protobuf:"varint,13,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) ProtoMessage() {
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 1, 0}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) GetAf1() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1 {
	if x != nil {
		return x.Af1
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) GetAf2() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2 {
	if x != nil {
		return x.Af2
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) GetAf3() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3 {
	if x != nil {
		return x.Af3
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) GetAf4() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4 {
	if x != nil {
		return x.Af4
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) GetBe() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be {
	if x != nil {
		return x.Be
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) GetCs6() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6 {
	if x != nil {
		return x.Cs6
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) GetCs7() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7 {
	if x != nil {
		return x.Cs7
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) GetEf() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef {
	if x != nil {
		return x.Ef
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) GetQueueScheduleMode() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode {
	if x != nil {
		return x.QueueScheduleMode
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode_PQ
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) GetShapId() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId {
	if x != nil {
		return x.ShapId
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId_X_1
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) GetShareShapingPir() uint32 {
	if x != nil {
		return x.ShareShapingPir
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CosValue          Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue          `protobuf:"varint,1,opt,name=cosValue,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue" json:"cosValue,omitempty"`
	Pbs               uint32                                                                               `protobuf:"varint,2,opt,name=pbs,proto3" json:"pbs,omitempty"`
	QueueScheduleMode Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode `protobuf:"varint,3,opt,name=queueScheduleMode,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode" json:"queueScheduleMode,omitempty"`
	Shaping           uint32                                                                               `protobuf:"varint,4,opt,name=shaping,proto3" json:"shaping,omitempty"`
	ShapingPercentage uint32                                                                               `protobuf:"varint,5,opt,name=shapingPercentage,proto3" json:"shapingPercentage,omitempty"`
	Weight            uint32                                                                               `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	WredName          string                                                                               `protobuf:"bytes,7,opt,name=wredName,proto3" json:"wredName,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 2, 0}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos) GetCosValue() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue {
	if x != nil {
		return x.CosValue
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue_COS0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos) GetQueueScheduleMode() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode {
	if x != nil {
		return x.QueueScheduleMode
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode_LPQ
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos) GetShaping() uint32 {
	if x != nil {
		return x.Shaping
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos) GetShapingPercentage() uint32 {
	if x != nil {
		return x.ShapingPercentage
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos) GetWredName() string {
	if x != nil {
		return x.WredName
	}
	return ""
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority          uint32                                                                                  `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	ServiceClass      Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass `protobuf:"varint,2,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass" json:"serviceClass,omitempty"`
	Shaping           uint32                                                                                  `protobuf:"varint,3,opt,name=shaping,proto3" json:"shaping,omitempty"`
	ShapingPercentage uint32                                                                                  `protobuf:"varint,4,opt,name=shapingPercentage,proto3" json:"shapingPercentage,omitempty"`
	Weight            uint32                                                                                  `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
	WredName          string                                                                                  `protobuf:"bytes,6,opt,name=wredName,proto3" json:"wredName,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 3, 0}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority) GetServiceClass() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass_AF1
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority) GetShaping() uint32 {
	if x != nil {
		return x.Shaping
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority) GetShapingPercentage() uint32 {
	if x != nil {
		return x.ShapingPercentage
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority) GetWredName() string {
	if x != nil {
		return x.WredName
	}
	return ""
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Car               uint32                                                                       `protobuf:"varint,1,opt,name=car,proto3" json:"car,omitempty"`
	CarPercentage     uint32                                                                       `protobuf:"varint,2,opt,name=carPercentage,proto3" json:"carPercentage,omitempty"`
	Lowjitter         Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter         `protobuf:"varint,3,opt,name=lowjitter,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter" json:"lowjitter,omitempty"`
	Lowlatency        Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency        `protobuf:"varint,4,opt,name=lowlatency,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency" json:"lowlatency,omitempty"`
	Pbs               uint32                                                                       `protobuf:"varint,5,opt,name=pbs,proto3" json:"pbs,omitempty"`
	QueueScheduleMode Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode `protobuf:"varint,6,opt,name=queueScheduleMode,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode" json:"queueScheduleMode,omitempty"`
	ServiceClass      Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass      `protobuf:"varint,7,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass" json:"serviceClass,omitempty"`
	Shaping           uint32                                                                       `protobuf:"varint,8,opt,name=shaping,proto3" json:"shaping,omitempty"`
	ShapingPercentage uint32                                                                       `protobuf:"varint,9,opt,name=shapingPercentage,proto3" json:"shapingPercentage,omitempty"`
	Weight            uint32                                                                       `protobuf:"varint,10,opt,name=weight,proto3" json:"weight,omitempty"`
	WredName          string                                                                       `protobuf:"bytes,11,opt,name=wredName,proto3" json:"wredName,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 4, 0}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) GetCar() uint32 {
	if x != nil {
		return x.Car
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) GetCarPercentage() uint32 {
	if x != nil {
		return x.CarPercentage
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) GetLowjitter() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter {
	if x != nil {
		return x.Lowjitter
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter_DISABLE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) GetLowlatency() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency {
	if x != nil {
		return x.Lowlatency
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency_DISABLE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) GetQueueScheduleMode() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode {
	if x != nil {
		return x.QueueScheduleMode
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode_LPQ
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) GetServiceClass() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass_AF1
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) GetShaping() uint32 {
	if x != nil {
		return x.Shaping
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) GetShapingPercentage() uint32 {
	if x != nil {
		return x.ShapingPercentage
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue) GetWredName() string {
	if x != nil {
		return x.WredName
	}
	return ""
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RdmDscrd     string                                                                        `protobuf:"bytes,1,opt,name=rdmDscrd,proto3" json:"rdmDscrd,omitempty"`
	ServiceClass Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass `protobuf:"varint,2,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 5, 0}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd) GetRdmDscrd() string {
	if x != nil {
		return x.RdmDscrd
	}
	return ""
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd) GetServiceClass() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass_AF1
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Af1               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1               `protobuf:"varint,1,opt,name=af1,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1" json:"af1,omitempty"`
	Af2               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2               `protobuf:"varint,2,opt,name=af2,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2" json:"af2,omitempty"`
	Af3               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3               `protobuf:"varint,3,opt,name=af3,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3" json:"af3,omitempty"`
	Af4               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4               `protobuf:"varint,4,opt,name=af4,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4" json:"af4,omitempty"`
	Be                Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be                `protobuf:"varint,5,opt,name=be,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be" json:"be,omitempty"`
	Cs6               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6               `protobuf:"varint,6,opt,name=cs6,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6" json:"cs6,omitempty"`
	Cs7               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7               `protobuf:"varint,7,opt,name=cs7,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7" json:"cs7,omitempty"`
	Ef                Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef                `protobuf:"varint,8,opt,name=ef,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef" json:"ef,omitempty"`
	Pbs               uint32                                                                                     `protobuf:"varint,9,opt,name=pbs,proto3" json:"pbs,omitempty"`
	QueueScheduleMode Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode `protobuf:"varint,10,opt,name=queueScheduleMode,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode" json:"queueScheduleMode,omitempty"`
	ShareShapingPir   uint32                                                                                     `protobuf:"varint,11,opt,name=shareShapingPir,proto3" json:"shareShapingPir,omitempty"`
	Weight            uint32                                                                                     `protobuf:"varint,12,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 6, 0}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) GetAf1() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1 {
	if x != nil {
		return x.Af1
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) GetAf2() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2 {
	if x != nil {
		return x.Af2
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) GetAf3() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3 {
	if x != nil {
		return x.Af3
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) GetAf4() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4 {
	if x != nil {
		return x.Af4
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) GetBe() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be {
	if x != nil {
		return x.Be
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) GetCs6() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6 {
	if x != nil {
		return x.Cs6
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) GetCs7() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7 {
	if x != nil {
		return x.Cs7
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) GetEf() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef {
	if x != nil {
		return x.Ef
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) GetQueueScheduleMode() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode {
	if x != nil {
		return x.QueueScheduleMode
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode_LPQ
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) GetShareShapingPir() uint32 {
	if x != nil {
		return x.ShareShapingPir
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Af1      Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1 `protobuf:"varint,1,opt,name=af1,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1" json:"af1,omitempty"`
	Af2      Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2 `protobuf:"varint,2,opt,name=af2,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2" json:"af2,omitempty"`
	Af3      Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3 `protobuf:"varint,3,opt,name=af3,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3" json:"af3,omitempty"`
	Af4      Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4 `protobuf:"varint,4,opt,name=af4,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4" json:"af4,omitempty"`
	Be       Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be  `protobuf:"varint,5,opt,name=be,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be" json:"be,omitempty"`
	Cs6      Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6 `protobuf:"varint,6,opt,name=cs6,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6" json:"cs6,omitempty"`
	Cs7      Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7 `protobuf:"varint,7,opt,name=cs7,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7" json:"cs7,omitempty"`
	Ef       Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef  `protobuf:"varint,8,opt,name=ef,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef" json:"ef,omitempty"`
	RdmDscrd string                                                                         `protobuf:"bytes,9,opt,name=rdmDscrd,proto3" json:"rdmDscrd,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 7, 0}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm) GetAf1() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1 {
	if x != nil {
		return x.Af1
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm) GetAf2() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2 {
	if x != nil {
		return x.Af2
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm) GetAf3() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3 {
	if x != nil {
		return x.Af3
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm) GetAf4() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4 {
	if x != nil {
		return x.Af4
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm) GetBe() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be {
	if x != nil {
		return x.Be
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm) GetCs6() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6 {
	if x != nil {
		return x.Cs6
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm) GetCs7() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7 {
	if x != nil {
		return x.Cs7
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm) GetEf() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef {
	if x != nil {
		return x.Ef
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm) GetRdmDscrd() string {
	if x != nil {
		return x.RdmDscrd
	}
	return ""
}

type Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Af1               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1               `protobuf:"varint,1,opt,name=af1,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1" json:"af1,omitempty"`
	Af2               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2               `protobuf:"varint,2,opt,name=af2,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2" json:"af2,omitempty"`
	Af3               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3               `protobuf:"varint,3,opt,name=af3,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3" json:"af3,omitempty"`
	Af4               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4               `protobuf:"varint,4,opt,name=af4,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4" json:"af4,omitempty"`
	Be                Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be                `protobuf:"varint,5,opt,name=be,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be" json:"be,omitempty"`
	Cs6               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6               `protobuf:"varint,6,opt,name=cs6,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6" json:"cs6,omitempty"`
	Cs7               Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7               `protobuf:"varint,7,opt,name=cs7,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7" json:"cs7,omitempty"`
	Ef                Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef                `protobuf:"varint,8,opt,name=ef,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef" json:"ef,omitempty"`
	Pbs               uint32                                                                                 `protobuf:"varint,9,opt,name=pbs,proto3" json:"pbs,omitempty"`
	QueueScheduleMode Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode `protobuf:"varint,10,opt,name=queueScheduleMode,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode" json:"queueScheduleMode,omitempty"`
	ShareShapingPir   uint32                                                                                 `protobuf:"varint,11,opt,name=shareShapingPir,proto3" json:"shareShapingPir,omitempty"`
	Weight            uint32                                                                                 `protobuf:"varint,12,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) Reset() {
	*x = Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) ProtoMessage() {}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 1, 0, 8, 0}
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) GetAf1() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1 {
	if x != nil {
		return x.Af1
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) GetAf2() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2 {
	if x != nil {
		return x.Af2
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) GetAf3() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3 {
	if x != nil {
		return x.Af3
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) GetAf4() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4 {
	if x != nil {
		return x.Af4
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) GetBe() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be {
	if x != nil {
		return x.Be
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) GetCs6() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6 {
	if x != nil {
		return x.Cs6
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) GetCs7() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7 {
	if x != nil {
		return x.Cs7
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) GetEf() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef {
	if x != nil {
		return x.Ef
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef_FALSE
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) GetQueueScheduleMode() Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode {
	if x != nil {
		return x.QueueScheduleMode
	}
	return Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode_LPQ
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) GetShareShapingPir() uint32 {
	if x != nil {
		return x.ShareShapingPir
	}
	return 0
}

func (x *Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FourflowMappingName string                                                              `protobuf:"bytes,1,opt,name=fourflowMappingName,proto3" json:"fourflowMappingName,omitempty"`
	HqosFourFMParams    *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams `protobuf:"bytes,2,opt,name=hqosFourFMParams,proto3" json:"hqosFourFMParams,omitempty"`
}

func (x *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping) Reset() {
	*x = Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping) ProtoMessage() {}

func (x *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 2, 0}
}

func (x *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping) GetFourflowMappingName() string {
	if x != nil {
		return x.FourflowMappingName
	}
	return ""
}

func (x *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping) GetHqosFourFMParams() *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams {
	if x != nil {
		return x.HqosFourFMParams
	}
	return nil
}

type Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosFourFMParam []*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam `protobuf:"bytes,1,rep,name=hqosFourFMParam,proto3" json:"hqosFourFMParam,omitempty"`
}

func (x *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams) Reset() {
	*x = Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams) ProtoMessage() {}

func (x *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 2, 0, 0}
}

func (x *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams) GetHqosFourFMParam() []*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam {
	if x != nil {
		return x.HqosFourFMParam
	}
	return nil
}

type Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FfqosServiceClass Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass `protobuf:"varint,1,opt,name=ffqosServiceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass" json:"ffqosServiceClass,omitempty"`
	FqosServiceClass  Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass  `protobuf:"varint,2,opt,name=fqosServiceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass" json:"fqosServiceClass,omitempty"`
}

func (x *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam) Reset() {
	*x = Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam) ProtoMessage() {
}

func (x *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 2, 0, 0, 0}
}

func (x *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam) GetFfqosServiceClass() Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass {
	if x != nil {
		return x.FfqosServiceClass
	}
	return Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass_COS0
}

func (x *Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam) GetFqosServiceClass() Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass {
	if x != nil {
		return x.FqosServiceClass
	}
	return Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass_AF1
}

type Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cir                  uint32                                                          `protobuf:"varint,1,opt,name=cir,proto3" json:"cir,omitempty"`
	Direction            Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction             `protobuf:"varint,2,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction" json:"direction,omitempty"`
	FlowMappingName      string                                                          `protobuf:"bytes,3,opt,name=flowMappingName,proto3" json:"flowMappingName,omitempty"`
	FlowQueueName        string                                                          `protobuf:"bytes,4,opt,name=flowQueueName,proto3" json:"flowQueueName,omitempty"`
	GqName               string                                                          `protobuf:"bytes,5,opt,name=gqName,proto3" json:"gqName,omitempty"`
	HqosIFUserQueueStats *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats `protobuf:"bytes,6,opt,name=hqosIFUserQueueStats,proto3" json:"hqosIFUserQueueStats,omitempty"`
	IfName               string                                                          `protobuf:"bytes,7,opt,name=ifName,proto3" json:"ifName,omitempty"`
	Pir                  uint32                                                          `protobuf:"varint,8,opt,name=pir,proto3" json:"pir,omitempty"`
	TemplateName         string                                                          `protobuf:"bytes,9,opt,name=templateName,proto3" json:"templateName,omitempty"`
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue) Reset() {
	*x = Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue) ProtoMessage() {}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 3, 0}
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue) GetCir() uint32 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue) GetDirection() Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction_INBOUND
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue) GetFlowMappingName() string {
	if x != nil {
		return x.FlowMappingName
	}
	return ""
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue) GetFlowQueueName() string {
	if x != nil {
		return x.FlowQueueName
	}
	return ""
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue) GetGqName() string {
	if x != nil {
		return x.GqName
	}
	return ""
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue) GetHqosIFUserQueueStats() *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats {
	if x != nil {
		return x.HqosIFUserQueueStats
	}
	return nil
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue) GetPir() uint32 {
	if x != nil {
		return x.Pir
	}
	return 0
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

type Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosIFUserQueueStat []*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat `protobuf:"bytes,1,rep,name=hqosIFUserQueueStat,proto3" json:"hqosIFUserQueueStat,omitempty"`
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats) Reset() {
	*x = Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats) ProtoMessage() {}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 3, 0, 0}
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats) GetHqosIFUserQueueStat() []*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat {
	if x != nil {
		return x.HqosIFUserQueueStat
	}
	return nil
}

type Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DropByteRate uint64                                                                                          `protobuf:"varint,1,opt,name=dropByteRate,proto3" json:"dropByteRate,omitempty"`
	DropBytes    uint64                                                                                          `protobuf:"varint,2,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropPackets  uint64                                                                                          `protobuf:"varint,3,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktRate  uint64                                                                                          `protobuf:"varint,4,opt,name=dropPktRate,proto3" json:"dropPktRate,omitempty"`
	PassByteRate uint64                                                                                          `protobuf:"varint,5,opt,name=passByteRate,proto3" json:"passByteRate,omitempty"`
	PassBytes    uint64                                                                                          `protobuf:"varint,6,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets  uint64                                                                                          `protobuf:"varint,7,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktRate  uint64                                                                                          `protobuf:"varint,8,opt,name=passPktRate,proto3" json:"passPktRate,omitempty"`
	ServiceClass Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass `protobuf:"varint,9,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat) Reset() {
	*x = Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat) ProtoMessage() {
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 3, 0, 0, 0}
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat) GetDropByteRate() uint64 {
	if x != nil {
		return x.DropByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat) GetDropPktRate() uint64 {
	if x != nil {
		return x.DropPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat) GetPassByteRate() uint64 {
	if x != nil {
		return x.PassByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat) GetPassPktRate() uint64 {
	if x != nil {
		return x.PassPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat) GetServiceClass() Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass_AF1
}

type Qos_Hqos_HqosPortQTempApplys_HqosPortQTempApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfName        string `protobuf:"bytes,1,opt,name=ifName,proto3" json:"ifName,omitempty"`
	PortQTempName string `protobuf:"bytes,2,opt,name=portQTempName,proto3" json:"portQTempName,omitempty"`
}

func (x *Qos_Hqos_HqosPortQTempApplys_HqosPortQTempApply) Reset() {
	*x = Qos_Hqos_HqosPortQTempApplys_HqosPortQTempApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosPortQTempApplys_HqosPortQTempApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosPortQTempApplys_HqosPortQTempApply) ProtoMessage() {}

func (x *Qos_Hqos_HqosPortQTempApplys_HqosPortQTempApply) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosPortQTempApplys_HqosPortQTempApply.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosPortQTempApplys_HqosPortQTempApply) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 4, 0}
}

func (x *Qos_Hqos_HqosPortQTempApplys_HqosPortQTempApply) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_Hqos_HqosPortQTempApplys_HqosPortQTempApply) GetPortQTempName() string {
	if x != nil {
		return x.PortQTempName
	}
	return ""
}

type Qos_Hqos_HqosPortQTemps_HqosPortQTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosPortQParas *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas `protobuf:"bytes,1,opt,name=hqosPortQParas,proto3" json:"hqosPortQParas,omitempty"`
	PortQTempName  string                                                `protobuf:"bytes,2,opt,name=portQTempName,proto3" json:"portQTempName,omitempty"`
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp) Reset() {
	*x = Qos_Hqos_HqosPortQTemps_HqosPortQTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosPortQTemps_HqosPortQTemp) ProtoMessage() {}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosPortQTemps_HqosPortQTemp.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosPortQTemps_HqosPortQTemp) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 5, 0}
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp) GetHqosPortQParas() *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas {
	if x != nil {
		return x.HqosPortQParas
	}
	return nil
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp) GetPortQTempName() string {
	if x != nil {
		return x.PortQTempName
	}
	return ""
}

type Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosPortQPara []*Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara `protobuf:"bytes,1,rep,name=hqosPortQPara,proto3" json:"hqosPortQPara,omitempty"`
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas) Reset() {
	*x = Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas) ProtoMessage() {}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 5, 0, 0}
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas) GetHqosPortQPara() []*Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara {
	if x != nil {
		return x.HqosPortQPara
	}
	return nil
}

type Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lowlatency        Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency        `protobuf:"varint,1,opt,name=lowlatency,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency" json:"lowlatency,omitempty"`
	Pbs               uint32                                                                               `protobuf:"varint,2,opt,name=pbs,proto3" json:"pbs,omitempty"`
	QueueScheduleMode Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode `protobuf:"varint,3,opt,name=queueScheduleMode,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode" json:"queueScheduleMode,omitempty"`
	ServiceClass      Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass      `protobuf:"varint,4,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass" json:"serviceClass,omitempty"`
	Shaping           uint32                                                                               `protobuf:"varint,5,opt,name=shaping,proto3" json:"shaping,omitempty"`
	ShapingPercentage uint32                                                                               `protobuf:"varint,6,opt,name=shapingPercentage,proto3" json:"shapingPercentage,omitempty"`
	Weight            uint32                                                                               `protobuf:"varint,7,opt,name=weight,proto3" json:"weight,omitempty"`
	WredName          string                                                                               `protobuf:"bytes,8,opt,name=wredName,proto3" json:"wredName,omitempty"`
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara) Reset() {
	*x = Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara) ProtoMessage() {}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 5, 0, 0, 0}
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara) GetLowlatency() Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency {
	if x != nil {
		return x.Lowlatency
	}
	return Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency_DISABLE
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara) GetQueueScheduleMode() Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode {
	if x != nil {
		return x.QueueScheduleMode
	}
	return Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode_LPQ
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara) GetServiceClass() Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass_AF1
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara) GetShaping() uint32 {
	if x != nil {
		return x.Shaping
	}
	return 0
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara) GetShapingPercentage() uint32 {
	if x != nil {
		return x.ShapingPercentage
	}
	return 0
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara) GetWredName() string {
	if x != nil {
		return x.WredName
	}
	return ""
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppPeVlan           uint32                                                           `protobuf:"varint,1,opt,name=appPeVlan,proto3" json:"appPeVlan,omitempty"`
	CeBeginVlanID       uint32                                                           `protobuf:"varint,2,opt,name=ceBeginVlanID,proto3" json:"ceBeginVlanID,omitempty"`
	CeEndVlanID         uint32                                                           `protobuf:"varint,3,opt,name=ceEndVlanID,proto3" json:"ceEndVlanID,omitempty"`
	Direction           Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction            `protobuf:"varint,4,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction" json:"direction,omitempty"`
	GroupName           string                                                           `protobuf:"bytes,5,opt,name=groupName,proto3" json:"groupName,omitempty"`
	HqosGqStats         *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats         `protobuf:"bytes,6,opt,name=hqosGqStats,proto3" json:"hqosGqStats,omitempty"`
	HqosProfileCarStats *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats `protobuf:"bytes,7,opt,name=hqosProfileCarStats,proto3" json:"hqosProfileCarStats,omitempty"`
	HqosProfileStats    *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats    `protobuf:"bytes,8,opt,name=hqosProfileStats,proto3" json:"hqosProfileStats,omitempty"`
	HqosShareShapeStats *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats `protobuf:"bytes,9,opt,name=hqosShareShapeStats,proto3" json:"hqosShareShapeStats,omitempty"`
	IdentifyType        Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType         `protobuf:"varint,10,opt,name=identifyType,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType" json:"identifyType,omitempty"`
	IfName              string                                                           `protobuf:"bytes,11,opt,name=ifName,proto3" json:"ifName,omitempty"`
	ProAppType          Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType           `protobuf:"varint,12,opt,name=proAppType,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType" json:"proAppType,omitempty"`
	ProfileName         string                                                           `protobuf:"bytes,13,opt,name=profileName,proto3" json:"profileName,omitempty"`
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) Reset() {
	*x = Qos_Hqos_HqosProfileApplys_HqosProfileApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) GetAppPeVlan() uint32 {
	if x != nil {
		return x.AppPeVlan
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) GetCeBeginVlanID() uint32 {
	if x != nil {
		return x.CeBeginVlanID
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) GetCeEndVlanID() uint32 {
	if x != nil {
		return x.CeEndVlanID
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) GetDirection() Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction_INBOUND
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) GetHqosGqStats() *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats {
	if x != nil {
		return x.HqosGqStats
	}
	return nil
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) GetHqosProfileCarStats() *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats {
	if x != nil {
		return x.HqosProfileCarStats
	}
	return nil
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) GetHqosProfileStats() *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats {
	if x != nil {
		return x.HqosProfileStats
	}
	return nil
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) GetHqosShareShapeStats() *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats {
	if x != nil {
		return x.HqosShareShapeStats
	}
	return nil
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) GetIdentifyType() Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType {
	if x != nil {
		return x.IdentifyType
	}
	return Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType_CE_VID
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) GetProAppType() Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType {
	if x != nil {
		return x.ProAppType
	}
	return Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType_INTERFACE
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosGqStat []*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat `protobuf:"bytes,1,rep,name=hqosGqStat,proto3" json:"hqosGqStat,omitempty"`
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats) Reset() {
	*x = Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0, 0}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats) GetHqosGqStat() []*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat {
	if x != nil {
		return x.HqosGqStat
	}
	return nil
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosProfileCarStat []*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat `protobuf:"bytes,1,rep,name=hqosProfileCarStat,proto3" json:"hqosProfileCarStat,omitempty"`
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats) Reset() {
	*x = Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0, 1}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats) GetHqosProfileCarStat() []*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat {
	if x != nil {
		return x.HqosProfileCarStat
	}
	return nil
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosProfileStat []*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat `protobuf:"bytes,1,rep,name=hqosProfileStat,proto3" json:"hqosProfileStat,omitempty"`
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats) Reset() {
	*x = Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0, 2}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats) GetHqosProfileStat() []*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat {
	if x != nil {
		return x.HqosProfileStat
	}
	return nil
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosShareShapeStat []*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat `protobuf:"bytes,1,rep,name=hqosShareShapeStat,proto3" json:"hqosShareShapeStat,omitempty"`
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats) Reset() {
	*x = Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0, 3}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats) GetHqosShareShapeStat() []*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat {
	if x != nil {
		return x.HqosShareShapeStat
	}
	return nil
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DropByteRate uint64                                                                          `protobuf:"varint,1,opt,name=dropByteRate,proto3" json:"dropByteRate,omitempty"`
	DropBytes    uint64                                                                          `protobuf:"varint,2,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropPackets  uint64                                                                          `protobuf:"varint,3,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktRate  uint64                                                                          `protobuf:"varint,4,opt,name=dropPktRate,proto3" json:"dropPktRate,omitempty"`
	PassByteRate uint64                                                                          `protobuf:"varint,5,opt,name=passByteRate,proto3" json:"passByteRate,omitempty"`
	PassBytes    uint64                                                                          `protobuf:"varint,6,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets  uint64                                                                          `protobuf:"varint,7,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktRate  uint64                                                                          `protobuf:"varint,8,opt,name=passPktRate,proto3" json:"passPktRate,omitempty"`
	PevId        uint32                                                                          `protobuf:"varint,9,opt,name=pevId,proto3" json:"pevId,omitempty"`
	ServiceClass Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass `protobuf:"varint,10,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass" json:"serviceClass,omitempty"`
	VlanId       uint32                                                                          `protobuf:"varint,11,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) Reset() {
	*x = Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0, 0, 0}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) GetDropByteRate() uint64 {
	if x != nil {
		return x.DropByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) GetDropPktRate() uint64 {
	if x != nil {
		return x.DropPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) GetPassByteRate() uint64 {
	if x != nil {
		return x.PassByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) GetPassPktRate() uint64 {
	if x != nil {
		return x.PassPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) GetPevId() uint32 {
	if x != nil {
		return x.PevId
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) GetServiceClass() Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass_AF1
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat) GetVlanId() uint32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarType      Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType `protobuf:"varint,1,opt,name=carType,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType" json:"carType,omitempty"`
	DropByteRate uint64                                                                                     `protobuf:"varint,2,opt,name=dropByteRate,proto3" json:"dropByteRate,omitempty"`
	DropBytes    uint64                                                                                     `protobuf:"varint,3,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropPackets  uint64                                                                                     `protobuf:"varint,4,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktRate  uint64                                                                                     `protobuf:"varint,5,opt,name=dropPktRate,proto3" json:"dropPktRate,omitempty"`
	PassByteRate uint64                                                                                     `protobuf:"varint,6,opt,name=passByteRate,proto3" json:"passByteRate,omitempty"`
	PassBytes    uint64                                                                                     `protobuf:"varint,7,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets  uint64                                                                                     `protobuf:"varint,8,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktRate  uint64                                                                                     `protobuf:"varint,9,opt,name=passPktRate,proto3" json:"passPktRate,omitempty"`
	PeVlanId     uint32                                                                                     `protobuf:"varint,10,opt,name=peVlanId,proto3" json:"peVlanId,omitempty"`
	VlanId       uint32                                                                                     `protobuf:"varint,11,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) Reset() {
	*x = Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) ProtoMessage() {
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0, 1, 0}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) GetCarType() Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType {
	if x != nil {
		return x.CarType
	}
	return Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType_BROADCAST
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) GetDropByteRate() uint64 {
	if x != nil {
		return x.DropByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) GetDropPktRate() uint64 {
	if x != nil {
		return x.DropPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) GetPassByteRate() uint64 {
	if x != nil {
		return x.PassByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) GetPassPktRate() uint64 {
	if x != nil {
		return x.PassPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) GetPeVlanId() uint32 {
	if x != nil {
		return x.PeVlanId
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat) GetVlanId() uint32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufTotal        uint32                                                                                    `protobuf:"varint,1,opt,name=bufTotal,proto3" json:"bufTotal,omitempty"`
	BufUsed         uint32                                                                                    `protobuf:"varint,2,opt,name=bufUsed,proto3" json:"bufUsed,omitempty"`
	DropByteRate    uint64                                                                                    `protobuf:"varint,3,opt,name=dropByteRate,proto3" json:"dropByteRate,omitempty"`
	DropBytes       uint64                                                                                    `protobuf:"varint,4,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropPackets     uint64                                                                                    `protobuf:"varint,5,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktRate     uint64                                                                                    `protobuf:"varint,6,opt,name=dropPktRate,proto3" json:"dropPktRate,omitempty"`
	PassByteRate    uint64                                                                                    `protobuf:"varint,7,opt,name=passByteRate,proto3" json:"passByteRate,omitempty"`
	PassBytes       uint64                                                                                    `protobuf:"varint,8,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets     uint64                                                                                    `protobuf:"varint,9,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktRate     uint64                                                                                    `protobuf:"varint,10,opt,name=passPktRate,proto3" json:"passPktRate,omitempty"`
	PevId           uint32                                                                                    `protobuf:"varint,11,opt,name=pevId,proto3" json:"pevId,omitempty"`
	RdmDcrdByteRate uint64                                                                                    `protobuf:"varint,12,opt,name=rdmDcrdByteRate,proto3" json:"rdmDcrdByteRate,omitempty"`
	RdmDcrdBytes    uint64                                                                                    `protobuf:"varint,13,opt,name=rdmDcrdBytes,proto3" json:"rdmDcrdBytes,omitempty"`
	RdmDcrdPackets  uint64                                                                                    `protobuf:"varint,14,opt,name=rdmDcrdPackets,proto3" json:"rdmDcrdPackets,omitempty"`
	RdmDcrdPktRate  uint64                                                                                    `protobuf:"varint,15,opt,name=rdmDcrdPktRate,proto3" json:"rdmDcrdPktRate,omitempty"`
	ServiceClass    Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass `protobuf:"varint,16,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass" json:"serviceClass,omitempty"`
	TimeStampIn     string                                                                                    `protobuf:"bytes,17,opt,name=timeStampIn,proto3" json:"timeStampIn,omitempty"`
	VlanId          uint32                                                                                    `protobuf:"varint,18,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) Reset() {
	*x = Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0, 2, 0}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetBufTotal() uint32 {
	if x != nil {
		return x.BufTotal
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetBufUsed() uint32 {
	if x != nil {
		return x.BufUsed
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetDropByteRate() uint64 {
	if x != nil {
		return x.DropByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetDropPktRate() uint64 {
	if x != nil {
		return x.DropPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetPassByteRate() uint64 {
	if x != nil {
		return x.PassByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetPassPktRate() uint64 {
	if x != nil {
		return x.PassPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetPevId() uint32 {
	if x != nil {
		return x.PevId
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetRdmDcrdByteRate() uint64 {
	if x != nil {
		return x.RdmDcrdByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetRdmDcrdBytes() uint64 {
	if x != nil {
		return x.RdmDcrdBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetRdmDcrdPackets() uint64 {
	if x != nil {
		return x.RdmDcrdPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetRdmDcrdPktRate() uint64 {
	if x != nil {
		return x.RdmDcrdPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetServiceClass() Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass_AF1
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetTimeStampIn() string {
	if x != nil {
		return x.TimeStampIn
	}
	return ""
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat) GetVlanId() uint32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

type Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DropByteRate uint64 `protobuf:"varint,1,opt,name=dropByteRate,proto3" json:"dropByteRate,omitempty"`
	DropBytes    uint64 `protobuf:"varint,2,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropPackets  uint64 `protobuf:"varint,3,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktRate  uint64 `protobuf:"varint,4,opt,name=dropPktRate,proto3" json:"dropPktRate,omitempty"`
	PassByteRate uint64 `protobuf:"varint,5,opt,name=passByteRate,proto3" json:"passByteRate,omitempty"`
	PassBytes    uint64 `protobuf:"varint,6,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets  uint64 `protobuf:"varint,7,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktRate  uint64 `protobuf:"varint,8,opt,name=passPktRate,proto3" json:"passPktRate,omitempty"`
	PeVlanId     uint32 `protobuf:"varint,9,opt,name=peVlanId,proto3" json:"peVlanId,omitempty"`
	VlanId       uint32 `protobuf:"varint,10,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) Reset() {
	*x = Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) ProtoMessage() {
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 6, 0, 3, 0}
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) GetDropByteRate() uint64 {
	if x != nil {
		return x.DropByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) GetDropPktRate() uint64 {
	if x != nil {
		return x.DropPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) GetPassByteRate() uint64 {
	if x != nil {
		return x.PassByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) GetPassPktRate() uint64 {
	if x != nil {
		return x.PassPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) GetPeVlanId() uint32 {
	if x != nil {
		return x.PeVlanId
	}
	return 0
}

func (x *Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat) GetVlanId() uint32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

type Qos_Hqos_HqosProfiles_HqosProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosMplsHqoss           *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss           `protobuf:"bytes,1,opt,name=hqosMplsHqoss,proto3" json:"hqosMplsHqoss,omitempty"`
	HqosProCars             *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars             `protobuf:"bytes,2,opt,name=hqosProCars,proto3" json:"hqosProCars,omitempty"`
	HqosProTmpDescs         *Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs         `protobuf:"bytes,3,opt,name=hqosProTmpDescs,proto3" json:"hqosProTmpDescs,omitempty"`
	HqosSQWeights           *Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights           `protobuf:"bytes,4,opt,name=hqosSQWeights,proto3" json:"hqosSQWeights,omitempty"`
	HqosUserQueueTimeRanges *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges `protobuf:"bytes,5,opt,name=hqosUserQueueTimeRanges,proto3" json:"hqosUserQueueTimeRanges,omitempty"`
	HqosUserQueues          *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues          `protobuf:"bytes,6,opt,name=hqosUserQueues,proto3" json:"hqosUserQueues,omitempty"`
	ProfileName             string                                                     `protobuf:"bytes,7,opt,name=profileName,proto3" json:"profileName,omitempty"`
	TimeRange               Qos_Hqos_HqosProfiles_HqosProfile_TimeRange                `protobuf:"varint,8,opt,name=timeRange,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_TimeRange" json:"timeRange,omitempty"`
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile) Reset() {
	*x = Qos_Hqos_HqosProfiles_HqosProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfiles_HqosProfile) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfiles_HqosProfile) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfiles_HqosProfile) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile) GetHqosMplsHqoss() *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss {
	if x != nil {
		return x.HqosMplsHqoss
	}
	return nil
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile) GetHqosProCars() *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars {
	if x != nil {
		return x.HqosProCars
	}
	return nil
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile) GetHqosProTmpDescs() *Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs {
	if x != nil {
		return x.HqosProTmpDescs
	}
	return nil
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile) GetHqosSQWeights() *Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights {
	if x != nil {
		return x.HqosSQWeights
	}
	return nil
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile) GetHqosUserQueueTimeRanges() *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges {
	if x != nil {
		return x.HqosUserQueueTimeRanges
	}
	return nil
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile) GetHqosUserQueues() *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues {
	if x != nil {
		return x.HqosUserQueues
	}
	return nil
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile) GetTimeRange() Qos_Hqos_HqosProfiles_HqosProfile_TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_TimeRange_ISTIMERANGE
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosMplsHqos *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos `protobuf:"bytes,1,opt,name=hqosMplsHqos,proto3" json:"hqosMplsHqos,omitempty"`
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss) Reset() {
	*x = Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 0}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss) GetHqosMplsHqos() *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos {
	if x != nil {
		return x.HqosMplsHqos
	}
	return nil
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosProCar []*Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar `protobuf:"bytes,1,rep,name=hqosProCar,proto3" json:"hqosProCar,omitempty"`
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars) Reset() {
	*x = Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 1}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars) GetHqosProCar() []*Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar {
	if x != nil {
		return x.HqosProCar
	}
	return nil
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosProTmpDesc *Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs_HqosProTmpDesc `protobuf:"bytes,1,opt,name=hqosProTmpDesc,proto3" json:"hqosProTmpDesc,omitempty"`
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs) Reset() {
	*x = Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 2}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs) GetHqosProTmpDesc() *Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs_HqosProTmpDesc {
	if x != nil {
		return x.HqosProTmpDesc
	}
	return nil
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosSQWeight []*Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight `protobuf:"bytes,1,rep,name=hqosSQWeight,proto3" json:"hqosSQWeight,omitempty"`
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights) Reset() {
	*x = Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 3}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights) GetHqosSQWeight() []*Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight {
	if x != nil {
		return x.HqosSQWeight
	}
	return nil
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosUserQueueTimeRange []*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange `protobuf:"bytes,1,rep,name=hqosUserQueueTimeRange,proto3" json:"hqosUserQueueTimeRange,omitempty"`
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges) Reset() {
	*x = Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 4}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges) GetHqosUserQueueTimeRange() []*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange {
	if x != nil {
		return x.HqosUserQueueTimeRange
	}
	return nil
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosUserQueue []*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue `protobuf:"bytes,1,rep,name=hqosUserQueue,proto3" json:"hqosUserQueue,omitempty"`
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues) Reset() {
	*x = Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 5}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues) GetHqosUserQueue() []*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue {
	if x != nil {
		return x.HqosUserQueue
	}
	return nil
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowMappingName string `protobuf:"bytes,1,opt,name=flowMappingName,proto3" json:"flowMappingName,omitempty"`
	FlowQueueName   string `protobuf:"bytes,2,opt,name=flowQueueName,proto3" json:"flowQueueName,omitempty"`
	GqName          string `protobuf:"bytes,3,opt,name=gqName,proto3" json:"gqName,omitempty"`
	TemplateName    string `protobuf:"bytes,4,opt,name=templateName,proto3" json:"templateName,omitempty"`
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos) Reset() {
	*x = Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 0, 0}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos) GetFlowMappingName() string {
	if x != nil {
		return x.FlowMappingName
	}
	return ""
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos) GetFlowQueueName() string {
	if x != nil {
		return x.FlowQueueName
	}
	return ""
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos) GetGqName() string {
	if x != nil {
		return x.GqName
	}
	return ""
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarType            Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType            `protobuf:"varint,1,opt,name=carType,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType" json:"carType,omitempty"`
	Cbs                uint32                                                                      `protobuf:"varint,2,opt,name=cbs,proto3" json:"cbs,omitempty"`
	Cir                uint32                                                                      `protobuf:"varint,3,opt,name=cir,proto3" json:"cir,omitempty"`
	ColorAware         bool                                                                        `protobuf:"varint,4,opt,name=colorAware,proto3" json:"colorAware,omitempty"`
	Direction          Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction          `protobuf:"varint,5,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction" json:"direction,omitempty"`
	GreenAction        Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction        `protobuf:"varint,6,opt,name=greenAction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction" json:"greenAction,omitempty"`
	GreenColor         Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor         `protobuf:"varint,7,opt,name=greenColor,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor" json:"greenColor,omitempty"`
	GreenServiceClass  Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass  `protobuf:"varint,8,opt,name=greenServiceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass" json:"greenServiceClass,omitempty"`
	Pbs                uint32                                                                      `protobuf:"varint,9,opt,name=pbs,proto3" json:"pbs,omitempty"`
	Pir                uint32                                                                      `protobuf:"varint,10,opt,name=pir,proto3" json:"pir,omitempty"`
	RedAction          Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction          `protobuf:"varint,11,opt,name=redAction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction" json:"redAction,omitempty"`
	RedColor           Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor           `protobuf:"varint,12,opt,name=redColor,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor" json:"redColor,omitempty"`
	RedServiceClass    Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass    `protobuf:"varint,13,opt,name=redServiceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass" json:"redServiceClass,omitempty"`
	YellowAction       Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction       `protobuf:"varint,14,opt,name=yellowAction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction" json:"yellowAction,omitempty"`
	YellowColor        Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor        `protobuf:"varint,15,opt,name=yellowColor,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor" json:"yellowColor,omitempty"`
	YellowServiceClass Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass `protobuf:"varint,16,opt,name=yellowServiceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass" json:"yellowServiceClass,omitempty"`
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) Reset() {
	*x = Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 1, 0}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetCarType() Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType {
	if x != nil {
		return x.CarType
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType_BROADCAST
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetCbs() uint32 {
	if x != nil {
		return x.Cbs
	}
	return 0
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetCir() uint32 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetColorAware() bool {
	if x != nil {
		return x.ColorAware
	}
	return false
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetDirection() Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction_ALL
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetGreenAction() Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction {
	if x != nil {
		return x.GreenAction
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction_DISCARD
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetGreenColor() Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor {
	if x != nil {
		return x.GreenColor
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor_GREEN
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetGreenServiceClass() Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass {
	if x != nil {
		return x.GreenServiceClass
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass_AF1
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetPir() uint32 {
	if x != nil {
		return x.Pir
	}
	return 0
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetRedAction() Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction {
	if x != nil {
		return x.RedAction
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction_DISCARD
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetRedColor() Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor {
	if x != nil {
		return x.RedColor
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor_GREEN
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetRedServiceClass() Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass {
	if x != nil {
		return x.RedServiceClass
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass_AF1
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetYellowAction() Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction {
	if x != nil {
		return x.YellowAction
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction_DISCARD
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetYellowColor() Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor {
	if x != nil {
		return x.YellowColor
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor_GREEN
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar) GetYellowServiceClass() Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass {
	if x != nil {
		return x.YellowServiceClass
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass_AF1
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs_HqosProTmpDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptioninfo string `protobuf:"bytes,1,opt,name=descriptioninfo,proto3" json:"descriptioninfo,omitempty"`
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs_HqosProTmpDesc) Reset() {
	*x = Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs_HqosProTmpDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs_HqosProTmpDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs_HqosProTmpDesc) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs_HqosProTmpDesc) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs_HqosProTmpDesc.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs_HqosProTmpDesc) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 2, 0}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs_HqosProTmpDesc) GetDescriptioninfo() string {
	if x != nil {
		return x.Descriptioninfo
	}
	return ""
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction" json:"direction,omitempty"`
	Weight    uint32                                                                 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight) Reset() {
	*x = Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 3, 0}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight) GetDirection() Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction_ALL
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdjustOnCard    Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard    `protobuf:"varint,1,opt,name=adjustOnCard,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard" json:"adjustOnCard,omitempty"`
	Cbs             uint32                                                                                           `protobuf:"varint,2,opt,name=cbs,proto3" json:"cbs,omitempty"`
	Cir             uint32                                                                                           `protobuf:"varint,3,opt,name=cir,proto3" json:"cir,omitempty"`
	Direction       Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction       `protobuf:"varint,4,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction" json:"direction,omitempty"`
	FlowMappingName string                                                                                           `protobuf:"bytes,5,opt,name=flowMappingName,proto3" json:"flowMappingName,omitempty"`
	FlowQueueName   string                                                                                           `protobuf:"bytes,6,opt,name=flowQueueName,proto3" json:"flowQueueName,omitempty"`
	GqName          string                                                                                           `protobuf:"bytes,7,opt,name=gqName,proto3" json:"gqName,omitempty"`
	Pbs             uint32                                                                                           `protobuf:"varint,8,opt,name=pbs,proto3" json:"pbs,omitempty"`
	Pir             uint32                                                                                           `protobuf:"varint,9,opt,name=pir,proto3" json:"pir,omitempty"`
	PriorityLevelID Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID `protobuf:"varint,10,opt,name=priorityLevelID,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID" json:"priorityLevelID,omitempty"`
	TemplateName    string                                                                                           `protobuf:"bytes,11,opt,name=templateName,proto3" json:"templateName,omitempty"`
	TimeRangeName   string                                                                                           `protobuf:"bytes,12,opt,name=timeRangeName,proto3" json:"timeRangeName,omitempty"`
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) Reset() {
	*x = Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) ProtoMessage() {
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 4, 0}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) GetAdjustOnCard() Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard {
	if x != nil {
		return x.AdjustOnCard
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard_DISABLE
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) GetCbs() uint32 {
	if x != nil {
		return x.Cbs
	}
	return 0
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) GetCir() uint32 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) GetDirection() Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction_ALL
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) GetFlowMappingName() string {
	if x != nil {
		return x.FlowMappingName
	}
	return ""
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) GetFlowQueueName() string {
	if x != nil {
		return x.FlowQueueName
	}
	return ""
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) GetGqName() string {
	if x != nil {
		return x.GqName
	}
	return ""
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) GetPir() uint32 {
	if x != nil {
		return x.Pir
	}
	return 0
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) GetPriorityLevelID() Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID {
	if x != nil {
		return x.PriorityLevelID
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID_HIGH
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange) GetTimeRangeName() string {
	if x != nil {
		return x.TimeRangeName
	}
	return ""
}

type Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdjustOnCard    Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard    `protobuf:"varint,1,opt,name=adjustOnCard,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard" json:"adjustOnCard,omitempty"`
	Cbs             uint32                                                                         `protobuf:"varint,2,opt,name=cbs,proto3" json:"cbs,omitempty"`
	Cir             uint32                                                                         `protobuf:"varint,3,opt,name=cir,proto3" json:"cir,omitempty"`
	CirPercent      uint32                                                                         `protobuf:"varint,4,opt,name=cirPercent,proto3" json:"cirPercent,omitempty"`
	Direction       Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction       `protobuf:"varint,5,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction" json:"direction,omitempty"`
	FlowMappingName string                                                                         `protobuf:"bytes,6,opt,name=flowMappingName,proto3" json:"flowMappingName,omitempty"`
	FlowQueueName   string                                                                         `protobuf:"bytes,7,opt,name=flowQueueName,proto3" json:"flowQueueName,omitempty"`
	GqName          string                                                                         `protobuf:"bytes,8,opt,name=gqName,proto3" json:"gqName,omitempty"`
	Pbs             uint32                                                                         `protobuf:"varint,9,opt,name=pbs,proto3" json:"pbs,omitempty"`
	Pir             uint32                                                                         `protobuf:"varint,10,opt,name=pir,proto3" json:"pir,omitempty"`
	PirPercent      uint32                                                                         `protobuf:"varint,11,opt,name=pirPercent,proto3" json:"pirPercent,omitempty"`
	PriorityLevelID Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID `protobuf:"varint,12,opt,name=priorityLevelID,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID" json:"priorityLevelID,omitempty"`
	TemplateName    string                                                                         `protobuf:"bytes,13,opt,name=templateName,proto3" json:"templateName,omitempty"`
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) Reset() {
	*x = Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) ProtoMessage() {}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 7, 0, 5, 0}
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) GetAdjustOnCard() Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard {
	if x != nil {
		return x.AdjustOnCard
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard_DISABLE
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) GetCbs() uint32 {
	if x != nil {
		return x.Cbs
	}
	return 0
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) GetCir() uint32 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) GetCirPercent() uint32 {
	if x != nil {
		return x.CirPercent
	}
	return 0
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) GetDirection() Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction_ALL
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) GetFlowMappingName() string {
	if x != nil {
		return x.FlowMappingName
	}
	return ""
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) GetFlowQueueName() string {
	if x != nil {
		return x.FlowQueueName
	}
	return ""
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) GetGqName() string {
	if x != nil {
		return x.GqName
	}
	return ""
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) GetPir() uint32 {
	if x != nil {
		return x.Pir
	}
	return 0
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) GetPirPercent() uint32 {
	if x != nil {
		return x.PirPercent
	}
	return 0
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) GetPriorityLevelID() Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID {
	if x != nil {
		return x.PriorityLevelID
	}
	return Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID_HIGH
}

func (x *Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

type Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosSrvLengths *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths `protobuf:"bytes,1,opt,name=hqosSrvLengths,proto3" json:"hqosSrvLengths,omitempty"`
	SlotID         string                                                            `protobuf:"bytes,2,opt,name=slotID,proto3" json:"slotID,omitempty"`
	TemplateName   string                                                            `protobuf:"bytes,3,opt,name=templateName,proto3" json:"templateName,omitempty"`
}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate) Reset() {
	*x = Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate) ProtoMessage() {}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 8, 0}
}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate) GetHqosSrvLengths() *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths {
	if x != nil {
		return x.HqosSrvLengths
	}
	return nil
}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate) GetSlotID() string {
	if x != nil {
		return x.SlotID
	}
	return ""
}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

type Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosSrvLength []*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength `protobuf:"bytes,1,rep,name=hqosSrvLength,proto3" json:"hqosSrvLength,omitempty"`
}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths) Reset() {
	*x = Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths) ProtoMessage() {}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 8, 0, 0}
}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths) GetHqosSrvLength() []*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength {
	if x != nil {
		return x.HqosSrvLength
	}
	return nil
}

type Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction" json:"direction,omitempty"`
	Value     int32                                                                                    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength) Reset() {
	*x = Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength) ProtoMessage() {
}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 8, 0, 0, 0}
}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength) GetDirection() Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction_INBOUND
}

func (x *Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GqName                string                                                                 `protobuf:"bytes,1,opt,name=gqName,proto3" json:"gqName,omitempty"`
	HqosGQCirPirs         *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs         `protobuf:"bytes,2,opt,name=hqosGQCirPirs,proto3" json:"hqosGQCirPirs,omitempty"`
	HqosGQModes           *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes           `protobuf:"bytes,3,opt,name=hqosGQModes,proto3" json:"hqosGQModes,omitempty"`
	HqosGQShapingpriortys *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys `protobuf:"bytes,4,opt,name=hqosGQShapingpriortys,proto3" json:"hqosGQShapingpriortys,omitempty"`
	HqosGQShapings        *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings        `protobuf:"bytes,5,opt,name=hqosGQShapings,proto3" json:"hqosGQShapings,omitempty"`
	HqosGQStats           *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats           `protobuf:"bytes,6,opt,name=hqosGQStats,proto3" json:"hqosGQStats,omitempty"`
	HqosWeights           *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights           `protobuf:"bytes,7,opt,name=hqosWeights,proto3" json:"hqosWeights,omitempty"`
	Prioritymodegq        Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq         `protobuf:"varint,8,opt,name=prioritymodegq,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq" json:"prioritymodegq,omitempty"`
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue) Reset() {
	*x = Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue) ProtoMessage() {}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue) GetGqName() string {
	if x != nil {
		return x.GqName
	}
	return ""
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue) GetHqosGQCirPirs() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs {
	if x != nil {
		return x.HqosGQCirPirs
	}
	return nil
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue) GetHqosGQModes() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes {
	if x != nil {
		return x.HqosGQModes
	}
	return nil
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue) GetHqosGQShapingpriortys() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys {
	if x != nil {
		return x.HqosGQShapingpriortys
	}
	return nil
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue) GetHqosGQShapings() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings {
	if x != nil {
		return x.HqosGQShapings
	}
	return nil
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue) GetHqosGQStats() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats {
	if x != nil {
		return x.HqosGQStats
	}
	return nil
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue) GetHqosWeights() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights {
	if x != nil {
		return x.HqosWeights
	}
	return nil
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue) GetPrioritymodegq() Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq {
	if x != nil {
		return x.Prioritymodegq
	}
	return Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq_ISPRIORITY
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosGQCirPir []*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir `protobuf:"bytes,1,rep,name=hqosGQCirPir,proto3" json:"hqosGQCirPir,omitempty"`
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs) Reset() {
	*x = Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs) ProtoMessage() {}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 0}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs) GetHqosGQCirPir() []*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir {
	if x != nil {
		return x.HqosGQCirPir
	}
	return nil
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosGQMode *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode `protobuf:"bytes,1,opt,name=hqosGQMode,proto3" json:"hqosGQMode,omitempty"`
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes) Reset() {
	*x = Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes) ProtoMessage() {}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 1}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes) GetHqosGQMode() *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode {
	if x != nil {
		return x.HqosGQMode
	}
	return nil
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosGQShapingpriorty []*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty `protobuf:"bytes,1,rep,name=hqosGQShapingpriorty,proto3" json:"hqosGQShapingpriorty,omitempty"`
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys) Reset() {
	*x = Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys) ProtoMessage() {}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 2}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys) GetHqosGQShapingpriorty() []*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty {
	if x != nil {
		return x.HqosGQShapingpriorty
	}
	return nil
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosGQShaping []*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping `protobuf:"bytes,1,rep,name=hqosGQShaping,proto3" json:"hqosGQShaping,omitempty"`
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings) Reset() {
	*x = Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings) ProtoMessage() {}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 3}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings) GetHqosGQShaping() []*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping {
	if x != nil {
		return x.HqosGQShaping
	}
	return nil
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosGQStat []*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat `protobuf:"bytes,1,rep,name=hqosGQStat,proto3" json:"hqosGQStat,omitempty"`
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats) Reset() {
	*x = Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats) ProtoMessage() {}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 4}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats) GetHqosGQStat() []*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat {
	if x != nil {
		return x.HqosGQStat
	}
	return nil
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosWeight []*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight `protobuf:"bytes,1,rep,name=hqosWeight,proto3" json:"hqosWeight,omitempty"`
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights) Reset() {
	*x = Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights) ProtoMessage() {}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 5}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights) GetHqosWeight() []*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight {
	if x != nil {
		return x.HqosWeight
	}
	return nil
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cbs       uint32                                                                               `protobuf:"varint,1,opt,name=cbs,proto3" json:"cbs,omitempty"`
	Cir       uint32                                                                               `protobuf:"varint,2,opt,name=cir,proto3" json:"cir,omitempty"`
	Direction Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction `protobuf:"varint,3,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction" json:"direction,omitempty"`
	Pbs       uint32                                                                               `protobuf:"varint,4,opt,name=pbs,proto3" json:"pbs,omitempty"`
	Pir       uint32                                                                               `protobuf:"varint,5,opt,name=pir,proto3" json:"pir,omitempty"`
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir) Reset() {
	*x = Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir) ProtoMessage() {}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 0, 0}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir) GetCbs() uint32 {
	if x != nil {
		return x.Cbs
	}
	return 0
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir) GetCir() uint32 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir) GetDirection() Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction_OUTBOUND
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir) GetPir() uint32 {
	if x != nil {
		return x.Pir
	}
	return 0
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode `protobuf:"varint,1,opt,name=mode,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode" json:"mode,omitempty"`
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode) Reset() {
	*x = Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode) ProtoMessage() {}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 1, 0}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode) GetMode() Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode {
	if x != nil {
		return x.Mode
	}
	return Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode_NONE
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction" json:"direction,omitempty"`
	Pbs       uint32                                                                                               `protobuf:"varint,2,opt,name=pbs,proto3" json:"pbs,omitempty"`
	Pir       uint32                                                                                               `protobuf:"varint,3,opt,name=pir,proto3" json:"pir,omitempty"`
	Priority  Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority  `protobuf:"varint,4,opt,name=priority,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority" json:"priority,omitempty"`
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty) Reset() {
	*x = Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty) ProtoMessage() {
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 2, 0}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty) GetDirection() Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction_OUTBOUND
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty) GetPir() uint32 {
	if x != nil {
		return x.Pir
	}
	return 0
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty) GetPriority() Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority {
	if x != nil {
		return x.Priority
	}
	return Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority_NOPRIO
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction" json:"direction,omitempty"`
	Pbs       uint32                                                                                 `protobuf:"varint,2,opt,name=pbs,proto3" json:"pbs,omitempty"`
	Pir       uint32                                                                                 `protobuf:"varint,3,opt,name=pir,proto3" json:"pir,omitempty"`
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping) Reset() {
	*x = Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping) ProtoMessage() {}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 3, 0}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping) GetDirection() Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction_INBOUND
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping) GetPir() uint32 {
	if x != nil {
		return x.Pir
	}
	return 0
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction    Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction    `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction" json:"direction,omitempty"`
	DropByteRate uint64                                                                              `protobuf:"varint,2,opt,name=dropByteRate,proto3" json:"dropByteRate,omitempty"`
	DropBytes    uint64                                                                              `protobuf:"varint,3,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropPackets  uint64                                                                              `protobuf:"varint,4,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktRate  uint64                                                                              `protobuf:"varint,5,opt,name=dropPktRate,proto3" json:"dropPktRate,omitempty"`
	GroupName    string                                                                              `protobuf:"bytes,6,opt,name=groupName,proto3" json:"groupName,omitempty"`
	PassByteRate uint64                                                                              `protobuf:"varint,7,opt,name=passByteRate,proto3" json:"passByteRate,omitempty"`
	PassBytes    uint64                                                                              `protobuf:"varint,8,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets  uint64                                                                              `protobuf:"varint,9,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktRate  uint64                                                                              `protobuf:"varint,10,opt,name=passPktRate,proto3" json:"passPktRate,omitempty"`
	ServiceClass Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass `protobuf:"varint,11,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass" json:"serviceClass,omitempty"`
	SlotIdPath   string                                                                              `protobuf:"bytes,12,opt,name=slotIdPath,proto3" json:"slotIdPath,omitempty"`
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) Reset() {
	*x = Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) ProtoMessage() {}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 4, 0}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) GetDirection() Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction_INBOUND
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) GetDropByteRate() uint64 {
	if x != nil {
		return x.DropByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) GetDropPktRate() uint64 {
	if x != nil {
		return x.DropPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) GetPassByteRate() uint64 {
	if x != nil {
		return x.PassByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) GetPassPktRate() uint64 {
	if x != nil {
		return x.PassPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) GetServiceClass() Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass_AF1
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat) GetSlotIdPath() string {
	if x != nil {
		return x.SlotIdPath
	}
	return ""
}

type Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction" json:"direction,omitempty"`
	Weight    uint32                                                                           `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight) Reset() {
	*x = Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight) ProtoMessage() {}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 9, 0, 5, 0}
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight) GetDirection() Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction_OUTBOUND
}

func (x *Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction              Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction               `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction" json:"direction,omitempty"`
	HqosProfileVniCarStats *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats `protobuf:"bytes,2,opt,name=hqosProfileVniCarStats,proto3" json:"hqosProfileVniCarStats,omitempty"`
	HqosProfileVniStats    *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats    `protobuf:"bytes,3,opt,name=hqosProfileVniStats,proto3" json:"hqosProfileVniStats,omitempty"`
	ProfileName            string                                                                      `protobuf:"bytes,4,opt,name=profileName,proto3" json:"profileName,omitempty"`
	VniId                  uint32                                                                      `protobuf:"varint,5,opt,name=vniId,proto3" json:"vniId,omitempty"`
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode) Reset() {
	*x = Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode) ProtoMessage() {}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 10, 0}
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode) GetDirection() Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction_INBOUND
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode) GetHqosProfileVniCarStats() *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats {
	if x != nil {
		return x.HqosProfileVniCarStats
	}
	return nil
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode) GetHqosProfileVniStats() *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats {
	if x != nil {
		return x.HqosProfileVniStats
	}
	return nil
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode) GetVniId() uint32 {
	if x != nil {
		return x.VniId
	}
	return 0
}

type Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosProfileVniCarStat []*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat `protobuf:"bytes,1,rep,name=hqosProfileVniCarStat,proto3" json:"hqosProfileVniCarStat,omitempty"`
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats) Reset() {
	*x = Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats) ProtoMessage() {}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 10, 0, 0}
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats) GetHqosProfileVniCarStat() []*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat {
	if x != nil {
		return x.HqosProfileVniCarStat
	}
	return nil
}

type Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HqosProfileVniStat []*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat `protobuf:"bytes,1,rep,name=hqosProfileVniStat,proto3" json:"hqosProfileVniStat,omitempty"`
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats) Reset() {
	*x = Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats) ProtoMessage() {}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 10, 0, 1}
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats) GetHqosProfileVniStat() []*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat {
	if x != nil {
		return x.HqosProfileVniStat
	}
	return nil
}

type Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarType      Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType `protobuf:"varint,1,opt,name=carType,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType" json:"carType,omitempty"`
	DropByteRate uint64                                                                                                   `protobuf:"varint,2,opt,name=dropByteRate,proto3" json:"dropByteRate,omitempty"`
	DropBytes    uint64                                                                                                   `protobuf:"varint,3,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropPackets  uint64                                                                                                   `protobuf:"varint,4,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktRate  uint64                                                                                                   `protobuf:"varint,5,opt,name=dropPktRate,proto3" json:"dropPktRate,omitempty"`
	PassByteRate uint64                                                                                                   `protobuf:"varint,6,opt,name=passByteRate,proto3" json:"passByteRate,omitempty"`
	PassBytes    uint64                                                                                                   `protobuf:"varint,7,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets  uint64                                                                                                   `protobuf:"varint,8,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktRate  uint64                                                                                                   `protobuf:"varint,9,opt,name=passPktRate,proto3" json:"passPktRate,omitempty"`
	PeVlanId     uint32                                                                                                   `protobuf:"varint,10,opt,name=peVlanId,proto3" json:"peVlanId,omitempty"`
	VlanId       uint32                                                                                                   `protobuf:"varint,11,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) Reset() {
	*x = Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) ProtoMessage() {
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 10, 0, 0, 0}
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) GetCarType() Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType {
	if x != nil {
		return x.CarType
	}
	return Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType_BROADCAST
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) GetDropByteRate() uint64 {
	if x != nil {
		return x.DropByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) GetDropPktRate() uint64 {
	if x != nil {
		return x.DropPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) GetPassByteRate() uint64 {
	if x != nil {
		return x.PassByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) GetPassPktRate() uint64 {
	if x != nil {
		return x.PassPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) GetPeVlanId() uint32 {
	if x != nil {
		return x.PeVlanId
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat) GetVlanId() uint32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

type Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufTotal        uint32                                                                                                  `protobuf:"varint,1,opt,name=bufTotal,proto3" json:"bufTotal,omitempty"`
	BufUsed         uint32                                                                                                  `protobuf:"varint,2,opt,name=bufUsed,proto3" json:"bufUsed,omitempty"`
	DropByteRate    uint64                                                                                                  `protobuf:"varint,3,opt,name=dropByteRate,proto3" json:"dropByteRate,omitempty"`
	DropBytes       uint64                                                                                                  `protobuf:"varint,4,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropPackets     uint64                                                                                                  `protobuf:"varint,5,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktRate     uint64                                                                                                  `protobuf:"varint,6,opt,name=dropPktRate,proto3" json:"dropPktRate,omitempty"`
	PassByteRate    uint64                                                                                                  `protobuf:"varint,7,opt,name=passByteRate,proto3" json:"passByteRate,omitempty"`
	PassBytes       uint64                                                                                                  `protobuf:"varint,8,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets     uint64                                                                                                  `protobuf:"varint,9,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktRate     uint64                                                                                                  `protobuf:"varint,10,opt,name=passPktRate,proto3" json:"passPktRate,omitempty"`
	PevId           uint32                                                                                                  `protobuf:"varint,11,opt,name=pevId,proto3" json:"pevId,omitempty"`
	RdmDcrdByteRate uint64                                                                                                  `protobuf:"varint,12,opt,name=rdmDcrdByteRate,proto3" json:"rdmDcrdByteRate,omitempty"`
	RdmDcrdBytes    uint64                                                                                                  `protobuf:"varint,13,opt,name=rdmDcrdBytes,proto3" json:"rdmDcrdBytes,omitempty"`
	RdmDcrdPackets  uint64                                                                                                  `protobuf:"varint,14,opt,name=rdmDcrdPackets,proto3" json:"rdmDcrdPackets,omitempty"`
	RdmDcrdPktRate  uint64                                                                                                  `protobuf:"varint,15,opt,name=rdmDcrdPktRate,proto3" json:"rdmDcrdPktRate,omitempty"`
	ServiceClass    Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass `protobuf:"varint,16,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass" json:"serviceClass,omitempty"`
	TimeStampIn     string                                                                                                  `protobuf:"bytes,17,opt,name=timeStampIn,proto3" json:"timeStampIn,omitempty"`
	VlanId          uint32                                                                                                  `protobuf:"varint,18,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) Reset() {
	*x = Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) ProtoMessage() {
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat.ProtoReflect.Descriptor instead.
func (*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 0, 10, 0, 1, 0}
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetBufTotal() uint32 {
	if x != nil {
		return x.BufTotal
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetBufUsed() uint32 {
	if x != nil {
		return x.BufUsed
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetDropByteRate() uint64 {
	if x != nil {
		return x.DropByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetDropPktRate() uint64 {
	if x != nil {
		return x.DropPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetPassByteRate() uint64 {
	if x != nil {
		return x.PassByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetPassPktRate() uint64 {
	if x != nil {
		return x.PassPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetPevId() uint32 {
	if x != nil {
		return x.PevId
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetRdmDcrdByteRate() uint64 {
	if x != nil {
		return x.RdmDcrdByteRate
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetRdmDcrdBytes() uint64 {
	if x != nil {
		return x.RdmDcrdBytes
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetRdmDcrdPackets() uint64 {
	if x != nil {
		return x.RdmDcrdPackets
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetRdmDcrdPktRate() uint64 {
	if x != nil {
		return x.RdmDcrdPktRate
	}
	return 0
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetServiceClass() Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass_AF1
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetTimeStampIn() string {
	if x != nil {
		return x.TimeStampIn
	}
	return ""
}

func (x *Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat) GetVlanId() uint32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

type Qos_QosAclLogParaCfs_QosAclLogParaCf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcllogType Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType `protobuf:"varint,1,opt,name=acllogType,proto3,enum=huaweiV8R10_qos.Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType" json:"acllogType,omitempty"`
	AggingTime uint32                                          `protobuf:"varint,2,opt,name=aggingTime,proto3" json:"aggingTime,omitempty"`
	EntryNum   uint32                                          `protobuf:"varint,3,opt,name=entryNum,proto3" json:"entryNum,omitempty"`
}

func (x *Qos_QosAclLogParaCfs_QosAclLogParaCf) Reset() {
	*x = Qos_QosAclLogParaCfs_QosAclLogParaCf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosAclLogParaCfs_QosAclLogParaCf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosAclLogParaCfs_QosAclLogParaCf) ProtoMessage() {}

func (x *Qos_QosAclLogParaCfs_QosAclLogParaCf) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosAclLogParaCfs_QosAclLogParaCf.ProtoReflect.Descriptor instead.
func (*Qos_QosAclLogParaCfs_QosAclLogParaCf) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 1, 0}
}

func (x *Qos_QosAclLogParaCfs_QosAclLogParaCf) GetAcllogType() Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType {
	if x != nil {
		return x.AcllogType
	}
	return Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType_ACLLOG
}

func (x *Qos_QosAclLogParaCfs_QosAclLogParaCf) GetAggingTime() uint32 {
	if x != nil {
		return x.AggingTime
	}
	return 0
}

func (x *Qos_QosAclLogParaCfs_QosAclLogParaCf) GetEntryNum() uint32 {
	if x != nil {
		return x.EntryNum
	}
	return 0
}

type Qos_QosBDQoss_QosBDQos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BdName                    string                                            `protobuf:"bytes,1,opt,name=bdName,proto3" json:"bdName,omitempty"`
	QosBdDefaultServiceClasss *Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss `protobuf:"bytes,2,opt,name=qosBdDefaultServiceClasss,proto3" json:"qosBdDefaultServiceClasss,omitempty"`
	QosBdPhbs                 *Qos_QosBDQoss_QosBDQos_QosBdPhbs                 `protobuf:"bytes,3,opt,name=qosBdPhbs,proto3" json:"qosBdPhbs,omitempty"`
	QosBdPolicyApplys         *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys         `protobuf:"bytes,4,opt,name=qosBdPolicyApplys,proto3" json:"qosBdPolicyApplys,omitempty"`
	QosBdTrusts               *Qos_QosBDQoss_QosBDQos_QosBdTrusts               `protobuf:"bytes,5,opt,name=qosBdTrusts,proto3" json:"qosBdTrusts,omitempty"`
	QosBdVxlanCarDisables     *Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables     `protobuf:"bytes,6,opt,name=qosBdVxlanCarDisables,proto3" json:"qosBdVxlanCarDisables,omitempty"`
	QosBdVxlanPhbs            *Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs            `protobuf:"bytes,7,opt,name=qosBdVxlanPhbs,proto3" json:"qosBdVxlanPhbs,omitempty"`
	QosBdVxlanPolicyApplys    *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys    `protobuf:"bytes,8,opt,name=qosBdVxlanPolicyApplys,proto3" json:"qosBdVxlanPolicyApplys,omitempty"`
	QosBdVxlanTrusts          *Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts          `protobuf:"bytes,9,opt,name=qosBdVxlanTrusts,proto3" json:"qosBdVxlanTrusts,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos) Reset() {
	*x = Qos_QosBDQoss_QosBDQos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0}
}

func (x *Qos_QosBDQoss_QosBDQos) GetBdName() string {
	if x != nil {
		return x.BdName
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos) GetQosBdDefaultServiceClasss() *Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss {
	if x != nil {
		return x.QosBdDefaultServiceClasss
	}
	return nil
}

func (x *Qos_QosBDQoss_QosBDQos) GetQosBdPhbs() *Qos_QosBDQoss_QosBDQos_QosBdPhbs {
	if x != nil {
		return x.QosBdPhbs
	}
	return nil
}

func (x *Qos_QosBDQoss_QosBDQos) GetQosBdPolicyApplys() *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys {
	if x != nil {
		return x.QosBdPolicyApplys
	}
	return nil
}

func (x *Qos_QosBDQoss_QosBDQos) GetQosBdTrusts() *Qos_QosBDQoss_QosBDQos_QosBdTrusts {
	if x != nil {
		return x.QosBdTrusts
	}
	return nil
}

func (x *Qos_QosBDQoss_QosBDQos) GetQosBdVxlanCarDisables() *Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables {
	if x != nil {
		return x.QosBdVxlanCarDisables
	}
	return nil
}

func (x *Qos_QosBDQoss_QosBDQos) GetQosBdVxlanPhbs() *Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs {
	if x != nil {
		return x.QosBdVxlanPhbs
	}
	return nil
}

func (x *Qos_QosBDQoss_QosBDQos) GetQosBdVxlanPolicyApplys() *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys {
	if x != nil {
		return x.QosBdVxlanPolicyApplys
	}
	return nil
}

func (x *Qos_QosBDQoss_QosBDQos) GetQosBdVxlanTrusts() *Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts {
	if x != nil {
		return x.QosBdVxlanTrusts
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBdDefaultServiceClass *Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass `protobuf:"bytes,1,opt,name=qosBdDefaultServiceClass,proto3" json:"qosBdDefaultServiceClass,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss) GetQosBdDefaultServiceClass() *Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass {
	if x != nil {
		return x.QosBdDefaultServiceClass
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdPhbs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBdPhb []*Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb `protobuf:"bytes,1,rep,name=qosBdPhb,proto3" json:"qosBdPhb,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPhbs) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdPhbs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPhbs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdPhbs) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPhbs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPhbs.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdPhbs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 1}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPhbs) GetQosBdPhb() []*Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb {
	if x != nil {
		return x.QosBdPhb
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBdPolicyApply []*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply `protobuf:"bytes,1,rep,name=qosBdPolicyApply,proto3" json:"qosBdPolicyApply,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 2}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys) GetQosBdPolicyApply() []*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply {
	if x != nil {
		return x.QosBdPolicyApply
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdTrusts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBdTrust []*Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust `protobuf:"bytes,1,rep,name=qosBdTrust,proto3" json:"qosBdTrust,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdTrusts) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdTrusts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdTrusts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdTrusts) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdTrusts) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdTrusts.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdTrusts) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 3}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdTrusts) GetQosBdTrust() []*Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust {
	if x != nil {
		return x.QosBdTrust
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBdVxlanCarDisable []*Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable `protobuf:"bytes,1,rep,name=qosBdVxlanCarDisable,proto3" json:"qosBdVxlanCarDisable,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 4}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables) GetQosBdVxlanCarDisable() []*Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable {
	if x != nil {
		return x.QosBdVxlanCarDisable
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBdVxlanPhb *Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs_QosBdVxlanPhb `protobuf:"bytes,1,opt,name=qosBdVxlanPhb,proto3" json:"qosBdVxlanPhb,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 5}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs) GetQosBdVxlanPhb() *Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs_QosBdVxlanPhb {
	if x != nil {
		return x.QosBdVxlanPhb
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBdVxlanPolicyApply []*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply `protobuf:"bytes,1,rep,name=qosBdVxlanPolicyApply,proto3" json:"qosBdVxlanPolicyApply,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 6}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys) GetQosBdVxlanPolicyApply() []*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply {
	if x != nil {
		return x.QosBdVxlanPolicyApply
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBdVxlanTrust []*Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust `protobuf:"bytes,1,rep,name=qosBdVxlanTrust,proto3" json:"qosBdVxlanTrust,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 7}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts) GetQosBdVxlanTrust() []*Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust {
	if x != nil {
		return x.QosBdVxlanTrust
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServicebdClass Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass `protobuf:"varint,1,opt,name=servicebdClass,proto3,enum=huaweiV8R10_qos.Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass" json:"servicebdClass,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 0, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass) GetServicebdClass() Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass {
	if x != nil {
		return x.ServicebdClass
	}
	return Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass_AF1
}

type Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DsbdName      string                                                  `protobuf:"bytes,1,opt,name=dsbdName,proto3" json:"dsbdName,omitempty"`
	MapbdType     Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType     `protobuf:"varint,2,opt,name=mapbdType,proto3,enum=huaweiV8R10_qos.Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType" json:"mapbdType,omitempty"`
	OperatebdType Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType `protobuf:"varint,3,opt,name=operatebdType,proto3,enum=huaweiV8R10_qos.Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType" json:"operatebdType,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 1, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb) GetDsbdName() string {
	if x != nil {
		return x.DsbdName
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb) GetMapbdType() Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType {
	if x != nil {
		return x.MapbdType
	}
	return Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType_DSCP
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb) GetOperatebdType() Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType {
	if x != nil {
		return x.OperatebdType
	}
	return Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType_DISABLE
}

type Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bddirection      Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection       `protobuf:"varint,1,opt,name=bddirection,proto3,enum=huaweiV8R10_qos.Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection" json:"bddirection,omitempty"`
	Bdlayer          Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer           `protobuf:"varint,2,opt,name=bdlayer,proto3,enum=huaweiV8R10_qos.Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer" json:"bdlayer,omitempty"`
	BdpolicyName     string                                                                      `protobuf:"bytes,3,opt,name=bdpolicyName,proto3" json:"bdpolicyName,omitempty"`
	QosBdActSqStats  *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats  `protobuf:"bytes,4,opt,name=qosBdActSqStats,proto3" json:"qosBdActSqStats,omitempty"`
	QosBdPolicyStats *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats `protobuf:"bytes,5,opt,name=qosBdPolicyStats,proto3" json:"qosBdPolicyStats,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 2, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply) GetBddirection() Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection {
	if x != nil {
		return x.Bddirection
	}
	return Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection_INBOUND
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply) GetBdlayer() Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer {
	if x != nil {
		return x.Bdlayer
	}
	return Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer_ALL
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply) GetBdpolicyName() string {
	if x != nil {
		return x.BdpolicyName
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply) GetQosBdActSqStats() *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats {
	if x != nil {
		return x.QosBdActSqStats
	}
	return nil
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply) GetQosBdPolicyStats() *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats {
	if x != nil {
		return x.QosBdPolicyStats
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBdActSqStat []*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat `protobuf:"bytes,1,rep,name=qosBdActSqStat,proto3" json:"qosBdActSqStat,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 2, 0, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats) GetQosBdActSqStat() []*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat {
	if x != nil {
		return x.QosBdActSqStat
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBdPolicyStat []*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat `protobuf:"bytes,1,rep,name=qosBdPolicyStat,proto3" json:"qosBdPolicyStat,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 2, 0, 1}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats) GetQosBdPolicyStat() []*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat {
	if x != nil {
		return x.QosBdPolicyStat
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BdifName       string                                                                                                `protobuf:"bytes,1,opt,name=bdifName,proto3" json:"bdifName,omitempty"`
	BufTotal       uint32                                                                                                `protobuf:"varint,2,opt,name=bufTotal,proto3" json:"bufTotal,omitempty"`
	BufUsed        uint32                                                                                                `protobuf:"varint,3,opt,name=bufUsed,proto3" json:"bufUsed,omitempty"`
	ClassifierName string                                                                                                `protobuf:"bytes,4,opt,name=classifierName,proto3" json:"classifierName,omitempty"`
	DropByteRate   uint64                                                                                                `protobuf:"varint,5,opt,name=dropByteRate,proto3" json:"dropByteRate,omitempty"`
	DropBytes      uint64                                                                                                `protobuf:"varint,6,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropPackets    uint64                                                                                                `protobuf:"varint,7,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktRate    uint64                                                                                                `protobuf:"varint,8,opt,name=dropPktRate,proto3" json:"dropPktRate,omitempty"`
	PassByteRate   uint64                                                                                                `protobuf:"varint,9,opt,name=passByteRate,proto3" json:"passByteRate,omitempty"`
	PassBytes      uint64                                                                                                `protobuf:"varint,10,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets    uint64                                                                                                `protobuf:"varint,11,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktRate    uint64                                                                                                `protobuf:"varint,12,opt,name=passPktRate,proto3" json:"passPktRate,omitempty"`
	ServiceClass   Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass `protobuf:"varint,13,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass" json:"serviceClass,omitempty"`
	SlotIdPath     string                                                                                                `protobuf:"bytes,14,opt,name=slotIdPath,proto3" json:"slotIdPath,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) ProtoMessage() {
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 2, 0, 0, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) GetBdifName() string {
	if x != nil {
		return x.BdifName
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) GetBufTotal() uint32 {
	if x != nil {
		return x.BufTotal
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) GetBufUsed() uint32 {
	if x != nil {
		return x.BufUsed
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) GetClassifierName() string {
	if x != nil {
		return x.ClassifierName
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) GetDropByteRate() uint64 {
	if x != nil {
		return x.DropByteRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) GetDropPktRate() uint64 {
	if x != nil {
		return x.DropPktRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) GetPassByteRate() uint64 {
	if x != nil {
		return x.PassByteRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) GetPassPktRate() uint64 {
	if x != nil {
		return x.PassPktRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) GetServiceClass() Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass_AF1
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat) GetSlotIdPath() string {
	if x != nil {
		return x.SlotIdPath
	}
	return ""
}

type Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BdapplyTime          string                                                                                                           `protobuf:"bytes,1,opt,name=bdapplyTime,proto3" json:"bdapplyTime,omitempty"`
	BdifName             string                                                                                                           `protobuf:"bytes,2,opt,name=bdifName,proto3" json:"bdifName,omitempty"`
	BdmatchByteRate      uint64                                                                                                           `protobuf:"varint,3,opt,name=bdmatchByteRate,proto3" json:"bdmatchByteRate,omitempty"`
	BdmatchBytes         uint64                                                                                                           `protobuf:"varint,4,opt,name=bdmatchBytes,proto3" json:"bdmatchBytes,omitempty"`
	BdmatchDropBytes     uint64                                                                                                           `protobuf:"varint,5,opt,name=bdmatchDropBytes,proto3" json:"bdmatchDropBytes,omitempty"`
	BdmatchDropBytesRate uint64                                                                                                           `protobuf:"varint,6,opt,name=bdmatchDropBytesRate,proto3" json:"bdmatchDropBytesRate,omitempty"`
	BdmatchDropPkts      uint64                                                                                                           `protobuf:"varint,7,opt,name=bdmatchDropPkts,proto3" json:"bdmatchDropPkts,omitempty"`
	BdmatchDropPktsRate  uint64                                                                                                           `protobuf:"varint,8,opt,name=bdmatchDropPktsRate,proto3" json:"bdmatchDropPktsRate,omitempty"`
	BdmatchPackets       uint64                                                                                                           `protobuf:"varint,9,opt,name=bdmatchPackets,proto3" json:"bdmatchPackets,omitempty"`
	BdmatchPassBytes     uint64                                                                                                           `protobuf:"varint,10,opt,name=bdmatchPassBytes,proto3" json:"bdmatchPassBytes,omitempty"`
	BdmatchPassBytesRate uint64                                                                                                           `protobuf:"varint,11,opt,name=bdmatchPassBytesRate,proto3" json:"bdmatchPassBytesRate,omitempty"`
	BdmatchPassPkts      uint64                                                                                                           `protobuf:"varint,12,opt,name=bdmatchPassPkts,proto3" json:"bdmatchPassPkts,omitempty"`
	BdmatchPassPktsRate  uint64                                                                                                           `protobuf:"varint,13,opt,name=bdmatchPassPktsRate,proto3" json:"bdmatchPassPktsRate,omitempty"`
	BdmatchPktRate       uint64                                                                                                           `protobuf:"varint,14,opt,name=bdmatchPktRate,proto3" json:"bdmatchPktRate,omitempty"`
	BdmissBytes          uint64                                                                                                           `protobuf:"varint,15,opt,name=bdmissBytes,proto3" json:"bdmissBytes,omitempty"`
	BdmissBytesRate      uint64                                                                                                           `protobuf:"varint,16,opt,name=bdmissBytesRate,proto3" json:"bdmissBytesRate,omitempty"`
	BdmissPackets        uint64                                                                                                           `protobuf:"varint,17,opt,name=bdmissPackets,proto3" json:"bdmissPackets,omitempty"`
	BdmissPktsRate       uint64                                                                                                           `protobuf:"varint,18,opt,name=bdmissPktsRate,proto3" json:"bdmissPktsRate,omitempty"`
	BdstatClearFlag      bool                                                                                                             `protobuf:"varint,19,opt,name=bdstatClearFlag,proto3" json:"bdstatClearFlag,omitempty"`
	BdstatClearTime      string                                                                                                           `protobuf:"bytes,20,opt,name=bdstatClearTime,proto3" json:"bdstatClearTime,omitempty"`
	BdstatEnableTime     string                                                                                                           `protobuf:"bytes,21,opt,name=bdstatEnableTime,proto3" json:"bdstatEnableTime,omitempty"`
	QosBdClassifierStats *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats `protobuf:"bytes,22,opt,name=qosBdClassifierStats,proto3" json:"qosBdClassifierStats,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) ProtoMessage() {
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 2, 0, 1, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdapplyTime() string {
	if x != nil {
		return x.BdapplyTime
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdifName() string {
	if x != nil {
		return x.BdifName
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmatchByteRate() uint64 {
	if x != nil {
		return x.BdmatchByteRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmatchBytes() uint64 {
	if x != nil {
		return x.BdmatchBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmatchDropBytes() uint64 {
	if x != nil {
		return x.BdmatchDropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmatchDropBytesRate() uint64 {
	if x != nil {
		return x.BdmatchDropBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmatchDropPkts() uint64 {
	if x != nil {
		return x.BdmatchDropPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmatchDropPktsRate() uint64 {
	if x != nil {
		return x.BdmatchDropPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmatchPackets() uint64 {
	if x != nil {
		return x.BdmatchPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmatchPassBytes() uint64 {
	if x != nil {
		return x.BdmatchPassBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmatchPassBytesRate() uint64 {
	if x != nil {
		return x.BdmatchPassBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmatchPassPkts() uint64 {
	if x != nil {
		return x.BdmatchPassPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmatchPassPktsRate() uint64 {
	if x != nil {
		return x.BdmatchPassPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmatchPktRate() uint64 {
	if x != nil {
		return x.BdmatchPktRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmissBytes() uint64 {
	if x != nil {
		return x.BdmissBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmissBytesRate() uint64 {
	if x != nil {
		return x.BdmissBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmissPackets() uint64 {
	if x != nil {
		return x.BdmissPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdmissPktsRate() uint64 {
	if x != nil {
		return x.BdmissPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdstatClearFlag() bool {
	if x != nil {
		return x.BdstatClearFlag
	}
	return false
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdstatClearTime() string {
	if x != nil {
		return x.BdstatClearTime
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetBdstatEnableTime() string {
	if x != nil {
		return x.BdstatEnableTime
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat) GetQosBdClassifierStats() *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats {
	if x != nil {
		return x.QosBdClassifierStats
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBdClassifierStat []*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat `protobuf:"bytes,1,rep,name=qosBdClassifierStat,proto3" json:"qosBdClassifierStat,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats) ProtoMessage() {
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 2, 0, 1, 0, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats) GetQosBdClassifierStat() []*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat {
	if x != nil {
		return x.QosBdClassifierStat
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BdcarBytes                     uint64 `protobuf:"varint,1,opt,name=bdcarBytes,proto3" json:"bdcarBytes,omitempty"`
	BdcarBytesRate                 uint64 `protobuf:"varint,2,opt,name=bdcarBytesRate,proto3" json:"bdcarBytesRate,omitempty"`
	BdcarDropBytes                 uint64 `protobuf:"varint,3,opt,name=bdcarDropBytes,proto3" json:"bdcarDropBytes,omitempty"`
	BdcarDropBytesRate             uint64 `protobuf:"varint,4,opt,name=bdcarDropBytesRate,proto3" json:"bdcarDropBytesRate,omitempty"`
	BdcarDropPkts                  uint64 `protobuf:"varint,5,opt,name=bdcarDropPkts,proto3" json:"bdcarDropPkts,omitempty"`
	BdcarDropPktsRate              uint64 `protobuf:"varint,6,opt,name=bdcarDropPktsRate,proto3" json:"bdcarDropPktsRate,omitempty"`
	BdcarGBytes                    uint64 `protobuf:"varint,7,opt,name=bdcarGBytes,proto3" json:"bdcarGBytes,omitempty"`
	BdcarGBytesRate                uint64 `protobuf:"varint,8,opt,name=bdcarGBytesRate,proto3" json:"bdcarGBytesRate,omitempty"`
	BdcarGPkts                     uint64 `protobuf:"varint,9,opt,name=bdcarGPkts,proto3" json:"bdcarGPkts,omitempty"`
	BdcarGPktsRate                 uint64 `protobuf:"varint,10,opt,name=bdcarGPktsRate,proto3" json:"bdcarGPktsRate,omitempty"`
	BdcarPackets                   uint64 `protobuf:"varint,11,opt,name=bdcarPackets,proto3" json:"bdcarPackets,omitempty"`
	BdcarPassBytes                 uint64 `protobuf:"varint,12,opt,name=bdcarPassBytes,proto3" json:"bdcarPassBytes,omitempty"`
	BdcarPassBytesRate             uint64 `protobuf:"varint,13,opt,name=bdcarPassBytesRate,proto3" json:"bdcarPassBytesRate,omitempty"`
	BdcarPassPkts                  uint64 `protobuf:"varint,14,opt,name=bdcarPassPkts,proto3" json:"bdcarPassPkts,omitempty"`
	BdcarPassPktsRate              uint64 `protobuf:"varint,15,opt,name=bdcarPassPktsRate,proto3" json:"bdcarPassPktsRate,omitempty"`
	BdcarPktsRate                  uint64 `protobuf:"varint,16,opt,name=bdcarPktsRate,proto3" json:"bdcarPktsRate,omitempty"`
	BdcarRBytes                    uint64 `protobuf:"varint,17,opt,name=bdcarRBytes,proto3" json:"bdcarRBytes,omitempty"`
	BdcarRBytesRate                uint64 `protobuf:"varint,18,opt,name=bdcarRBytesRate,proto3" json:"bdcarRBytesRate,omitempty"`
	BdcarRPkts                     uint64 `protobuf:"varint,19,opt,name=bdcarRPkts,proto3" json:"bdcarRPkts,omitempty"`
	BdcarRPktsRate                 uint64 `protobuf:"varint,20,opt,name=bdcarRPktsRate,proto3" json:"bdcarRPktsRate,omitempty"`
	BdcarYBytes                    uint64 `protobuf:"varint,21,opt,name=bdcarYBytes,proto3" json:"bdcarYBytes,omitempty"`
	BdcarYBytesRate                uint64 `protobuf:"varint,22,opt,name=bdcarYBytesRate,proto3" json:"bdcarYBytesRate,omitempty"`
	BdcarYPkts                     uint64 `protobuf:"varint,23,opt,name=bdcarYPkts,proto3" json:"bdcarYPkts,omitempty"`
	BdcarYPktsRate                 uint64 `protobuf:"varint,24,opt,name=bdcarYPktsRate,proto3" json:"bdcarYPktsRate,omitempty"`
	BdclassifierName               string `protobuf:"bytes,25,opt,name=bdclassifierName,proto3" json:"bdclassifierName,omitempty"`
	BdfilterBytes                  uint64 `protobuf:"varint,26,opt,name=bdfilterBytes,proto3" json:"bdfilterBytes,omitempty"`
	BdfilterBytesRate              uint64 `protobuf:"varint,27,opt,name=bdfilterBytesRate,proto3" json:"bdfilterBytesRate,omitempty"`
	BdfilterPackets                uint64 `protobuf:"varint,28,opt,name=bdfilterPackets,proto3" json:"bdfilterPackets,omitempty"`
	BdfilterPktsRate               uint64 `protobuf:"varint,29,opt,name=bdfilterPktsRate,proto3" json:"bdfilterPktsRate,omitempty"`
	BdmatchByteRt                  uint64 `protobuf:"varint,30,opt,name=bdmatchByteRt,proto3" json:"bdmatchByteRt,omitempty"`
	BdmatchBytes                   uint64 `protobuf:"varint,31,opt,name=bdmatchBytes,proto3" json:"bdmatchBytes,omitempty"`
	BdmatchDropBytes               uint64 `protobuf:"varint,32,opt,name=bdmatchDropBytes,proto3" json:"bdmatchDropBytes,omitempty"`
	BdmatchDropBytesRate           uint64 `protobuf:"varint,33,opt,name=bdmatchDropBytesRate,proto3" json:"bdmatchDropBytesRate,omitempty"`
	BdmatchDropPackets             uint64 `protobuf:"varint,34,opt,name=bdmatchDropPackets,proto3" json:"bdmatchDropPackets,omitempty"`
	BdmatchDropPktsRate            uint64 `protobuf:"varint,35,opt,name=bdmatchDropPktsRate,proto3" json:"bdmatchDropPktsRate,omitempty"`
	BdmatchPackets                 uint64 `protobuf:"varint,36,opt,name=bdmatchPackets,proto3" json:"bdmatchPackets,omitempty"`
	BdmatchPassBytes               uint64 `protobuf:"varint,37,opt,name=bdmatchPassBytes,proto3" json:"bdmatchPassBytes,omitempty"`
	BdmatchPassBytesRate           uint64 `protobuf:"varint,38,opt,name=bdmatchPassBytesRate,proto3" json:"bdmatchPassBytesRate,omitempty"`
	BdmatchPassPackets             uint64 `protobuf:"varint,39,opt,name=bdmatchPassPackets,proto3" json:"bdmatchPassPackets,omitempty"`
	BdmatchPassPktsRate            uint64 `protobuf:"varint,40,opt,name=bdmatchPassPktsRate,proto3" json:"bdmatchPassPktsRate,omitempty"`
	BdmatchPktRt                   uint64 `protobuf:"varint,41,opt,name=bdmatchPktRt,proto3" json:"bdmatchPktRt,omitempty"`
	BdurpfDropBytes                uint64 `protobuf:"varint,42,opt,name=bdurpfDropBytes,proto3" json:"bdurpfDropBytes,omitempty"`
	BdurpfDropBytesRate            uint64 `protobuf:"varint,43,opt,name=bdurpfDropBytesRate,proto3" json:"bdurpfDropBytesRate,omitempty"`
	BdurpfDropPackets              uint64 `protobuf:"varint,44,opt,name=bdurpfDropPackets,proto3" json:"bdurpfDropPackets,omitempty"`
	BdurpfDropPktsRate             uint64 `protobuf:"varint,45,opt,name=bdurpfDropPktsRate,proto3" json:"bdurpfDropPktsRate,omitempty"`
	BroadcastSuppressDropBytes     uint64 `protobuf:"varint,46,opt,name=broadcastSuppressDropBytes,proto3" json:"broadcastSuppressDropBytes,omitempty"`
	BroadcastSuppressDropBytesRate uint64 `protobuf:"varint,47,opt,name=broadcastSuppressDropBytesRate,proto3" json:"broadcastSuppressDropBytesRate,omitempty"`
	BroadcastSuppressDropPkts      uint64 `protobuf:"varint,48,opt,name=broadcastSuppressDropPkts,proto3" json:"broadcastSuppressDropPkts,omitempty"`
	BroadcastSuppressDropPktsRate  uint64 `protobuf:"varint,49,opt,name=broadcastSuppressDropPktsRate,proto3" json:"broadcastSuppressDropPktsRate,omitempty"`
	BroadcastSuppressPassBytes     uint64 `protobuf:"varint,50,opt,name=broadcastSuppressPassBytes,proto3" json:"broadcastSuppressPassBytes,omitempty"`
	BroadcastSuppressPassBytesRate uint64 `protobuf:"varint,51,opt,name=broadcastSuppressPassBytesRate,proto3" json:"broadcastSuppressPassBytesRate,omitempty"`
	BroadcastSuppressPassPkts      uint64 `protobuf:"varint,52,opt,name=broadcastSuppressPassPkts,proto3" json:"broadcastSuppressPassPkts,omitempty"`
	BroadcastSuppressPassPktsRate  uint64 `protobuf:"varint,53,opt,name=broadcastSuppressPassPktsRate,proto3" json:"broadcastSuppressPassPktsRate,omitempty"`
	MulticastSuppressDropBytes     uint64 `protobuf:"varint,54,opt,name=multicastSuppressDropBytes,proto3" json:"multicastSuppressDropBytes,omitempty"`
	MulticastSuppressDropBytesRate uint64 `protobuf:"varint,55,opt,name=multicastSuppressDropBytesRate,proto3" json:"multicastSuppressDropBytesRate,omitempty"`
	MulticastSuppressDropPkts      uint64 `protobuf:"varint,56,opt,name=multicastSuppressDropPkts,proto3" json:"multicastSuppressDropPkts,omitempty"`
	MulticastSuppressDropPktsRate  uint64 `protobuf:"varint,57,opt,name=multicastSuppressDropPktsRate,proto3" json:"multicastSuppressDropPktsRate,omitempty"`
	MulticastSuppressPassBytes     uint64 `protobuf:"varint,58,opt,name=multicastSuppressPassBytes,proto3" json:"multicastSuppressPassBytes,omitempty"`
	MulticastSuppressPassBytesRate uint64 `protobuf:"varint,59,opt,name=multicastSuppressPassBytesRate,proto3" json:"multicastSuppressPassBytesRate,omitempty"`
	MulticastSuppressPassPkts      uint64 `protobuf:"varint,60,opt,name=multicastSuppressPassPkts,proto3" json:"multicastSuppressPassPkts,omitempty"`
	MulticastSuppressPassPktsRate  uint64 `protobuf:"varint,61,opt,name=multicastSuppressPassPktsRate,proto3" json:"multicastSuppressPassPktsRate,omitempty"`
	UnknowUniSuppressDropBytes     uint64 `protobuf:"varint,62,opt,name=unknowUniSuppressDropBytes,proto3" json:"unknowUniSuppressDropBytes,omitempty"`
	UnknowUniSuppressDropBytesRate uint64 `protobuf:"varint,63,opt,name=unknowUniSuppressDropBytesRate,proto3" json:"unknowUniSuppressDropBytesRate,omitempty"`
	UnknowUniSuppressDropPkts      uint64 `protobuf:"varint,64,opt,name=unknowUniSuppressDropPkts,proto3" json:"unknowUniSuppressDropPkts,omitempty"`
	UnknowUniSuppressDropPktsRate  uint64 `protobuf:"varint,65,opt,name=unknowUniSuppressDropPktsRate,proto3" json:"unknowUniSuppressDropPktsRate,omitempty"`
	UnknowUniSuppressPassBytes     uint64 `protobuf:"varint,66,opt,name=unknowUniSuppressPassBytes,proto3" json:"unknowUniSuppressPassBytes,omitempty"`
	UnknowUniSuppressPassBytesRate uint64 `protobuf:"varint,67,opt,name=unknowUniSuppressPassBytesRate,proto3" json:"unknowUniSuppressPassBytesRate,omitempty"`
	UnknowUniSuppressPassPkts      uint64 `protobuf:"varint,68,opt,name=unknowUniSuppressPassPkts,proto3" json:"unknowUniSuppressPassPkts,omitempty"`
	UnknowUniSuppressPassPktsRate  uint64 `protobuf:"varint,69,opt,name=unknowUniSuppressPassPktsRate,proto3" json:"unknowUniSuppressPassPktsRate,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) ProtoMessage() {
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 2, 0, 1, 0, 0, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarBytes() uint64 {
	if x != nil {
		return x.BdcarBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarBytesRate() uint64 {
	if x != nil {
		return x.BdcarBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarDropBytes() uint64 {
	if x != nil {
		return x.BdcarDropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarDropBytesRate() uint64 {
	if x != nil {
		return x.BdcarDropBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarDropPkts() uint64 {
	if x != nil {
		return x.BdcarDropPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarDropPktsRate() uint64 {
	if x != nil {
		return x.BdcarDropPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarGBytes() uint64 {
	if x != nil {
		return x.BdcarGBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarGBytesRate() uint64 {
	if x != nil {
		return x.BdcarGBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarGPkts() uint64 {
	if x != nil {
		return x.BdcarGPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarGPktsRate() uint64 {
	if x != nil {
		return x.BdcarGPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarPackets() uint64 {
	if x != nil {
		return x.BdcarPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarPassBytes() uint64 {
	if x != nil {
		return x.BdcarPassBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarPassBytesRate() uint64 {
	if x != nil {
		return x.BdcarPassBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarPassPkts() uint64 {
	if x != nil {
		return x.BdcarPassPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarPassPktsRate() uint64 {
	if x != nil {
		return x.BdcarPassPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarPktsRate() uint64 {
	if x != nil {
		return x.BdcarPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarRBytes() uint64 {
	if x != nil {
		return x.BdcarRBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarRBytesRate() uint64 {
	if x != nil {
		return x.BdcarRBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarRPkts() uint64 {
	if x != nil {
		return x.BdcarRPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarRPktsRate() uint64 {
	if x != nil {
		return x.BdcarRPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarYBytes() uint64 {
	if x != nil {
		return x.BdcarYBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarYBytesRate() uint64 {
	if x != nil {
		return x.BdcarYBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarYPkts() uint64 {
	if x != nil {
		return x.BdcarYPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdcarYPktsRate() uint64 {
	if x != nil {
		return x.BdcarYPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdclassifierName() string {
	if x != nil {
		return x.BdclassifierName
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdfilterBytes() uint64 {
	if x != nil {
		return x.BdfilterBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdfilterBytesRate() uint64 {
	if x != nil {
		return x.BdfilterBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdfilterPackets() uint64 {
	if x != nil {
		return x.BdfilterPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdfilterPktsRate() uint64 {
	if x != nil {
		return x.BdfilterPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdmatchByteRt() uint64 {
	if x != nil {
		return x.BdmatchByteRt
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdmatchBytes() uint64 {
	if x != nil {
		return x.BdmatchBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdmatchDropBytes() uint64 {
	if x != nil {
		return x.BdmatchDropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdmatchDropBytesRate() uint64 {
	if x != nil {
		return x.BdmatchDropBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdmatchDropPackets() uint64 {
	if x != nil {
		return x.BdmatchDropPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdmatchDropPktsRate() uint64 {
	if x != nil {
		return x.BdmatchDropPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdmatchPackets() uint64 {
	if x != nil {
		return x.BdmatchPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdmatchPassBytes() uint64 {
	if x != nil {
		return x.BdmatchPassBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdmatchPassBytesRate() uint64 {
	if x != nil {
		return x.BdmatchPassBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdmatchPassPackets() uint64 {
	if x != nil {
		return x.BdmatchPassPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdmatchPassPktsRate() uint64 {
	if x != nil {
		return x.BdmatchPassPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdmatchPktRt() uint64 {
	if x != nil {
		return x.BdmatchPktRt
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdurpfDropBytes() uint64 {
	if x != nil {
		return x.BdurpfDropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdurpfDropBytesRate() uint64 {
	if x != nil {
		return x.BdurpfDropBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdurpfDropPackets() uint64 {
	if x != nil {
		return x.BdurpfDropPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBdurpfDropPktsRate() uint64 {
	if x != nil {
		return x.BdurpfDropPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBroadcastSuppressDropBytes() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBroadcastSuppressDropBytesRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBroadcastSuppressDropPkts() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBroadcastSuppressDropPktsRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBroadcastSuppressPassBytes() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBroadcastSuppressPassBytesRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBroadcastSuppressPassPkts() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetBroadcastSuppressPassPktsRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetMulticastSuppressDropBytes() uint64 {
	if x != nil {
		return x.MulticastSuppressDropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetMulticastSuppressDropBytesRate() uint64 {
	if x != nil {
		return x.MulticastSuppressDropBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetMulticastSuppressDropPkts() uint64 {
	if x != nil {
		return x.MulticastSuppressDropPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetMulticastSuppressDropPktsRate() uint64 {
	if x != nil {
		return x.MulticastSuppressDropPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetMulticastSuppressPassBytes() uint64 {
	if x != nil {
		return x.MulticastSuppressPassBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetMulticastSuppressPassBytesRate() uint64 {
	if x != nil {
		return x.MulticastSuppressPassBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetMulticastSuppressPassPkts() uint64 {
	if x != nil {
		return x.MulticastSuppressPassPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetMulticastSuppressPassPktsRate() uint64 {
	if x != nil {
		return x.MulticastSuppressPassPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetUnknowUniSuppressDropBytes() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetUnknowUniSuppressDropBytesRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetUnknowUniSuppressDropPkts() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetUnknowUniSuppressDropPktsRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetUnknowUniSuppressPassBytes() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetUnknowUniSuppressPassBytesRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetUnknowUniSuppressPassPkts() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat) GetUnknowUniSuppressPassPktsRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassPktsRate
	}
	return 0
}

type Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectbdType Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType `protobuf:"varint,1,opt,name=directbdType,proto3,enum=huaweiV8R10_qos.Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType" json:"directbdType,omitempty"`
	DsbdName     string                                                     `protobuf:"bytes,2,opt,name=dsbdName,proto3" json:"dsbdName,omitempty"`
	TrustbdType  Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType  `protobuf:"varint,3,opt,name=trustbdType,proto3,enum=huaweiV8R10_qos.Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType" json:"trustbdType,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 3, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust) GetDirectbdType() Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType {
	if x != nil {
		return x.DirectbdType
	}
	return Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType_IN_OUTBOUND
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust) GetDsbdName() string {
	if x != nil {
		return x.DsbdName
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust) GetTrustbdType() Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType {
	if x != nil {
		return x.TrustbdType
	}
	return Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType_X_8021P
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableSlot string                                                                        `protobuf:"bytes,1,opt,name=disableSlot,proto3" json:"disableSlot,omitempty"`
	ExcludeMode Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode `protobuf:"varint,2,opt,name=excludeMode,proto3,enum=huaweiV8R10_qos.Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode" json:"excludeMode,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 4, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable) GetDisableSlot() string {
	if x != nil {
		return x.DisableSlot
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable) GetExcludeMode() Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode {
	if x != nil {
		return x.ExcludeMode
	}
	return Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode_EXCLUDE
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs_QosBdVxlanPhb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DsbdName string `protobuf:"bytes,1,opt,name=dsbdName,proto3" json:"dsbdName,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs_QosBdVxlanPhb) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs_QosBdVxlanPhb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs_QosBdVxlanPhb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs_QosBdVxlanPhb) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs_QosBdVxlanPhb) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs_QosBdVxlanPhb.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs_QosBdVxlanPhb) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 5, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs_QosBdVxlanPhb) GetDsbdName() string {
	if x != nil {
		return x.DsbdName
	}
	return ""
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bddirection           Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection            `protobuf:"varint,1,opt,name=bddirection,proto3,enum=huaweiV8R10_qos.Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection" json:"bddirection,omitempty"`
	Bdlayer               Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer                `protobuf:"varint,2,opt,name=bdlayer,proto3,enum=huaweiV8R10_qos.Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer" json:"bdlayer,omitempty"`
	BdpolicyName          string                                                                                     `protobuf:"bytes,3,opt,name=bdpolicyName,proto3" json:"bdpolicyName,omitempty"`
	QosBdVxlanPolicyStats *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats `protobuf:"bytes,4,opt,name=qosBdVxlanPolicyStats,proto3" json:"qosBdVxlanPolicyStats,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 6, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply) GetBddirection() Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection {
	if x != nil {
		return x.Bddirection
	}
	return Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection_INBOUND
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply) GetBdlayer() Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer {
	if x != nil {
		return x.Bdlayer
	}
	return Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer_LINK
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply) GetBdpolicyName() string {
	if x != nil {
		return x.BdpolicyName
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply) GetQosBdVxlanPolicyStats() *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats {
	if x != nil {
		return x.QosBdVxlanPolicyStats
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBdVxlanPolicyStat []*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat `protobuf:"bytes,1,rep,name=qosBdVxlanPolicyStat,proto3" json:"qosBdVxlanPolicyStat,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats) ProtoMessage() {
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 6, 0, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats) GetQosBdVxlanPolicyStat() []*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat {
	if x != nil {
		return x.QosBdVxlanPolicyStat
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BdapplyTime               string                                                                                                                                    `protobuf:"bytes,1,opt,name=bdapplyTime,proto3" json:"bdapplyTime,omitempty"`
	BdmatchByteRate           uint64                                                                                                                                    `protobuf:"varint,2,opt,name=bdmatchByteRate,proto3" json:"bdmatchByteRate,omitempty"`
	BdmatchBytes              uint64                                                                                                                                    `protobuf:"varint,3,opt,name=bdmatchBytes,proto3" json:"bdmatchBytes,omitempty"`
	BdmatchDropBytes          uint64                                                                                                                                    `protobuf:"varint,4,opt,name=bdmatchDropBytes,proto3" json:"bdmatchDropBytes,omitempty"`
	BdmatchDropBytesRate      uint64                                                                                                                                    `protobuf:"varint,5,opt,name=bdmatchDropBytesRate,proto3" json:"bdmatchDropBytesRate,omitempty"`
	BdmatchDropPkts           uint64                                                                                                                                    `protobuf:"varint,6,opt,name=bdmatchDropPkts,proto3" json:"bdmatchDropPkts,omitempty"`
	BdmatchDropPktsRate       uint64                                                                                                                                    `protobuf:"varint,7,opt,name=bdmatchDropPktsRate,proto3" json:"bdmatchDropPktsRate,omitempty"`
	BdmatchPackets            uint64                                                                                                                                    `protobuf:"varint,8,opt,name=bdmatchPackets,proto3" json:"bdmatchPackets,omitempty"`
	BdmatchPassBytes          uint64                                                                                                                                    `protobuf:"varint,9,opt,name=bdmatchPassBytes,proto3" json:"bdmatchPassBytes,omitempty"`
	BdmatchPassBytesRate      uint64                                                                                                                                    `protobuf:"varint,10,opt,name=bdmatchPassBytesRate,proto3" json:"bdmatchPassBytesRate,omitempty"`
	BdmatchPassPkts           uint64                                                                                                                                    `protobuf:"varint,11,opt,name=bdmatchPassPkts,proto3" json:"bdmatchPassPkts,omitempty"`
	BdmatchPassPktsRate       uint64                                                                                                                                    `protobuf:"varint,12,opt,name=bdmatchPassPktsRate,proto3" json:"bdmatchPassPktsRate,omitempty"`
	BdmatchPktRate            uint64                                                                                                                                    `protobuf:"varint,13,opt,name=bdmatchPktRate,proto3" json:"bdmatchPktRate,omitempty"`
	BdmissBytes               uint64                                                                                                                                    `protobuf:"varint,14,opt,name=bdmissBytes,proto3" json:"bdmissBytes,omitempty"`
	BdmissBytesRate           uint64                                                                                                                                    `protobuf:"varint,15,opt,name=bdmissBytesRate,proto3" json:"bdmissBytesRate,omitempty"`
	BdmissPackets             uint64                                                                                                                                    `protobuf:"varint,16,opt,name=bdmissPackets,proto3" json:"bdmissPackets,omitempty"`
	BdmissPktsRate            uint64                                                                                                                                    `protobuf:"varint,17,opt,name=bdmissPktsRate,proto3" json:"bdmissPktsRate,omitempty"`
	BdstatClearFlag           bool                                                                                                                                      `protobuf:"varint,18,opt,name=bdstatClearFlag,proto3" json:"bdstatClearFlag,omitempty"`
	BdstatClearTime           string                                                                                                                                    `protobuf:"bytes,19,opt,name=bdstatClearTime,proto3" json:"bdstatClearTime,omitempty"`
	BdstatEnableTime          string                                                                                                                                    `protobuf:"bytes,20,opt,name=bdstatEnableTime,proto3" json:"bdstatEnableTime,omitempty"`
	QosBdVxlanClassifierStats *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats `protobuf:"bytes,21,opt,name=qosBdVxlanClassifierStats,proto3" json:"qosBdVxlanClassifierStats,omitempty"`
	SlotId                    string                                                                                                                                    `protobuf:"bytes,22,opt,name=slotId,proto3" json:"slotId,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) ProtoMessage() {
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 6, 0, 0, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdapplyTime() string {
	if x != nil {
		return x.BdapplyTime
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmatchByteRate() uint64 {
	if x != nil {
		return x.BdmatchByteRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmatchBytes() uint64 {
	if x != nil {
		return x.BdmatchBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmatchDropBytes() uint64 {
	if x != nil {
		return x.BdmatchDropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmatchDropBytesRate() uint64 {
	if x != nil {
		return x.BdmatchDropBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmatchDropPkts() uint64 {
	if x != nil {
		return x.BdmatchDropPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmatchDropPktsRate() uint64 {
	if x != nil {
		return x.BdmatchDropPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmatchPackets() uint64 {
	if x != nil {
		return x.BdmatchPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmatchPassBytes() uint64 {
	if x != nil {
		return x.BdmatchPassBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmatchPassBytesRate() uint64 {
	if x != nil {
		return x.BdmatchPassBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmatchPassPkts() uint64 {
	if x != nil {
		return x.BdmatchPassPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmatchPassPktsRate() uint64 {
	if x != nil {
		return x.BdmatchPassPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmatchPktRate() uint64 {
	if x != nil {
		return x.BdmatchPktRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmissBytes() uint64 {
	if x != nil {
		return x.BdmissBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmissBytesRate() uint64 {
	if x != nil {
		return x.BdmissBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmissPackets() uint64 {
	if x != nil {
		return x.BdmissPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdmissPktsRate() uint64 {
	if x != nil {
		return x.BdmissPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdstatClearFlag() bool {
	if x != nil {
		return x.BdstatClearFlag
	}
	return false
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdstatClearTime() string {
	if x != nil {
		return x.BdstatClearTime
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetBdstatEnableTime() string {
	if x != nil {
		return x.BdstatEnableTime
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetQosBdVxlanClassifierStats() *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats {
	if x != nil {
		return x.QosBdVxlanClassifierStats
	}
	return nil
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBdVxlanClassifierStat []*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat `protobuf:"bytes,1,rep,name=qosBdVxlanClassifierStat,proto3" json:"qosBdVxlanClassifierStat,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats) ProtoMessage() {
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 6, 0, 0, 0, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats) GetQosBdVxlanClassifierStat() []*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat {
	if x != nil {
		return x.QosBdVxlanClassifierStat
	}
	return nil
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BdcarBytes                     uint64 `protobuf:"varint,1,opt,name=bdcarBytes,proto3" json:"bdcarBytes,omitempty"`
	BdcarBytesRate                 uint64 `protobuf:"varint,2,opt,name=bdcarBytesRate,proto3" json:"bdcarBytesRate,omitempty"`
	BdcarDropBytes                 uint64 `protobuf:"varint,3,opt,name=bdcarDropBytes,proto3" json:"bdcarDropBytes,omitempty"`
	BdcarDropBytesRate             uint64 `protobuf:"varint,4,opt,name=bdcarDropBytesRate,proto3" json:"bdcarDropBytesRate,omitempty"`
	BdcarDropPkts                  uint64 `protobuf:"varint,5,opt,name=bdcarDropPkts,proto3" json:"bdcarDropPkts,omitempty"`
	BdcarDropPktsRate              uint64 `protobuf:"varint,6,opt,name=bdcarDropPktsRate,proto3" json:"bdcarDropPktsRate,omitempty"`
	BdcarGBytes                    uint64 `protobuf:"varint,7,opt,name=bdcarGBytes,proto3" json:"bdcarGBytes,omitempty"`
	BdcarGBytesRate                uint64 `protobuf:"varint,8,opt,name=bdcarGBytesRate,proto3" json:"bdcarGBytesRate,omitempty"`
	BdcarGPkts                     uint64 `protobuf:"varint,9,opt,name=bdcarGPkts,proto3" json:"bdcarGPkts,omitempty"`
	BdcarGPktsRate                 uint64 `protobuf:"varint,10,opt,name=bdcarGPktsRate,proto3" json:"bdcarGPktsRate,omitempty"`
	BdcarPackets                   uint64 `protobuf:"varint,11,opt,name=bdcarPackets,proto3" json:"bdcarPackets,omitempty"`
	BdcarPassBytes                 uint64 `protobuf:"varint,12,opt,name=bdcarPassBytes,proto3" json:"bdcarPassBytes,omitempty"`
	BdcarPassBytesRate             uint64 `protobuf:"varint,13,opt,name=bdcarPassBytesRate,proto3" json:"bdcarPassBytesRate,omitempty"`
	BdcarPassPkts                  uint64 `protobuf:"varint,14,opt,name=bdcarPassPkts,proto3" json:"bdcarPassPkts,omitempty"`
	BdcarPassPktsRate              uint64 `protobuf:"varint,15,opt,name=bdcarPassPktsRate,proto3" json:"bdcarPassPktsRate,omitempty"`
	BdcarPktsRate                  uint64 `protobuf:"varint,16,opt,name=bdcarPktsRate,proto3" json:"bdcarPktsRate,omitempty"`
	BdcarRBytes                    uint64 `protobuf:"varint,17,opt,name=bdcarRBytes,proto3" json:"bdcarRBytes,omitempty"`
	BdcarRBytesRate                uint64 `protobuf:"varint,18,opt,name=bdcarRBytesRate,proto3" json:"bdcarRBytesRate,omitempty"`
	BdcarRPkts                     uint64 `protobuf:"varint,19,opt,name=bdcarRPkts,proto3" json:"bdcarRPkts,omitempty"`
	BdcarRPktsRate                 uint64 `protobuf:"varint,20,opt,name=bdcarRPktsRate,proto3" json:"bdcarRPktsRate,omitempty"`
	BdcarYBytes                    uint64 `protobuf:"varint,21,opt,name=bdcarYBytes,proto3" json:"bdcarYBytes,omitempty"`
	BdcarYBytesRate                uint64 `protobuf:"varint,22,opt,name=bdcarYBytesRate,proto3" json:"bdcarYBytesRate,omitempty"`
	BdcarYPkts                     uint64 `protobuf:"varint,23,opt,name=bdcarYPkts,proto3" json:"bdcarYPkts,omitempty"`
	BdcarYPktsRate                 uint64 `protobuf:"varint,24,opt,name=bdcarYPktsRate,proto3" json:"bdcarYPktsRate,omitempty"`
	BdclassifierName               string `protobuf:"bytes,25,opt,name=bdclassifierName,proto3" json:"bdclassifierName,omitempty"`
	BdfilterBytes                  uint64 `protobuf:"varint,26,opt,name=bdfilterBytes,proto3" json:"bdfilterBytes,omitempty"`
	BdfilterBytesRate              uint64 `protobuf:"varint,27,opt,name=bdfilterBytesRate,proto3" json:"bdfilterBytesRate,omitempty"`
	BdfilterPackets                uint64 `protobuf:"varint,28,opt,name=bdfilterPackets,proto3" json:"bdfilterPackets,omitempty"`
	BdfilterPktsRate               uint64 `protobuf:"varint,29,opt,name=bdfilterPktsRate,proto3" json:"bdfilterPktsRate,omitempty"`
	BdmatchByteRt                  uint64 `protobuf:"varint,30,opt,name=bdmatchByteRt,proto3" json:"bdmatchByteRt,omitempty"`
	BdmatchBytes                   uint64 `protobuf:"varint,31,opt,name=bdmatchBytes,proto3" json:"bdmatchBytes,omitempty"`
	BdmatchDropBytes               uint64 `protobuf:"varint,32,opt,name=bdmatchDropBytes,proto3" json:"bdmatchDropBytes,omitempty"`
	BdmatchDropBytesRate           uint64 `protobuf:"varint,33,opt,name=bdmatchDropBytesRate,proto3" json:"bdmatchDropBytesRate,omitempty"`
	BdmatchDropPackets             uint64 `protobuf:"varint,34,opt,name=bdmatchDropPackets,proto3" json:"bdmatchDropPackets,omitempty"`
	BdmatchDropPktsRate            uint64 `protobuf:"varint,35,opt,name=bdmatchDropPktsRate,proto3" json:"bdmatchDropPktsRate,omitempty"`
	BdmatchPackets                 uint64 `protobuf:"varint,36,opt,name=bdmatchPackets,proto3" json:"bdmatchPackets,omitempty"`
	BdmatchPassBytes               uint64 `protobuf:"varint,37,opt,name=bdmatchPassBytes,proto3" json:"bdmatchPassBytes,omitempty"`
	BdmatchPassBytesRate           uint64 `protobuf:"varint,38,opt,name=bdmatchPassBytesRate,proto3" json:"bdmatchPassBytesRate,omitempty"`
	BdmatchPassPackets             uint64 `protobuf:"varint,39,opt,name=bdmatchPassPackets,proto3" json:"bdmatchPassPackets,omitempty"`
	BdmatchPassPktsRate            uint64 `protobuf:"varint,40,opt,name=bdmatchPassPktsRate,proto3" json:"bdmatchPassPktsRate,omitempty"`
	BdmatchPktRt                   uint64 `protobuf:"varint,41,opt,name=bdmatchPktRt,proto3" json:"bdmatchPktRt,omitempty"`
	BdurpfDropBytes                uint64 `protobuf:"varint,42,opt,name=bdurpfDropBytes,proto3" json:"bdurpfDropBytes,omitempty"`
	BdurpfDropBytesRate            uint64 `protobuf:"varint,43,opt,name=bdurpfDropBytesRate,proto3" json:"bdurpfDropBytesRate,omitempty"`
	BdurpfDropPackets              uint64 `protobuf:"varint,44,opt,name=bdurpfDropPackets,proto3" json:"bdurpfDropPackets,omitempty"`
	BdurpfDropPktsRate             uint64 `protobuf:"varint,45,opt,name=bdurpfDropPktsRate,proto3" json:"bdurpfDropPktsRate,omitempty"`
	BroadcastSuppressDropBytes     uint64 `protobuf:"varint,46,opt,name=broadcastSuppressDropBytes,proto3" json:"broadcastSuppressDropBytes,omitempty"`
	BroadcastSuppressDropBytesRate uint64 `protobuf:"varint,47,opt,name=broadcastSuppressDropBytesRate,proto3" json:"broadcastSuppressDropBytesRate,omitempty"`
	BroadcastSuppressDropPkts      uint64 `protobuf:"varint,48,opt,name=broadcastSuppressDropPkts,proto3" json:"broadcastSuppressDropPkts,omitempty"`
	BroadcastSuppressDropPktsRate  uint64 `protobuf:"varint,49,opt,name=broadcastSuppressDropPktsRate,proto3" json:"broadcastSuppressDropPktsRate,omitempty"`
	BroadcastSuppressPassBytes     uint64 `protobuf:"varint,50,opt,name=broadcastSuppressPassBytes,proto3" json:"broadcastSuppressPassBytes,omitempty"`
	BroadcastSuppressPassBytesRate uint64 `protobuf:"varint,51,opt,name=broadcastSuppressPassBytesRate,proto3" json:"broadcastSuppressPassBytesRate,omitempty"`
	BroadcastSuppressPassPkts      uint64 `protobuf:"varint,52,opt,name=broadcastSuppressPassPkts,proto3" json:"broadcastSuppressPassPkts,omitempty"`
	BroadcastSuppressPassPktsRate  uint64 `protobuf:"varint,53,opt,name=broadcastSuppressPassPktsRate,proto3" json:"broadcastSuppressPassPktsRate,omitempty"`
	MulticastSuppressDropBytes     uint64 `protobuf:"varint,54,opt,name=multicastSuppressDropBytes,proto3" json:"multicastSuppressDropBytes,omitempty"`
	MulticastSuppressDropBytesRate uint64 `protobuf:"varint,55,opt,name=multicastSuppressDropBytesRate,proto3" json:"multicastSuppressDropBytesRate,omitempty"`
	MulticastSuppressDropPkts      uint64 `protobuf:"varint,56,opt,name=multicastSuppressDropPkts,proto3" json:"multicastSuppressDropPkts,omitempty"`
	MulticastSuppressDropPktsRate  uint64 `protobuf:"varint,57,opt,name=multicastSuppressDropPktsRate,proto3" json:"multicastSuppressDropPktsRate,omitempty"`
	MulticastSuppressPassBytes     uint64 `protobuf:"varint,58,opt,name=multicastSuppressPassBytes,proto3" json:"multicastSuppressPassBytes,omitempty"`
	MulticastSuppressPassBytesRate uint64 `protobuf:"varint,59,opt,name=multicastSuppressPassBytesRate,proto3" json:"multicastSuppressPassBytesRate,omitempty"`
	MulticastSuppressPassPkts      uint64 `protobuf:"varint,60,opt,name=multicastSuppressPassPkts,proto3" json:"multicastSuppressPassPkts,omitempty"`
	MulticastSuppressPassPktsRate  uint64 `protobuf:"varint,61,opt,name=multicastSuppressPassPktsRate,proto3" json:"multicastSuppressPassPktsRate,omitempty"`
	SlotId                         string `protobuf:"bytes,62,opt,name=slotId,proto3" json:"slotId,omitempty"`
	UnknowUniSuppressDropBytes     uint64 `protobuf:"varint,63,opt,name=unknowUniSuppressDropBytes,proto3" json:"unknowUniSuppressDropBytes,omitempty"`
	UnknowUniSuppressDropBytesRate uint64 `protobuf:"varint,64,opt,name=unknowUniSuppressDropBytesRate,proto3" json:"unknowUniSuppressDropBytesRate,omitempty"`
	UnknowUniSuppressDropPkts      uint64 `protobuf:"varint,65,opt,name=unknowUniSuppressDropPkts,proto3" json:"unknowUniSuppressDropPkts,omitempty"`
	UnknowUniSuppressDropPktsRate  uint64 `protobuf:"varint,66,opt,name=unknowUniSuppressDropPktsRate,proto3" json:"unknowUniSuppressDropPktsRate,omitempty"`
	UnknowUniSuppressPassBytes     uint64 `protobuf:"varint,67,opt,name=unknowUniSuppressPassBytes,proto3" json:"unknowUniSuppressPassBytes,omitempty"`
	UnknowUniSuppressPassBytesRate uint64 `protobuf:"varint,68,opt,name=unknowUniSuppressPassBytesRate,proto3" json:"unknowUniSuppressPassBytesRate,omitempty"`
	UnknowUniSuppressPassPkts      uint64 `protobuf:"varint,69,opt,name=unknowUniSuppressPassPkts,proto3" json:"unknowUniSuppressPassPkts,omitempty"`
	UnknowUniSuppressPassPktsRate  uint64 `protobuf:"varint,70,opt,name=unknowUniSuppressPassPktsRate,proto3" json:"unknowUniSuppressPassPktsRate,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) ProtoMessage() {
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 6, 0, 0, 0, 0, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarBytes() uint64 {
	if x != nil {
		return x.BdcarBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarBytesRate() uint64 {
	if x != nil {
		return x.BdcarBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarDropBytes() uint64 {
	if x != nil {
		return x.BdcarDropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarDropBytesRate() uint64 {
	if x != nil {
		return x.BdcarDropBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarDropPkts() uint64 {
	if x != nil {
		return x.BdcarDropPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarDropPktsRate() uint64 {
	if x != nil {
		return x.BdcarDropPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarGBytes() uint64 {
	if x != nil {
		return x.BdcarGBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarGBytesRate() uint64 {
	if x != nil {
		return x.BdcarGBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarGPkts() uint64 {
	if x != nil {
		return x.BdcarGPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarGPktsRate() uint64 {
	if x != nil {
		return x.BdcarGPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarPackets() uint64 {
	if x != nil {
		return x.BdcarPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarPassBytes() uint64 {
	if x != nil {
		return x.BdcarPassBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarPassBytesRate() uint64 {
	if x != nil {
		return x.BdcarPassBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarPassPkts() uint64 {
	if x != nil {
		return x.BdcarPassPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarPassPktsRate() uint64 {
	if x != nil {
		return x.BdcarPassPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarPktsRate() uint64 {
	if x != nil {
		return x.BdcarPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarRBytes() uint64 {
	if x != nil {
		return x.BdcarRBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarRBytesRate() uint64 {
	if x != nil {
		return x.BdcarRBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarRPkts() uint64 {
	if x != nil {
		return x.BdcarRPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarRPktsRate() uint64 {
	if x != nil {
		return x.BdcarRPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarYBytes() uint64 {
	if x != nil {
		return x.BdcarYBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarYBytesRate() uint64 {
	if x != nil {
		return x.BdcarYBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarYPkts() uint64 {
	if x != nil {
		return x.BdcarYPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdcarYPktsRate() uint64 {
	if x != nil {
		return x.BdcarYPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdclassifierName() string {
	if x != nil {
		return x.BdclassifierName
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdfilterBytes() uint64 {
	if x != nil {
		return x.BdfilterBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdfilterBytesRate() uint64 {
	if x != nil {
		return x.BdfilterBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdfilterPackets() uint64 {
	if x != nil {
		return x.BdfilterPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdfilterPktsRate() uint64 {
	if x != nil {
		return x.BdfilterPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdmatchByteRt() uint64 {
	if x != nil {
		return x.BdmatchByteRt
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdmatchBytes() uint64 {
	if x != nil {
		return x.BdmatchBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdmatchDropBytes() uint64 {
	if x != nil {
		return x.BdmatchDropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdmatchDropBytesRate() uint64 {
	if x != nil {
		return x.BdmatchDropBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdmatchDropPackets() uint64 {
	if x != nil {
		return x.BdmatchDropPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdmatchDropPktsRate() uint64 {
	if x != nil {
		return x.BdmatchDropPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdmatchPackets() uint64 {
	if x != nil {
		return x.BdmatchPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdmatchPassBytes() uint64 {
	if x != nil {
		return x.BdmatchPassBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdmatchPassBytesRate() uint64 {
	if x != nil {
		return x.BdmatchPassBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdmatchPassPackets() uint64 {
	if x != nil {
		return x.BdmatchPassPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdmatchPassPktsRate() uint64 {
	if x != nil {
		return x.BdmatchPassPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdmatchPktRt() uint64 {
	if x != nil {
		return x.BdmatchPktRt
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdurpfDropBytes() uint64 {
	if x != nil {
		return x.BdurpfDropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdurpfDropBytesRate() uint64 {
	if x != nil {
		return x.BdurpfDropBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdurpfDropPackets() uint64 {
	if x != nil {
		return x.BdurpfDropPackets
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBdurpfDropPktsRate() uint64 {
	if x != nil {
		return x.BdurpfDropPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBroadcastSuppressDropBytes() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBroadcastSuppressDropBytesRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBroadcastSuppressDropPkts() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBroadcastSuppressDropPktsRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBroadcastSuppressPassBytes() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBroadcastSuppressPassBytesRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBroadcastSuppressPassPkts() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetBroadcastSuppressPassPktsRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetMulticastSuppressDropBytes() uint64 {
	if x != nil {
		return x.MulticastSuppressDropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetMulticastSuppressDropBytesRate() uint64 {
	if x != nil {
		return x.MulticastSuppressDropBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetMulticastSuppressDropPkts() uint64 {
	if x != nil {
		return x.MulticastSuppressDropPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetMulticastSuppressDropPktsRate() uint64 {
	if x != nil {
		return x.MulticastSuppressDropPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetMulticastSuppressPassBytes() uint64 {
	if x != nil {
		return x.MulticastSuppressPassBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetMulticastSuppressPassBytesRate() uint64 {
	if x != nil {
		return x.MulticastSuppressPassBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetMulticastSuppressPassPkts() uint64 {
	if x != nil {
		return x.MulticastSuppressPassPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetMulticastSuppressPassPktsRate() uint64 {
	if x != nil {
		return x.MulticastSuppressPassPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetUnknowUniSuppressDropBytes() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetUnknowUniSuppressDropBytesRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetUnknowUniSuppressDropPkts() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetUnknowUniSuppressDropPktsRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropPktsRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetUnknowUniSuppressPassBytes() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassBytes
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetUnknowUniSuppressPassBytesRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassBytesRate
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetUnknowUniSuppressPassPkts() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassPkts
	}
	return 0
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat) GetUnknowUniSuppressPassPktsRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassPktsRate
	}
	return 0
}

type Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DsbdName    string                                                              `protobuf:"bytes,1,opt,name=dsbdName,proto3" json:"dsbdName,omitempty"`
	TrustbdType Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType `protobuf:"varint,2,opt,name=trustbdType,proto3,enum=huaweiV8R10_qos.Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType" json:"trustbdType,omitempty"`
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust) Reset() {
	*x = Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust) ProtoMessage() {}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust.ProtoReflect.Descriptor instead.
func (*Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 2, 0, 7, 0}
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust) GetDsbdName() string {
	if x != nil {
		return x.DsbdName
	}
	return ""
}

func (x *Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust) GetTrustbdType() Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType {
	if x != nil {
		return x.TrustbdType
	}
	return Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType_X_8021P
}

type Qos_QosBaHosts_QosBaHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color     Qos_QosBaHosts_QosBaHost_Color    `protobuf:"varint,1,opt,name=color,proto3,enum=huaweiV8R10_qos.Qos_QosBaHosts_QosBaHost_Color" json:"color,omitempty"`
	Cosvalue  Qos_QosBaHosts_QosBaHost_Cosvalue `protobuf:"varint,2,opt,name=cosvalue,proto3,enum=huaweiV8R10_qos.Qos_QosBaHosts_QosBaHost_Cosvalue" json:"cosvalue,omitempty"`
	Dscpvalue uint32                            `protobuf:"varint,3,opt,name=dscpvalue,proto3" json:"dscpvalue,omitempty"`
}

func (x *Qos_QosBaHosts_QosBaHost) Reset() {
	*x = Qos_QosBaHosts_QosBaHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBaHosts_QosBaHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBaHosts_QosBaHost) ProtoMessage() {}

func (x *Qos_QosBaHosts_QosBaHost) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBaHosts_QosBaHost.ProtoReflect.Descriptor instead.
func (*Qos_QosBaHosts_QosBaHost) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 3, 0}
}

func (x *Qos_QosBaHosts_QosBaHost) GetColor() Qos_QosBaHosts_QosBaHost_Color {
	if x != nil {
		return x.Color
	}
	return Qos_QosBaHosts_QosBaHost_Color_GREEN
}

func (x *Qos_QosBaHosts_QosBaHost) GetCosvalue() Qos_QosBaHosts_QosBaHost_Cosvalue {
	if x != nil {
		return x.Cosvalue
	}
	return Qos_QosBaHosts_QosBaHost_Cosvalue_AF1
}

func (x *Qos_QosBaHosts_QosBaHost) GetDscpvalue() uint32 {
	if x != nil {
		return x.Dscpvalue
	}
	return 0
}

type Qos_QosBuffers_QosBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufferValue uint32                             `protobuf:"varint,1,opt,name=bufferValue,proto3" json:"bufferValue,omitempty"`
	IfName      string                             `protobuf:"bytes,2,opt,name=ifName,proto3" json:"ifName,omitempty"`
	IfPhyName   string                             `protobuf:"bytes,3,opt,name=ifPhyName,proto3" json:"ifPhyName,omitempty"`
	QueueType   Qos_QosBuffers_QosBuffer_QueueType `protobuf:"varint,4,opt,name=queueType,proto3,enum=huaweiV8R10_qos.Qos_QosBuffers_QosBuffer_QueueType" json:"queueType,omitempty"`
	SlotId      string                             `protobuf:"bytes,5,opt,name=slotId,proto3" json:"slotId,omitempty"`
	TmId        uint32                             `protobuf:"varint,6,opt,name=tmId,proto3" json:"tmId,omitempty"`
}

func (x *Qos_QosBuffers_QosBuffer) Reset() {
	*x = Qos_QosBuffers_QosBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosBuffers_QosBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosBuffers_QosBuffer) ProtoMessage() {}

func (x *Qos_QosBuffers_QosBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosBuffers_QosBuffer.ProtoReflect.Descriptor instead.
func (*Qos_QosBuffers_QosBuffer) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 4, 0}
}

func (x *Qos_QosBuffers_QosBuffer) GetBufferValue() uint32 {
	if x != nil {
		return x.BufferValue
	}
	return 0
}

func (x *Qos_QosBuffers_QosBuffer) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_QosBuffers_QosBuffer) GetIfPhyName() string {
	if x != nil {
		return x.IfPhyName
	}
	return ""
}

func (x *Qos_QosBuffers_QosBuffer) GetQueueType() Qos_QosBuffers_QosBuffer_QueueType {
	if x != nil {
		return x.QueueType
	}
	return Qos_QosBuffers_QosBuffer_QueueType_AF1
}

func (x *Qos_QosBuffers_QosBuffer) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

func (x *Qos_QosBuffers_QosBuffer) GetTmId() uint32 {
	if x != nil {
		return x.TmId
	}
	return 0
}

type Qos_QosCbQos_QosBehaviors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBehavior []*Qos_QosCbQos_QosBehaviors_QosBehavior `protobuf:"bytes,1,rep,name=qosBehavior,proto3" json:"qosBehavior,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors) Reset() {
	*x = Qos_QosCbQos_QosBehaviors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0}
}

func (x *Qos_QosCbQos_QosBehaviors) GetQosBehavior() []*Qos_QosCbQos_QosBehaviors_QosBehavior {
	if x != nil {
		return x.QosBehavior
	}
	return nil
}

type Qos_QosCbQos_QosClassifiers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosClassifier []*Qos_QosCbQos_QosClassifiers_QosClassifier `protobuf:"bytes,1,rep,name=qosClassifier,proto3" json:"qosClassifier,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers) Reset() {
	*x = Qos_QosCbQos_QosClassifiers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1}
}

func (x *Qos_QosCbQos_QosClassifiers) GetQosClassifier() []*Qos_QosCbQos_QosClassifiers_QosClassifier {
	if x != nil {
		return x.QosClassifier
	}
	return nil
}

type Qos_QosCbQos_QosMqcStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosMqcStatistic []*Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic `protobuf:"bytes,1,rep,name=qosMqcStatistic,proto3" json:"qosMqcStatistic,omitempty"`
}

func (x *Qos_QosCbQos_QosMqcStatistics) Reset() {
	*x = Qos_QosCbQos_QosMqcStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosMqcStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosMqcStatistics) ProtoMessage() {}

func (x *Qos_QosCbQos_QosMqcStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosMqcStatistics.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosMqcStatistics) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 2}
}

func (x *Qos_QosCbQos_QosMqcStatistics) GetQosMqcStatistic() []*Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic {
	if x != nil {
		return x.QosMqcStatistic
	}
	return nil
}

type Qos_QosCbQos_QosPolicys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPolicy []*Qos_QosCbQos_QosPolicys_QosPolicy `protobuf:"bytes,1,rep,name=qosPolicy,proto3" json:"qosPolicy,omitempty"`
}

func (x *Qos_QosCbQos_QosPolicys) Reset() {
	*x = Qos_QosCbQos_QosPolicys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosPolicys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosPolicys) ProtoMessage() {}

func (x *Qos_QosCbQos_QosPolicys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosPolicys.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosPolicys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 3}
}

func (x *Qos_QosCbQos_QosPolicys) GetQosPolicy() []*Qos_QosCbQos_QosPolicys_QosPolicy {
	if x != nil {
		return x.QosPolicy
	}
	return nil
}

type Qos_QosCbQos_QosVpnGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosVpnGroup []*Qos_QosCbQos_QosVpnGroups_QosVpnGroup `protobuf:"bytes,1,rep,name=qosVpnGroup,proto3" json:"qosVpnGroup,omitempty"`
}

func (x *Qos_QosCbQos_QosVpnGroups) Reset() {
	*x = Qos_QosCbQos_QosVpnGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosVpnGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosVpnGroups) ProtoMessage() {}

func (x *Qos_QosCbQos_QosVpnGroups) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosVpnGroups.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosVpnGroups) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 4}
}

func (x *Qos_QosCbQos_QosVpnGroups) GetQosVpnGroup() []*Qos_QosCbQos_QosVpnGroups_QosVpnGroup {
	if x != nil {
		return x.QosVpnGroup
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BehaviorName      string                                                   `protobuf:"bytes,1,opt,name=behaviorName,proto3" json:"behaviorName,omitempty"`
	Description       string                                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	QosActAclLogs     *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs     `protobuf:"bytes,3,opt,name=qosActAclLogs,proto3" json:"qosActAclLogs,omitempty"`
	QosActCarPpss     *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss     `protobuf:"bytes,4,opt,name=qosActCarPpss,proto3" json:"qosActCarPpss,omitempty"`
	QosActCars        *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars        `protobuf:"bytes,5,opt,name=qosActCars,proto3" json:"qosActCars,omitempty"`
	QosActFilters     *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters     `protobuf:"bytes,6,opt,name=qosActFilters,proto3" json:"qosActFilters,omitempty"`
	QosActIncPris     *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris     `protobuf:"bytes,7,opt,name=qosActIncPris,proto3" json:"qosActIncPris,omitempty"`
	QosActL2Suppres   *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres   `protobuf:"bytes,8,opt,name=qosActL2Suppres,proto3" json:"qosActL2Suppres,omitempty"`
	QosActLoads       *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads       `protobuf:"bytes,9,opt,name=qosActLoads,proto3" json:"qosActLoads,omitempty"`
	QosActMirCars     *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars     `protobuf:"bytes,10,opt,name=qosActMirCars,proto3" json:"qosActMirCars,omitempty"`
	QosActNsSamplers  *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers  `protobuf:"bytes,11,opt,name=qosActNsSamplers,proto3" json:"qosActNsSamplers,omitempty"`
	QosActPortMirrors *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors `protobuf:"bytes,12,opt,name=qosActPortMirrors,proto3" json:"qosActPortMirrors,omitempty"`
	QosActRdrLsps     *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps     `protobuf:"bytes,13,opt,name=qosActRdrLsps,proto3" json:"qosActRdrLsps,omitempty"`
	QosActRdrMhp6S    *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S    `protobuf:"bytes,14,opt,name=qosActRdrMhp6s,proto3" json:"qosActRdrMhp6s,omitempty"`
	QosActRdrMhps     *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps     `protobuf:"bytes,15,opt,name=qosActRdrMhps,proto3" json:"qosActRdrMhps,omitempty"`
	QosActRdrMldpTnls *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls `protobuf:"bytes,16,opt,name=qosActRdrMldpTnls,proto3" json:"qosActRdrMldpTnls,omitempty"`
	QosActRdrNhp6S    *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S    `protobuf:"bytes,17,opt,name=qosActRdrNhp6s,proto3" json:"qosActRdrNhp6s,omitempty"`
	QosActRdrNhps     *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps     `protobuf:"bytes,18,opt,name=qosActRdrNhps,proto3" json:"qosActRdrNhps,omitempty"`
	QosActRdrPolicys  *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys  `protobuf:"bytes,19,opt,name=qosActRdrPolicys,proto3" json:"qosActRdrPolicys,omitempty"`
	QosActRdrTnls     *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls     `protobuf:"bytes,20,opt,name=qosActRdrTnls,proto3" json:"qosActRdrTnls,omitempty"`
	QosActRdrVpns     *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns     `protobuf:"bytes,21,opt,name=qosActRdrVpns,proto3" json:"qosActRdrVpns,omitempty"`
	QosActRemarks     *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks     `protobuf:"bytes,22,opt,name=qosActRemarks,proto3" json:"qosActRemarks,omitempty"`
	QosActSrvClss     *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss     `protobuf:"bytes,23,opt,name=qosActSrvClss,proto3" json:"qosActSrvClss,omitempty"`
	QosActSysLogs     *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs     `protobuf:"bytes,24,opt,name=qosActSysLogs,proto3" json:"qosActSysLogs,omitempty"`
	QosActUrpfs       *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs       `protobuf:"bytes,25,opt,name=qosActUrpfs,proto3" json:"qosActUrpfs,omitempty"`
	QosActUserQueues  *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues  `protobuf:"bytes,26,opt,name=qosActUserQueues,proto3" json:"qosActUserQueues,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetBehaviorName() string {
	if x != nil {
		return x.BehaviorName
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActAclLogs() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs {
	if x != nil {
		return x.QosActAclLogs
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActCarPpss() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss {
	if x != nil {
		return x.QosActCarPpss
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActCars() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars {
	if x != nil {
		return x.QosActCars
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActFilters() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters {
	if x != nil {
		return x.QosActFilters
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActIncPris() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris {
	if x != nil {
		return x.QosActIncPris
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActL2Suppres() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres {
	if x != nil {
		return x.QosActL2Suppres
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActLoads() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads {
	if x != nil {
		return x.QosActLoads
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActMirCars() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars {
	if x != nil {
		return x.QosActMirCars
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActNsSamplers() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers {
	if x != nil {
		return x.QosActNsSamplers
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActPortMirrors() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors {
	if x != nil {
		return x.QosActPortMirrors
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActRdrLsps() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps {
	if x != nil {
		return x.QosActRdrLsps
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActRdrMhp6S() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S {
	if x != nil {
		return x.QosActRdrMhp6S
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActRdrMhps() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps {
	if x != nil {
		return x.QosActRdrMhps
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActRdrMldpTnls() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls {
	if x != nil {
		return x.QosActRdrMldpTnls
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActRdrNhp6S() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S {
	if x != nil {
		return x.QosActRdrNhp6S
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActRdrNhps() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps {
	if x != nil {
		return x.QosActRdrNhps
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActRdrPolicys() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys {
	if x != nil {
		return x.QosActRdrPolicys
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActRdrTnls() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls {
	if x != nil {
		return x.QosActRdrTnls
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActRdrVpns() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns {
	if x != nil {
		return x.QosActRdrVpns
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActRemarks() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks {
	if x != nil {
		return x.QosActRemarks
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActSrvClss() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss {
	if x != nil {
		return x.QosActSrvClss
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActSysLogs() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs {
	if x != nil {
		return x.QosActSysLogs
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActUrpfs() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs {
	if x != nil {
		return x.QosActUrpfs
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior) GetQosActUserQueues() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues {
	if x != nil {
		return x.QosActUserQueues
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActAclLog []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog `protobuf:"bytes,1,rep,name=qosActAclLog,proto3" json:"qosActAclLog,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs) GetQosActAclLog() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog {
	if x != nil {
		return x.QosActAclLog
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActCarPps []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps `protobuf:"bytes,1,rep,name=qosActCarPps,proto3" json:"qosActCarPps,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 1}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss) GetQosActCarPps() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps {
	if x != nil {
		return x.QosActCarPps
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActCar []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar `protobuf:"bytes,1,rep,name=qosActCar,proto3" json:"qosActCar,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 2}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars) GetQosActCar() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar {
	if x != nil {
		return x.QosActCar
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActFilter *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter `protobuf:"bytes,1,opt,name=qosActFilter,proto3" json:"qosActFilter,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 3}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters) GetQosActFilter() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter {
	if x != nil {
		return x.QosActFilter
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActIncPri *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri `protobuf:"bytes,1,opt,name=qosActIncPri,proto3" json:"qosActIncPri,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 4}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris) GetQosActIncPri() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri {
	if x != nil {
		return x.QosActIncPri
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActL2Suppre []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre `protobuf:"bytes,1,rep,name=qosActL2Suppre,proto3" json:"qosActL2Suppre,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 5}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres) GetQosActL2Suppre() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre {
	if x != nil {
		return x.QosActL2Suppre
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActLoad []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad `protobuf:"bytes,1,rep,name=qosActLoad,proto3" json:"qosActLoad,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 6}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads) GetQosActLoad() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad {
	if x != nil {
		return x.QosActLoad
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActMirCar *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar `protobuf:"bytes,1,opt,name=qosActMirCar,proto3" json:"qosActMirCar,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 7}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars) GetQosActMirCar() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar {
	if x != nil {
		return x.QosActMirCar
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActNsSampler []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler `protobuf:"bytes,1,rep,name=qosActNsSampler,proto3" json:"qosActNsSampler,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 8}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers) GetQosActNsSampler() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler {
	if x != nil {
		return x.QosActNsSampler
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActPortMirror []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror `protobuf:"bytes,1,rep,name=qosActPortMirror,proto3" json:"qosActPortMirror,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 9}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors) GetQosActPortMirror() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror {
	if x != nil {
		return x.QosActPortMirror
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActRdrLsp []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp `protobuf:"bytes,1,rep,name=qosActRdrLsp,proto3" json:"qosActRdrLsp,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 10}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps) GetQosActRdrLsp() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp {
	if x != nil {
		return x.QosActRdrLsp
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActRdrMhp6 []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6 `protobuf:"bytes,1,rep,name=qosActRdrMhp6,proto3" json:"qosActRdrMhp6,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 11}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S) GetQosActRdrMhp6() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6 {
	if x != nil {
		return x.QosActRdrMhp6
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActRdrMhp []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp `protobuf:"bytes,1,rep,name=qosActRdrMhp,proto3" json:"qosActRdrMhp,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 12}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps) GetQosActRdrMhp() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp {
	if x != nil {
		return x.QosActRdrMhp
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActRdrMldpTnl []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl `protobuf:"bytes,1,rep,name=qosActRdrMldpTnl,proto3" json:"qosActRdrMldpTnl,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 13}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls) GetQosActRdrMldpTnl() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl {
	if x != nil {
		return x.QosActRdrMldpTnl
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActRdrNhp6 []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6 `protobuf:"bytes,1,rep,name=qosActRdrNhp6,proto3" json:"qosActRdrNhp6,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 14}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S) GetQosActRdrNhp6() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6 {
	if x != nil {
		return x.QosActRdrNhp6
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActRdrNhp []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp `protobuf:"bytes,1,rep,name=qosActRdrNhp,proto3" json:"qosActRdrNhp,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 15}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps) GetQosActRdrNhp() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp {
	if x != nil {
		return x.QosActRdrNhp
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActRdrPolicy []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy `protobuf:"bytes,1,rep,name=qosActRdrPolicy,proto3" json:"qosActRdrPolicy,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 16}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys) GetQosActRdrPolicy() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy {
	if x != nil {
		return x.QosActRdrPolicy
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActRdrTnl []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl `protobuf:"bytes,1,rep,name=qosActRdrTnl,proto3" json:"qosActRdrTnl,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 17}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls) GetQosActRdrTnl() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl {
	if x != nil {
		return x.QosActRdrTnl
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActRdrVpn []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn `protobuf:"bytes,1,rep,name=qosActRdrVpn,proto3" json:"qosActRdrVpn,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 18}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns) GetQosActRdrVpn() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn {
	if x != nil {
		return x.QosActRdrVpn
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActRemark []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark `protobuf:"bytes,1,rep,name=qosActRemark,proto3" json:"qosActRemark,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 19}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks) GetQosActRemark() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark {
	if x != nil {
		return x.QosActRemark
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActSrvCls []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls `protobuf:"bytes,1,rep,name=qosActSrvCls,proto3" json:"qosActSrvCls,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 20}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss) GetQosActSrvCls() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls {
	if x != nil {
		return x.QosActSrvCls
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActSysLog *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog `protobuf:"bytes,1,opt,name=qosActSysLog,proto3" json:"qosActSysLog,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 21}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs) GetQosActSysLog() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog {
	if x != nil {
		return x.QosActSysLog
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActUrpf []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf `protobuf:"bytes,1,rep,name=qosActUrpf,proto3" json:"qosActUrpf,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 22}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs) GetQosActUrpf() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf {
	if x != nil {
		return x.QosActUrpf
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActUserQueue *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue `protobuf:"bytes,1,opt,name=qosActUserQueue,proto3" json:"qosActUserQueue,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 23}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues) GetQosActUserQueue() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue {
	if x != nil {
		return x.QosActUserQueue
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType  `protobuf:"varint,1,opt,name=actionType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType" json:"actionType,omitempty"`
	IsConfigure Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure `protobuf:"varint,2,opt,name=isConfigure,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure" json:"isConfigure,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 0, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog) GetActionType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType {
	if x != nil {
		return x.ActionType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType_ACLLOG
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog) GetIsConfigure() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure {
	if x != nil {
		return x.IsConfigure
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure_ENABLE
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType         Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType         `protobuf:"varint,1,opt,name=actionType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType" json:"actionType,omitempty"`
	Cbs                uint32                                                                              `protobuf:"varint,2,opt,name=cbs,proto3" json:"cbs,omitempty"`
	Cir                uint32                                                                              `protobuf:"varint,3,opt,name=cir,proto3" json:"cir,omitempty"`
	ColorAware         Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware         `protobuf:"varint,4,opt,name=colorAware,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware" json:"colorAware,omitempty"`
	GreenAction        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction        `protobuf:"varint,5,opt,name=greenAction,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction" json:"greenAction,omitempty"`
	GreenColor         Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor         `protobuf:"varint,6,opt,name=greenColor,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor" json:"greenColor,omitempty"`
	GreenRemarkDscp    uint32                                                                              `protobuf:"varint,7,opt,name=greenRemarkDscp,proto3" json:"greenRemarkDscp,omitempty"`
	GreenServiceClass  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass  `protobuf:"varint,8,opt,name=greenServiceClass,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass" json:"greenServiceClass,omitempty"`
	LimitType          Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType          `protobuf:"varint,9,opt,name=limitType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType" json:"limitType,omitempty"`
	Pbs                uint32                                                                              `protobuf:"varint,10,opt,name=pbs,proto3" json:"pbs,omitempty"`
	Pir                uint32                                                                              `protobuf:"varint,11,opt,name=pir,proto3" json:"pir,omitempty"`
	RedAction          Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction          `protobuf:"varint,12,opt,name=redAction,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction" json:"redAction,omitempty"`
	RedColor           Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor           `protobuf:"varint,13,opt,name=redColor,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor" json:"redColor,omitempty"`
	RedRemarkDscp      uint32                                                                              `protobuf:"varint,14,opt,name=redRemarkDscp,proto3" json:"redRemarkDscp,omitempty"`
	RedServiceClass    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass    `protobuf:"varint,15,opt,name=redServiceClass,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass" json:"redServiceClass,omitempty"`
	YellowAction       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction       `protobuf:"varint,16,opt,name=yellowAction,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction" json:"yellowAction,omitempty"`
	YellowColor        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor        `protobuf:"varint,17,opt,name=yellowColor,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor" json:"yellowColor,omitempty"`
	YellowRemarkDscp   uint32                                                                              `protobuf:"varint,18,opt,name=yellowRemarkDscp,proto3" json:"yellowRemarkDscp,omitempty"`
	YellowServiceClass Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass `protobuf:"varint,19,opt,name=yellowServiceClass,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass" json:"yellowServiceClass,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 1, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetActionType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType {
	if x != nil {
		return x.ActionType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType_CAR
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetCbs() uint32 {
	if x != nil {
		return x.Cbs
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetCir() uint32 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetColorAware() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware {
	if x != nil {
		return x.ColorAware
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware_FALSE
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetGreenAction() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction {
	if x != nil {
		return x.GreenAction
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction_DISCARD
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetGreenColor() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor {
	if x != nil {
		return x.GreenColor
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor_GREEN
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetGreenRemarkDscp() uint32 {
	if x != nil {
		return x.GreenRemarkDscp
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetGreenServiceClass() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass {
	if x != nil {
		return x.GreenServiceClass
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass_AF1
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetLimitType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType {
	if x != nil {
		return x.LimitType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType_BPS
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetPir() uint32 {
	if x != nil {
		return x.Pir
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetRedAction() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction {
	if x != nil {
		return x.RedAction
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction_DISCARD
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetRedColor() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor {
	if x != nil {
		return x.RedColor
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor_GREEN
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetRedRemarkDscp() uint32 {
	if x != nil {
		return x.RedRemarkDscp
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetRedServiceClass() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass {
	if x != nil {
		return x.RedServiceClass
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass_AF1
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetYellowAction() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction {
	if x != nil {
		return x.YellowAction
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction_DISCARD
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetYellowColor() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor {
	if x != nil {
		return x.YellowColor
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor_GREEN
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetYellowRemarkDscp() uint32 {
	if x != nil {
		return x.YellowRemarkDscp
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps) GetYellowServiceClass() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass {
	if x != nil {
		return x.YellowServiceClass
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass_AF1
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType         Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType         `protobuf:"varint,1,opt,name=actionType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType" json:"actionType,omitempty"`
	Adjust             int32                                                                         `protobuf:"varint,2,opt,name=adjust,proto3" json:"adjust,omitempty"`
	Cbs                uint32                                                                        `protobuf:"varint,3,opt,name=cbs,proto3" json:"cbs,omitempty"`
	Cir                uint32                                                                        `protobuf:"varint,4,opt,name=cir,proto3" json:"cir,omitempty"`
	ColorAware         Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware         `protobuf:"varint,5,opt,name=colorAware,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware" json:"colorAware,omitempty"`
	GreenAction        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction        `protobuf:"varint,6,opt,name=greenAction,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction" json:"greenAction,omitempty"`
	GreenColor         Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor         `protobuf:"varint,7,opt,name=greenColor,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor" json:"greenColor,omitempty"`
	GreenRemarkDscp    uint32                                                                        `protobuf:"varint,8,opt,name=greenRemarkDscp,proto3" json:"greenRemarkDscp,omitempty"`
	GreenServiceClass  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass  `protobuf:"varint,9,opt,name=greenServiceClass,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass" json:"greenServiceClass,omitempty"`
	LimitType          Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType          `protobuf:"varint,10,opt,name=limitType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType" json:"limitType,omitempty"`
	Pbs                uint32                                                                        `protobuf:"varint,11,opt,name=pbs,proto3" json:"pbs,omitempty"`
	Pir                uint32                                                                        `protobuf:"varint,12,opt,name=pir,proto3" json:"pir,omitempty"`
	RedAction          Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction          `protobuf:"varint,13,opt,name=redAction,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction" json:"redAction,omitempty"`
	RedColor           Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor           `protobuf:"varint,14,opt,name=redColor,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor" json:"redColor,omitempty"`
	RedRemarkDscp      uint32                                                                        `protobuf:"varint,15,opt,name=redRemarkDscp,proto3" json:"redRemarkDscp,omitempty"`
	RedServiceClass    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass    `protobuf:"varint,16,opt,name=redServiceClass,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass" json:"redServiceClass,omitempty"`
	YellowAction       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction       `protobuf:"varint,17,opt,name=yellowAction,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction" json:"yellowAction,omitempty"`
	YellowColor        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor        `protobuf:"varint,18,opt,name=yellowColor,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor" json:"yellowColor,omitempty"`
	YellowRemarkDscp   uint32                                                                        `protobuf:"varint,19,opt,name=yellowRemarkDscp,proto3" json:"yellowRemarkDscp,omitempty"`
	YellowServiceClass Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass `protobuf:"varint,20,opt,name=yellowServiceClass,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass" json:"yellowServiceClass,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 2, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetActionType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType {
	if x != nil {
		return x.ActionType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType_CAR
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetAdjust() int32 {
	if x != nil {
		return x.Adjust
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetCbs() uint32 {
	if x != nil {
		return x.Cbs
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetCir() uint32 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetColorAware() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware {
	if x != nil {
		return x.ColorAware
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware_FALSE
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetGreenAction() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction {
	if x != nil {
		return x.GreenAction
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction_DISCARD
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetGreenColor() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor {
	if x != nil {
		return x.GreenColor
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor_GREEN
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetGreenRemarkDscp() uint32 {
	if x != nil {
		return x.GreenRemarkDscp
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetGreenServiceClass() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass {
	if x != nil {
		return x.GreenServiceClass
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass_AF1
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetLimitType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType {
	if x != nil {
		return x.LimitType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType_BPS
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetPir() uint32 {
	if x != nil {
		return x.Pir
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetRedAction() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction {
	if x != nil {
		return x.RedAction
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction_DISCARD
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetRedColor() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor {
	if x != nil {
		return x.RedColor
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor_GREEN
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetRedRemarkDscp() uint32 {
	if x != nil {
		return x.RedRemarkDscp
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetRedServiceClass() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass {
	if x != nil {
		return x.RedServiceClass
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass_AF1
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetYellowAction() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction {
	if x != nil {
		return x.YellowAction
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction_DISCARD
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetYellowColor() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor {
	if x != nil {
		return x.YellowColor
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor_GREEN
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetYellowRemarkDscp() uint32 {
	if x != nil {
		return x.YellowRemarkDscp
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar) GetYellowServiceClass() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass {
	if x != nil {
		return x.YellowServiceClass
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass_AF1
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType `protobuf:"varint,1,opt,name=actionType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType" json:"actionType,omitempty"`
	Filter     Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter     `protobuf:"varint,2,opt,name=filter,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter" json:"filter,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 3, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter) GetActionType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType {
	if x != nil {
		return x.ActionType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType_FILTER
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter) GetFilter() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter {
	if x != nil {
		return x.Filter
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter_DENY
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority `protobuf:"varint,1,opt,name=priority,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority" json:"priority,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 4, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri) GetPriority() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority {
	if x != nil {
		return x.Priority
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority_INCPRI
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cbs               uint32                                                                                 `protobuf:"varint,1,opt,name=cbs,proto3" json:"cbs,omitempty"`
	Cir               uint32                                                                                 `protobuf:"varint,2,opt,name=cir,proto3" json:"cir,omitempty"`
	GreenAction       Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction       `protobuf:"varint,3,opt,name=greenAction,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction" json:"greenAction,omitempty"`
	GreenColor        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor        `protobuf:"varint,4,opt,name=greenColor,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor" json:"greenColor,omitempty"`
	GreenServiceClass Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass `protobuf:"varint,5,opt,name=greenServiceClass,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass" json:"greenServiceClass,omitempty"`
	RedAction         Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction         `protobuf:"varint,6,opt,name=redAction,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction" json:"redAction,omitempty"`
	RedColor          Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor          `protobuf:"varint,7,opt,name=redColor,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor" json:"redColor,omitempty"`
	RedServiceClass   Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass   `protobuf:"varint,8,opt,name=redServiceClass,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass" json:"redServiceClass,omitempty"`
	SuppressType      Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType      `protobuf:"varint,9,opt,name=suppressType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType" json:"suppressType,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 5, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre) GetCbs() uint32 {
	if x != nil {
		return x.Cbs
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre) GetCir() uint32 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre) GetGreenAction() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction {
	if x != nil {
		return x.GreenAction
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction_DISCARD
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre) GetGreenColor() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor {
	if x != nil {
		return x.GreenColor
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor_GREEN
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre) GetGreenServiceClass() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass {
	if x != nil {
		return x.GreenServiceClass
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass_AF1
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre) GetRedAction() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction {
	if x != nil {
		return x.RedAction
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction_DISCARD
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre) GetRedColor() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor {
	if x != nil {
		return x.RedColor
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor_GREEN
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre) GetRedServiceClass() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass {
	if x != nil {
		return x.RedServiceClass
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass_AF1
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre) GetSuppressType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType {
	if x != nil {
		return x.SuppressType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType_BROADCAST_SUPPRESSION
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType  `protobuf:"varint,1,opt,name=actionType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType" json:"actionType,omitempty"`
	BalanceType Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType `protobuf:"varint,2,opt,name=balanceType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType" json:"balanceType,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 6, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad) GetActionType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType {
	if x != nil {
		return x.ActionType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType_LOADBALANCE
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad) GetBalanceType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType {
	if x != nil {
		return x.BalanceType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType_FLOW
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cbs uint32 `protobuf:"varint,1,opt,name=cbs,proto3" json:"cbs,omitempty"`
	Cir uint32 `protobuf:"varint,2,opt,name=cir,proto3" json:"cir,omitempty"`
	Pbs uint32 `protobuf:"varint,3,opt,name=pbs,proto3" json:"pbs,omitempty"`
	Pir uint32 `protobuf:"varint,4,opt,name=pir,proto3" json:"pir,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 7, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar) GetCbs() uint32 {
	if x != nil {
		return x.Cbs
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar) GetCir() uint32 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar) GetPir() uint32 {
	if x != nil {
		return x.Pir
	}
	return 0
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowType    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType   `protobuf:"varint,1,opt,name=flowType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType" json:"flowType,omitempty"`
	SampleType  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType `protobuf:"varint,2,opt,name=sampleType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType" json:"sampleType,omitempty"`
	SampleValue uint32                                                                            `protobuf:"varint,3,opt,name=sampleValue,proto3" json:"sampleValue,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 8, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler) GetFlowType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType {
	if x != nil {
		return x.FlowType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType_IPV4
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler) GetSampleType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType {
	if x != nil {
		return x.SampleType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType_FIXPACKETS
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler) GetSampleValue() uint32 {
	if x != nil {
		return x.SampleValue
	}
	return 0
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType `protobuf:"varint,1,opt,name=actionType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType" json:"actionType,omitempty"`
	Enable     Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable     `protobuf:"varint,2,opt,name=enable,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable" json:"enable,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 9, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror) GetActionType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType {
	if x != nil {
		return x.ActionType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType_PORTMIRROR
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror) GetEnable() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable {
	if x != nil {
		return x.Enable
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable_ENABLE
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType `protobuf:"varint,1,opt,name=actionType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType" json:"actionType,omitempty"`
	ConfigType Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType `protobuf:"varint,2,opt,name=configType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType" json:"configType,omitempty"`
	DestAddr   string                                                                      `protobuf:"bytes,3,opt,name=destAddr,proto3" json:"destAddr,omitempty"`
	IfName     string                                                                      `protobuf:"bytes,4,opt,name=ifName,proto3" json:"ifName,omitempty"`
	NextHop    string                                                                      `protobuf:"bytes,5,opt,name=nextHop,proto3" json:"nextHop,omitempty"`
	Secondary  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary  `protobuf:"varint,6,opt,name=secondary,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary" json:"secondary,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 10, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp) GetActionType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType {
	if x != nil {
		return x.ActionType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType_REDIRECTLSP
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp) GetConfigType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType {
	if x != nil {
		return x.ConfigType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType_DESTADDR
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp) GetDestAddr() string {
	if x != nil {
		return x.DestAddr
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp) GetNextHop() string {
	if x != nil {
		return x.NextHop
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp) GetSecondary() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary {
	if x != nil {
		return x.Secondary
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary_ENABLE
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterBlackhole bool                                                                            `protobuf:"varint,1,opt,name=filterBlackhole,proto3" json:"filterBlackhole,omitempty"`
	FilterDefault   bool                                                                            `protobuf:"varint,2,opt,name=filterDefault,proto3" json:"filterDefault,omitempty"`
	Hroute          bool                                                                            `protobuf:"varint,3,opt,name=hroute,proto3" json:"hroute,omitempty"`
	LoadBalance     bool                                                                            `protobuf:"varint,4,opt,name=loadBalance,proto3" json:"loadBalance,omitempty"`
	QosRdrNhp6S     *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S `protobuf:"bytes,5,opt,name=qosRdrNhp6s,proto3" json:"qosRdrNhp6s,omitempty"`
	RdrType         Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType      `protobuf:"varint,6,opt,name=rdrType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType" json:"rdrType,omitempty"`
	Routeforward    bool                                                                            `protobuf:"varint,7,opt,name=routeforward,proto3" json:"routeforward,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 11, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6) GetFilterBlackhole() bool {
	if x != nil {
		return x.FilterBlackhole
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6) GetFilterDefault() bool {
	if x != nil {
		return x.FilterDefault
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6) GetHroute() bool {
	if x != nil {
		return x.Hroute
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6) GetLoadBalance() bool {
	if x != nil {
		return x.LoadBalance
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6) GetQosRdrNhp6S() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S {
	if x != nil {
		return x.QosRdrNhp6S
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6) GetRdrType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType {
	if x != nil {
		return x.RdrType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType_BACKUP
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6) GetRouteforward() bool {
	if x != nil {
		return x.Routeforward
	}
	return false
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRdrNhp6 []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6 `protobuf:"bytes,1,rep,name=qosRdrNhp6,proto3" json:"qosRdrNhp6,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S) ProtoMessage() {
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 11, 0, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S) GetQosRdrNhp6() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6 {
	if x != nil {
		return x.QosRdrNhp6
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfName       string `protobuf:"bytes,1,opt,name=ifName,proto3" json:"ifName,omitempty"`
	NextHop      string `protobuf:"bytes,2,opt,name=nextHop,proto3" json:"nextHop,omitempty"`
	NqaAdminName string `protobuf:"bytes,3,opt,name=nqaAdminName,proto3" json:"nqaAdminName,omitempty"`
	NqaInstance  string `protobuf:"bytes,4,opt,name=nqaInstance,proto3" json:"nqaInstance,omitempty"`
	VpnName      string `protobuf:"bytes,5,opt,name=vpnName,proto3" json:"vpnName,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6) ProtoMessage() {
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 11, 0, 0, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6) GetNextHop() string {
	if x != nil {
		return x.NextHop
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6) GetNqaAdminName() string {
	if x != nil {
		return x.NqaAdminName
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6) GetNqaInstance() string {
	if x != nil {
		return x.NqaInstance
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6) GetVpnName() string {
	if x != nil {
		return x.VpnName
	}
	return ""
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drop            bool                                                                         `protobuf:"varint,1,opt,name=drop,proto3" json:"drop,omitempty"`
	FilterBlackhole bool                                                                         `protobuf:"varint,2,opt,name=filterBlackhole,proto3" json:"filterBlackhole,omitempty"`
	FilterDefault   bool                                                                         `protobuf:"varint,3,opt,name=filterDefault,proto3" json:"filterDefault,omitempty"`
	Hroute          bool                                                                         `protobuf:"varint,4,opt,name=hroute,proto3" json:"hroute,omitempty"`
	LoadBalance     bool                                                                         `protobuf:"varint,5,opt,name=loadBalance,proto3" json:"loadBalance,omitempty"`
	QosRdrNhps      *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps `protobuf:"bytes,6,opt,name=qosRdrNhps,proto3" json:"qosRdrNhps,omitempty"`
	RdrType         Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType     `protobuf:"varint,7,opt,name=rdrType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType" json:"rdrType,omitempty"`
	Routeforward    bool                                                                         `protobuf:"varint,8,opt,name=routeforward,proto3" json:"routeforward,omitempty"`
	SipHash         bool                                                                         `protobuf:"varint,9,opt,name=sipHash,proto3" json:"sipHash,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 12, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp) GetDrop() bool {
	if x != nil {
		return x.Drop
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp) GetFilterBlackhole() bool {
	if x != nil {
		return x.FilterBlackhole
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp) GetFilterDefault() bool {
	if x != nil {
		return x.FilterDefault
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp) GetHroute() bool {
	if x != nil {
		return x.Hroute
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp) GetLoadBalance() bool {
	if x != nil {
		return x.LoadBalance
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp) GetQosRdrNhps() *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps {
	if x != nil {
		return x.QosRdrNhps
	}
	return nil
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp) GetRdrType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType {
	if x != nil {
		return x.RdrType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType_BACKUP
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp) GetRouteforward() bool {
	if x != nil {
		return x.Routeforward
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp) GetSipHash() bool {
	if x != nil {
		return x.SipHash
	}
	return false
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRdrNhp []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp `protobuf:"bytes,1,rep,name=qosRdrNhp,proto3" json:"qosRdrNhp,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 12, 0, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps) GetQosRdrNhp() []*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp {
	if x != nil {
		return x.QosRdrNhp
	}
	return nil
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfName       string `protobuf:"bytes,1,opt,name=ifName,proto3" json:"ifName,omitempty"`
	NextHop      string `protobuf:"bytes,2,opt,name=nextHop,proto3" json:"nextHop,omitempty"`
	NqaAdminName string `protobuf:"bytes,3,opt,name=nqaAdminName,proto3" json:"nqaAdminName,omitempty"`
	NqaInstance  string `protobuf:"bytes,4,opt,name=nqaInstance,proto3" json:"nqaInstance,omitempty"`
	VpnName      string `protobuf:"bytes,5,opt,name=vpnName,proto3" json:"vpnName,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp) ProtoMessage() {
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 12, 0, 0, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp) GetNextHop() string {
	if x != nil {
		return x.NextHop
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp) GetNqaAdminName() string {
	if x != nil {
		return x.NqaAdminName
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp) GetNqaInstance() string {
	if x != nil {
		return x.NqaInstance
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp) GetVpnName() string {
	if x != nil {
		return x.VpnName
	}
	return ""
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType     Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType `protobuf:"varint,1,opt,name=actionType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType" json:"actionType,omitempty"`
	MldpTunnelName string                                                                              `protobuf:"bytes,2,opt,name=mldpTunnelName,proto3" json:"mldpTunnelName,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 13, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl) GetActionType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType {
	if x != nil {
		return x.ActionType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType_REDIRECTMLDPTUNNEL
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl) GetMldpTunnelName() string {
	if x != nil {
		return x.MldpTunnelName
	}
	return ""
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterBlackhole bool                                                                       `protobuf:"varint,1,opt,name=filterBlackhole,proto3" json:"filterBlackhole,omitempty"`
	FilterDefault   bool                                                                       `protobuf:"varint,2,opt,name=filterDefault,proto3" json:"filterDefault,omitempty"`
	Hroute          bool                                                                       `protobuf:"varint,3,opt,name=hroute,proto3" json:"hroute,omitempty"`
	IfName          string                                                                     `protobuf:"bytes,4,opt,name=ifName,proto3" json:"ifName,omitempty"`
	NextHop         string                                                                     `protobuf:"bytes,5,opt,name=nextHop,proto3" json:"nextHop,omitempty"`
	NqaAdminName    string                                                                     `protobuf:"bytes,6,opt,name=nqaAdminName,proto3" json:"nqaAdminName,omitempty"`
	NqaInstance     string                                                                     `protobuf:"bytes,7,opt,name=nqaInstance,proto3" json:"nqaInstance,omitempty"`
	RdrType         Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType `protobuf:"varint,8,opt,name=rdrType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType" json:"rdrType,omitempty"`
	Routeforward    bool                                                                       `protobuf:"varint,9,opt,name=routeforward,proto3" json:"routeforward,omitempty"`
	VpnName         string                                                                     `protobuf:"bytes,10,opt,name=vpnName,proto3" json:"vpnName,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 14, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) GetFilterBlackhole() bool {
	if x != nil {
		return x.FilterBlackhole
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) GetFilterDefault() bool {
	if x != nil {
		return x.FilterDefault
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) GetHroute() bool {
	if x != nil {
		return x.Hroute
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) GetNextHop() string {
	if x != nil {
		return x.NextHop
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) GetNqaAdminName() string {
	if x != nil {
		return x.NqaAdminName
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) GetNqaInstance() string {
	if x != nil {
		return x.NqaInstance
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) GetRdrType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType {
	if x != nil {
		return x.RdrType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType_BACKUP
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) GetRouteforward() bool {
	if x != nil {
		return x.Routeforward
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6) GetVpnName() string {
	if x != nil {
		return x.VpnName
	}
	return ""
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drop            bool                                                                     `protobuf:"varint,1,opt,name=drop,proto3" json:"drop,omitempty"`
	FilterBlackhole bool                                                                     `protobuf:"varint,2,opt,name=filterBlackhole,proto3" json:"filterBlackhole,omitempty"`
	FilterDefault   bool                                                                     `protobuf:"varint,3,opt,name=filterDefault,proto3" json:"filterDefault,omitempty"`
	Hroute          bool                                                                     `protobuf:"varint,4,opt,name=hroute,proto3" json:"hroute,omitempty"`
	IfName          string                                                                   `protobuf:"bytes,5,opt,name=ifName,proto3" json:"ifName,omitempty"`
	NextHop         string                                                                   `protobuf:"bytes,6,opt,name=nextHop,proto3" json:"nextHop,omitempty"`
	NqaAdminName    string                                                                   `protobuf:"bytes,7,opt,name=nqaAdminName,proto3" json:"nqaAdminName,omitempty"`
	NqaInstance     string                                                                   `protobuf:"bytes,8,opt,name=nqaInstance,proto3" json:"nqaInstance,omitempty"`
	Public          bool                                                                     `protobuf:"varint,9,opt,name=public,proto3" json:"public,omitempty"`
	RdrType         Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType `protobuf:"varint,10,opt,name=rdrType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType" json:"rdrType,omitempty"`
	Routeforward    bool                                                                     `protobuf:"varint,11,opt,name=routeforward,proto3" json:"routeforward,omitempty"`
	VpnName         string                                                                   `protobuf:"bytes,12,opt,name=vpnName,proto3" json:"vpnName,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 15, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) GetDrop() bool {
	if x != nil {
		return x.Drop
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) GetFilterBlackhole() bool {
	if x != nil {
		return x.FilterBlackhole
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) GetFilterDefault() bool {
	if x != nil {
		return x.FilterDefault
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) GetHroute() bool {
	if x != nil {
		return x.Hroute
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) GetNextHop() string {
	if x != nil {
		return x.NextHop
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) GetNqaAdminName() string {
	if x != nil {
		return x.NqaAdminName
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) GetNqaInstance() string {
	if x != nil {
		return x.NqaInstance
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) GetRdrType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType {
	if x != nil {
		return x.RdrType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType_BACKUP
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) GetRouteforward() bool {
	if x != nil {
		return x.Routeforward
	}
	return false
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp) GetVpnName() string {
	if x != nil {
		return x.VpnName
	}
	return ""
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyName         string                                                                                    `protobuf:"bytes,1,opt,name=policyName,proto3" json:"policyName,omitempty"`
	QosHierarchicalCar Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar `protobuf:"varint,2,opt,name=qosHierarchicalCar,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar" json:"qosHierarchicalCar,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 16, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy) GetQosHierarchicalCar() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar {
	if x != nil {
		return x.QosHierarchicalCar
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar_DISABLE
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType `protobuf:"varint,1,opt,name=actionType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType" json:"actionType,omitempty"`
	IfName     string                                                                      `protobuf:"bytes,2,opt,name=ifName,proto3" json:"ifName,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 17, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl) GetActionType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType {
	if x != nil {
		return x.ActionType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType_REDIRECTTUNNEL
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType   Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType `protobuf:"varint,1,opt,name=actionType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType" json:"actionType,omitempty"`
	VpnGroupName string                                                                      `protobuf:"bytes,2,opt,name=vpnGroupName,proto3" json:"vpnGroupName,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 18, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn) GetActionType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType {
	if x != nil {
		return x.ActionType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType_REDIRECTVPNGROUP
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn) GetVpnGroupName() string {
	if x != nil {
		return x.VpnGroupName
	}
	return ""
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType  Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType `protobuf:"varint,1,opt,name=actionType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType" json:"actionType,omitempty"`
	RemarkValue uint32                                                                      `protobuf:"varint,2,opt,name=remarkValue,proto3" json:"remarkValue,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 19, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark) GetActionType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType {
	if x != nil {
		return x.ActionType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType_REMARK8021P
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark) GetRemarkValue() uint32 {
	if x != nil {
		return x.RemarkValue
	}
	return 0
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType   Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType   `protobuf:"varint,1,opt,name=actionType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType" json:"actionType,omitempty"`
	Color        Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color        `protobuf:"varint,2,opt,name=color,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color" json:"color,omitempty"`
	RemarkFlag   Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag   `protobuf:"varint,3,opt,name=remarkFlag,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag" json:"remarkFlag,omitempty"`
	ServiceClass Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass `protobuf:"varint,4,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 20, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls) GetActionType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType {
	if x != nil {
		return x.ActionType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType_SERVICECLASS
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls) GetColor() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color {
	if x != nil {
		return x.Color
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color_GREEN
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls) GetRemarkFlag() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag {
	if x != nil {
		return x.RemarkFlag
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag_DISABLE
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls) GetServiceClass() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass_AF1
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatisticsType Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType `protobuf:"varint,1,opt,name=statisticsType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType" json:"statisticsType,omitempty"`
	Threshold      uint32                                                                          `protobuf:"varint,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 21, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog) GetStatisticsType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType {
	if x != nil {
		return x.StatisticsType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType_BPS
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog) GetThreshold() uint32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType   Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType   `protobuf:"varint,1,opt,name=actionType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType" json:"actionType,omitempty"`
	AllowDefault Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault `protobuf:"varint,2,opt,name=allowDefault,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault" json:"allowDefault,omitempty"`
	CheckType    Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType    `protobuf:"varint,3,opt,name=checkType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType" json:"checkType,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 22, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf) GetActionType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType {
	if x != nil {
		return x.ActionType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType_URPF
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf) GetAllowDefault() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault {
	if x != nil {
		return x.AllowDefault
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault_DISABLE
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf) GetCheckType() Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType {
	if x != nil {
		return x.CheckType
	}
	return Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType_LOOSE
}

type Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cir             uint32 `protobuf:"varint,1,opt,name=cir,proto3" json:"cir,omitempty"`
	FlowMappingName string `protobuf:"bytes,2,opt,name=flowMappingName,proto3" json:"flowMappingName,omitempty"`
	FlowQueueName   string `protobuf:"bytes,3,opt,name=flowQueueName,proto3" json:"flowQueueName,omitempty"`
	GqName          string `protobuf:"bytes,4,opt,name=gqName,proto3" json:"gqName,omitempty"`
	Pir             uint32 `protobuf:"varint,5,opt,name=pir,proto3" json:"pir,omitempty"`
	TemplateName    string `protobuf:"bytes,6,opt,name=templateName,proto3" json:"templateName,omitempty"`
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue) Reset() {
	*x = Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue) ProtoMessage() {}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 0, 0, 23, 0}
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue) GetCir() uint32 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue) GetFlowMappingName() string {
	if x != nil {
		return x.FlowMappingName
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue) GetFlowQueueName() string {
	if x != nil {
		return x.FlowQueueName
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue) GetGqName() string {
	if x != nil {
		return x.GqName
	}
	return ""
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue) GetPir() uint32 {
	if x != nil {
		return x.Pir
	}
	return 0
}

func (x *Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

type Qos_QosCbQos_QosClassifiers_QosClassifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassifierID     uint32                                                      `protobuf:"varint,1,opt,name=classifierID,proto3" json:"classifierID,omitempty"`
	ClassifierName   string                                                      `protobuf:"bytes,2,opt,name=classifierName,proto3" json:"classifierName,omitempty"`
	Description      string                                                      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Operator         Qos_QosCbQos_QosClassifiers_QosClassifier_Operator          `protobuf:"varint,4,opt,name=operator,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosClassifiers_QosClassifier_Operator" json:"operator,omitempty"`
	QosLocalID6S     *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S     `protobuf:"bytes,5,opt,name=qosLocalID6s,proto3" json:"qosLocalID6s,omitempty"`
	QosLocalIDs      *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs      `protobuf:"bytes,6,opt,name=qosLocalIDs,proto3" json:"qosLocalIDs,omitempty"`
	QosRuleAcl6S     *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S     `protobuf:"bytes,7,opt,name=qosRuleAcl6s,proto3" json:"qosRuleAcl6s,omitempty"`
	QosRuleAcls      *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls      `protobuf:"bytes,8,opt,name=qosRuleAcls,proto3" json:"qosRuleAcls,omitempty"`
	QosRuleAnys      *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys      `protobuf:"bytes,9,opt,name=qosRuleAnys,proto3" json:"qosRuleAnys,omitempty"`
	QosRuleIPv6Addrs *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs `protobuf:"bytes,10,opt,name=qosRuleIPv6Addrs,proto3" json:"qosRuleIPv6Addrs,omitempty"`
	QosRuleMacs      *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs      `protobuf:"bytes,11,opt,name=qosRuleMacs,proto3" json:"qosRuleMacs,omitempty"`
	QosRulePrioritys *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys `protobuf:"bytes,12,opt,name=qosRulePrioritys,proto3" json:"qosRulePrioritys,omitempty"`
	QosRuleProto6S   *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S   `protobuf:"bytes,13,opt,name=qosRuleProto6s,proto3" json:"qosRuleProto6s,omitempty"`
	QosRuleTcpFlags  *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags  `protobuf:"bytes,14,opt,name=qosRuleTcpFlags,proto3" json:"qosRuleTcpFlags,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) GetClassifierID() uint32 {
	if x != nil {
		return x.ClassifierID
	}
	return 0
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) GetClassifierName() string {
	if x != nil {
		return x.ClassifierName
	}
	return ""
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) GetOperator() Qos_QosCbQos_QosClassifiers_QosClassifier_Operator {
	if x != nil {
		return x.Operator
	}
	return Qos_QosCbQos_QosClassifiers_QosClassifier_Operator_AND
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) GetQosLocalID6S() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S {
	if x != nil {
		return x.QosLocalID6S
	}
	return nil
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) GetQosLocalIDs() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs {
	if x != nil {
		return x.QosLocalIDs
	}
	return nil
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) GetQosRuleAcl6S() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S {
	if x != nil {
		return x.QosRuleAcl6S
	}
	return nil
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) GetQosRuleAcls() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls {
	if x != nil {
		return x.QosRuleAcls
	}
	return nil
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) GetQosRuleAnys() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys {
	if x != nil {
		return x.QosRuleAnys
	}
	return nil
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) GetQosRuleIPv6Addrs() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs {
	if x != nil {
		return x.QosRuleIPv6Addrs
	}
	return nil
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) GetQosRuleMacs() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs {
	if x != nil {
		return x.QosRuleMacs
	}
	return nil
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) GetQosRulePrioritys() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys {
	if x != nil {
		return x.QosRulePrioritys
	}
	return nil
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) GetQosRuleProto6S() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S {
	if x != nil {
		return x.QosRuleProto6S
	}
	return nil
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier) GetQosRuleTcpFlags() *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags {
	if x != nil {
		return x.QosRuleTcpFlags
	}
	return nil
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLocalID6 []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S_QosLocalID6 `protobuf:"bytes,1,rep,name=qosLocalID6,proto3" json:"qosLocalID6,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 0}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S) GetQosLocalID6() []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S_QosLocalID6 {
	if x != nil {
		return x.QosLocalID6
	}
	return nil
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLocalID []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs_QosLocalID `protobuf:"bytes,1,rep,name=qosLocalID,proto3" json:"qosLocalID,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 1}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs) GetQosLocalID() []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs_QosLocalID {
	if x != nil {
		return x.QosLocalID
	}
	return nil
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRuleAcl6 []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S_QosRuleAcl6 `protobuf:"bytes,1,rep,name=qosRuleAcl6,proto3" json:"qosRuleAcl6,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 2}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S) GetQosRuleAcl6() []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S_QosRuleAcl6 {
	if x != nil {
		return x.QosRuleAcl6
	}
	return nil
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRuleAcl []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls_QosRuleAcl `protobuf:"bytes,1,rep,name=qosRuleAcl,proto3" json:"qosRuleAcl,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 3}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls) GetQosRuleAcl() []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls_QosRuleAcl {
	if x != nil {
		return x.QosRuleAcl
	}
	return nil
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRuleAny []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny `protobuf:"bytes,1,rep,name=qosRuleAny,proto3" json:"qosRuleAny,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 4}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys) GetQosRuleAny() []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny {
	if x != nil {
		return x.QosRuleAny
	}
	return nil
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRuleIPv6Addr []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr `protobuf:"bytes,1,rep,name=qosRuleIPv6Addr,proto3" json:"qosRuleIPv6Addr,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 5}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs) GetQosRuleIPv6Addr() []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr {
	if x != nil {
		return x.QosRuleIPv6Addr
	}
	return nil
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRuleMac []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac `protobuf:"bytes,1,rep,name=qosRuleMac,proto3" json:"qosRuleMac,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 6}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs) GetQosRuleMac() []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac {
	if x != nil {
		return x.QosRuleMac
	}
	return nil
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRulePriority []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority `protobuf:"bytes,1,rep,name=qosRulePriority,proto3" json:"qosRulePriority,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 7}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys) GetQosRulePriority() []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority {
	if x != nil {
		return x.QosRulePriority
	}
	return nil
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRuleProto6 []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6 `protobuf:"bytes,1,rep,name=qosRuleProto6,proto3" json:"qosRuleProto6,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 8}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S) GetQosRuleProto6() []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6 {
	if x != nil {
		return x.QosRuleProto6
	}
	return nil
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRuleTcpFlag []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag `protobuf:"bytes,1,rep,name=qosRuleTcpFlag,proto3" json:"qosRuleTcpFlag,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 9}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags) GetQosRuleTcpFlag() []*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag {
	if x != nil {
		return x.QosRuleTcpFlag
	}
	return nil
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S_QosLocalID6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLocalId6 uint32 `protobuf:"varint,1,opt,name=qosLocalId6,proto3" json:"qosLocalId6,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S_QosLocalID6) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S_QosLocalID6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S_QosLocalID6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S_QosLocalID6) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S_QosLocalID6) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S_QosLocalID6.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S_QosLocalID6) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 0, 0}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S_QosLocalID6) GetQosLocalId6() uint32 {
	if x != nil {
		return x.QosLocalId6
	}
	return 0
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs_QosLocalID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLocalId uint32 `protobuf:"varint,1,opt,name=qosLocalId,proto3" json:"qosLocalId,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs_QosLocalID) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs_QosLocalID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs_QosLocalID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs_QosLocalID) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs_QosLocalID) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs_QosLocalID.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs_QosLocalID) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 1, 0}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs_QosLocalID) GetQosLocalId() uint32 {
	if x != nil {
		return x.QosLocalId
	}
	return 0
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S_QosRuleAcl6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AclName string `protobuf:"bytes,1,opt,name=aclName,proto3" json:"aclName,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S_QosRuleAcl6) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S_QosRuleAcl6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S_QosRuleAcl6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S_QosRuleAcl6) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S_QosRuleAcl6) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S_QosRuleAcl6.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S_QosRuleAcl6) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 2, 0}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S_QosRuleAcl6) GetAclName() string {
	if x != nil {
		return x.AclName
	}
	return ""
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls_QosRuleAcl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AclName string `protobuf:"bytes,1,opt,name=aclName,proto3" json:"aclName,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls_QosRuleAcl) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls_QosRuleAcl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls_QosRuleAcl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls_QosRuleAcl) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls_QosRuleAcl) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls_QosRuleAcl.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls_QosRuleAcl) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 3, 0}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls_QosRuleAcl) GetAclName() string {
	if x != nil {
		return x.AclName
	}
	return ""
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtoFamily Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily `protobuf:"varint,1,opt,name=protoFamily,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily" json:"protoFamily,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 4, 0}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny) GetProtoFamily() Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily {
	if x != nil {
		return x.ProtoFamily
	}
	return Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily_IPV4
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressType Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType `protobuf:"varint,1,opt,name=addressType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType" json:"addressType,omitempty"`
	IpAddress6  string                                                                                 `protobuf:"bytes,2,opt,name=ipAddress6,proto3" json:"ipAddress6,omitempty"`
	PrefixLen   uint32                                                                                 `protobuf:"varint,3,opt,name=prefixLen,proto3" json:"prefixLen,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 5, 0}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr) GetAddressType() Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType {
	if x != nil {
		return x.AddressType
	}
	return Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType_DESTINATION
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr) GetIpAddress6() string {
	if x != nil {
		return x.IpAddress6
	}
	return ""
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr) GetPrefixLen() uint32 {
	if x != nil {
		return x.PrefixLen
	}
	return 0
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacAddr string                                                                   `protobuf:"bytes,1,opt,name=macAddr,proto3" json:"macAddr,omitempty"`
	MacType Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType `protobuf:"varint,2,opt,name=macType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType" json:"macType,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 6, 0}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac) GetMacAddr() string {
	if x != nil {
		return x.MacAddr
	}
	return ""
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac) GetMacType() Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType {
	if x != nil {
		return x.MacType
	}
	return Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType_DESTINATION
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PriorityType  Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType `protobuf:"varint,1,opt,name=priorityType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType" json:"priorityType,omitempty"`
	PriorityValue uint32                                                                                  `protobuf:"varint,2,opt,name=priorityValue,proto3" json:"priorityValue,omitempty"`
	ServiceClass  Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass `protobuf:"varint,3,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 7, 0}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority) GetPriorityType() Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType {
	if x != nil {
		return x.PriorityType
	}
	return Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType_X_8021P
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority) GetPriorityValue() uint32 {
	if x != nil {
		return x.PriorityValue
	}
	return 0
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority) GetServiceClass() Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass_AF1
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtoFamily Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily `protobuf:"varint,1,opt,name=protoFamily,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily" json:"protoFamily,omitempty"`
	Protocol    uint32                                                                             `protobuf:"varint,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 8, 0}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6) GetProtoFamily() Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily {
	if x != nil {
		return x.ProtoFamily
	}
	return Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily_IPV6
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6) GetProtocol() uint32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

type Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BitMatchType Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType `protobuf:"varint,1,opt,name=bitMatchType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType" json:"bitMatchType,omitempty"`
	TcpFlag      uint32                                                                                `protobuf:"varint,2,opt,name=tcpFlag,proto3" json:"tcpFlag,omitempty"`
	TcpFlagMask  uint32                                                                                `protobuf:"varint,3,opt,name=tcpFlagMask,proto3" json:"tcpFlagMask,omitempty"`
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag) Reset() {
	*x = Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag) ProtoMessage() {}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 1, 0, 9, 0}
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag) GetBitMatchType() Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType {
	if x != nil {
		return x.BitMatchType
	}
	return Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType_ACK
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag) GetTcpFlag() uint32 {
	if x != nil {
		return x.TcpFlag
	}
	return 0
}

func (x *Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag) GetTcpFlagMask() uint32 {
	if x != nil {
		return x.TcpFlagMask
	}
	return 0
}

type Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosCreatedTb uint32 `protobuf:"varint,1,opt,name=qosCreatedTb,proto3" json:"qosCreatedTb,omitempty"`
	QosCreatedTc uint32 `protobuf:"varint,2,opt,name=qosCreatedTc,proto3" json:"qosCreatedTc,omitempty"`
	QosCreatedTp uint32 `protobuf:"varint,3,opt,name=qosCreatedTp,proto3" json:"qosCreatedTp,omitempty"`
	QosFreeTb    uint32 `protobuf:"varint,4,opt,name=qosFreeTb,proto3" json:"qosFreeTb,omitempty"`
	QosFreeTc    uint32 `protobuf:"varint,5,opt,name=qosFreeTc,proto3" json:"qosFreeTc,omitempty"`
	QosFreeTp    uint32 `protobuf:"varint,6,opt,name=qosFreeTp,proto3" json:"qosFreeTp,omitempty"`
	QosTotalTb   uint32 `protobuf:"varint,7,opt,name=qosTotalTb,proto3" json:"qosTotalTb,omitempty"`
	QosTotalTc   uint32 `protobuf:"varint,8,opt,name=qosTotalTc,proto3" json:"qosTotalTc,omitempty"`
	QosTotalTp   uint32 `protobuf:"varint,9,opt,name=qosTotalTp,proto3" json:"qosTotalTp,omitempty"`
}

func (x *Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic) Reset() {
	*x = Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic) ProtoMessage() {}

func (x *Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 2, 0}
}

func (x *Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic) GetQosCreatedTb() uint32 {
	if x != nil {
		return x.QosCreatedTb
	}
	return 0
}

func (x *Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic) GetQosCreatedTc() uint32 {
	if x != nil {
		return x.QosCreatedTc
	}
	return 0
}

func (x *Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic) GetQosCreatedTp() uint32 {
	if x != nil {
		return x.QosCreatedTp
	}
	return 0
}

func (x *Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic) GetQosFreeTb() uint32 {
	if x != nil {
		return x.QosFreeTb
	}
	return 0
}

func (x *Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic) GetQosFreeTc() uint32 {
	if x != nil {
		return x.QosFreeTc
	}
	return 0
}

func (x *Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic) GetQosFreeTp() uint32 {
	if x != nil {
		return x.QosFreeTp
	}
	return 0
}

func (x *Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic) GetQosTotalTb() uint32 {
	if x != nil {
		return x.QosTotalTb
	}
	return 0
}

func (x *Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic) GetQosTotalTc() uint32 {
	if x != nil {
		return x.QosTotalTc
	}
	return 0
}

func (x *Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic) GetQosTotalTp() uint32 {
	if x != nil {
		return x.QosTotalTp
	}
	return 0
}

type Qos_QosCbQos_QosPolicys_QosPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description           string                                                   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	PolicyID              uint32                                                   `protobuf:"varint,2,opt,name=policyID,proto3" json:"policyID,omitempty"`
	PolicyName            string                                                   `protobuf:"bytes,3,opt,name=policyName,proto3" json:"policyName,omitempty"`
	QosPolicyNodeNewModes *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes `protobuf:"bytes,4,opt,name=qosPolicyNodeNewModes,proto3" json:"qosPolicyNodeNewModes,omitempty"`
	QosPolicyNodes        *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes        `protobuf:"bytes,5,opt,name=qosPolicyNodes,proto3" json:"qosPolicyNodes,omitempty"`
	ShareMode             Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode              `protobuf:"varint,6,opt,name=shareMode,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode" json:"shareMode,omitempty"`
	StatFlag              Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag               `protobuf:"varint,7,opt,name=statFlag,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag" json:"statFlag,omitempty"`
	Step                  uint32                                                   `protobuf:"varint,8,opt,name=step,proto3" json:"step,omitempty"`
	V6QosLocalIDEns       *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns       `protobuf:"bytes,9,opt,name=v6QosLocalIDEns,proto3" json:"v6QosLocalIDEns,omitempty"`
	V6QosVniEns           *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns           `protobuf:"bytes,10,opt,name=v6QosVniEns,proto3" json:"v6QosVniEns,omitempty"`
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy) Reset() {
	*x = Qos_QosCbQos_QosPolicys_QosPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosPolicys_QosPolicy) ProtoMessage() {}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosPolicys_QosPolicy.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosPolicys_QosPolicy) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 3, 0}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy) GetPolicyID() uint32 {
	if x != nil {
		return x.PolicyID
	}
	return 0
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy) GetQosPolicyNodeNewModes() *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes {
	if x != nil {
		return x.QosPolicyNodeNewModes
	}
	return nil
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy) GetQosPolicyNodes() *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes {
	if x != nil {
		return x.QosPolicyNodes
	}
	return nil
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy) GetShareMode() Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode {
	if x != nil {
		return x.ShareMode
	}
	return Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode_DISABLE
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy) GetStatFlag() Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag {
	if x != nil {
		return x.StatFlag
	}
	return Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag_DISABLE
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy) GetV6QosLocalIDEns() *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns {
	if x != nil {
		return x.V6QosLocalIDEns
	}
	return nil
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy) GetV6QosVniEns() *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns {
	if x != nil {
		return x.V6QosVniEns
	}
	return nil
}

type Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPolicyNodeNewMode []*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode `protobuf:"bytes,1,rep,name=qosPolicyNodeNewMode,proto3" json:"qosPolicyNodeNewMode,omitempty"`
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes) Reset() {
	*x = Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes) ProtoMessage() {}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 3, 0, 0}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes) GetQosPolicyNodeNewMode() []*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode {
	if x != nil {
		return x.QosPolicyNodeNewMode
	}
	return nil
}

type Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPolicyNode []*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode `protobuf:"bytes,1,rep,name=qosPolicyNode,proto3" json:"qosPolicyNode,omitempty"`
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes) Reset() {
	*x = Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes) ProtoMessage() {}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 3, 0, 1}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes) GetQosPolicyNode() []*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode {
	if x != nil {
		return x.QosPolicyNode
	}
	return nil
}

type Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V6QosLocalIDEn []*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns_V6QosLocalIDEn `protobuf:"bytes,1,rep,name=v6QosLocalIDEn,proto3" json:"v6QosLocalIDEn,omitempty"`
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns) Reset() {
	*x = Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns) ProtoMessage() {}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 3, 0, 2}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns) GetV6QosLocalIDEn() []*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns_V6QosLocalIDEn {
	if x != nil {
		return x.V6QosLocalIDEn
	}
	return nil
}

type Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V6QosVniEn []*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns_V6QosVniEn `protobuf:"bytes,1,rep,name=v6QosVniEn,proto3" json:"v6QosVniEn,omitempty"`
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns) Reset() {
	*x = Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns) ProtoMessage() {}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 3, 0, 3}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns) GetV6QosVniEn() []*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns_V6QosVniEn {
	if x != nil {
		return x.V6QosVniEn
	}
	return nil
}

type Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BehaviorName    string                                                                                       `protobuf:"bytes,1,opt,name=behaviorName,proto3" json:"behaviorName,omitempty"`
	ClassifierName  string                                                                                       `protobuf:"bytes,2,opt,name=classifierName,proto3" json:"classifierName,omitempty"`
	GroupName       string                                                                                       `protobuf:"bytes,3,opt,name=groupName,proto3" json:"groupName,omitempty"`
	GroupType       Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType       `protobuf:"varint,4,opt,name=groupType,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType" json:"groupType,omitempty"`
	Precedence      uint32                                                                                       `protobuf:"varint,5,opt,name=precedence,proto3" json:"precedence,omitempty"`
	StreamDirection Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection `protobuf:"varint,6,opt,name=streamDirection,proto3,enum=huaweiV8R10_qos.Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection" json:"streamDirection,omitempty"`
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode) Reset() {
	*x = Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode) ProtoMessage() {}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 3, 0, 0, 0}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode) GetBehaviorName() string {
	if x != nil {
		return x.BehaviorName
	}
	return ""
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode) GetClassifierName() string {
	if x != nil {
		return x.ClassifierName
	}
	return ""
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode) GetGroupType() Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType {
	if x != nil {
		return x.GroupType
	}
	return Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType_SERVICEGROUP
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode) GetPrecedence() uint32 {
	if x != nil {
		return x.Precedence
	}
	return 0
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode) GetStreamDirection() Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection {
	if x != nil {
		return x.StreamDirection
	}
	return Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection_DESTINATION
}

type Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BehaviorName   string `protobuf:"bytes,1,opt,name=behaviorName,proto3" json:"behaviorName,omitempty"`
	ClassifierName string `protobuf:"bytes,2,opt,name=classifierName,proto3" json:"classifierName,omitempty"`
	Priority       uint32 `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode) Reset() {
	*x = Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode) ProtoMessage() {}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 3, 0, 1, 0}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode) GetBehaviorName() string {
	if x != nil {
		return x.BehaviorName
	}
	return ""
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode) GetClassifierName() string {
	if x != nil {
		return x.ClassifierName
	}
	return ""
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns_V6QosLocalIDEn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V6QosLocalIDEn uint32 `protobuf:"varint,1,opt,name=v6QosLocalIDEn,proto3" json:"v6QosLocalIDEn,omitempty"`
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns_V6QosLocalIDEn) Reset() {
	*x = Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns_V6QosLocalIDEn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns_V6QosLocalIDEn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns_V6QosLocalIDEn) ProtoMessage() {}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns_V6QosLocalIDEn) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns_V6QosLocalIDEn.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns_V6QosLocalIDEn) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 3, 0, 2, 0}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns_V6QosLocalIDEn) GetV6QosLocalIDEn() uint32 {
	if x != nil {
		return x.V6QosLocalIDEn
	}
	return 0
}

type Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns_V6QosVniEn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V6QosVniEn uint32 `protobuf:"varint,1,opt,name=v6QosVniEn,proto3" json:"v6QosVniEn,omitempty"`
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns_V6QosVniEn) Reset() {
	*x = Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns_V6QosVniEn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns_V6QosVniEn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns_V6QosVniEn) ProtoMessage() {}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns_V6QosVniEn) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns_V6QosVniEn.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns_V6QosVniEn) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 3, 0, 3, 0}
}

func (x *Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns_V6QosVniEn) GetV6QosVniEn() uint32 {
	if x != nil {
		return x.V6QosVniEn
	}
	return 0
}

type Qos_QosCbQos_QosVpnGroups_QosVpnGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosVpnInstances *Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances `protobuf:"bytes,1,opt,name=qosVpnInstances,proto3" json:"qosVpnInstances,omitempty"`
	VpnGroupName    string                                                 `protobuf:"bytes,2,opt,name=vpnGroupName,proto3" json:"vpnGroupName,omitempty"`
}

func (x *Qos_QosCbQos_QosVpnGroups_QosVpnGroup) Reset() {
	*x = Qos_QosCbQos_QosVpnGroups_QosVpnGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosVpnGroups_QosVpnGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosVpnGroups_QosVpnGroup) ProtoMessage() {}

func (x *Qos_QosCbQos_QosVpnGroups_QosVpnGroup) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosVpnGroups_QosVpnGroup.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosVpnGroups_QosVpnGroup) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 4, 0}
}

func (x *Qos_QosCbQos_QosVpnGroups_QosVpnGroup) GetQosVpnInstances() *Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances {
	if x != nil {
		return x.QosVpnInstances
	}
	return nil
}

func (x *Qos_QosCbQos_QosVpnGroups_QosVpnGroup) GetVpnGroupName() string {
	if x != nil {
		return x.VpnGroupName
	}
	return ""
}

type Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosVpnInstance []*Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances_QosVpnInstance `protobuf:"bytes,1,rep,name=qosVpnInstance,proto3" json:"qosVpnInstance,omitempty"`
}

func (x *Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances) Reset() {
	*x = Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances) ProtoMessage() {}

func (x *Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 4, 0, 0}
}

func (x *Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances) GetQosVpnInstance() []*Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances_QosVpnInstance {
	if x != nil {
		return x.QosVpnInstance
	}
	return nil
}

type Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances_QosVpnInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VrfName string `protobuf:"bytes,1,opt,name=vrfName,proto3" json:"vrfName,omitempty"`
}

func (x *Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances_QosVpnInstance) Reset() {
	*x = Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances_QosVpnInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances_QosVpnInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances_QosVpnInstance) ProtoMessage() {}

func (x *Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances_QosVpnInstance) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances_QosVpnInstance.ProtoReflect.Descriptor instead.
func (*Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances_QosVpnInstance) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 5, 4, 0, 0, 0}
}

func (x *Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances_QosVpnInstance) GetVrfName() string {
	if x != nil {
		return x.VrfName
	}
	return ""
}

type Qos_QosChannelProfileTmps_QosChannelProfileTmp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName           string                                                                `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	QosChannelProfileCfgs *Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs `protobuf:"bytes,2,opt,name=qosChannelProfileCfgs,proto3" json:"qosChannelProfileCfgs,omitempty"`
}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp) Reset() {
	*x = Qos_QosChannelProfileTmps_QosChannelProfileTmp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosChannelProfileTmps_QosChannelProfileTmp) ProtoMessage() {}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosChannelProfileTmps_QosChannelProfileTmp.ProtoReflect.Descriptor instead.
func (*Qos_QosChannelProfileTmps_QosChannelProfileTmp) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 6, 0}
}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp) GetQosChannelProfileCfgs() *Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs {
	if x != nil {
		return x.QosChannelProfileCfgs
	}
	return nil
}

type Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosChannelProfileCfg []*Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg `protobuf:"bytes,1,rep,name=qosChannelProfileCfg,proto3" json:"qosChannelProfileCfg,omitempty"`
}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs) Reset() {
	*x = Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs) ProtoMessage() {}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs.ProtoReflect.Descriptor instead.
func (*Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 6, 0, 0}
}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs) GetQosChannelProfileCfg() []*Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg {
	if x != nil {
		return x.QosChannelProfileCfg
	}
	return nil
}

type Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiBandwidthValue uint32 `protobuf:"varint,1,opt,name=uiBandwidthValue,proto3" json:"uiBandwidthValue,omitempty"`
	UiChnnlId        uint32 `protobuf:"varint,2,opt,name=uiChnnlId,proto3" json:"uiChnnlId,omitempty"`
	UiQuantity       uint32 `protobuf:"varint,3,opt,name=uiQuantity,proto3" json:"uiQuantity,omitempty"`
}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg) Reset() {
	*x = Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg) ProtoMessage() {
}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg.ProtoReflect.Descriptor instead.
func (*Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 6, 0, 0, 0}
}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg) GetUiBandwidthValue() uint32 {
	if x != nil {
		return x.UiBandwidthValue
	}
	return 0
}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg) GetUiChnnlId() uint32 {
	if x != nil {
		return x.UiChnnlId
	}
	return 0
}

func (x *Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg) GetUiQuantity() uint32 {
	if x != nil {
		return x.UiQuantity
	}
	return 0
}

type Qos_QosDss_QosDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DsId      uint32                      `protobuf:"varint,1,opt,name=dsId,proto3" json:"dsId,omitempty"`
	DsName    string                      `protobuf:"bytes,2,opt,name=dsName,proto3" json:"dsName,omitempty"`
	QosAppIfs *Qos_QosDss_QosDs_QosAppIfs `protobuf:"bytes,3,opt,name=qosAppIfs,proto3" json:"qosAppIfs,omitempty"`
	QosBas    *Qos_QosDss_QosDs_QosBas    `protobuf:"bytes,4,opt,name=qosBas,proto3" json:"qosBas,omitempty"`
	QosPhbs   *Qos_QosDss_QosDs_QosPhbs   `protobuf:"bytes,5,opt,name=qosPhbs,proto3" json:"qosPhbs,omitempty"`
}

func (x *Qos_QosDss_QosDs) Reset() {
	*x = Qos_QosDss_QosDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosDss_QosDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosDss_QosDs) ProtoMessage() {}

func (x *Qos_QosDss_QosDs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosDss_QosDs.ProtoReflect.Descriptor instead.
func (*Qos_QosDss_QosDs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7, 0}
}

func (x *Qos_QosDss_QosDs) GetDsId() uint32 {
	if x != nil {
		return x.DsId
	}
	return 0
}

func (x *Qos_QosDss_QosDs) GetDsName() string {
	if x != nil {
		return x.DsName
	}
	return ""
}

func (x *Qos_QosDss_QosDs) GetQosAppIfs() *Qos_QosDss_QosDs_QosAppIfs {
	if x != nil {
		return x.QosAppIfs
	}
	return nil
}

func (x *Qos_QosDss_QosDs) GetQosBas() *Qos_QosDss_QosDs_QosBas {
	if x != nil {
		return x.QosBas
	}
	return nil
}

func (x *Qos_QosDss_QosDs) GetQosPhbs() *Qos_QosDss_QosDs_QosPhbs {
	if x != nil {
		return x.QosPhbs
	}
	return nil
}

type Qos_QosDss_QosDs_QosAppIfs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosAppIf []*Qos_QosDss_QosDs_QosAppIfs_QosAppIf `protobuf:"bytes,1,rep,name=qosAppIf,proto3" json:"qosAppIf,omitempty"`
}

func (x *Qos_QosDss_QosDs_QosAppIfs) Reset() {
	*x = Qos_QosDss_QosDs_QosAppIfs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosDss_QosDs_QosAppIfs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosDss_QosDs_QosAppIfs) ProtoMessage() {}

func (x *Qos_QosDss_QosDs_QosAppIfs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosDss_QosDs_QosAppIfs.ProtoReflect.Descriptor instead.
func (*Qos_QosDss_QosDs_QosAppIfs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7, 0, 0}
}

func (x *Qos_QosDss_QosDs_QosAppIfs) GetQosAppIf() []*Qos_QosDss_QosDs_QosAppIfs_QosAppIf {
	if x != nil {
		return x.QosAppIf
	}
	return nil
}

type Qos_QosDss_QosDs_QosBas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosBa []*Qos_QosDss_QosDs_QosBas_QosBa `protobuf:"bytes,1,rep,name=qosBa,proto3" json:"qosBa,omitempty"`
}

func (x *Qos_QosDss_QosDs_QosBas) Reset() {
	*x = Qos_QosDss_QosDs_QosBas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosDss_QosDs_QosBas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosDss_QosDs_QosBas) ProtoMessage() {}

func (x *Qos_QosDss_QosDs_QosBas) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosDss_QosDs_QosBas.ProtoReflect.Descriptor instead.
func (*Qos_QosDss_QosDs_QosBas) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7, 0, 1}
}

func (x *Qos_QosDss_QosDs_QosBas) GetQosBa() []*Qos_QosDss_QosDs_QosBas_QosBa {
	if x != nil {
		return x.QosBa
	}
	return nil
}

type Qos_QosDss_QosDs_QosPhbs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPhb []*Qos_QosDss_QosDs_QosPhbs_QosPhb `protobuf:"bytes,1,rep,name=qosPhb,proto3" json:"qosPhb,omitempty"`
}

func (x *Qos_QosDss_QosDs_QosPhbs) Reset() {
	*x = Qos_QosDss_QosDs_QosPhbs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosDss_QosDs_QosPhbs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosDss_QosDs_QosPhbs) ProtoMessage() {}

func (x *Qos_QosDss_QosDs_QosPhbs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosDss_QosDs_QosPhbs.ProtoReflect.Descriptor instead.
func (*Qos_QosDss_QosDs_QosPhbs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7, 0, 2}
}

func (x *Qos_QosDss_QosDs_QosPhbs) GetQosPhb() []*Qos_QosDss_QosDs_QosPhbs_QosPhb {
	if x != nil {
		return x.QosPhb
	}
	return nil
}

type Qos_QosDss_QosDs_QosAppIfs_QosAppIf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction" json:"direction,omitempty"`
	IfName    string                                        `protobuf:"bytes,2,opt,name=ifName,proto3" json:"ifName,omitempty"`
}

func (x *Qos_QosDss_QosDs_QosAppIfs_QosAppIf) Reset() {
	*x = Qos_QosDss_QosDs_QosAppIfs_QosAppIf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosDss_QosDs_QosAppIfs_QosAppIf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosDss_QosDs_QosAppIfs_QosAppIf) ProtoMessage() {}

func (x *Qos_QosDss_QosDs_QosAppIfs_QosAppIf) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosDss_QosDs_QosAppIfs_QosAppIf.ProtoReflect.Descriptor instead.
func (*Qos_QosDss_QosDs_QosAppIfs_QosAppIf) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7, 0, 0, 0}
}

func (x *Qos_QosDss_QosDs_QosAppIfs_QosAppIf) GetDirection() Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction_IN_OUTBOUND
}

func (x *Qos_QosDss_QosDs_QosAppIfs_QosAppIf) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

type Qos_QosDss_QosDs_QosBas_QosBa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaType       Qos_QosDss_QosDs_QosBas_QosBa_BaType       `protobuf:"varint,1,opt,name=baType,proto3,enum=huaweiV8R10_qos.Qos_QosDss_QosDs_QosBas_QosBa_BaType" json:"baType,omitempty"`
	BaValue      uint32                                     `protobuf:"varint,2,opt,name=baValue,proto3" json:"baValue,omitempty"`
	Color        Qos_QosDss_QosDs_QosBas_QosBa_Color        `protobuf:"varint,3,opt,name=color,proto3,enum=huaweiV8R10_qos.Qos_QosDss_QosDs_QosBas_QosBa_Color" json:"color,omitempty"`
	ServiceClass Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass `protobuf:"varint,4,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *Qos_QosDss_QosDs_QosBas_QosBa) Reset() {
	*x = Qos_QosDss_QosDs_QosBas_QosBa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosDss_QosDs_QosBas_QosBa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosDss_QosDs_QosBas_QosBa) ProtoMessage() {}

func (x *Qos_QosDss_QosDs_QosBas_QosBa) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosDss_QosDs_QosBas_QosBa.ProtoReflect.Descriptor instead.
func (*Qos_QosDss_QosDs_QosBas_QosBa) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7, 0, 1, 0}
}

func (x *Qos_QosDss_QosDs_QosBas_QosBa) GetBaType() Qos_QosDss_QosDs_QosBas_QosBa_BaType {
	if x != nil {
		return x.BaType
	}
	return Qos_QosDss_QosDs_QosBas_QosBa_BaType_X_8021P
}

func (x *Qos_QosDss_QosDs_QosBas_QosBa) GetBaValue() uint32 {
	if x != nil {
		return x.BaValue
	}
	return 0
}

func (x *Qos_QosDss_QosDs_QosBas_QosBa) GetColor() Qos_QosDss_QosDs_QosBas_QosBa_Color {
	if x != nil {
		return x.Color
	}
	return Qos_QosDss_QosDs_QosBas_QosBa_Color_GREEN
}

func (x *Qos_QosDss_QosDs_QosBas_QosBa) GetServiceClass() Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass_AF1
}

type Qos_QosDss_QosDs_QosPhbs_QosPhb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color        Qos_QosDss_QosDs_QosPhbs_QosPhb_Color        `protobuf:"varint,1,opt,name=color,proto3,enum=huaweiV8R10_qos.Qos_QosDss_QosDs_QosPhbs_QosPhb_Color" json:"color,omitempty"`
	PhbType      Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType      `protobuf:"varint,2,opt,name=phbType,proto3,enum=huaweiV8R10_qos.Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType" json:"phbType,omitempty"`
	PhbValue     uint32                                       `protobuf:"varint,3,opt,name=phbValue,proto3" json:"phbValue,omitempty"`
	ServiceClass Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass `protobuf:"varint,4,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *Qos_QosDss_QosDs_QosPhbs_QosPhb) Reset() {
	*x = Qos_QosDss_QosDs_QosPhbs_QosPhb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosDss_QosDs_QosPhbs_QosPhb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosDss_QosDs_QosPhbs_QosPhb) ProtoMessage() {}

func (x *Qos_QosDss_QosDs_QosPhbs_QosPhb) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosDss_QosDs_QosPhbs_QosPhb.ProtoReflect.Descriptor instead.
func (*Qos_QosDss_QosDs_QosPhbs_QosPhb) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 7, 0, 2, 0}
}

func (x *Qos_QosDss_QosDs_QosPhbs_QosPhb) GetColor() Qos_QosDss_QosDs_QosPhbs_QosPhb_Color {
	if x != nil {
		return x.Color
	}
	return Qos_QosDss_QosDs_QosPhbs_QosPhb_Color_GREEN
}

func (x *Qos_QosDss_QosDs_QosPhbs_QosPhb) GetPhbType() Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType {
	if x != nil {
		return x.PhbType
	}
	return Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType_X_8021P
}

func (x *Qos_QosDss_QosDs_QosPhbs_QosPhb) GetPhbValue() uint32 {
	if x != nil {
		return x.PhbValue
	}
	return 0
}

func (x *Qos_QosDss_QosDs_QosPhbs_QosPhb) GetServiceClass() Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass_AF1
}

type Qos_QosEVPLQoss_QosEVPLQos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvplName                 uint32                                               `protobuf:"varint,1,opt,name=evplName,proto3" json:"evplName,omitempty"`
	QosEvplVxlanPhbs         *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs         `protobuf:"bytes,2,opt,name=qosEvplVxlanPhbs,proto3" json:"qosEvplVxlanPhbs,omitempty"`
	QosEvplVxlanPolicyApplys *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys `protobuf:"bytes,3,opt,name=qosEvplVxlanPolicyApplys,proto3" json:"qosEvplVxlanPolicyApplys,omitempty"`
	QosEvplVxlanTrusts       *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts       `protobuf:"bytes,4,opt,name=qosEvplVxlanTrusts,proto3" json:"qosEvplVxlanTrusts,omitempty"`
}

func (x *Qos_QosEVPLQoss_QosEVPLQos) Reset() {
	*x = Qos_QosEVPLQoss_QosEVPLQos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosEVPLQoss_QosEVPLQos) ProtoMessage() {}

func (x *Qos_QosEVPLQoss_QosEVPLQos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosEVPLQoss_QosEVPLQos.ProtoReflect.Descriptor instead.
func (*Qos_QosEVPLQoss_QosEVPLQos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8, 0}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos) GetEvplName() uint32 {
	if x != nil {
		return x.EvplName
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos) GetQosEvplVxlanPhbs() *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs {
	if x != nil {
		return x.QosEvplVxlanPhbs
	}
	return nil
}

func (x *Qos_QosEVPLQoss_QosEVPLQos) GetQosEvplVxlanPolicyApplys() *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys {
	if x != nil {
		return x.QosEvplVxlanPolicyApplys
	}
	return nil
}

func (x *Qos_QosEVPLQoss_QosEVPLQos) GetQosEvplVxlanTrusts() *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts {
	if x != nil {
		return x.QosEvplVxlanTrusts
	}
	return nil
}

type Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosEvplVxlanPhb *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs_QosEvplVxlanPhb `protobuf:"bytes,1,opt,name=qosEvplVxlanPhb,proto3" json:"qosEvplVxlanPhb,omitempty"`
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs) Reset() {
	*x = Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[282]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs) ProtoMessage() {}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[282]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs.ProtoReflect.Descriptor instead.
func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8, 0, 0}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs) GetQosEvplVxlanPhb() *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs_QosEvplVxlanPhb {
	if x != nil {
		return x.QosEvplVxlanPhb
	}
	return nil
}

type Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosEvplVxlanPolicyApply []*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply `protobuf:"bytes,1,rep,name=qosEvplVxlanPolicyApply,proto3" json:"qosEvplVxlanPolicyApply,omitempty"`
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys) Reset() {
	*x = Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[283]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys) ProtoMessage() {}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[283]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys.ProtoReflect.Descriptor instead.
func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8, 0, 1}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys) GetQosEvplVxlanPolicyApply() []*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply {
	if x != nil {
		return x.QosEvplVxlanPolicyApply
	}
	return nil
}

type Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosEvplVxlanTrust []*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust `protobuf:"bytes,1,rep,name=qosEvplVxlanTrust,proto3" json:"qosEvplVxlanTrust,omitempty"`
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts) Reset() {
	*x = Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[284]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts) ProtoMessage() {}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[284]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts.ProtoReflect.Descriptor instead.
func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8, 0, 2}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts) GetQosEvplVxlanTrust() []*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust {
	if x != nil {
		return x.QosEvplVxlanTrust
	}
	return nil
}

type Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs_QosEvplVxlanPhb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DsevplName string `protobuf:"bytes,1,opt,name=dsevplName,proto3" json:"dsevplName,omitempty"`
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs_QosEvplVxlanPhb) Reset() {
	*x = Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs_QosEvplVxlanPhb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[285]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs_QosEvplVxlanPhb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs_QosEvplVxlanPhb) ProtoMessage() {}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs_QosEvplVxlanPhb) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[285]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs_QosEvplVxlanPhb.ProtoReflect.Descriptor instead.
func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs_QosEvplVxlanPhb) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8, 0, 0, 0}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs_QosEvplVxlanPhb) GetDsevplName() string {
	if x != nil {
		return x.DsevplName
	}
	return ""
}

type Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Evpldirection           Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection            `protobuf:"varint,1,opt,name=evpldirection,proto3,enum=huaweiV8R10_qos.Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection" json:"evpldirection,omitempty"`
	Evpllayer               Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer                `protobuf:"varint,2,opt,name=evpllayer,proto3,enum=huaweiV8R10_qos.Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer" json:"evpllayer,omitempty"`
	EvplpolicyName          string                                                                                               `protobuf:"bytes,3,opt,name=evplpolicyName,proto3" json:"evplpolicyName,omitempty"`
	QosEvplVxlanPolicyStats *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats `protobuf:"bytes,4,opt,name=qosEvplVxlanPolicyStats,proto3" json:"qosEvplVxlanPolicyStats,omitempty"`
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply) Reset() {
	*x = Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[286]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply) ProtoMessage() {}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[286]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply.ProtoReflect.Descriptor instead.
func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8, 0, 1, 0}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply) GetEvpldirection() Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection {
	if x != nil {
		return x.Evpldirection
	}
	return Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection_OUTBOUND
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply) GetEvpllayer() Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer {
	if x != nil {
		return x.Evpllayer
	}
	return Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer_LINK
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply) GetEvplpolicyName() string {
	if x != nil {
		return x.EvplpolicyName
	}
	return ""
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply) GetQosEvplVxlanPolicyStats() *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats {
	if x != nil {
		return x.QosEvplVxlanPolicyStats
	}
	return nil
}

type Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosEvplVxlanPolicyStat []*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat `protobuf:"bytes,1,rep,name=qosEvplVxlanPolicyStat,proto3" json:"qosEvplVxlanPolicyStat,omitempty"`
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats) Reset() {
	*x = Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[287]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats) ProtoMessage() {
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[287]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats.ProtoReflect.Descriptor instead.
func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8, 0, 1, 0, 0}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats) GetQosEvplVxlanPolicyStat() []*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat {
	if x != nil {
		return x.QosEvplVxlanPolicyStat
	}
	return nil
}

type Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvplapplyTime               string                                                                                                                                                  `protobuf:"bytes,1,opt,name=evplapplyTime,proto3" json:"evplapplyTime,omitempty"`
	EvplmatchByteRate           uint64                                                                                                                                                  `protobuf:"varint,2,opt,name=evplmatchByteRate,proto3" json:"evplmatchByteRate,omitempty"`
	EvplmatchBytes              uint64                                                                                                                                                  `protobuf:"varint,3,opt,name=evplmatchBytes,proto3" json:"evplmatchBytes,omitempty"`
	EvplmatchDropBytes          uint64                                                                                                                                                  `protobuf:"varint,4,opt,name=evplmatchDropBytes,proto3" json:"evplmatchDropBytes,omitempty"`
	EvplmatchDropBytesRate      uint64                                                                                                                                                  `protobuf:"varint,5,opt,name=evplmatchDropBytesRate,proto3" json:"evplmatchDropBytesRate,omitempty"`
	EvplmatchDropPkts           uint64                                                                                                                                                  `protobuf:"varint,6,opt,name=evplmatchDropPkts,proto3" json:"evplmatchDropPkts,omitempty"`
	EvplmatchDropPktsRate       uint64                                                                                                                                                  `protobuf:"varint,7,opt,name=evplmatchDropPktsRate,proto3" json:"evplmatchDropPktsRate,omitempty"`
	EvplmatchPackets            uint64                                                                                                                                                  `protobuf:"varint,8,opt,name=evplmatchPackets,proto3" json:"evplmatchPackets,omitempty"`
	EvplmatchPassBytes          uint64                                                                                                                                                  `protobuf:"varint,9,opt,name=evplmatchPassBytes,proto3" json:"evplmatchPassBytes,omitempty"`
	EvplmatchPassBytesRate      uint64                                                                                                                                                  `protobuf:"varint,10,opt,name=evplmatchPassBytesRate,proto3" json:"evplmatchPassBytesRate,omitempty"`
	EvplmatchPassPkts           uint64                                                                                                                                                  `protobuf:"varint,11,opt,name=evplmatchPassPkts,proto3" json:"evplmatchPassPkts,omitempty"`
	EvplmatchPassPktsRate       uint64                                                                                                                                                  `protobuf:"varint,12,opt,name=evplmatchPassPktsRate,proto3" json:"evplmatchPassPktsRate,omitempty"`
	EvplmatchPktRate            uint64                                                                                                                                                  `protobuf:"varint,13,opt,name=evplmatchPktRate,proto3" json:"evplmatchPktRate,omitempty"`
	EvplmissBytes               uint64                                                                                                                                                  `protobuf:"varint,14,opt,name=evplmissBytes,proto3" json:"evplmissBytes,omitempty"`
	EvplmissBytesRate           uint64                                                                                                                                                  `protobuf:"varint,15,opt,name=evplmissBytesRate,proto3" json:"evplmissBytesRate,omitempty"`
	EvplmissPackets             uint64                                                                                                                                                  `protobuf:"varint,16,opt,name=evplmissPackets,proto3" json:"evplmissPackets,omitempty"`
	EvplmissPktsRate            uint64                                                                                                                                                  `protobuf:"varint,17,opt,name=evplmissPktsRate,proto3" json:"evplmissPktsRate,omitempty"`
	EvplstatClearFlag           bool                                                                                                                                                    `protobuf:"varint,18,opt,name=evplstatClearFlag,proto3" json:"evplstatClearFlag,omitempty"`
	EvplstatClearTime           string                                                                                                                                                  `protobuf:"bytes,19,opt,name=evplstatClearTime,proto3" json:"evplstatClearTime,omitempty"`
	EvplstatEnableTime          string                                                                                                                                                  `protobuf:"bytes,20,opt,name=evplstatEnableTime,proto3" json:"evplstatEnableTime,omitempty"`
	QosEvplVxlanClassifierStats *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats `protobuf:"bytes,21,opt,name=qosEvplVxlanClassifierStats,proto3" json:"qosEvplVxlanClassifierStats,omitempty"`
	SlotId                      string                                                                                                                                                  `protobuf:"bytes,22,opt,name=slotId,proto3" json:"slotId,omitempty"`
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) Reset() {
	*x = Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[288]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) ProtoMessage() {
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[288]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat.ProtoReflect.Descriptor instead.
func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8, 0, 1, 0, 0, 0}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplapplyTime() string {
	if x != nil {
		return x.EvplapplyTime
	}
	return ""
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmatchByteRate() uint64 {
	if x != nil {
		return x.EvplmatchByteRate
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmatchBytes() uint64 {
	if x != nil {
		return x.EvplmatchBytes
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmatchDropBytes() uint64 {
	if x != nil {
		return x.EvplmatchDropBytes
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmatchDropBytesRate() uint64 {
	if x != nil {
		return x.EvplmatchDropBytesRate
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmatchDropPkts() uint64 {
	if x != nil {
		return x.EvplmatchDropPkts
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmatchDropPktsRate() uint64 {
	if x != nil {
		return x.EvplmatchDropPktsRate
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmatchPackets() uint64 {
	if x != nil {
		return x.EvplmatchPackets
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmatchPassBytes() uint64 {
	if x != nil {
		return x.EvplmatchPassBytes
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmatchPassBytesRate() uint64 {
	if x != nil {
		return x.EvplmatchPassBytesRate
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmatchPassPkts() uint64 {
	if x != nil {
		return x.EvplmatchPassPkts
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmatchPassPktsRate() uint64 {
	if x != nil {
		return x.EvplmatchPassPktsRate
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmatchPktRate() uint64 {
	if x != nil {
		return x.EvplmatchPktRate
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmissBytes() uint64 {
	if x != nil {
		return x.EvplmissBytes
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmissBytesRate() uint64 {
	if x != nil {
		return x.EvplmissBytesRate
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmissPackets() uint64 {
	if x != nil {
		return x.EvplmissPackets
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplmissPktsRate() uint64 {
	if x != nil {
		return x.EvplmissPktsRate
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplstatClearFlag() bool {
	if x != nil {
		return x.EvplstatClearFlag
	}
	return false
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplstatClearTime() string {
	if x != nil {
		return x.EvplstatClearTime
	}
	return ""
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetEvplstatEnableTime() string {
	if x != nil {
		return x.EvplstatEnableTime
	}
	return ""
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetQosEvplVxlanClassifierStats() *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats {
	if x != nil {
		return x.QosEvplVxlanClassifierStats
	}
	return nil
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

type Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosEvplVxlanClassifierStat []*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat `protobuf:"bytes,1,rep,name=qosEvplVxlanClassifierStat,proto3" json:"qosEvplVxlanClassifierStat,omitempty"`
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats) Reset() {
	*x = Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[289]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats) ProtoMessage() {
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[289]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats.ProtoReflect.Descriptor instead.
func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8, 0, 1, 0, 0, 0, 0}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats) GetQosEvplVxlanClassifierStat() []*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat {
	if x != nil {
		return x.QosEvplVxlanClassifierStat
	}
	return nil
}

type Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvplclassifierName     string `protobuf:"bytes,1,opt,name=evplclassifierName,proto3" json:"evplclassifierName,omitempty"`
	EvplmatchByteRt        uint64 `protobuf:"varint,2,opt,name=evplmatchByteRt,proto3" json:"evplmatchByteRt,omitempty"`
	EvplmatchBytes         uint64 `protobuf:"varint,3,opt,name=evplmatchBytes,proto3" json:"evplmatchBytes,omitempty"`
	EvplmatchDropBytes     uint64 `protobuf:"varint,4,opt,name=evplmatchDropBytes,proto3" json:"evplmatchDropBytes,omitempty"`
	EvplmatchDropBytesRate uint64 `protobuf:"varint,5,opt,name=evplmatchDropBytesRate,proto3" json:"evplmatchDropBytesRate,omitempty"`
	EvplmatchDropPackets   uint64 `protobuf:"varint,6,opt,name=evplmatchDropPackets,proto3" json:"evplmatchDropPackets,omitempty"`
	EvplmatchDropPktsRate  uint64 `protobuf:"varint,7,opt,name=evplmatchDropPktsRate,proto3" json:"evplmatchDropPktsRate,omitempty"`
	EvplmatchPackets       uint64 `protobuf:"varint,8,opt,name=evplmatchPackets,proto3" json:"evplmatchPackets,omitempty"`
	EvplmatchPassBytes     uint64 `protobuf:"varint,9,opt,name=evplmatchPassBytes,proto3" json:"evplmatchPassBytes,omitempty"`
	EvplmatchPassBytesRate uint64 `protobuf:"varint,10,opt,name=evplmatchPassBytesRate,proto3" json:"evplmatchPassBytesRate,omitempty"`
	EvplmatchPassPackets   uint64 `protobuf:"varint,11,opt,name=evplmatchPassPackets,proto3" json:"evplmatchPassPackets,omitempty"`
	EvplmatchPassPktsRate  uint64 `protobuf:"varint,12,opt,name=evplmatchPassPktsRate,proto3" json:"evplmatchPassPktsRate,omitempty"`
	EvplmatchPktRt         uint64 `protobuf:"varint,13,opt,name=evplmatchPktRt,proto3" json:"evplmatchPktRt,omitempty"`
	SlotId                 string `protobuf:"bytes,14,opt,name=slotId,proto3" json:"slotId,omitempty"`
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) Reset() {
	*x = Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[290]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) ProtoMessage() {
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[290]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat.ProtoReflect.Descriptor instead.
func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8, 0, 1, 0, 0, 0, 0, 0}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) GetEvplclassifierName() string {
	if x != nil {
		return x.EvplclassifierName
	}
	return ""
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) GetEvplmatchByteRt() uint64 {
	if x != nil {
		return x.EvplmatchByteRt
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) GetEvplmatchBytes() uint64 {
	if x != nil {
		return x.EvplmatchBytes
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) GetEvplmatchDropBytes() uint64 {
	if x != nil {
		return x.EvplmatchDropBytes
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) GetEvplmatchDropBytesRate() uint64 {
	if x != nil {
		return x.EvplmatchDropBytesRate
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) GetEvplmatchDropPackets() uint64 {
	if x != nil {
		return x.EvplmatchDropPackets
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) GetEvplmatchDropPktsRate() uint64 {
	if x != nil {
		return x.EvplmatchDropPktsRate
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) GetEvplmatchPackets() uint64 {
	if x != nil {
		return x.EvplmatchPackets
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) GetEvplmatchPassBytes() uint64 {
	if x != nil {
		return x.EvplmatchPassBytes
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) GetEvplmatchPassBytesRate() uint64 {
	if x != nil {
		return x.EvplmatchPassBytesRate
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) GetEvplmatchPassPackets() uint64 {
	if x != nil {
		return x.EvplmatchPassPackets
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) GetEvplmatchPassPktsRate() uint64 {
	if x != nil {
		return x.EvplmatchPassPktsRate
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) GetEvplmatchPktRt() uint64 {
	if x != nil {
		return x.EvplmatchPktRt
	}
	return 0
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

type Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DsevplName    string                                                                        `protobuf:"bytes,1,opt,name=dsevplName,proto3" json:"dsevplName,omitempty"`
	TrustevplType Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType `protobuf:"varint,2,opt,name=trustevplType,proto3,enum=huaweiV8R10_qos.Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType" json:"trustevplType,omitempty"`
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust) Reset() {
	*x = Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[291]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust) ProtoMessage() {}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[291]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust.ProtoReflect.Descriptor instead.
func (*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 8, 0, 2, 0}
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust) GetDsevplName() string {
	if x != nil {
		return x.DsevplName
	}
	return ""
}

func (x *Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust) GetTrustevplType() Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType {
	if x != nil {
		return x.TrustevplType
	}
	return Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType_X_8021P
}

type Qos_QosGlobalPolicys_QosGlobalPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction       Qos_QosGlobalPolicys_QosGlobalPolicy_Direction        `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosGlobalPolicys_QosGlobalPolicy_Direction" json:"direction,omitempty"`
	PolicyName      string                                                `protobuf:"bytes,2,opt,name=policyName,proto3" json:"policyName,omitempty"`
	QosGPolicyStats *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats `protobuf:"bytes,3,opt,name=qosGPolicyStats,proto3" json:"qosGPolicyStats,omitempty"`
	UclType         Qos_QosGlobalPolicys_QosGlobalPolicy_UclType          `protobuf:"varint,4,opt,name=uclType,proto3,enum=huaweiV8R10_qos.Qos_QosGlobalPolicys_QosGlobalPolicy_UclType" json:"uclType,omitempty"`
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy) Reset() {
	*x = Qos_QosGlobalPolicys_QosGlobalPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[292]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosGlobalPolicys_QosGlobalPolicy) ProtoMessage() {}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[292]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosGlobalPolicys_QosGlobalPolicy.ProtoReflect.Descriptor instead.
func (*Qos_QosGlobalPolicys_QosGlobalPolicy) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 9, 0}
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy) GetDirection() Qos_QosGlobalPolicys_QosGlobalPolicy_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosGlobalPolicys_QosGlobalPolicy_Direction_INBOUND
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy) GetQosGPolicyStats() *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats {
	if x != nil {
		return x.QosGPolicyStats
	}
	return nil
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy) GetUclType() Qos_QosGlobalPolicys_QosGlobalPolicy_UclType {
	if x != nil {
		return x.UclType
	}
	return Qos_QosGlobalPolicys_QosGlobalPolicy_UclType_ACL
}

type Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosGPolicyStat []*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat `protobuf:"bytes,1,rep,name=qosGPolicyStat,proto3" json:"qosGPolicyStat,omitempty"`
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats) Reset() {
	*x = Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[293]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats) ProtoMessage() {}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[293]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats.ProtoReflect.Descriptor instead.
func (*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 9, 0, 0}
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats) GetQosGPolicyStat() []*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat {
	if x != nil {
		return x.QosGPolicyStat
	}
	return nil
}

type Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplyTime           string                                                                                   `protobuf:"bytes,1,opt,name=applyTime,proto3" json:"applyTime,omitempty"`
	CarBytes            uint64                                                                                   `protobuf:"varint,2,opt,name=carBytes,proto3" json:"carBytes,omitempty"`
	CarBytesRate        uint64                                                                                   `protobuf:"varint,3,opt,name=carBytesRate,proto3" json:"carBytesRate,omitempty"`
	CarPackets          uint64                                                                                   `protobuf:"varint,4,opt,name=carPackets,proto3" json:"carPackets,omitempty"`
	CarPktsRate         uint64                                                                                   `protobuf:"varint,5,opt,name=carPktsRate,proto3" json:"carPktsRate,omitempty"`
	FilterBytes         uint64                                                                                   `protobuf:"varint,6,opt,name=filterBytes,proto3" json:"filterBytes,omitempty"`
	FilterBytesRate     uint64                                                                                   `protobuf:"varint,7,opt,name=filterBytesRate,proto3" json:"filterBytesRate,omitempty"`
	FilterPackets       uint64                                                                                   `protobuf:"varint,8,opt,name=filterPackets,proto3" json:"filterPackets,omitempty"`
	FilterPktsRate      uint64                                                                                   `protobuf:"varint,9,opt,name=filterPktsRate,proto3" json:"filterPktsRate,omitempty"`
	MatchByteRate       uint64                                                                                   `protobuf:"varint,10,opt,name=matchByteRate,proto3" json:"matchByteRate,omitempty"`
	MatchBytes          uint64                                                                                   `protobuf:"varint,11,opt,name=matchBytes,proto3" json:"matchBytes,omitempty"`
	MatchDropBytes      uint64                                                                                   `protobuf:"varint,12,opt,name=matchDropBytes,proto3" json:"matchDropBytes,omitempty"`
	MatchDropBytesRate  uint64                                                                                   `protobuf:"varint,13,opt,name=matchDropBytesRate,proto3" json:"matchDropBytesRate,omitempty"`
	MatchDropPkts       uint64                                                                                   `protobuf:"varint,14,opt,name=matchDropPkts,proto3" json:"matchDropPkts,omitempty"`
	MatchDropPktsRate   uint64                                                                                   `protobuf:"varint,15,opt,name=matchDropPktsRate,proto3" json:"matchDropPktsRate,omitempty"`
	MatchPackets        uint64                                                                                   `protobuf:"varint,16,opt,name=matchPackets,proto3" json:"matchPackets,omitempty"`
	MatchPassBytes      uint64                                                                                   `protobuf:"varint,17,opt,name=matchPassBytes,proto3" json:"matchPassBytes,omitempty"`
	MatchPassBytesRate  uint64                                                                                   `protobuf:"varint,18,opt,name=matchPassBytesRate,proto3" json:"matchPassBytesRate,omitempty"`
	MatchPassPkts       uint64                                                                                   `protobuf:"varint,19,opt,name=matchPassPkts,proto3" json:"matchPassPkts,omitempty"`
	MatchPassPktsRate   uint64                                                                                   `protobuf:"varint,20,opt,name=matchPassPktsRate,proto3" json:"matchPassPktsRate,omitempty"`
	MatchPktRate        uint64                                                                                   `protobuf:"varint,21,opt,name=matchPktRate,proto3" json:"matchPktRate,omitempty"`
	MissBytes           uint64                                                                                   `protobuf:"varint,22,opt,name=missBytes,proto3" json:"missBytes,omitempty"`
	MissBytesRate       uint64                                                                                   `protobuf:"varint,23,opt,name=missBytesRate,proto3" json:"missBytesRate,omitempty"`
	MissPackets         uint64                                                                                   `protobuf:"varint,24,opt,name=missPackets,proto3" json:"missPackets,omitempty"`
	MissPktsRate        uint64                                                                                   `protobuf:"varint,25,opt,name=missPktsRate,proto3" json:"missPktsRate,omitempty"`
	QosGClassifierStats *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats `protobuf:"bytes,26,opt,name=qosGClassifierStats,proto3" json:"qosGClassifierStats,omitempty"`
	SlotId              string                                                                                   `protobuf:"bytes,27,opt,name=slotId,proto3" json:"slotId,omitempty"`
	StatClearFlag       bool                                                                                     `protobuf:"varint,28,opt,name=statClearFlag,proto3" json:"statClearFlag,omitempty"`
	StatClearTime       string                                                                                   `protobuf:"bytes,29,opt,name=statClearTime,proto3" json:"statClearTime,omitempty"`
	StatEnableTime      string                                                                                   `protobuf:"bytes,30,opt,name=statEnableTime,proto3" json:"statEnableTime,omitempty"`
	UrpfBytes           uint64                                                                                   `protobuf:"varint,31,opt,name=urpfBytes,proto3" json:"urpfBytes,omitempty"`
	UrpfBytesRate       uint64                                                                                   `protobuf:"varint,32,opt,name=urpfBytesRate,proto3" json:"urpfBytesRate,omitempty"`
	UrpfPackets         uint64                                                                                   `protobuf:"varint,33,opt,name=urpfPackets,proto3" json:"urpfPackets,omitempty"`
	UrpfPktsRate        uint64                                                                                   `protobuf:"varint,34,opt,name=urpfPktsRate,proto3" json:"urpfPktsRate,omitempty"`
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) Reset() {
	*x = Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[294]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) ProtoMessage() {}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[294]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat.ProtoReflect.Descriptor instead.
func (*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 9, 0, 0, 0}
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetApplyTime() string {
	if x != nil {
		return x.ApplyTime
	}
	return ""
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetCarBytes() uint64 {
	if x != nil {
		return x.CarBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetCarBytesRate() uint64 {
	if x != nil {
		return x.CarBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetCarPackets() uint64 {
	if x != nil {
		return x.CarPackets
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetCarPktsRate() uint64 {
	if x != nil {
		return x.CarPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetFilterBytes() uint64 {
	if x != nil {
		return x.FilterBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetFilterBytesRate() uint64 {
	if x != nil {
		return x.FilterBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetFilterPackets() uint64 {
	if x != nil {
		return x.FilterPackets
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetFilterPktsRate() uint64 {
	if x != nil {
		return x.FilterPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMatchByteRate() uint64 {
	if x != nil {
		return x.MatchByteRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMatchBytes() uint64 {
	if x != nil {
		return x.MatchBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMatchDropBytes() uint64 {
	if x != nil {
		return x.MatchDropBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMatchDropBytesRate() uint64 {
	if x != nil {
		return x.MatchDropBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMatchDropPkts() uint64 {
	if x != nil {
		return x.MatchDropPkts
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMatchDropPktsRate() uint64 {
	if x != nil {
		return x.MatchDropPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMatchPackets() uint64 {
	if x != nil {
		return x.MatchPackets
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMatchPassBytes() uint64 {
	if x != nil {
		return x.MatchPassBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMatchPassBytesRate() uint64 {
	if x != nil {
		return x.MatchPassBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMatchPassPkts() uint64 {
	if x != nil {
		return x.MatchPassPkts
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMatchPassPktsRate() uint64 {
	if x != nil {
		return x.MatchPassPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMatchPktRate() uint64 {
	if x != nil {
		return x.MatchPktRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMissBytes() uint64 {
	if x != nil {
		return x.MissBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMissBytesRate() uint64 {
	if x != nil {
		return x.MissBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMissPackets() uint64 {
	if x != nil {
		return x.MissPackets
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetMissPktsRate() uint64 {
	if x != nil {
		return x.MissPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetQosGClassifierStats() *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats {
	if x != nil {
		return x.QosGClassifierStats
	}
	return nil
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetStatClearFlag() bool {
	if x != nil {
		return x.StatClearFlag
	}
	return false
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetStatClearTime() string {
	if x != nil {
		return x.StatClearTime
	}
	return ""
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetStatEnableTime() string {
	if x != nil {
		return x.StatEnableTime
	}
	return ""
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetUrpfBytes() uint64 {
	if x != nil {
		return x.UrpfBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetUrpfBytesRate() uint64 {
	if x != nil {
		return x.UrpfBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetUrpfPackets() uint64 {
	if x != nil {
		return x.UrpfPackets
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat) GetUrpfPktsRate() uint64 {
	if x != nil {
		return x.UrpfPktsRate
	}
	return 0
}

type Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosGClassifierStat []*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat `protobuf:"bytes,1,rep,name=qosGClassifierStat,proto3" json:"qosGClassifierStat,omitempty"`
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats) Reset() {
	*x = Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[295]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats) ProtoMessage() {
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[295]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats.ProtoReflect.Descriptor instead.
func (*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 9, 0, 0, 0, 0}
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats) GetQosGClassifierStat() []*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat {
	if x != nil {
		return x.QosGClassifierStat
	}
	return nil
}

type Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastSuppressDropBytes     uint64 `protobuf:"varint,1,opt,name=broadcastSuppressDropBytes,proto3" json:"broadcastSuppressDropBytes,omitempty"`
	BroadcastSuppressDropBytesRate uint64 `protobuf:"varint,2,opt,name=broadcastSuppressDropBytesRate,proto3" json:"broadcastSuppressDropBytesRate,omitempty"`
	BroadcastSuppressDropPkts      uint64 `protobuf:"varint,3,opt,name=broadcastSuppressDropPkts,proto3" json:"broadcastSuppressDropPkts,omitempty"`
	BroadcastSuppressDropPktsRate  uint64 `protobuf:"varint,4,opt,name=broadcastSuppressDropPktsRate,proto3" json:"broadcastSuppressDropPktsRate,omitempty"`
	BroadcastSuppressPassBytes     uint64 `protobuf:"varint,5,opt,name=broadcastSuppressPassBytes,proto3" json:"broadcastSuppressPassBytes,omitempty"`
	BroadcastSuppressPassBytesRate uint64 `protobuf:"varint,6,opt,name=broadcastSuppressPassBytesRate,proto3" json:"broadcastSuppressPassBytesRate,omitempty"`
	BroadcastSuppressPassPkts      uint64 `protobuf:"varint,7,opt,name=broadcastSuppressPassPkts,proto3" json:"broadcastSuppressPassPkts,omitempty"`
	BroadcastSuppressPassPktsRate  uint64 `protobuf:"varint,8,opt,name=broadcastSuppressPassPktsRate,proto3" json:"broadcastSuppressPassPktsRate,omitempty"`
	CarBytes                       uint64 `protobuf:"varint,9,opt,name=carBytes,proto3" json:"carBytes,omitempty"`
	CarBytesRate                   uint64 `protobuf:"varint,10,opt,name=carBytesRate,proto3" json:"carBytesRate,omitempty"`
	CarDropBytes                   uint64 `protobuf:"varint,11,opt,name=carDropBytes,proto3" json:"carDropBytes,omitempty"`
	CarDropBytesRate               uint64 `protobuf:"varint,12,opt,name=carDropBytesRate,proto3" json:"carDropBytesRate,omitempty"`
	CarDropPkts                    uint64 `protobuf:"varint,13,opt,name=carDropPkts,proto3" json:"carDropPkts,omitempty"`
	CarDropPktsRate                uint64 `protobuf:"varint,14,opt,name=carDropPktsRate,proto3" json:"carDropPktsRate,omitempty"`
	CarGBytes                      uint64 `protobuf:"varint,15,opt,name=carGBytes,proto3" json:"carGBytes,omitempty"`
	CarGBytesRate                  uint64 `protobuf:"varint,16,opt,name=carGBytesRate,proto3" json:"carGBytesRate,omitempty"`
	CarGPkts                       uint64 `protobuf:"varint,17,opt,name=carGPkts,proto3" json:"carGPkts,omitempty"`
	CarGPktsRate                   uint64 `protobuf:"varint,18,opt,name=carGPktsRate,proto3" json:"carGPktsRate,omitempty"`
	CarPackets                     uint64 `protobuf:"varint,19,opt,name=carPackets,proto3" json:"carPackets,omitempty"`
	CarPassBytes                   uint64 `protobuf:"varint,20,opt,name=carPassBytes,proto3" json:"carPassBytes,omitempty"`
	CarPassBytesRate               uint64 `protobuf:"varint,21,opt,name=carPassBytesRate,proto3" json:"carPassBytesRate,omitempty"`
	CarPassPkts                    uint64 `protobuf:"varint,22,opt,name=carPassPkts,proto3" json:"carPassPkts,omitempty"`
	CarPassPktsRate                uint64 `protobuf:"varint,23,opt,name=carPassPktsRate,proto3" json:"carPassPktsRate,omitempty"`
	CarPktsRate                    uint64 `protobuf:"varint,24,opt,name=carPktsRate,proto3" json:"carPktsRate,omitempty"`
	CarRBytes                      uint64 `protobuf:"varint,25,opt,name=carRBytes,proto3" json:"carRBytes,omitempty"`
	CarRBytesRate                  uint64 `protobuf:"varint,26,opt,name=carRBytesRate,proto3" json:"carRBytesRate,omitempty"`
	CarRPkts                       uint64 `protobuf:"varint,27,opt,name=carRPkts,proto3" json:"carRPkts,omitempty"`
	CarRPktsRate                   uint64 `protobuf:"varint,28,opt,name=carRPktsRate,proto3" json:"carRPktsRate,omitempty"`
	CarYBytes                      uint64 `protobuf:"varint,29,opt,name=carYBytes,proto3" json:"carYBytes,omitempty"`
	CarYBytesRate                  uint64 `protobuf:"varint,30,opt,name=carYBytesRate,proto3" json:"carYBytesRate,omitempty"`
	CarYPkts                       uint64 `protobuf:"varint,31,opt,name=carYPkts,proto3" json:"carYPkts,omitempty"`
	CarYPktsRate                   uint64 `protobuf:"varint,32,opt,name=carYPktsRate,proto3" json:"carYPktsRate,omitempty"`
	ClassifierName                 string `protobuf:"bytes,33,opt,name=classifierName,proto3" json:"classifierName,omitempty"`
	FilterBytes                    uint64 `protobuf:"varint,34,opt,name=filterBytes,proto3" json:"filterBytes,omitempty"`
	FilterBytesRate                uint64 `protobuf:"varint,35,opt,name=filterBytesRate,proto3" json:"filterBytesRate,omitempty"`
	FilterPackets                  uint64 `protobuf:"varint,36,opt,name=filterPackets,proto3" json:"filterPackets,omitempty"`
	FilterPktsRate                 uint64 `protobuf:"varint,37,opt,name=filterPktsRate,proto3" json:"filterPktsRate,omitempty"`
	GroupName                      string `protobuf:"bytes,38,opt,name=groupName,proto3" json:"groupName,omitempty"`
	GroupType                      string `protobuf:"bytes,39,opt,name=groupType,proto3" json:"groupType,omitempty"`
	MatchByteRt                    uint64 `protobuf:"varint,40,opt,name=matchByteRt,proto3" json:"matchByteRt,omitempty"`
	MatchBytes                     uint64 `protobuf:"varint,41,opt,name=matchBytes,proto3" json:"matchBytes,omitempty"`
	MatchDropBytes                 uint64 `protobuf:"varint,42,opt,name=matchDropBytes,proto3" json:"matchDropBytes,omitempty"`
	MatchDropBytesRate             uint64 `protobuf:"varint,43,opt,name=matchDropBytesRate,proto3" json:"matchDropBytesRate,omitempty"`
	MatchDropPackets               uint64 `protobuf:"varint,44,opt,name=matchDropPackets,proto3" json:"matchDropPackets,omitempty"`
	MatchDropPktsRate              uint64 `protobuf:"varint,45,opt,name=matchDropPktsRate,proto3" json:"matchDropPktsRate,omitempty"`
	MatchPackets                   uint64 `protobuf:"varint,46,opt,name=matchPackets,proto3" json:"matchPackets,omitempty"`
	MatchPassBytes                 uint64 `protobuf:"varint,47,opt,name=matchPassBytes,proto3" json:"matchPassBytes,omitempty"`
	MatchPassBytesRate             uint64 `protobuf:"varint,48,opt,name=matchPassBytesRate,proto3" json:"matchPassBytesRate,omitempty"`
	MatchPassPackets               uint64 `protobuf:"varint,49,opt,name=matchPassPackets,proto3" json:"matchPassPackets,omitempty"`
	MatchPassPktsRate              uint64 `protobuf:"varint,50,opt,name=matchPassPktsRate,proto3" json:"matchPassPktsRate,omitempty"`
	MatchPktRt                     uint64 `protobuf:"varint,51,opt,name=matchPktRt,proto3" json:"matchPktRt,omitempty"`
	MulticastSuppressDropBytes     uint64 `protobuf:"varint,52,opt,name=multicastSuppressDropBytes,proto3" json:"multicastSuppressDropBytes,omitempty"`
	MulticastSuppressDropBytesRate uint64 `protobuf:"varint,53,opt,name=multicastSuppressDropBytesRate,proto3" json:"multicastSuppressDropBytesRate,omitempty"`
	MulticastSuppressDropPkts      uint64 `protobuf:"varint,54,opt,name=multicastSuppressDropPkts,proto3" json:"multicastSuppressDropPkts,omitempty"`
	MulticastSuppressDropPktsRate  uint64 `protobuf:"varint,55,opt,name=multicastSuppressDropPktsRate,proto3" json:"multicastSuppressDropPktsRate,omitempty"`
	MulticastSuppressPassBytes     uint64 `protobuf:"varint,56,opt,name=multicastSuppressPassBytes,proto3" json:"multicastSuppressPassBytes,omitempty"`
	MulticastSuppressPassBytesRate uint64 `protobuf:"varint,57,opt,name=multicastSuppressPassBytesRate,proto3" json:"multicastSuppressPassBytesRate,omitempty"`
	MulticastSuppressPassPkts      uint64 `protobuf:"varint,58,opt,name=multicastSuppressPassPkts,proto3" json:"multicastSuppressPassPkts,omitempty"`
	MulticastSuppressPassPktsRate  uint64 `protobuf:"varint,59,opt,name=multicastSuppressPassPktsRate,proto3" json:"multicastSuppressPassPktsRate,omitempty"`
	SlotId                         string `protobuf:"bytes,60,opt,name=slotId,proto3" json:"slotId,omitempty"`
	StreamDirection                string `protobuf:"bytes,61,opt,name=streamDirection,proto3" json:"streamDirection,omitempty"`
	UnknowUniSuppressDropBytes     uint64 `protobuf:"varint,62,opt,name=unknowUniSuppressDropBytes,proto3" json:"unknowUniSuppressDropBytes,omitempty"`
	UnknowUniSuppressDropBytesRate uint64 `protobuf:"varint,63,opt,name=unknowUniSuppressDropBytesRate,proto3" json:"unknowUniSuppressDropBytesRate,omitempty"`
	UnknowUniSuppressDropPkts      uint64 `protobuf:"varint,64,opt,name=unknowUniSuppressDropPkts,proto3" json:"unknowUniSuppressDropPkts,omitempty"`
	UnknowUniSuppressDropPktsRate  uint64 `protobuf:"varint,65,opt,name=unknowUniSuppressDropPktsRate,proto3" json:"unknowUniSuppressDropPktsRate,omitempty"`
	UnknowUniSuppressPassBytes     uint64 `protobuf:"varint,66,opt,name=unknowUniSuppressPassBytes,proto3" json:"unknowUniSuppressPassBytes,omitempty"`
	UnknowUniSuppressPassBytesRate uint64 `protobuf:"varint,67,opt,name=unknowUniSuppressPassBytesRate,proto3" json:"unknowUniSuppressPassBytesRate,omitempty"`
	UnknowUniSuppressPassPkts      uint64 `protobuf:"varint,68,opt,name=unknowUniSuppressPassPkts,proto3" json:"unknowUniSuppressPassPkts,omitempty"`
	UnknowUniSuppressPassPktsRate  uint64 `protobuf:"varint,69,opt,name=unknowUniSuppressPassPktsRate,proto3" json:"unknowUniSuppressPassPktsRate,omitempty"`
	UrpfDropBytes                  uint64 `protobuf:"varint,70,opt,name=urpfDropBytes,proto3" json:"urpfDropBytes,omitempty"`
	UrpfDropBytesRate              uint64 `protobuf:"varint,71,opt,name=urpfDropBytesRate,proto3" json:"urpfDropBytesRate,omitempty"`
	UrpfDropPackets                uint64 `protobuf:"varint,72,opt,name=urpfDropPackets,proto3" json:"urpfDropPackets,omitempty"`
	UrpfDropPktsRate               uint64 `protobuf:"varint,73,opt,name=urpfDropPktsRate,proto3" json:"urpfDropPktsRate,omitempty"`
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) Reset() {
	*x = Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[296]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) ProtoMessage() {
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[296]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat.ProtoReflect.Descriptor instead.
func (*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 9, 0, 0, 0, 0, 0}
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetBroadcastSuppressDropBytes() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetBroadcastSuppressDropBytesRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetBroadcastSuppressDropPkts() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropPkts
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetBroadcastSuppressDropPktsRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetBroadcastSuppressPassBytes() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetBroadcastSuppressPassBytesRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetBroadcastSuppressPassPkts() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassPkts
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetBroadcastSuppressPassPktsRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarBytes() uint64 {
	if x != nil {
		return x.CarBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarBytesRate() uint64 {
	if x != nil {
		return x.CarBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarDropBytes() uint64 {
	if x != nil {
		return x.CarDropBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarDropBytesRate() uint64 {
	if x != nil {
		return x.CarDropBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarDropPkts() uint64 {
	if x != nil {
		return x.CarDropPkts
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarDropPktsRate() uint64 {
	if x != nil {
		return x.CarDropPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarGBytes() uint64 {
	if x != nil {
		return x.CarGBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarGBytesRate() uint64 {
	if x != nil {
		return x.CarGBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarGPkts() uint64 {
	if x != nil {
		return x.CarGPkts
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarGPktsRate() uint64 {
	if x != nil {
		return x.CarGPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarPackets() uint64 {
	if x != nil {
		return x.CarPackets
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarPassBytes() uint64 {
	if x != nil {
		return x.CarPassBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarPassBytesRate() uint64 {
	if x != nil {
		return x.CarPassBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarPassPkts() uint64 {
	if x != nil {
		return x.CarPassPkts
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarPassPktsRate() uint64 {
	if x != nil {
		return x.CarPassPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarPktsRate() uint64 {
	if x != nil {
		return x.CarPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarRBytes() uint64 {
	if x != nil {
		return x.CarRBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarRBytesRate() uint64 {
	if x != nil {
		return x.CarRBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarRPkts() uint64 {
	if x != nil {
		return x.CarRPkts
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarRPktsRate() uint64 {
	if x != nil {
		return x.CarRPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarYBytes() uint64 {
	if x != nil {
		return x.CarYBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarYBytesRate() uint64 {
	if x != nil {
		return x.CarYBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarYPkts() uint64 {
	if x != nil {
		return x.CarYPkts
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetCarYPktsRate() uint64 {
	if x != nil {
		return x.CarYPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetClassifierName() string {
	if x != nil {
		return x.ClassifierName
	}
	return ""
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetFilterBytes() uint64 {
	if x != nil {
		return x.FilterBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetFilterBytesRate() uint64 {
	if x != nil {
		return x.FilterBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetFilterPackets() uint64 {
	if x != nil {
		return x.FilterPackets
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetFilterPktsRate() uint64 {
	if x != nil {
		return x.FilterPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetGroupType() string {
	if x != nil {
		return x.GroupType
	}
	return ""
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMatchByteRt() uint64 {
	if x != nil {
		return x.MatchByteRt
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMatchBytes() uint64 {
	if x != nil {
		return x.MatchBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMatchDropBytes() uint64 {
	if x != nil {
		return x.MatchDropBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMatchDropBytesRate() uint64 {
	if x != nil {
		return x.MatchDropBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMatchDropPackets() uint64 {
	if x != nil {
		return x.MatchDropPackets
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMatchDropPktsRate() uint64 {
	if x != nil {
		return x.MatchDropPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMatchPackets() uint64 {
	if x != nil {
		return x.MatchPackets
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMatchPassBytes() uint64 {
	if x != nil {
		return x.MatchPassBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMatchPassBytesRate() uint64 {
	if x != nil {
		return x.MatchPassBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMatchPassPackets() uint64 {
	if x != nil {
		return x.MatchPassPackets
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMatchPassPktsRate() uint64 {
	if x != nil {
		return x.MatchPassPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMatchPktRt() uint64 {
	if x != nil {
		return x.MatchPktRt
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMulticastSuppressDropBytes() uint64 {
	if x != nil {
		return x.MulticastSuppressDropBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMulticastSuppressDropBytesRate() uint64 {
	if x != nil {
		return x.MulticastSuppressDropBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMulticastSuppressDropPkts() uint64 {
	if x != nil {
		return x.MulticastSuppressDropPkts
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMulticastSuppressDropPktsRate() uint64 {
	if x != nil {
		return x.MulticastSuppressDropPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMulticastSuppressPassBytes() uint64 {
	if x != nil {
		return x.MulticastSuppressPassBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMulticastSuppressPassBytesRate() uint64 {
	if x != nil {
		return x.MulticastSuppressPassBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMulticastSuppressPassPkts() uint64 {
	if x != nil {
		return x.MulticastSuppressPassPkts
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetMulticastSuppressPassPktsRate() uint64 {
	if x != nil {
		return x.MulticastSuppressPassPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetStreamDirection() string {
	if x != nil {
		return x.StreamDirection
	}
	return ""
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetUnknowUniSuppressDropBytes() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetUnknowUniSuppressDropBytesRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetUnknowUniSuppressDropPkts() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropPkts
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetUnknowUniSuppressDropPktsRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetUnknowUniSuppressPassBytes() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetUnknowUniSuppressPassBytesRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetUnknowUniSuppressPassPkts() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassPkts
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetUnknowUniSuppressPassPktsRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassPktsRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetUrpfDropBytes() uint64 {
	if x != nil {
		return x.UrpfDropBytes
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetUrpfDropBytesRate() uint64 {
	if x != nil {
		return x.UrpfDropBytesRate
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetUrpfDropPackets() uint64 {
	if x != nil {
		return x.UrpfDropPackets
	}
	return 0
}

func (x *Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat) GetUrpfDropPktsRate() uint64 {
	if x != nil {
		return x.UrpfDropPktsRate
	}
	return 0
}

type Qos_QosGlobalQppbs_QosGlobalQppb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value Qos_QosGlobalQppbs_QosGlobalQppb_Value `protobuf:"varint,1,opt,name=value,proto3,enum=huaweiV8R10_qos.Qos_QosGlobalQppbs_QosGlobalQppb_Value" json:"value,omitempty"`
}

func (x *Qos_QosGlobalQppbs_QosGlobalQppb) Reset() {
	*x = Qos_QosGlobalQppbs_QosGlobalQppb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[297]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosGlobalQppbs_QosGlobalQppb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosGlobalQppbs_QosGlobalQppb) ProtoMessage() {}

func (x *Qos_QosGlobalQppbs_QosGlobalQppb) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[297]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosGlobalQppbs_QosGlobalQppb.ProtoReflect.Descriptor instead.
func (*Qos_QosGlobalQppbs_QosGlobalQppb) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 10, 0}
}

func (x *Qos_QosGlobalQppbs_QosGlobalQppb) GetValue() Qos_QosGlobalQppbs_QosGlobalQppb_Value {
	if x != nil {
		return x.Value
	}
	return Qos_QosGlobalQppbs_QosGlobalQppb_Value_DESTINATION
}

type Qos_QosHardPipeAbilitys_QosHardPipeAbility struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ability Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability `protobuf:"varint,1,opt,name=ability,proto3,enum=huaweiV8R10_qos.Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability" json:"ability,omitempty"`
	IfName  string                                             `protobuf:"bytes,2,opt,name=ifName,proto3" json:"ifName,omitempty"`
}

func (x *Qos_QosHardPipeAbilitys_QosHardPipeAbility) Reset() {
	*x = Qos_QosHardPipeAbilitys_QosHardPipeAbility{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[298]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosHardPipeAbilitys_QosHardPipeAbility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosHardPipeAbilitys_QosHardPipeAbility) ProtoMessage() {}

func (x *Qos_QosHardPipeAbilitys_QosHardPipeAbility) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[298]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosHardPipeAbilitys_QosHardPipeAbility.ProtoReflect.Descriptor instead.
func (*Qos_QosHardPipeAbilitys_QosHardPipeAbility) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 11, 0}
}

func (x *Qos_QosHardPipeAbilitys_QosHardPipeAbility) GetAbility() Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability {
	if x != nil {
		return x.Ability
	}
	return Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability_E
}

func (x *Qos_QosHardPipeAbilitys_QosHardPipeAbility) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

type Qos_QosIfQoss_QosIfQos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfName                  string                                          `protobuf:"bytes,1,opt,name=ifName,proto3" json:"ifName,omitempty"`
	QOSProBasInsCfgNodes    *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes    `protobuf:"bytes,2,opt,name=qOSProBasInsCfgNodes,proto3" json:"qOSProBasInsCfgNodes,omitempty"`
	QosCvgPcds              *Qos_QosIfQoss_QosIfQos_QosCvgPcds              `protobuf:"bytes,3,opt,name=qosCvgPcds,proto3" json:"qosCvgPcds,omitempty"`
	QosDefSQCirs            *Qos_QosIfQoss_QosIfQos_QosDefSQCirs            `protobuf:"bytes,4,opt,name=qosDefSQCirs,proto3" json:"qosDefSQCirs,omitempty"`
	QosDefaultServiceClasss *Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss `protobuf:"bytes,5,opt,name=qosDefaultServiceClasss,proto3" json:"qosDefaultServiceClasss,omitempty"`
	QosDeiEnables           *Qos_QosIfQoss_QosIfQos_QosDeiEnables           `protobuf:"bytes,6,opt,name=qosDeiEnables,proto3" json:"qosDeiEnables,omitempty"`
	QosDomLnkAdjs           *Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs           `protobuf:"bytes,7,opt,name=qosDomLnkAdjs,proto3" json:"qosDomLnkAdjs,omitempty"`
	QosDomLnkAds            *Qos_QosIfQoss_QosIfQos_QosDomLnkAds            `protobuf:"bytes,8,opt,name=qosDomLnkAds,proto3" json:"qosDomLnkAds,omitempty"`
	QosDomRespools          *Qos_QosIfQoss_QosIfQos_QosDomRespools          `protobuf:"bytes,9,opt,name=qosDomRespools,proto3" json:"qosDomRespools,omitempty"`
	QosGQApps               *Qos_QosIfQoss_QosIfQos_QosGQApps               `protobuf:"bytes,10,opt,name=qosGQApps,proto3" json:"qosGQApps,omitempty"`
	QosHardPipes            *Qos_QosIfQoss_QosIfQos_QosHardPipes            `protobuf:"bytes,11,opt,name=qosHardPipes,proto3" json:"qosHardPipes,omitempty"`
	QosIFGQStDisps          *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps          `protobuf:"bytes,12,opt,name=qosIFGQStDisps,proto3" json:"qosIFGQStDisps,omitempty"`
	QosIfCars               *Qos_QosIfQoss_QosIfQos_QosIfCars               `protobuf:"bytes,13,opt,name=qosIfCars,proto3" json:"qosIfCars,omitempty"`
	QosIfPhbs               *Qos_QosIfQoss_QosIfQos_QosIfPhbs               `protobuf:"bytes,14,opt,name=qosIfPhbs,proto3" json:"qosIfPhbs,omitempty"`
	QosIfQppbs              *Qos_QosIfQoss_QosIfQos_QosIfQppbs              `protobuf:"bytes,15,opt,name=qosIfQppbs,proto3" json:"qosIfQppbs,omitempty"`
	QosIfTrusts             *Qos_QosIfQoss_QosIfQos_QosIfTrusts             `protobuf:"bytes,16,opt,name=qosIfTrusts,proto3" json:"qosIfTrusts,omitempty"`
	QosLdpTraffics          *Qos_QosIfQoss_QosIfQos_QosLdpTraffics          `protobuf:"bytes,17,opt,name=qosLdpTraffics,proto3" json:"qosLdpTraffics,omitempty"`
	QosLrs                  *Qos_QosIfQoss_QosIfQos_QosLrs                  `protobuf:"bytes,18,opt,name=qosLrs,proto3" json:"qosLrs,omitempty"`
	QosLvHardPStVws         *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws         `protobuf:"bytes,19,opt,name=qosLvHardPStVws,proto3" json:"qosLvHardPStVws,omitempty"`
	QosMemLinkSchs          *Qos_QosIfQoss_QosIfQos_QosMemLinkSchs          `protobuf:"bytes,20,opt,name=qosMemLinkSchs,proto3" json:"qosMemLinkSchs,omitempty"`
	QosMplsL2Vcs            *Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs            `protobuf:"bytes,21,opt,name=qosMplsL2vcs,proto3" json:"qosMplsL2vcs,omitempty"`
	QosPQDiscardAlarms      *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms      `protobuf:"bytes,22,opt,name=qosPQDiscardAlarms,proto3" json:"qosPQDiscardAlarms,omitempty"`
	QosPolicyApplys         *Qos_QosIfQoss_QosIfQos_QosPolicyApplys         `protobuf:"bytes,23,opt,name=qosPolicyApplys,proto3" json:"qosPolicyApplys,omitempty"`
	QosPortQueueAlarms      *Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms      `protobuf:"bytes,24,opt,name=qosPortQueueAlarms,proto3" json:"qosPortQueueAlarms,omitempty"`
	QosPortQueues           *Qos_QosIfQoss_QosIfQos_QosPortQueues           `protobuf:"bytes,25,opt,name=qosPortQueues,proto3" json:"qosPortQueues,omitempty"`
	QosPortShapings         *Qos_QosIfQoss_QosIfQos_QosPortShapings         `protobuf:"bytes,26,opt,name=qosPortShapings,proto3" json:"qosPortShapings,omitempty"`
	QosQosQueues            *Qos_QosIfQoss_QosIfQos_QosQosQueues            `protobuf:"bytes,27,opt,name=qosQosQueues,proto3" json:"qosQosQueues,omitempty"`
	QosShapings             *Qos_QosIfQoss_QosIfQos_QosShapings             `protobuf:"bytes,28,opt,name=qosShapings,proto3" json:"qosShapings,omitempty"`
	QosSubPortQApps         *Qos_QosIfQoss_QosIfQos_QosSubPortQApps         `protobuf:"bytes,29,opt,name=qosSubPortQApps,proto3" json:"qosSubPortQApps,omitempty"`
	QosSubportquStaschs     *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs     `protobuf:"bytes,30,opt,name=qosSubportquStaschs,proto3" json:"qosSubportquStaschs,omitempty"`
	QosUserVlanProfs        *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs        `protobuf:"bytes,31,opt,name=qosUserVlanProfs,proto3" json:"qosUserVlanProfs,omitempty"`
	QosVllPipe              *Qos_QosIfQoss_QosIfQos_QosVllPipe              `protobuf:"bytes,32,opt,name=qosVllPipe,proto3" json:"qosVllPipe,omitempty"`
	QosWfqShapings          *Qos_QosIfQoss_QosIfQos_QosWfqShapings          `protobuf:"bytes,33,opt,name=qosWfqShapings,proto3" json:"qosWfqShapings,omitempty"`
	QosWfqWeights           *Qos_QosIfQoss_QosIfQos_QosWfqWeights           `protobuf:"bytes,34,opt,name=qosWfqWeights,proto3" json:"qosWfqWeights,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos) Reset() {
	*x = Qos_QosIfQoss_QosIfQos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[299]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[299]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0}
}

func (x *Qos_QosIfQoss_QosIfQos) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos) GetQOSProBasInsCfgNodes() *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes {
	if x != nil {
		return x.QOSProBasInsCfgNodes
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosCvgPcds() *Qos_QosIfQoss_QosIfQos_QosCvgPcds {
	if x != nil {
		return x.QosCvgPcds
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosDefSQCirs() *Qos_QosIfQoss_QosIfQos_QosDefSQCirs {
	if x != nil {
		return x.QosDefSQCirs
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosDefaultServiceClasss() *Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss {
	if x != nil {
		return x.QosDefaultServiceClasss
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosDeiEnables() *Qos_QosIfQoss_QosIfQos_QosDeiEnables {
	if x != nil {
		return x.QosDeiEnables
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosDomLnkAdjs() *Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs {
	if x != nil {
		return x.QosDomLnkAdjs
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosDomLnkAds() *Qos_QosIfQoss_QosIfQos_QosDomLnkAds {
	if x != nil {
		return x.QosDomLnkAds
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosDomRespools() *Qos_QosIfQoss_QosIfQos_QosDomRespools {
	if x != nil {
		return x.QosDomRespools
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosGQApps() *Qos_QosIfQoss_QosIfQos_QosGQApps {
	if x != nil {
		return x.QosGQApps
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosHardPipes() *Qos_QosIfQoss_QosIfQos_QosHardPipes {
	if x != nil {
		return x.QosHardPipes
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosIFGQStDisps() *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps {
	if x != nil {
		return x.QosIFGQStDisps
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosIfCars() *Qos_QosIfQoss_QosIfQos_QosIfCars {
	if x != nil {
		return x.QosIfCars
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosIfPhbs() *Qos_QosIfQoss_QosIfQos_QosIfPhbs {
	if x != nil {
		return x.QosIfPhbs
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosIfQppbs() *Qos_QosIfQoss_QosIfQos_QosIfQppbs {
	if x != nil {
		return x.QosIfQppbs
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosIfTrusts() *Qos_QosIfQoss_QosIfQos_QosIfTrusts {
	if x != nil {
		return x.QosIfTrusts
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosLdpTraffics() *Qos_QosIfQoss_QosIfQos_QosLdpTraffics {
	if x != nil {
		return x.QosLdpTraffics
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosLrs() *Qos_QosIfQoss_QosIfQos_QosLrs {
	if x != nil {
		return x.QosLrs
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosLvHardPStVws() *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws {
	if x != nil {
		return x.QosLvHardPStVws
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosMemLinkSchs() *Qos_QosIfQoss_QosIfQos_QosMemLinkSchs {
	if x != nil {
		return x.QosMemLinkSchs
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosMplsL2Vcs() *Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs {
	if x != nil {
		return x.QosMplsL2Vcs
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosPQDiscardAlarms() *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms {
	if x != nil {
		return x.QosPQDiscardAlarms
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosPolicyApplys() *Qos_QosIfQoss_QosIfQos_QosPolicyApplys {
	if x != nil {
		return x.QosPolicyApplys
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosPortQueueAlarms() *Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms {
	if x != nil {
		return x.QosPortQueueAlarms
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosPortQueues() *Qos_QosIfQoss_QosIfQos_QosPortQueues {
	if x != nil {
		return x.QosPortQueues
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosPortShapings() *Qos_QosIfQoss_QosIfQos_QosPortShapings {
	if x != nil {
		return x.QosPortShapings
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosQosQueues() *Qos_QosIfQoss_QosIfQos_QosQosQueues {
	if x != nil {
		return x.QosQosQueues
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosShapings() *Qos_QosIfQoss_QosIfQos_QosShapings {
	if x != nil {
		return x.QosShapings
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosSubPortQApps() *Qos_QosIfQoss_QosIfQos_QosSubPortQApps {
	if x != nil {
		return x.QosSubPortQApps
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosSubportquStaschs() *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs {
	if x != nil {
		return x.QosSubportquStaschs
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosUserVlanProfs() *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs {
	if x != nil {
		return x.QosUserVlanProfs
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosVllPipe() *Qos_QosIfQoss_QosIfQos_QosVllPipe {
	if x != nil {
		return x.QosVllPipe
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosWfqShapings() *Qos_QosIfQoss_QosIfQos_QosWfqShapings {
	if x != nil {
		return x.QosWfqShapings
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos) GetQosWfqWeights() *Qos_QosIfQoss_QosIfQos_QosWfqWeights {
	if x != nil {
		return x.QosWfqWeights
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QOSProBasInsCfgNode []*Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode `protobuf:"bytes,1,rep,name=qOSProBasInsCfgNode,proto3" json:"qOSProBasInsCfgNode,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[300]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[300]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes) GetQOSProBasInsCfgNode() []*Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode {
	if x != nil {
		return x.QOSProBasInsCfgNode
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosCvgPcds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosCvgPcd *Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd `protobuf:"bytes,1,opt,name=qosCvgPcd,proto3" json:"qosCvgPcd,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosCvgPcds) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosCvgPcds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[301]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosCvgPcds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosCvgPcds) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosCvgPcds) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[301]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosCvgPcds.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosCvgPcds) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 1}
}

func (x *Qos_QosIfQoss_QosIfQos_QosCvgPcds) GetQosCvgPcd() *Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd {
	if x != nil {
		return x.QosCvgPcd
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosDefSQCirs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosDefSQCir *Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir `protobuf:"bytes,1,opt,name=qosDefSQCir,proto3" json:"qosDefSQCir,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefSQCirs) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosDefSQCirs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[302]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefSQCirs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosDefSQCirs) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosDefSQCirs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[302]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDefSQCirs.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosDefSQCirs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 2}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefSQCirs) GetQosDefSQCir() *Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir {
	if x != nil {
		return x.QosDefSQCir
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosDefaultServiceClass *Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass `protobuf:"bytes,1,opt,name=qosDefaultServiceClass,proto3" json:"qosDefaultServiceClass,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[303]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[303]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 3}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss) GetQosDefaultServiceClass() *Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass {
	if x != nil {
		return x.QosDefaultServiceClass
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosDeiEnables struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosDeiEnable []*Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable `protobuf:"bytes,1,rep,name=qosDeiEnable,proto3" json:"qosDeiEnable,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosDeiEnables) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosDeiEnables{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[304]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDeiEnables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosDeiEnables) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosDeiEnables) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[304]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDeiEnables.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosDeiEnables) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 4}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDeiEnables) GetQosDeiEnable() []*Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable {
	if x != nil {
		return x.QosDeiEnable
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosDomLnkAdj *Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs_QosDomLnkAdj `protobuf:"bytes,1,opt,name=qosDomLnkAdj,proto3" json:"qosDomLnkAdj,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[305]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[305]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 5}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs) GetQosDomLnkAdj() *Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs_QosDomLnkAdj {
	if x != nil {
		return x.QosDomLnkAdj
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosDomLnkAds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosDomLnkAd *Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd `protobuf:"bytes,1,opt,name=qosDomLnkAd,proto3" json:"qosDomLnkAd,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAds) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosDomLnkAds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[306]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosDomLnkAds) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAds) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[306]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDomLnkAds.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosDomLnkAds) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 6}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAds) GetQosDomLnkAd() *Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd {
	if x != nil {
		return x.QosDomLnkAd
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosDomRespools struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosDomRespool []*Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool `protobuf:"bytes,1,rep,name=qosDomRespool,proto3" json:"qosDomRespool,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomRespools) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosDomRespools{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[307]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomRespools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosDomRespools) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosDomRespools) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[307]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDomRespools.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosDomRespools) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 7}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomRespools) GetQosDomRespool() []*Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool {
	if x != nil {
		return x.QosDomRespool
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosGQApps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosGQApp []*Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp `protobuf:"bytes,1,rep,name=qosGQApp,proto3" json:"qosGQApp,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosGQApps) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosGQApps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[308]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosGQApps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosGQApps) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosGQApps) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[308]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosGQApps.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosGQApps) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 8}
}

func (x *Qos_QosIfQoss_QosIfQos_QosGQApps) GetQosGQApp() []*Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp {
	if x != nil {
		return x.QosGQApp
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosHardPipes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosHardPipe *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe `protobuf:"bytes,1,opt,name=qosHardPipe,proto3" json:"qosHardPipe,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosHardPipes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[309]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosHardPipes) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[309]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosHardPipes.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosHardPipes) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 9}
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes) GetQosHardPipe() *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe {
	if x != nil {
		return x.QosHardPipe
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosIFGQStDisps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosIFGQStDisp []*Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp `protobuf:"bytes,1,rep,name=qosIFGQStDisp,proto3" json:"qosIFGQStDisp,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIFGQStDisps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[310]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIFGQStDisps) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[310]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIFGQStDisps.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIFGQStDisps) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 10}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps) GetQosIFGQStDisp() []*Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp {
	if x != nil {
		return x.QosIFGQStDisp
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosIfCars struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosIfCar []*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar `protobuf:"bytes,1,rep,name=qosIfCar,proto3" json:"qosIfCar,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIfCars{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[311]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIfCars) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[311]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIfCars) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars) GetQosIfCar() []*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar {
	if x != nil {
		return x.QosIfCar
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosIfPhbs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosIfPhb []*Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb `protobuf:"bytes,1,rep,name=qosIfPhb,proto3" json:"qosIfPhb,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfPhbs) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIfPhbs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[312]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfPhbs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIfPhbs) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIfPhbs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[312]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfPhbs.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIfPhbs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 12}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfPhbs) GetQosIfPhb() []*Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb {
	if x != nil {
		return x.QosIfPhb
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosIfQppbs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosIfQppb []*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb `protobuf:"bytes,1,rep,name=qosIfQppb,proto3" json:"qosIfQppb,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIfQppbs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[313]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIfQppbs) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[313]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfQppbs.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIfQppbs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 13}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs) GetQosIfQppb() []*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb {
	if x != nil {
		return x.QosIfQppb
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosIfTrusts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosIfTrust []*Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust `protobuf:"bytes,1,rep,name=qosIfTrust,proto3" json:"qosIfTrust,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfTrusts) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIfTrusts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[314]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfTrusts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIfTrusts) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIfTrusts) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[314]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfTrusts.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIfTrusts) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 14}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfTrusts) GetQosIfTrust() []*Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust {
	if x != nil {
		return x.QosIfTrust
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosLdpTraffics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLdpTraffic *Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic `protobuf:"bytes,1,opt,name=qosLdpTraffic,proto3" json:"qosLdpTraffic,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosLdpTraffics) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosLdpTraffics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[315]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosLdpTraffics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosLdpTraffics) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosLdpTraffics) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[315]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosLdpTraffics.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosLdpTraffics) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 15}
}

func (x *Qos_QosIfQoss_QosIfQos_QosLdpTraffics) GetQosLdpTraffic() *Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic {
	if x != nil {
		return x.QosLdpTraffic
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosLrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLr []*Qos_QosIfQoss_QosIfQos_QosLrs_QosLr `protobuf:"bytes,1,rep,name=qosLr,proto3" json:"qosLr,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosLrs) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosLrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[316]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosLrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosLrs) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosLrs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[316]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosLrs.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosLrs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 16}
}

func (x *Qos_QosIfQoss_QosIfQos_QosLrs) GetQosLr() []*Qos_QosIfQoss_QosIfQos_QosLrs_QosLr {
	if x != nil {
		return x.QosLr
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosLvHardPStVws struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLvHardPStVw *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw `protobuf:"bytes,1,opt,name=qosLvHardPStVw,proto3" json:"qosLvHardPStVw,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosLvHardPStVws{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[317]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosLvHardPStVws) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[317]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosLvHardPStVws.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosLvHardPStVws) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 17}
}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws) GetQosLvHardPStVw() *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw {
	if x != nil {
		return x.QosLvHardPStVw
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosMemLinkSchs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosMemLinkSch []*Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch `protobuf:"bytes,1,rep,name=qosMemLinkSch,proto3" json:"qosMemLinkSch,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosMemLinkSchs) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosMemLinkSchs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[318]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosMemLinkSchs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosMemLinkSchs) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosMemLinkSchs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[318]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosMemLinkSchs.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosMemLinkSchs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 18}
}

func (x *Qos_QosIfQoss_QosIfQos_QosMemLinkSchs) GetQosMemLinkSch() []*Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch {
	if x != nil {
		return x.QosMemLinkSch
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosMplsL2Vc *Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs_QosMplsL2Vc `protobuf:"bytes,1,opt,name=qosMplsL2vc,proto3" json:"qosMplsL2vc,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[319]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[319]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 19}
}

func (x *Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs) GetQosMplsL2Vc() *Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs_QosMplsL2Vc {
	if x != nil {
		return x.QosMplsL2Vc
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPQDiscardAlarm []*Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm `protobuf:"bytes,1,rep,name=qosPQDiscardAlarm,proto3" json:"qosPQDiscardAlarm,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[320]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[320]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 20}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms) GetQosPQDiscardAlarm() []*Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm {
	if x != nil {
		return x.QosPQDiscardAlarm
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosPolicyApplys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPolicyApply []*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply `protobuf:"bytes,1,rep,name=qosPolicyApply,proto3" json:"qosPolicyApply,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPolicyApplys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[321]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[321]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPolicyApplys.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 21}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys) GetQosPolicyApply() []*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply {
	if x != nil {
		return x.QosPolicyApply
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPortQueueAlarm []*Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm `protobuf:"bytes,1,rep,name=qosPortQueueAlarm,proto3" json:"qosPortQueueAlarm,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[322]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[322]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 22}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms) GetQosPortQueueAlarm() []*Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm {
	if x != nil {
		return x.QosPortQueueAlarm
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosPortQueues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPortQueue []*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue `protobuf:"bytes,1,rep,name=qosPortQueue,proto3" json:"qosPortQueue,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPortQueues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[323]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPortQueues) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[323]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPortQueues.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPortQueues) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 23}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues) GetQosPortQueue() []*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue {
	if x != nil {
		return x.QosPortQueue
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosPortShapings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPortShaping *Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping `protobuf:"bytes,1,opt,name=qosPortShaping,proto3" json:"qosPortShaping,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortShapings) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPortShapings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[324]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortShapings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPortShapings) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosPortShapings) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[324]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPortShapings.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPortShapings) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 24}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortShapings) GetQosPortShaping() *Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping {
	if x != nil {
		return x.QosPortShaping
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosQosQueues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosQosQueue []*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue `protobuf:"bytes,1,rep,name=qosQosQueue,proto3" json:"qosQosQueue,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosQosQueues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[325]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosQosQueues) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[325]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosQosQueues.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosQosQueues) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 25}
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues) GetQosQosQueue() []*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue {
	if x != nil {
		return x.QosQosQueue
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosShapings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosShaping []*Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping `protobuf:"bytes,1,rep,name=qosShaping,proto3" json:"qosShaping,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosShapings) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosShapings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[326]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosShapings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosShapings) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosShapings) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[326]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosShapings.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosShapings) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 26}
}

func (x *Qos_QosIfQoss_QosIfQos_QosShapings) GetQosShaping() []*Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping {
	if x != nil {
		return x.QosShaping
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosSubPortQApps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSubPortQApp []*Qos_QosIfQoss_QosIfQos_QosSubPortQApps_QosSubPortQApp `protobuf:"bytes,1,rep,name=qosSubPortQApp,proto3" json:"qosSubPortQApp,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubPortQApps) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosSubPortQApps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[327]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubPortQApps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosSubPortQApps) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosSubPortQApps) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[327]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosSubPortQApps.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosSubPortQApps) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 27}
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubPortQApps) GetQosSubPortQApp() []*Qos_QosIfQoss_QosIfQos_QosSubPortQApps_QosSubPortQApp {
	if x != nil {
		return x.QosSubPortQApp
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosSubportquStaschs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSubportquStasch *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch `protobuf:"bytes,1,opt,name=qosSubportquStasch,proto3" json:"qosSubportquStasch,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosSubportquStaschs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[328]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosSubportquStaschs) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[328]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosSubportquStaschs.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosSubportquStaschs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 28}
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs) GetQosSubportquStasch() *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch {
	if x != nil {
		return x.QosSubportquStasch
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosUserVlanProfs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosUserVlanProf []*Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf `protobuf:"bytes,1,rep,name=qosUserVlanProf,proto3" json:"qosUserVlanProf,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosUserVlanProfs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[329]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosUserVlanProfs) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[329]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosUserVlanProfs.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosUserVlanProfs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 29}
}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs) GetQosUserVlanProf() []*Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf {
	if x != nil {
		return x.QosUserVlanProf
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosVllPipe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color        Qos_QosIfQoss_QosIfQos_QosVllPipe_Color        `protobuf:"varint,1,opt,name=color,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosVllPipe_Color" json:"color,omitempty"`
	DsName       string                                         `protobuf:"bytes,2,opt,name=dsName,proto3" json:"dsName,omitempty"`
	EgPipeMode   Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode   `protobuf:"varint,3,opt,name=egPipeMode,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode" json:"egPipeMode,omitempty"`
	IngPipeMode  Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode  `protobuf:"varint,4,opt,name=ingPipeMode,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode" json:"ingPipeMode,omitempty"`
	PipeMode     Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode     `protobuf:"varint,5,opt,name=pipeMode,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode" json:"pipeMode,omitempty"`
	ServiceClass Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass `protobuf:"varint,6,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass" json:"serviceClass,omitempty"`
	SplitMode    bool                                           `protobuf:"varint,7,opt,name=splitMode,proto3" json:"splitMode,omitempty"`
	TrustType    Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType    `protobuf:"varint,8,opt,name=trustType,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType" json:"trustType,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosVllPipe) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosVllPipe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[330]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosVllPipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosVllPipe) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosVllPipe) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[330]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosVllPipe.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosVllPipe) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 30}
}

func (x *Qos_QosIfQoss_QosIfQos_QosVllPipe) GetColor() Qos_QosIfQoss_QosIfQos_QosVllPipe_Color {
	if x != nil {
		return x.Color
	}
	return Qos_QosIfQoss_QosIfQos_QosVllPipe_Color_GREEN
}

func (x *Qos_QosIfQoss_QosIfQos_QosVllPipe) GetDsName() string {
	if x != nil {
		return x.DsName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosVllPipe) GetEgPipeMode() Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode {
	if x != nil {
		return x.EgPipeMode
	}
	return Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode_PIPE
}

func (x *Qos_QosIfQoss_QosIfQos_QosVllPipe) GetIngPipeMode() Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode {
	if x != nil {
		return x.IngPipeMode
	}
	return Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode_PIPE
}

func (x *Qos_QosIfQoss_QosIfQos_QosVllPipe) GetPipeMode() Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode {
	if x != nil {
		return x.PipeMode
	}
	return Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode_PIPE
}

func (x *Qos_QosIfQoss_QosIfQos_QosVllPipe) GetServiceClass() Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass_AF1
}

func (x *Qos_QosIfQoss_QosIfQos_QosVllPipe) GetSplitMode() bool {
	if x != nil {
		return x.SplitMode
	}
	return false
}

func (x *Qos_QosIfQoss_QosIfQos_QosVllPipe) GetTrustType() Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType {
	if x != nil {
		return x.TrustType
	}
	return Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType_INPRI
}

type Qos_QosIfQoss_QosIfQos_QosWfqShapings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosWfqShaping []*Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping `protobuf:"bytes,1,rep,name=qosWfqShaping,proto3" json:"qosWfqShaping,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqShapings) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosWfqShapings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[331]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqShapings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosWfqShapings) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqShapings) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[331]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosWfqShapings.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosWfqShapings) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 31}
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqShapings) GetQosWfqShaping() []*Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping {
	if x != nil {
		return x.QosWfqShaping
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosWfqWeights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosWfqWeight []*Qos_QosIfQoss_QosIfQos_QosWfqWeights_QosWfqWeight `protobuf:"bytes,1,rep,name=qosWfqWeight,proto3" json:"qosWfqWeight,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqWeights) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosWfqWeights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[332]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqWeights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosWfqWeights) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqWeights) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[332]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosWfqWeights.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosWfqWeights) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 32}
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqWeights) GetQosWfqWeight() []*Qos_QosIfQoss_QosIfQos_QosWfqWeights_QosWfqWeight {
	if x != nil {
		return x.QosWfqWeight
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnyOtherType  Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType `protobuf:"varint,1,opt,name=anyOtherType,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType" json:"anyOtherType,omitempty"`
	AppPeVlan     uint32                                                                       `protobuf:"varint,2,opt,name=appPeVlan,proto3" json:"appPeVlan,omitempty"`
	CeBeginVlanID uint32                                                                       `protobuf:"varint,3,opt,name=ceBeginVlanID,proto3" json:"ceBeginVlanID,omitempty"`
	CeEndVlanID   uint32                                                                       `protobuf:"varint,4,opt,name=ceEndVlanID,proto3" json:"ceEndVlanID,omitempty"`
	Direction     Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction    `protobuf:"varint,5,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction" json:"direction,omitempty"`
	GroupName     string                                                                       `protobuf:"bytes,6,opt,name=groupName,proto3" json:"groupName,omitempty"`
	IdentifyType  Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType `protobuf:"varint,7,opt,name=identifyType,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType" json:"identifyType,omitempty"`
	ProfileName   string                                                                       `protobuf:"bytes,8,opt,name=profileName,proto3" json:"profileName,omitempty"`
	SessionLmtNum uint32                                                                       `protobuf:"varint,9,opt,name=sessionLmtNum,proto3" json:"sessionLmtNum,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[333]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[333]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode) GetAnyOtherType() Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType {
	if x != nil {
		return x.AnyOtherType
	}
	return Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType_NOT_CONFIG
}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode) GetAppPeVlan() uint32 {
	if x != nil {
		return x.AppPeVlan
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode) GetCeBeginVlanID() uint32 {
	if x != nil {
		return x.CeBeginVlanID
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode) GetCeEndVlanID() uint32 {
	if x != nil {
		return x.CeEndVlanID
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode) GetDirection() Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction_ALL
}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode) GetIdentifyType() Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType {
	if x != nil {
		return x.IdentifyType
	}
	return Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType_ACCESS_LINE_ID
}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode) GetSessionLmtNum() uint32 {
	if x != nil {
		return x.SessionLmtNum
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority `protobuf:"varint,1,opt,name=priority,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority" json:"priority,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[334]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[334]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 1, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd) GetPriority() Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority {
	if x != nil {
		return x.Priority
	}
	return Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority_HIGH
}

type Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cbs       uint32                                                    `protobuf:"varint,1,opt,name=cbs,proto3" json:"cbs,omitempty"`
	Cir       uint32                                                    `protobuf:"varint,2,opt,name=cir,proto3" json:"cir,omitempty"`
	Direction Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction `protobuf:"varint,3,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction" json:"direction,omitempty"`
	Pbs       uint32                                                    `protobuf:"varint,4,opt,name=pbs,proto3" json:"pbs,omitempty"`
	Pir       uint32                                                    `protobuf:"varint,5,opt,name=pir,proto3" json:"pir,omitempty"`
	Weight    uint32                                                    `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[335]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[335]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 2, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir) GetCbs() uint32 {
	if x != nil {
		return x.Cbs
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir) GetCir() uint32 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir) GetDirection() Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction_OUTBOUND
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir) GetPir() uint32 {
	if x != nil {
		return x.Pir
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceClass Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass `protobuf:"varint,1,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[336]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[336]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 3, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass) GetServiceClass() Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass_AF1
}

type Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeiEnable Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable `protobuf:"varint,1,opt,name=deiEnable,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable" json:"deiEnable,omitempty"`
	GroupId   uint32                                                      `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	VlanId    string                                                      `protobuf:"bytes,3,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[337]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[337]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 4, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable) GetDeiEnable() Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable {
	if x != nil {
		return x.DeiEnable
	}
	return Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable_ENABLE
}

func (x *Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable) GetVlanId() string {
	if x != nil {
		return x.VlanId
	}
	return ""
}

type Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs_QosDomLnkAdj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdjustValue int32 `protobuf:"varint,1,opt,name=adjustValue,proto3" json:"adjustValue,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs_QosDomLnkAdj) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs_QosDomLnkAdj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[338]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs_QosDomLnkAdj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs_QosDomLnkAdj) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs_QosDomLnkAdj) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[338]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs_QosDomLnkAdj.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs_QosDomLnkAdj) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 5, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs_QosDomLnkAdj) GetAdjustValue() int32 {
	if x != nil {
		return x.AdjustValue
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModeType Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType `protobuf:"varint,1,opt,name=modeType,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType" json:"modeType,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[339]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[339]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 6, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd) GetModeType() Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType {
	if x != nil {
		return x.ModeType
	}
	return Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType_CELL
}

type Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction" json:"direction,omitempty"`
	PoolID    uint32                                                        `protobuf:"varint,2,opt,name=poolID,proto3" json:"poolID,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[340]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[340]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 7, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool) GetDirection() Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction_INBOUND
}

func (x *Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool) GetPoolID() uint32 {
	if x != nil {
		return x.PoolID
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GqDirection  Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection  `protobuf:"varint,1,opt,name=gqDirection,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection" json:"gqDirection,omitempty"`
	GqGroupName  string                                                 `protobuf:"bytes,2,opt,name=gqGroupName,proto3" json:"gqGroupName,omitempty"`
	GqIdentifier Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier `protobuf:"varint,3,opt,name=gqIdentifier,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier" json:"gqIdentifier,omitempty"`
	GqName       string                                                 `protobuf:"bytes,4,opt,name=gqName,proto3" json:"gqName,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[341]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[341]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 8, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp) GetGqDirection() Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection {
	if x != nil {
		return x.GqDirection
	}
	return Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection_INBOUND
}

func (x *Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp) GetGqGroupName() string {
	if x != nil {
		return x.GqGroupName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp) GetGqIdentifier() Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier {
	if x != nil {
		return x.GqIdentifier
	}
	return Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier_NONE
}

func (x *Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp) GetGqName() string {
	if x != nil {
		return x.GqName
	}
	return ""
}

type Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bandwidth        uint32                                                            `protobuf:"varint,1,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	QosHardPipeMode  Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode   `protobuf:"varint,2,opt,name=qosHardPipeMode,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode" json:"qosHardPipeMode,omitempty"`
	QosHardPipeStats *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats `protobuf:"bytes,3,opt,name=qosHardPipeStats,proto3" json:"qosHardPipeStats,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[342]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[342]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 9, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe) GetBandwidth() uint32 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe) GetQosHardPipeMode() Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode {
	if x != nil {
		return x.QosHardPipeMode
	}
	return Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode_ACHARDPIPE_MODE
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe) GetQosHardPipeStats() *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats {
	if x != nil {
		return x.QosHardPipeStats
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosHardPipeStat []*Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat `protobuf:"bytes,1,rep,name=qosHardPipeStat,proto3" json:"qosHardPipeStat,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[343]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[343]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 9, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats) GetQosHardPipeStat() []*Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat {
	if x != nil {
		return x.QosHardPipeStat
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction        Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction" json:"direction,omitempty"`
	DiscardBytes     uint64                                                                                     `protobuf:"varint,2,opt,name=discardBytes,proto3" json:"discardBytes,omitempty"`
	DiscardBytesRate uint64                                                                                     `protobuf:"varint,3,opt,name=discardBytesRate,proto3" json:"discardBytesRate,omitempty"`
	DiscardPackets   uint64                                                                                     `protobuf:"varint,4,opt,name=discardPackets,proto3" json:"discardPackets,omitempty"`
	DiscardPktsRate  uint64                                                                                     `protobuf:"varint,5,opt,name=discardPktsRate,proto3" json:"discardPktsRate,omitempty"`
	PassBytes        uint64                                                                                     `protobuf:"varint,6,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassBytesRate    uint64                                                                                     `protobuf:"varint,7,opt,name=passBytesRate,proto3" json:"passBytesRate,omitempty"`
	PassPackets      uint64                                                                                     `protobuf:"varint,8,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktsRate     uint64                                                                                     `protobuf:"varint,9,opt,name=passPktsRate,proto3" json:"passPktsRate,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[344]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat) ProtoMessage() {
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[344]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 9, 0, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat) GetDirection() Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction_INBOUND
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat) GetDiscardBytes() uint64 {
	if x != nil {
		return x.DiscardBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat) GetDiscardBytesRate() uint64 {
	if x != nil {
		return x.DiscardBytesRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat) GetDiscardPackets() uint64 {
	if x != nil {
		return x.DiscardPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat) GetDiscardPktsRate() uint64 {
	if x != nil {
		return x.DiscardPktsRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat) GetPassBytesRate() uint64 {
	if x != nil {
		return x.PassBytesRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat) GetPassPktsRate() uint64 {
	if x != nil {
		return x.PassPktsRate
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CeVlanId        uint32                                                             `protobuf:"varint,1,opt,name=ceVlanId,proto3" json:"ceVlanId,omitempty"`
	Direction       Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction      `protobuf:"varint,2,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction" json:"direction,omitempty"`
	DropByteRatesch uint64                                                             `protobuf:"varint,3,opt,name=dropByteRatesch,proto3" json:"dropByteRatesch,omitempty"`
	DropBytessch    uint64                                                             `protobuf:"varint,4,opt,name=dropBytessch,proto3" json:"dropBytessch,omitempty"`
	DropPacketssch  uint64                                                             `protobuf:"varint,5,opt,name=dropPacketssch,proto3" json:"dropPacketssch,omitempty"`
	DropPktRatesch  uint64                                                             `protobuf:"varint,6,opt,name=dropPktRatesch,proto3" json:"dropPktRatesch,omitempty"`
	PassByteRatesch uint64                                                             `protobuf:"varint,7,opt,name=passByteRatesch,proto3" json:"passByteRatesch,omitempty"`
	PassBytessch    uint64                                                             `protobuf:"varint,8,opt,name=passBytessch,proto3" json:"passBytessch,omitempty"`
	PassPacketssch  uint64                                                             `protobuf:"varint,9,opt,name=passPacketssch,proto3" json:"passPacketssch,omitempty"`
	PassPktRatesch  uint64                                                             `protobuf:"varint,10,opt,name=passPktRatesch,proto3" json:"passPktRatesch,omitempty"`
	PeVlanId        uint32                                                             `protobuf:"varint,11,opt,name=peVlanId,proto3" json:"peVlanId,omitempty"`
	ServicebdClass  Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass `protobuf:"varint,12,opt,name=servicebdClass,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass" json:"servicebdClass,omitempty"`
	VlanId          uint32                                                             `protobuf:"varint,13,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[345]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[345]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 10, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) GetCeVlanId() uint32 {
	if x != nil {
		return x.CeVlanId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) GetDirection() Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction_INBOUND
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) GetDropByteRatesch() uint64 {
	if x != nil {
		return x.DropByteRatesch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) GetDropBytessch() uint64 {
	if x != nil {
		return x.DropBytessch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) GetDropPacketssch() uint64 {
	if x != nil {
		return x.DropPacketssch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) GetDropPktRatesch() uint64 {
	if x != nil {
		return x.DropPktRatesch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) GetPassByteRatesch() uint64 {
	if x != nil {
		return x.PassByteRatesch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) GetPassBytessch() uint64 {
	if x != nil {
		return x.PassBytessch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) GetPassPacketssch() uint64 {
	if x != nil {
		return x.PassPacketssch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) GetPassPktRatesch() uint64 {
	if x != nil {
		return x.PassPktRatesch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) GetPeVlanId() uint32 {
	if x != nil {
		return x.PeVlanId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) GetServicebdClass() Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass {
	if x != nil {
		return x.ServicebdClass
	}
	return Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass_AF1
}

func (x *Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp) GetVlanId() uint32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cbs                uint32                                                       `protobuf:"varint,1,opt,name=cbs,proto3" json:"cbs,omitempty"`
	Cir                uint32                                                       `protobuf:"varint,2,opt,name=cir,proto3" json:"cir,omitempty"`
	ColorAware         bool                                                         `protobuf:"varint,3,opt,name=colorAware,proto3" json:"colorAware,omitempty"`
	Direction          Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction          `protobuf:"varint,4,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction" json:"direction,omitempty"`
	GreenAction        Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction        `protobuf:"varint,5,opt,name=greenAction,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction" json:"greenAction,omitempty"`
	GreenColor         Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor         `protobuf:"varint,6,opt,name=greenColor,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor" json:"greenColor,omitempty"`
	GreenServiceClass  Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass  `protobuf:"varint,7,opt,name=greenServiceClass,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass" json:"greenServiceClass,omitempty"`
	GroupId            uint32                                                       `protobuf:"varint,8,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Identifier         Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier         `protobuf:"varint,9,opt,name=identifier,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier" json:"identifier,omitempty"`
	Pbs                uint32                                                       `protobuf:"varint,10,opt,name=pbs,proto3" json:"pbs,omitempty"`
	Pir                uint32                                                       `protobuf:"varint,11,opt,name=pir,proto3" json:"pir,omitempty"`
	QosIfCarExtStats   *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats  `protobuf:"bytes,12,opt,name=qosIfCarExtStats,proto3" json:"qosIfCarExtStats,omitempty"`
	QosIfCarStats      *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats     `protobuf:"bytes,13,opt,name=qosIfCarStats,proto3" json:"qosIfCarStats,omitempty"`
	RedAction          Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction          `protobuf:"varint,14,opt,name=redAction,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction" json:"redAction,omitempty"`
	RedColor           Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor           `protobuf:"varint,15,opt,name=redColor,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor" json:"redColor,omitempty"`
	RedServiceClass    Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass    `protobuf:"varint,16,opt,name=redServiceClass,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass" json:"redServiceClass,omitempty"`
	VlanId             string                                                       `protobuf:"bytes,17,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
	VlanMode           bool                                                         `protobuf:"varint,18,opt,name=vlanMode,proto3" json:"vlanMode,omitempty"`
	YellowAction       Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction       `protobuf:"varint,19,opt,name=yellowAction,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction" json:"yellowAction,omitempty"`
	YellowColor        Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor        `protobuf:"varint,20,opt,name=yellowColor,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor" json:"yellowColor,omitempty"`
	YellowServiceClass Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass `protobuf:"varint,21,opt,name=yellowServiceClass,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass" json:"yellowServiceClass,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[346]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[346]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetCbs() uint32 {
	if x != nil {
		return x.Cbs
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetCir() uint32 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetColorAware() bool {
	if x != nil {
		return x.ColorAware
	}
	return false
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetDirection() Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction_INBOUND
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetGreenAction() Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction {
	if x != nil {
		return x.GreenAction
	}
	return Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction_DISCARD
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetGreenColor() Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor {
	if x != nil {
		return x.GreenColor
	}
	return Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor_GREEN
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetGreenServiceClass() Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass {
	if x != nil {
		return x.GreenServiceClass
	}
	return Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass_AF1
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetIdentifier() Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier {
	if x != nil {
		return x.Identifier
	}
	return Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier_CE_VID
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetPir() uint32 {
	if x != nil {
		return x.Pir
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetQosIfCarExtStats() *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats {
	if x != nil {
		return x.QosIfCarExtStats
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetQosIfCarStats() *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats {
	if x != nil {
		return x.QosIfCarStats
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetRedAction() Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction {
	if x != nil {
		return x.RedAction
	}
	return Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction_DISCARD
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetRedColor() Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor {
	if x != nil {
		return x.RedColor
	}
	return Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor_GREEN
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetRedServiceClass() Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass {
	if x != nil {
		return x.RedServiceClass
	}
	return Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass_AF1
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetVlanId() string {
	if x != nil {
		return x.VlanId
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetVlanMode() bool {
	if x != nil {
		return x.VlanMode
	}
	return false
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetYellowAction() Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction {
	if x != nil {
		return x.YellowAction
	}
	return Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction_DISCARD
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetYellowColor() Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor {
	if x != nil {
		return x.YellowColor
	}
	return Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor_GREEN
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar) GetYellowServiceClass() Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass {
	if x != nil {
		return x.YellowServiceClass
	}
	return Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass_AF1
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosIfCarExtStat []*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat `protobuf:"bytes,1,rep,name=qosIfCarExtStat,proto3" json:"qosIfCarExtStat,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[347]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[347]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats) GetQosIfCarExtStat() []*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat {
	if x != nil {
		return x.QosIfCarExtStat
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosIfCarStat []*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat `protobuf:"bytes,1,rep,name=qosIfCarStat,proto3" json:"qosIfCarStat,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[348]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[348]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 1}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats) GetQosIfCarStat() []*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat {
	if x != nil {
		return x.QosIfCarStat
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArpVlanCarInDropPkts      uint64 `protobuf:"varint,1,opt,name=arpVlanCarInDropPkts,proto3" json:"arpVlanCarInDropPkts,omitempty"`
	ArpVlanCarOutDropPkts     uint64 `protobuf:"varint,2,opt,name=arpVlanCarOutDropPkts,proto3" json:"arpVlanCarOutDropPkts,omitempty"`
	PortQueueOutDropPkts      uint64 `protobuf:"varint,3,opt,name=portQueueOutDropPkts,proto3" json:"portQueueOutDropPkts,omitempty"`
	QosCarInDropPkts          uint64 `protobuf:"varint,4,opt,name=qosCarInDropPkts,proto3" json:"qosCarInDropPkts,omitempty"`
	QosCarOutDropPkts         uint64 `protobuf:"varint,5,opt,name=qosCarOutDropPkts,proto3" json:"qosCarOutDropPkts,omitempty"`
	SegmentPktLenRx1024To1518 string `protobuf:"bytes,6,opt,name=segmentPktLenRx1024To1518,proto3" json:"segmentPktLenRx1024To1518,omitempty"`
	SegmentPktLenRx128To255   string `protobuf:"bytes,7,opt,name=segmentPktLenRx128To255,proto3" json:"segmentPktLenRx128To255,omitempty"`
	SegmentPktLenRx256To511   string `protobuf:"bytes,8,opt,name=segmentPktLenRx256To511,proto3" json:"segmentPktLenRx256To511,omitempty"`
	SegmentPktLenRx512To1023  string `protobuf:"bytes,9,opt,name=segmentPktLenRx512To1023,proto3" json:"segmentPktLenRx512To1023,omitempty"`
	SegmentPktLenRx64         string `protobuf:"bytes,10,opt,name=segmentPktLenRx64,proto3" json:"segmentPktLenRx64,omitempty"`
	SegmentPktLenRx65To127    string `protobuf:"bytes,11,opt,name=segmentPktLenRx65To127,proto3" json:"segmentPktLenRx65To127,omitempty"`
	SegmentPktLenRxLarger1518 string `protobuf:"bytes,12,opt,name=segmentPktLenRxLarger1518,proto3" json:"segmentPktLenRxLarger1518,omitempty"`
	SegmentPktLenTx1024To1518 string `protobuf:"bytes,13,opt,name=segmentPktLenTx1024To1518,proto3" json:"segmentPktLenTx1024To1518,omitempty"`
	SegmentPktLenTx128To255   string `protobuf:"bytes,14,opt,name=segmentPktLenTx128To255,proto3" json:"segmentPktLenTx128To255,omitempty"`
	SegmentPktLenTx256To511   string `protobuf:"bytes,15,opt,name=segmentPktLenTx256To511,proto3" json:"segmentPktLenTx256To511,omitempty"`
	SegmentPktLenTx512To1023  string `protobuf:"bytes,16,opt,name=segmentPktLenTx512To1023,proto3" json:"segmentPktLenTx512To1023,omitempty"`
	SegmentPktLenTx64         string `protobuf:"bytes,17,opt,name=segmentPktLenTx64,proto3" json:"segmentPktLenTx64,omitempty"`
	SegmentPktLenTx65To127    string `protobuf:"bytes,18,opt,name=segmentPktLenTx65To127,proto3" json:"segmentPktLenTx65To127,omitempty"`
	SegmentPktLenTxLarger1518 string `protobuf:"bytes,19,opt,name=segmentPktLenTxLarger1518,proto3" json:"segmentPktLenTxLarger1518,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[349]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[349]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetArpVlanCarInDropPkts() uint64 {
	if x != nil {
		return x.ArpVlanCarInDropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetArpVlanCarOutDropPkts() uint64 {
	if x != nil {
		return x.ArpVlanCarOutDropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetPortQueueOutDropPkts() uint64 {
	if x != nil {
		return x.PortQueueOutDropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetQosCarInDropPkts() uint64 {
	if x != nil {
		return x.QosCarInDropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetQosCarOutDropPkts() uint64 {
	if x != nil {
		return x.QosCarOutDropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetSegmentPktLenRx1024To1518() string {
	if x != nil {
		return x.SegmentPktLenRx1024To1518
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetSegmentPktLenRx128To255() string {
	if x != nil {
		return x.SegmentPktLenRx128To255
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetSegmentPktLenRx256To511() string {
	if x != nil {
		return x.SegmentPktLenRx256To511
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetSegmentPktLenRx512To1023() string {
	if x != nil {
		return x.SegmentPktLenRx512To1023
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetSegmentPktLenRx64() string {
	if x != nil {
		return x.SegmentPktLenRx64
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetSegmentPktLenRx65To127() string {
	if x != nil {
		return x.SegmentPktLenRx65To127
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetSegmentPktLenRxLarger1518() string {
	if x != nil {
		return x.SegmentPktLenRxLarger1518
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetSegmentPktLenTx1024To1518() string {
	if x != nil {
		return x.SegmentPktLenTx1024To1518
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetSegmentPktLenTx128To255() string {
	if x != nil {
		return x.SegmentPktLenTx128To255
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetSegmentPktLenTx256To511() string {
	if x != nil {
		return x.SegmentPktLenTx256To511
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetSegmentPktLenTx512To1023() string {
	if x != nil {
		return x.SegmentPktLenTx512To1023
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetSegmentPktLenTx64() string {
	if x != nil {
		return x.SegmentPktLenTx64
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetSegmentPktLenTx65To127() string {
	if x != nil {
		return x.SegmentPktLenTx65To127
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat) GetSegmentPktLenTxLarger1518() string {
	if x != nil {
		return x.SegmentPktLenTxLarger1518
	}
	return ""
}

type Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DropBytes     uint64 `protobuf:"varint,1,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropBytesRate uint64 `protobuf:"varint,2,opt,name=dropBytesRate,proto3" json:"dropBytesRate,omitempty"`
	DropPackets   uint64 `protobuf:"varint,3,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktsRate  uint64 `protobuf:"varint,4,opt,name=dropPktsRate,proto3" json:"dropPktsRate,omitempty"`
	PassBytes     uint64 `protobuf:"varint,5,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassBytesRate uint64 `protobuf:"varint,6,opt,name=passBytesRate,proto3" json:"passBytesRate,omitempty"`
	PassPackets   uint64 `protobuf:"varint,7,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktsRate  uint64 `protobuf:"varint,8,opt,name=passPktsRate,proto3" json:"passPktsRate,omitempty"`
	SlotIdPath    string `protobuf:"bytes,9,opt,name=slotIdPath,proto3" json:"slotIdPath,omitempty"`
	Vid           uint32 `protobuf:"varint,10,opt,name=vid,proto3" json:"vid,omitempty"`
	VlanId        uint32 `protobuf:"varint,11,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[350]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[350]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 11, 0, 1, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) GetDropBytesRate() uint64 {
	if x != nil {
		return x.DropBytesRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) GetDropPktsRate() uint64 {
	if x != nil {
		return x.DropPktsRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) GetPassBytesRate() uint64 {
	if x != nil {
		return x.PassBytesRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) GetPassPktsRate() uint64 {
	if x != nil {
		return x.PassPktsRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) GetSlotIdPath() string {
	if x != nil {
		return x.SlotIdPath
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) GetVid() uint32 {
	if x != nil {
		return x.Vid
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat) GetVlanId() uint32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DsName      string                                                `protobuf:"bytes,1,opt,name=dsName,proto3" json:"dsName,omitempty"`
	GroupId     uint32                                                `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	MapType     Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType     `protobuf:"varint,3,opt,name=mapType,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType" json:"mapType,omitempty"`
	OperateType Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType `protobuf:"varint,4,opt,name=operateType,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType" json:"operateType,omitempty"`
	VlanId      string                                                `protobuf:"bytes,5,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
	VlanMode    bool                                                  `protobuf:"varint,6,opt,name=vlanMode,proto3" json:"vlanMode,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[351]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[351]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 12, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb) GetDsName() string {
	if x != nil {
		return x.DsName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb) GetMapType() Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType {
	if x != nil {
		return x.MapType
	}
	return Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType_DSCP
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb) GetOperateType() Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType {
	if x != nil {
		return x.OperateType
	}
	return Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType_DISABLE
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb) GetVlanId() string {
	if x != nil {
		return x.VlanId
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb) GetVlanMode() bool {
	if x != nil {
		return x.VlanMode
	}
	return false
}

type Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalID        Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID         `protobuf:"varint,1,opt,name=localID,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID" json:"localID,omitempty"`
	Mode           Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode            `protobuf:"varint,2,opt,name=mode,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode" json:"mode,omitempty"`
	PolicyName     string                                                      `protobuf:"bytes,3,opt,name=policyName,proto3" json:"policyName,omitempty"`
	QosIfQppbStats *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats `protobuf:"bytes,4,opt,name=qosIfQppbStats,proto3" json:"qosIfQppbStats,omitempty"`
	ShareMode      bool                                                        `protobuf:"varint,5,opt,name=shareMode,proto3" json:"shareMode,omitempty"`
	Value          Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value           `protobuf:"varint,6,opt,name=value,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value" json:"value,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[352]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[352]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 13, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb) GetLocalID() Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID {
	if x != nil {
		return x.LocalID
	}
	return Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID_DISABLE
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb) GetMode() Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode {
	if x != nil {
		return x.Mode
	}
	return Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode_INBOUND
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb) GetQosIfQppbStats() *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats {
	if x != nil {
		return x.QosIfQppbStats
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb) GetShareMode() bool {
	if x != nil {
		return x.ShareMode
	}
	return false
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb) GetValue() Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value {
	if x != nil {
		return x.Value
	}
	return Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value_DESTINATION
}

type Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosIfQppbStat []*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat `protobuf:"bytes,1,rep,name=qosIfQppbStat,proto3" json:"qosIfQppbStat,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[353]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[353]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 13, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats) GetQosIfQppbStat() []*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat {
	if x != nil {
		return x.QosIfQppbStat
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarDropByteRate uint64 `protobuf:"varint,1,opt,name=carDropByteRate,proto3" json:"carDropByteRate,omitempty"`
	CarDropBytes    uint64 `protobuf:"varint,2,opt,name=carDropBytes,proto3" json:"carDropBytes,omitempty"`
	CarDropPktRate  uint64 `protobuf:"varint,3,opt,name=carDropPktRate,proto3" json:"carDropPktRate,omitempty"`
	CarDropPkts     uint64 `protobuf:"varint,4,opt,name=carDropPkts,proto3" json:"carDropPkts,omitempty"`
	CarGBytes       uint64 `protobuf:"varint,5,opt,name=carGBytes,proto3" json:"carGBytes,omitempty"`
	CarGBytesRate   uint64 `protobuf:"varint,6,opt,name=carGBytesRate,proto3" json:"carGBytesRate,omitempty"`
	CarGPkts        uint64 `protobuf:"varint,7,opt,name=carGPkts,proto3" json:"carGPkts,omitempty"`
	CarGPktsRate    uint64 `protobuf:"varint,8,opt,name=carGPktsRate,proto3" json:"carGPktsRate,omitempty"`
	CarPassByteRate uint64 `protobuf:"varint,9,opt,name=carPassByteRate,proto3" json:"carPassByteRate,omitempty"`
	CarPassBytes    uint64 `protobuf:"varint,10,opt,name=carPassBytes,proto3" json:"carPassBytes,omitempty"`
	CarPassPktRate  uint64 `protobuf:"varint,11,opt,name=carPassPktRate,proto3" json:"carPassPktRate,omitempty"`
	CarPassPkts     uint64 `protobuf:"varint,12,opt,name=carPassPkts,proto3" json:"carPassPkts,omitempty"`
	CarRBytes       uint64 `protobuf:"varint,13,opt,name=carRBytes,proto3" json:"carRBytes,omitempty"`
	CarRBytesRate   uint64 `protobuf:"varint,14,opt,name=carRBytesRate,proto3" json:"carRBytesRate,omitempty"`
	CarRPkts        uint64 `protobuf:"varint,15,opt,name=carRPkts,proto3" json:"carRPkts,omitempty"`
	CarRPktsRate    uint64 `protobuf:"varint,16,opt,name=carRPktsRate,proto3" json:"carRPktsRate,omitempty"`
	CarYBytes       uint64 `protobuf:"varint,17,opt,name=carYBytes,proto3" json:"carYBytes,omitempty"`
	CarYBytesRate   uint64 `protobuf:"varint,18,opt,name=carYBytesRate,proto3" json:"carYBytesRate,omitempty"`
	CarYPkts        uint64 `protobuf:"varint,19,opt,name=carYPkts,proto3" json:"carYPkts,omitempty"`
	CarYPktsRate    uint64 `protobuf:"varint,20,opt,name=carYPktsRate,proto3" json:"carYPktsRate,omitempty"`
	LocalID         uint32 `protobuf:"varint,21,opt,name=localID,proto3" json:"localID,omitempty"`
	MatchBytes      uint64 `protobuf:"varint,22,opt,name=matchBytes,proto3" json:"matchBytes,omitempty"`
	MatchBytesRate  uint64 `protobuf:"varint,23,opt,name=matchBytesRate,proto3" json:"matchBytesRate,omitempty"`
	MatchPackets    uint64 `protobuf:"varint,24,opt,name=matchPackets,proto3" json:"matchPackets,omitempty"`
	MatchPktsRate   uint64 `protobuf:"varint,25,opt,name=matchPktsRate,proto3" json:"matchPktsRate,omitempty"`
	SlotIdPath      string `protobuf:"bytes,26,opt,name=slotIdPath,proto3" json:"slotIdPath,omitempty"`
	SqAF1DropBRates uint64 `protobuf:"varint,27,opt,name=sqAF1DropBRates,proto3" json:"sqAF1DropBRates,omitempty"`
	SqAF1DropBytes  uint64 `protobuf:"varint,28,opt,name=sqAF1DropBytes,proto3" json:"sqAF1DropBytes,omitempty"`
	SqAF1DropPRates uint64 `protobuf:"varint,29,opt,name=sqAF1DropPRates,proto3" json:"sqAF1DropPRates,omitempty"`
	SqAF1DropPkts   uint64 `protobuf:"varint,30,opt,name=sqAF1DropPkts,proto3" json:"sqAF1DropPkts,omitempty"`
	SqAF1PassBRates uint64 `protobuf:"varint,31,opt,name=sqAF1PassBRates,proto3" json:"sqAF1PassBRates,omitempty"`
	SqAF1PassBytes  uint64 `protobuf:"varint,32,opt,name=sqAF1PassBytes,proto3" json:"sqAF1PassBytes,omitempty"`
	SqAF1PassPRates uint64 `protobuf:"varint,33,opt,name=sqAF1PassPRates,proto3" json:"sqAF1PassPRates,omitempty"`
	SqAF1PassPkts   uint64 `protobuf:"varint,34,opt,name=sqAF1PassPkts,proto3" json:"sqAF1PassPkts,omitempty"`
	SqAF2DropBRates uint64 `protobuf:"varint,35,opt,name=sqAF2DropBRates,proto3" json:"sqAF2DropBRates,omitempty"`
	SqAF2DropBytes  uint64 `protobuf:"varint,36,opt,name=sqAF2DropBytes,proto3" json:"sqAF2DropBytes,omitempty"`
	SqAF2DropPRates uint64 `protobuf:"varint,37,opt,name=sqAF2DropPRates,proto3" json:"sqAF2DropPRates,omitempty"`
	SqAF2DropPkts   uint64 `protobuf:"varint,38,opt,name=sqAF2DropPkts,proto3" json:"sqAF2DropPkts,omitempty"`
	SqAF2PassBRates uint64 `protobuf:"varint,39,opt,name=sqAF2PassBRates,proto3" json:"sqAF2PassBRates,omitempty"`
	SqAF2PassBytes  uint64 `protobuf:"varint,40,opt,name=sqAF2PassBytes,proto3" json:"sqAF2PassBytes,omitempty"`
	SqAF2PassPRates uint64 `protobuf:"varint,41,opt,name=sqAF2PassPRates,proto3" json:"sqAF2PassPRates,omitempty"`
	SqAF2PassPkts   uint64 `protobuf:"varint,42,opt,name=sqAF2PassPkts,proto3" json:"sqAF2PassPkts,omitempty"`
	SqAF3DropBRates uint64 `protobuf:"varint,43,opt,name=sqAF3DropBRates,proto3" json:"sqAF3DropBRates,omitempty"`
	SqAF3DropBytes  uint64 `protobuf:"varint,44,opt,name=sqAF3DropBytes,proto3" json:"sqAF3DropBytes,omitempty"`
	SqAF3DropPRates uint64 `protobuf:"varint,45,opt,name=sqAF3DropPRates,proto3" json:"sqAF3DropPRates,omitempty"`
	SqAF3DropPkts   uint64 `protobuf:"varint,46,opt,name=sqAF3DropPkts,proto3" json:"sqAF3DropPkts,omitempty"`
	SqAF3PassBRates uint64 `protobuf:"varint,47,opt,name=sqAF3PassBRates,proto3" json:"sqAF3PassBRates,omitempty"`
	SqAF3PassBytes  uint64 `protobuf:"varint,48,opt,name=sqAF3PassBytes,proto3" json:"sqAF3PassBytes,omitempty"`
	SqAF3PassPRates uint64 `protobuf:"varint,49,opt,name=sqAF3PassPRates,proto3" json:"sqAF3PassPRates,omitempty"`
	SqAF3PassPkts   uint64 `protobuf:"varint,50,opt,name=sqAF3PassPkts,proto3" json:"sqAF3PassPkts,omitempty"`
	SqAF4DropBRates uint64 `protobuf:"varint,51,opt,name=sqAF4DropBRates,proto3" json:"sqAF4DropBRates,omitempty"`
	SqAF4DropBytes  uint64 `protobuf:"varint,52,opt,name=sqAF4DropBytes,proto3" json:"sqAF4DropBytes,omitempty"`
	SqAF4DropPRates uint64 `protobuf:"varint,53,opt,name=sqAF4DropPRates,proto3" json:"sqAF4DropPRates,omitempty"`
	SqAF4DropPkts   uint64 `protobuf:"varint,54,opt,name=sqAF4DropPkts,proto3" json:"sqAF4DropPkts,omitempty"`
	SqAF4PassBRates uint64 `protobuf:"varint,55,opt,name=sqAF4PassBRates,proto3" json:"sqAF4PassBRates,omitempty"`
	SqAF4PassBytes  uint64 `protobuf:"varint,56,opt,name=sqAF4PassBytes,proto3" json:"sqAF4PassBytes,omitempty"`
	SqAF4PassPRates uint64 `protobuf:"varint,57,opt,name=sqAF4PassPRates,proto3" json:"sqAF4PassPRates,omitempty"`
	SqAF4PassPkts   uint64 `protobuf:"varint,58,opt,name=sqAF4PassPkts,proto3" json:"sqAF4PassPkts,omitempty"`
	SqBEDropBRates  uint64 `protobuf:"varint,59,opt,name=sqBEDropBRates,proto3" json:"sqBEDropBRates,omitempty"`
	SqBEDropBytes   uint64 `protobuf:"varint,60,opt,name=sqBEDropBytes,proto3" json:"sqBEDropBytes,omitempty"`
	SqBEDropPRates  uint64 `protobuf:"varint,61,opt,name=sqBEDropPRates,proto3" json:"sqBEDropPRates,omitempty"`
	SqBEDropPkts    uint64 `protobuf:"varint,62,opt,name=sqBEDropPkts,proto3" json:"sqBEDropPkts,omitempty"`
	SqBEPassBRates  uint64 `protobuf:"varint,63,opt,name=sqBEPassBRates,proto3" json:"sqBEPassBRates,omitempty"`
	SqBEPassBytes   uint64 `protobuf:"varint,64,opt,name=sqBEPassBytes,proto3" json:"sqBEPassBytes,omitempty"`
	SqBEPassPRates  uint64 `protobuf:"varint,65,opt,name=sqBEPassPRates,proto3" json:"sqBEPassPRates,omitempty"`
	SqBEPassPkts    uint64 `protobuf:"varint,66,opt,name=sqBEPassPkts,proto3" json:"sqBEPassPkts,omitempty"`
	SqCS6DropBRates uint64 `protobuf:"varint,67,opt,name=sqCS6DropBRates,proto3" json:"sqCS6DropBRates,omitempty"`
	SqCS6DropBytes  uint64 `protobuf:"varint,68,opt,name=sqCS6DropBytes,proto3" json:"sqCS6DropBytes,omitempty"`
	SqCS6DropPRates uint64 `protobuf:"varint,69,opt,name=sqCS6DropPRates,proto3" json:"sqCS6DropPRates,omitempty"`
	SqCS6DropPkts   uint64 `protobuf:"varint,70,opt,name=sqCS6DropPkts,proto3" json:"sqCS6DropPkts,omitempty"`
	SqCS6PassBRates uint64 `protobuf:"varint,71,opt,name=sqCS6PassBRates,proto3" json:"sqCS6PassBRates,omitempty"`
	SqCS6PassBytes  uint64 `protobuf:"varint,72,opt,name=sqCS6PassBytes,proto3" json:"sqCS6PassBytes,omitempty"`
	SqCS6PassPRates uint64 `protobuf:"varint,73,opt,name=sqCS6PassPRates,proto3" json:"sqCS6PassPRates,omitempty"`
	SqCS6PassPkts   uint64 `protobuf:"varint,74,opt,name=sqCS6PassPkts,proto3" json:"sqCS6PassPkts,omitempty"`
	SqCS7DropBRates uint64 `protobuf:"varint,75,opt,name=sqCS7DropBRates,proto3" json:"sqCS7DropBRates,omitempty"`
	SqCS7DropBytes  uint64 `protobuf:"varint,76,opt,name=sqCS7DropBytes,proto3" json:"sqCS7DropBytes,omitempty"`
	SqCS7DropPRates uint64 `protobuf:"varint,77,opt,name=sqCS7DropPRates,proto3" json:"sqCS7DropPRates,omitempty"`
	SqCS7DropPkts   uint64 `protobuf:"varint,78,opt,name=sqCS7DropPkts,proto3" json:"sqCS7DropPkts,omitempty"`
	SqCS7PassBRates uint64 `protobuf:"varint,79,opt,name=sqCS7PassBRates,proto3" json:"sqCS7PassBRates,omitempty"`
	SqCS7PassBytes  uint64 `protobuf:"varint,80,opt,name=sqCS7PassBytes,proto3" json:"sqCS7PassBytes,omitempty"`
	SqCS7PassPRates uint64 `protobuf:"varint,81,opt,name=sqCS7PassPRates,proto3" json:"sqCS7PassPRates,omitempty"`
	SqCS7PassPkts   uint64 `protobuf:"varint,82,opt,name=sqCS7PassPkts,proto3" json:"sqCS7PassPkts,omitempty"`
	SqEFDropBRates  uint64 `protobuf:"varint,83,opt,name=sqEFDropBRates,proto3" json:"sqEFDropBRates,omitempty"`
	SqEFDropBytes   uint64 `protobuf:"varint,84,opt,name=sqEFDropBytes,proto3" json:"sqEFDropBytes,omitempty"`
	SqEFDropPRates  uint64 `protobuf:"varint,85,opt,name=sqEFDropPRates,proto3" json:"sqEFDropPRates,omitempty"`
	SqEFDropPkts    uint64 `protobuf:"varint,86,opt,name=sqEFDropPkts,proto3" json:"sqEFDropPkts,omitempty"`
	SqEFPassBRates  uint64 `protobuf:"varint,87,opt,name=sqEFPassBRates,proto3" json:"sqEFPassBRates,omitempty"`
	SqEFPassBytes   uint64 `protobuf:"varint,88,opt,name=sqEFPassBytes,proto3" json:"sqEFPassBytes,omitempty"`
	SqEFPassPRates  uint64 `protobuf:"varint,89,opt,name=sqEFPassPRates,proto3" json:"sqEFPassPRates,omitempty"`
	SqEFPassPkts    uint64 `protobuf:"varint,90,opt,name=sqEFPassPkts,proto3" json:"sqEFPassPkts,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[354]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[354]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 13, 0, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarDropByteRate() uint64 {
	if x != nil {
		return x.CarDropByteRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarDropBytes() uint64 {
	if x != nil {
		return x.CarDropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarDropPktRate() uint64 {
	if x != nil {
		return x.CarDropPktRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarDropPkts() uint64 {
	if x != nil {
		return x.CarDropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarGBytes() uint64 {
	if x != nil {
		return x.CarGBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarGBytesRate() uint64 {
	if x != nil {
		return x.CarGBytesRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarGPkts() uint64 {
	if x != nil {
		return x.CarGPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarGPktsRate() uint64 {
	if x != nil {
		return x.CarGPktsRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarPassByteRate() uint64 {
	if x != nil {
		return x.CarPassByteRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarPassBytes() uint64 {
	if x != nil {
		return x.CarPassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarPassPktRate() uint64 {
	if x != nil {
		return x.CarPassPktRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarPassPkts() uint64 {
	if x != nil {
		return x.CarPassPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarRBytes() uint64 {
	if x != nil {
		return x.CarRBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarRBytesRate() uint64 {
	if x != nil {
		return x.CarRBytesRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarRPkts() uint64 {
	if x != nil {
		return x.CarRPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarRPktsRate() uint64 {
	if x != nil {
		return x.CarRPktsRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarYBytes() uint64 {
	if x != nil {
		return x.CarYBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarYBytesRate() uint64 {
	if x != nil {
		return x.CarYBytesRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarYPkts() uint64 {
	if x != nil {
		return x.CarYPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetCarYPktsRate() uint64 {
	if x != nil {
		return x.CarYPktsRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetLocalID() uint32 {
	if x != nil {
		return x.LocalID
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetMatchBytes() uint64 {
	if x != nil {
		return x.MatchBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetMatchBytesRate() uint64 {
	if x != nil {
		return x.MatchBytesRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetMatchPackets() uint64 {
	if x != nil {
		return x.MatchPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetMatchPktsRate() uint64 {
	if x != nil {
		return x.MatchPktsRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSlotIdPath() string {
	if x != nil {
		return x.SlotIdPath
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF1DropBRates() uint64 {
	if x != nil {
		return x.SqAF1DropBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF1DropBytes() uint64 {
	if x != nil {
		return x.SqAF1DropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF1DropPRates() uint64 {
	if x != nil {
		return x.SqAF1DropPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF1DropPkts() uint64 {
	if x != nil {
		return x.SqAF1DropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF1PassBRates() uint64 {
	if x != nil {
		return x.SqAF1PassBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF1PassBytes() uint64 {
	if x != nil {
		return x.SqAF1PassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF1PassPRates() uint64 {
	if x != nil {
		return x.SqAF1PassPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF1PassPkts() uint64 {
	if x != nil {
		return x.SqAF1PassPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF2DropBRates() uint64 {
	if x != nil {
		return x.SqAF2DropBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF2DropBytes() uint64 {
	if x != nil {
		return x.SqAF2DropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF2DropPRates() uint64 {
	if x != nil {
		return x.SqAF2DropPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF2DropPkts() uint64 {
	if x != nil {
		return x.SqAF2DropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF2PassBRates() uint64 {
	if x != nil {
		return x.SqAF2PassBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF2PassBytes() uint64 {
	if x != nil {
		return x.SqAF2PassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF2PassPRates() uint64 {
	if x != nil {
		return x.SqAF2PassPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF2PassPkts() uint64 {
	if x != nil {
		return x.SqAF2PassPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF3DropBRates() uint64 {
	if x != nil {
		return x.SqAF3DropBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF3DropBytes() uint64 {
	if x != nil {
		return x.SqAF3DropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF3DropPRates() uint64 {
	if x != nil {
		return x.SqAF3DropPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF3DropPkts() uint64 {
	if x != nil {
		return x.SqAF3DropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF3PassBRates() uint64 {
	if x != nil {
		return x.SqAF3PassBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF3PassBytes() uint64 {
	if x != nil {
		return x.SqAF3PassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF3PassPRates() uint64 {
	if x != nil {
		return x.SqAF3PassPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF3PassPkts() uint64 {
	if x != nil {
		return x.SqAF3PassPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF4DropBRates() uint64 {
	if x != nil {
		return x.SqAF4DropBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF4DropBytes() uint64 {
	if x != nil {
		return x.SqAF4DropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF4DropPRates() uint64 {
	if x != nil {
		return x.SqAF4DropPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF4DropPkts() uint64 {
	if x != nil {
		return x.SqAF4DropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF4PassBRates() uint64 {
	if x != nil {
		return x.SqAF4PassBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF4PassBytes() uint64 {
	if x != nil {
		return x.SqAF4PassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF4PassPRates() uint64 {
	if x != nil {
		return x.SqAF4PassPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqAF4PassPkts() uint64 {
	if x != nil {
		return x.SqAF4PassPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqBEDropBRates() uint64 {
	if x != nil {
		return x.SqBEDropBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqBEDropBytes() uint64 {
	if x != nil {
		return x.SqBEDropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqBEDropPRates() uint64 {
	if x != nil {
		return x.SqBEDropPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqBEDropPkts() uint64 {
	if x != nil {
		return x.SqBEDropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqBEPassBRates() uint64 {
	if x != nil {
		return x.SqBEPassBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqBEPassBytes() uint64 {
	if x != nil {
		return x.SqBEPassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqBEPassPRates() uint64 {
	if x != nil {
		return x.SqBEPassPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqBEPassPkts() uint64 {
	if x != nil {
		return x.SqBEPassPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS6DropBRates() uint64 {
	if x != nil {
		return x.SqCS6DropBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS6DropBytes() uint64 {
	if x != nil {
		return x.SqCS6DropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS6DropPRates() uint64 {
	if x != nil {
		return x.SqCS6DropPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS6DropPkts() uint64 {
	if x != nil {
		return x.SqCS6DropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS6PassBRates() uint64 {
	if x != nil {
		return x.SqCS6PassBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS6PassBytes() uint64 {
	if x != nil {
		return x.SqCS6PassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS6PassPRates() uint64 {
	if x != nil {
		return x.SqCS6PassPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS6PassPkts() uint64 {
	if x != nil {
		return x.SqCS6PassPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS7DropBRates() uint64 {
	if x != nil {
		return x.SqCS7DropBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS7DropBytes() uint64 {
	if x != nil {
		return x.SqCS7DropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS7DropPRates() uint64 {
	if x != nil {
		return x.SqCS7DropPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS7DropPkts() uint64 {
	if x != nil {
		return x.SqCS7DropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS7PassBRates() uint64 {
	if x != nil {
		return x.SqCS7PassBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS7PassBytes() uint64 {
	if x != nil {
		return x.SqCS7PassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS7PassPRates() uint64 {
	if x != nil {
		return x.SqCS7PassPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqCS7PassPkts() uint64 {
	if x != nil {
		return x.SqCS7PassPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqEFDropBRates() uint64 {
	if x != nil {
		return x.SqEFDropBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqEFDropBytes() uint64 {
	if x != nil {
		return x.SqEFDropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqEFDropPRates() uint64 {
	if x != nil {
		return x.SqEFDropPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqEFDropPkts() uint64 {
	if x != nil {
		return x.SqEFDropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqEFPassBRates() uint64 {
	if x != nil {
		return x.SqEFPassBRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqEFPassBytes() uint64 {
	if x != nil {
		return x.SqEFPassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqEFPassPRates() uint64 {
	if x != nil {
		return x.SqEFPassPRates
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat) GetSqEFPassPkts() uint64 {
	if x != nil {
		return x.SqEFPassPkts
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectType Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType `protobuf:"varint,1,opt,name=directType,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType" json:"directType,omitempty"`
	DsName     string                                                   `protobuf:"bytes,2,opt,name=dsName,proto3" json:"dsName,omitempty"`
	GroupId    uint32                                                   `protobuf:"varint,3,opt,name=groupId,proto3" json:"groupId,omitempty"`
	TrustType  Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType  `protobuf:"varint,4,opt,name=trustType,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType" json:"trustType,omitempty"`
	VlanId     string                                                   `protobuf:"bytes,5,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
	VlanMode   bool                                                     `protobuf:"varint,6,opt,name=vlanMode,proto3" json:"vlanMode,omitempty"`
	VpnMode    bool                                                     `protobuf:"varint,7,opt,name=vpnMode,proto3" json:"vpnMode,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[355]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[355]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 14, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust) GetDirectType() Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType {
	if x != nil {
		return x.DirectType
	}
	return Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType_IN_OUTBOUND
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust) GetDsName() string {
	if x != nil {
		return x.DsName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust) GetTrustType() Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType {
	if x != nil {
		return x.TrustType
	}
	return Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType_X_8021P
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust) GetVlanId() string {
	if x != nil {
		return x.VlanId
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust) GetVlanMode() bool {
	if x != nil {
		return x.VlanMode
	}
	return false
}

func (x *Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust) GetVpnMode() bool {
	if x != nil {
		return x.VpnMode
	}
	return false
}

type Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Traffictype Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype `protobuf:"varint,1,opt,name=traffictype,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype" json:"traffictype,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[356]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[356]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 15, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic) GetTraffictype() Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype {
	if x != nil {
		return x.Traffictype
	}
	return Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype_LDP_TRAFFIC
}

type Qos_QosIfQoss_QosIfQos_QosLrs_QosLr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cir uint32 `protobuf:"varint,1,opt,name=cir,proto3" json:"cir,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosLrs_QosLr) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosLrs_QosLr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[357]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosLrs_QosLr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosLrs_QosLr) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosLrs_QosLr) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[357]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosLrs_QosLr.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosLrs_QosLr) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 16, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosLrs_QosLr) GetCir() uint32 {
	if x != nil {
		return x.Cir
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction    Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction" json:"direction,omitempty"`
	DropByteRate uint64                                                          `protobuf:"varint,2,opt,name=dropByteRate,proto3" json:"dropByteRate,omitempty"`
	DropBytes    uint64                                                          `protobuf:"varint,3,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropPackets  uint64                                                          `protobuf:"varint,4,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktRate  uint64                                                          `protobuf:"varint,5,opt,name=dropPktRate,proto3" json:"dropPktRate,omitempty"`
	PassByteRate uint64                                                          `protobuf:"varint,6,opt,name=passByteRate,proto3" json:"passByteRate,omitempty"`
	PassBytes    uint64                                                          `protobuf:"varint,7,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets  uint64                                                          `protobuf:"varint,8,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktRate  uint64                                                          `protobuf:"varint,9,opt,name=passPktRate,proto3" json:"passPktRate,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[358]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[358]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 17, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw) GetDirection() Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction_INBOUND
}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw) GetDropByteRate() uint64 {
	if x != nil {
		return x.DropByteRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw) GetDropPktRate() uint64 {
	if x != nil {
		return x.DropPktRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw) GetPassByteRate() uint64 {
	if x != nil {
		return x.PassByteRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw) GetPassPktRate() uint64 {
	if x != nil {
		return x.PassPktRate
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode    Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode    `protobuf:"varint,1,opt,name=mode,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode" json:"mode,omitempty"`
	QosType Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType `protobuf:"varint,2,opt,name=qosType,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType" json:"qosType,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[359]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[359]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 18, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch) GetMode() Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode {
	if x != nil {
		return x.Mode
	}
	return Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode_DISTRIBUTE
}

func (x *Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch) GetQosType() Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType {
	if x != nil {
		return x.QosType
	}
	return Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType_PORTQUEUE
}

type Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs_QosMplsL2Vc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DsName string `protobuf:"bytes,1,opt,name=dsName,proto3" json:"dsName,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs_QosMplsL2Vc) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs_QosMplsL2Vc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[360]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs_QosMplsL2Vc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs_QosMplsL2Vc) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs_QosMplsL2Vc) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[360]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs_QosMplsL2Vc.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs_QosMplsL2Vc) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 19, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs_QosMplsL2Vc) GetDsName() string {
	if x != nil {
		return x.DsName
	}
	return ""
}

type Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscardNum               uint32                                                                   `protobuf:"varint,1,opt,name=discardNum,proto3" json:"discardNum,omitempty"`
	DiscardPacketCoefficient uint32                                                                   `protobuf:"varint,2,opt,name=discardPacketCoefficient,proto3" json:"discardPacketCoefficient,omitempty"`
	DiscardPacketExponent    uint32                                                                   `protobuf:"varint,3,opt,name=discardPacketExponent,proto3" json:"discardPacketExponent,omitempty"`
	DiscardType              Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType  `protobuf:"varint,4,opt,name=discardType,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType" json:"discardType,omitempty"`
	IntervalTime             uint32                                                                   `protobuf:"varint,5,opt,name=intervalTime,proto3" json:"intervalTime,omitempty"`
	ServiceClass             Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass `protobuf:"varint,6,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[361]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[361]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 20, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm) GetDiscardNum() uint32 {
	if x != nil {
		return x.DiscardNum
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm) GetDiscardPacketCoefficient() uint32 {
	if x != nil {
		return x.DiscardPacketCoefficient
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm) GetDiscardPacketExponent() uint32 {
	if x != nil {
		return x.DiscardPacketExponent
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm) GetDiscardType() Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType {
	if x != nil {
		return x.DiscardType
	}
	return Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType_DROPBYTES
}

func (x *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm) GetIntervalTime() uint32 {
	if x != nil {
		return x.IntervalTime
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm) GetServiceClass() Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass_AF1
}

type Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction      Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction       `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction" json:"direction,omitempty"`
	GroupId        uint32                                                                `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Identifier     Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier      `protobuf:"varint,3,opt,name=identifier,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier" json:"identifier,omitempty"`
	Layer          Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer           `protobuf:"varint,4,opt,name=layer,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer" json:"layer,omitempty"`
	PeVlanId       uint32                                                                `protobuf:"varint,5,opt,name=peVlanId,proto3" json:"peVlanId,omitempty"`
	PolicyName     string                                                                `protobuf:"bytes,6,opt,name=policyName,proto3" json:"policyName,omitempty"`
	QosActSQStats  *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats  `protobuf:"bytes,7,opt,name=qosActSQStats,proto3" json:"qosActSQStats,omitempty"`
	QosPolicyStats *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats `protobuf:"bytes,8,opt,name=qosPolicyStats,proto3" json:"qosPolicyStats,omitempty"`
	VlanId         string                                                                `protobuf:"bytes,9,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
	VlanMode       bool                                                                  `protobuf:"varint,10,opt,name=vlanMode,proto3" json:"vlanMode,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[362]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[362]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 21, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) GetDirection() Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction_INBOUND
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) GetIdentifier() Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier {
	if x != nil {
		return x.Identifier
	}
	return Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier_CE_VID
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) GetLayer() Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer {
	if x != nil {
		return x.Layer
	}
	return Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer_ALL
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) GetPeVlanId() uint32 {
	if x != nil {
		return x.PeVlanId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) GetQosActSQStats() *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats {
	if x != nil {
		return x.QosActSQStats
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) GetQosPolicyStats() *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats {
	if x != nil {
		return x.QosPolicyStats
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) GetVlanId() string {
	if x != nil {
		return x.VlanId
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply) GetVlanMode() bool {
	if x != nil {
		return x.VlanMode
	}
	return false
}

type Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosActSQStat []*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat `protobuf:"bytes,1,rep,name=qosActSQStat,proto3" json:"qosActSQStat,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[363]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[363]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 21, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats) GetQosActSQStat() []*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat {
	if x != nil {
		return x.QosActSQStat
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPolicyStat []*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat `protobuf:"bytes,1,rep,name=qosPolicyStat,proto3" json:"qosPolicyStat,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[364]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[364]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 21, 0, 1}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats) GetQosPolicyStat() []*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat {
	if x != nil {
		return x.QosPolicyStat
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufTotal       uint32                                                                                        `protobuf:"varint,1,opt,name=bufTotal,proto3" json:"bufTotal,omitempty"`
	BufUsed        uint32                                                                                        `protobuf:"varint,2,opt,name=bufUsed,proto3" json:"bufUsed,omitempty"`
	ClassifierName string                                                                                        `protobuf:"bytes,3,opt,name=classifierName,proto3" json:"classifierName,omitempty"`
	DropByteRate   uint64                                                                                        `protobuf:"varint,4,opt,name=dropByteRate,proto3" json:"dropByteRate,omitempty"`
	DropBytes      uint64                                                                                        `protobuf:"varint,5,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropPackets    uint64                                                                                        `protobuf:"varint,6,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktRate    uint64                                                                                        `protobuf:"varint,7,opt,name=dropPktRate,proto3" json:"dropPktRate,omitempty"`
	PassByteRate   uint64                                                                                        `protobuf:"varint,8,opt,name=passByteRate,proto3" json:"passByteRate,omitempty"`
	PassBytes      uint64                                                                                        `protobuf:"varint,9,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets    uint64                                                                                        `protobuf:"varint,10,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktRate    uint64                                                                                        `protobuf:"varint,11,opt,name=passPktRate,proto3" json:"passPktRate,omitempty"`
	ServiceClass   Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass `protobuf:"varint,12,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[365]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) ProtoMessage() {
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[365]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 21, 0, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) GetBufTotal() uint32 {
	if x != nil {
		return x.BufTotal
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) GetBufUsed() uint32 {
	if x != nil {
		return x.BufUsed
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) GetClassifierName() string {
	if x != nil {
		return x.ClassifierName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) GetDropByteRate() uint64 {
	if x != nil {
		return x.DropByteRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) GetDropPktRate() uint64 {
	if x != nil {
		return x.DropPktRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) GetPassByteRate() uint64 {
	if x != nil {
		return x.PassByteRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) GetPassPktRate() uint64 {
	if x != nil {
		return x.PassPktRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat) GetServiceClass() Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass_AF1
}

type Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplyTime          string                                                                                           `protobuf:"bytes,1,opt,name=applyTime,proto3" json:"applyTime,omitempty"`
	CarBytes           uint64                                                                                           `protobuf:"varint,2,opt,name=carBytes,proto3" json:"carBytes,omitempty"`
	CarBytesRate       uint64                                                                                           `protobuf:"varint,3,opt,name=carBytesRate,proto3" json:"carBytesRate,omitempty"`
	CarPackets         uint64                                                                                           `protobuf:"varint,4,opt,name=carPackets,proto3" json:"carPackets,omitempty"`
	CarPktsRate        uint64                                                                                           `protobuf:"varint,5,opt,name=carPktsRate,proto3" json:"carPktsRate,omitempty"`
	FilterBytes        uint64                                                                                           `protobuf:"varint,6,opt,name=filterBytes,proto3" json:"filterBytes,omitempty"`
	FilterBytesRate    uint64                                                                                           `protobuf:"varint,7,opt,name=filterBytesRate,proto3" json:"filterBytesRate,omitempty"`
	FilterPackets      uint64                                                                                           `protobuf:"varint,8,opt,name=filterPackets,proto3" json:"filterPackets,omitempty"`
	FilterPktsRate     uint64                                                                                           `protobuf:"varint,9,opt,name=filterPktsRate,proto3" json:"filterPktsRate,omitempty"`
	MatchByteRate      uint64                                                                                           `protobuf:"varint,10,opt,name=matchByteRate,proto3" json:"matchByteRate,omitempty"`
	MatchBytes         uint64                                                                                           `protobuf:"varint,11,opt,name=matchBytes,proto3" json:"matchBytes,omitempty"`
	MatchDropBytes     uint64                                                                                           `protobuf:"varint,12,opt,name=matchDropBytes,proto3" json:"matchDropBytes,omitempty"`
	MatchDropBytesRate uint64                                                                                           `protobuf:"varint,13,opt,name=matchDropBytesRate,proto3" json:"matchDropBytesRate,omitempty"`
	MatchDropPkts      uint64                                                                                           `protobuf:"varint,14,opt,name=matchDropPkts,proto3" json:"matchDropPkts,omitempty"`
	MatchDropPktsRate  uint64                                                                                           `protobuf:"varint,15,opt,name=matchDropPktsRate,proto3" json:"matchDropPktsRate,omitempty"`
	MatchPackets       uint64                                                                                           `protobuf:"varint,16,opt,name=matchPackets,proto3" json:"matchPackets,omitempty"`
	MatchPassBytes     uint64                                                                                           `protobuf:"varint,17,opt,name=matchPassBytes,proto3" json:"matchPassBytes,omitempty"`
	MatchPassBytesRate uint64                                                                                           `protobuf:"varint,18,opt,name=matchPassBytesRate,proto3" json:"matchPassBytesRate,omitempty"`
	MatchPassPkts      uint64                                                                                           `protobuf:"varint,19,opt,name=matchPassPkts,proto3" json:"matchPassPkts,omitempty"`
	MatchPassPktsRate  uint64                                                                                           `protobuf:"varint,20,opt,name=matchPassPktsRate,proto3" json:"matchPassPktsRate,omitempty"`
	MatchPktRate       uint64                                                                                           `protobuf:"varint,21,opt,name=matchPktRate,proto3" json:"matchPktRate,omitempty"`
	MissBytes          uint64                                                                                           `protobuf:"varint,22,opt,name=missBytes,proto3" json:"missBytes,omitempty"`
	MissBytesRate      uint64                                                                                           `protobuf:"varint,23,opt,name=missBytesRate,proto3" json:"missBytesRate,omitempty"`
	MissPackets        uint64                                                                                           `protobuf:"varint,24,opt,name=missPackets,proto3" json:"missPackets,omitempty"`
	MissPktsRate       uint64                                                                                           `protobuf:"varint,25,opt,name=missPktsRate,proto3" json:"missPktsRate,omitempty"`
	PeVlanId           uint32                                                                                           `protobuf:"varint,26,opt,name=peVlanId,proto3" json:"peVlanId,omitempty"`
	QosRuleStats       *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats `protobuf:"bytes,27,opt,name=qosRuleStats,proto3" json:"qosRuleStats,omitempty"`
	SlotIdPath         string                                                                                           `protobuf:"bytes,28,opt,name=slotIdPath,proto3" json:"slotIdPath,omitempty"`
	StatClearFlag      bool                                                                                             `protobuf:"varint,29,opt,name=statClearFlag,proto3" json:"statClearFlag,omitempty"`
	StatClearTime      string                                                                                           `protobuf:"bytes,30,opt,name=statClearTime,proto3" json:"statClearTime,omitempty"`
	StatEnableTime     string                                                                                           `protobuf:"bytes,31,opt,name=statEnableTime,proto3" json:"statEnableTime,omitempty"`
	UrpfBytes          uint64                                                                                           `protobuf:"varint,32,opt,name=urpfBytes,proto3" json:"urpfBytes,omitempty"`
	UrpfBytesRate      uint64                                                                                           `protobuf:"varint,33,opt,name=urpfBytesRate,proto3" json:"urpfBytesRate,omitempty"`
	UrpfPackets        uint64                                                                                           `protobuf:"varint,34,opt,name=urpfPackets,proto3" json:"urpfPackets,omitempty"`
	UrpfPktsRate       uint64                                                                                           `protobuf:"varint,35,opt,name=urpfPktsRate,proto3" json:"urpfPktsRate,omitempty"`
	VlanId             uint32                                                                                           `protobuf:"varint,36,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[366]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) ProtoMessage() {
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[366]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 21, 0, 1, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetApplyTime() string {
	if x != nil {
		return x.ApplyTime
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetCarBytes() uint64 {
	if x != nil {
		return x.CarBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetCarBytesRate() uint64 {
	if x != nil {
		return x.CarBytesRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetCarPackets() uint64 {
	if x != nil {
		return x.CarPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetCarPktsRate() uint64 {
	if x != nil {
		return x.CarPktsRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetFilterBytes() uint64 {
	if x != nil {
		return x.FilterBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetFilterBytesRate() uint64 {
	if x != nil {
		return x.FilterBytesRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetFilterPackets() uint64 {
	if x != nil {
		return x.FilterPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetFilterPktsRate() uint64 {
	if x != nil {
		return x.FilterPktsRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMatchByteRate() uint64 {
	if x != nil {
		return x.MatchByteRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMatchBytes() uint64 {
	if x != nil {
		return x.MatchBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMatchDropBytes() uint64 {
	if x != nil {
		return x.MatchDropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMatchDropBytesRate() uint64 {
	if x != nil {
		return x.MatchDropBytesRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMatchDropPkts() uint64 {
	if x != nil {
		return x.MatchDropPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMatchDropPktsRate() uint64 {
	if x != nil {
		return x.MatchDropPktsRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMatchPackets() uint64 {
	if x != nil {
		return x.MatchPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMatchPassBytes() uint64 {
	if x != nil {
		return x.MatchPassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMatchPassBytesRate() uint64 {
	if x != nil {
		return x.MatchPassBytesRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMatchPassPkts() uint64 {
	if x != nil {
		return x.MatchPassPkts
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMatchPassPktsRate() uint64 {
	if x != nil {
		return x.MatchPassPktsRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMatchPktRate() uint64 {
	if x != nil {
		return x.MatchPktRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMissBytes() uint64 {
	if x != nil {
		return x.MissBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMissBytesRate() uint64 {
	if x != nil {
		return x.MissBytesRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMissPackets() uint64 {
	if x != nil {
		return x.MissPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetMissPktsRate() uint64 {
	if x != nil {
		return x.MissPktsRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetPeVlanId() uint32 {
	if x != nil {
		return x.PeVlanId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetQosRuleStats() *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats {
	if x != nil {
		return x.QosRuleStats
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetSlotIdPath() string {
	if x != nil {
		return x.SlotIdPath
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetStatClearFlag() bool {
	if x != nil {
		return x.StatClearFlag
	}
	return false
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetStatClearTime() string {
	if x != nil {
		return x.StatClearTime
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetStatEnableTime() string {
	if x != nil {
		return x.StatEnableTime
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetUrpfBytes() uint64 {
	if x != nil {
		return x.UrpfBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetUrpfBytesRate() uint64 {
	if x != nil {
		return x.UrpfBytesRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetUrpfPackets() uint64 {
	if x != nil {
		return x.UrpfPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetUrpfPktsRate() uint64 {
	if x != nil {
		return x.UrpfPktsRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat) GetVlanId() uint32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRuleStat []*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat `protobuf:"bytes,1,rep,name=qosRuleStat,proto3" json:"qosRuleStat,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[367]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats) ProtoMessage() {
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[367]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 21, 0, 1, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats) GetQosRuleStat() []*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat {
	if x != nil {
		return x.QosRuleStat
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AclName          string                                                                                                                `protobuf:"bytes,1,opt,name=aclName,proto3" json:"aclName,omitempty"`
	CeVlan           uint32                                                                                                                `protobuf:"varint,2,opt,name=ceVlan,proto3" json:"ceVlan,omitempty"`
	ClassifierName   string                                                                                                                `protobuf:"bytes,3,opt,name=classifierName,proto3" json:"classifierName,omitempty"`
	Direction        Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction `protobuf:"varint,4,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction" json:"direction,omitempty"`
	IfName           string                                                                                                                `protobuf:"bytes,5,opt,name=ifName,proto3" json:"ifName,omitempty"`
	IfmatchId        uint32                                                                                                                `protobuf:"varint,6,opt,name=ifmatchId,proto3" json:"ifmatchId,omitempty"`
	MatchDropBytes   uint64                                                                                                                `protobuf:"varint,7,opt,name=matchDropBytes,proto3" json:"matchDropBytes,omitempty"`
	MatchDropPackets uint64                                                                                                                `protobuf:"varint,8,opt,name=matchDropPackets,proto3" json:"matchDropPackets,omitempty"`
	MatchPassBytes   uint64                                                                                                                `protobuf:"varint,9,opt,name=matchPassBytes,proto3" json:"matchPassBytes,omitempty"`
	MatchPassPackets uint64                                                                                                                `protobuf:"varint,10,opt,name=matchPassPackets,proto3" json:"matchPassPackets,omitempty"`
	PeVlan           uint32                                                                                                                `protobuf:"varint,11,opt,name=peVlan,proto3" json:"peVlan,omitempty"`
	PolicyName       string                                                                                                                `protobuf:"bytes,12,opt,name=policyName,proto3" json:"policyName,omitempty"`
	ProtocolFamily   Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol  `protobuf:"varint,13,opt,name=protocolFamily,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol" json:"protocolFamily,omitempty"`
	RuleId           uint32                                                                                                                `protobuf:"varint,14,opt,name=ruleId,proto3" json:"ruleId,omitempty"`
	SlotId           string                                                                                                                `protobuf:"bytes,15,opt,name=slotId,proto3" json:"slotId,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[368]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) ProtoMessage() {
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[368]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 21, 0, 1, 0, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetAclName() string {
	if x != nil {
		return x.AclName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetCeVlan() uint32 {
	if x != nil {
		return x.CeVlan
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetClassifierName() string {
	if x != nil {
		return x.ClassifierName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetDirection() Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction_DESTINATION
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetIfmatchId() uint32 {
	if x != nil {
		return x.IfmatchId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetMatchDropBytes() uint64 {
	if x != nil {
		return x.MatchDropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetMatchDropPackets() uint64 {
	if x != nil {
		return x.MatchDropPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetMatchPassBytes() uint64 {
	if x != nil {
		return x.MatchPassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetMatchPassPackets() uint64 {
	if x != nil {
		return x.MatchPassPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetPeVlan() uint32 {
	if x != nil {
		return x.PeVlan
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetProtocolFamily() Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol {
	if x != nil {
		return x.ProtocolFamily
	}
	return Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol_IPV4
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetRuleId() uint32 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

type Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufferPercent uint32                                                                   `protobuf:"varint,1,opt,name=bufferPercent,proto3" json:"bufferPercent,omitempty"`
	ServiceClass  Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass `protobuf:"varint,2,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[369]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[369]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 22, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm) GetBufferPercent() uint32 {
	if x != nil {
		return x.BufferPercent
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm) GetServiceClass() Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass_AF1
}

type Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lowlatency        Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency         `protobuf:"varint,1,opt,name=lowlatency,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency" json:"lowlatency,omitempty"`
	Pbs               uint32                                                               `protobuf:"varint,2,opt,name=pbs,proto3" json:"pbs,omitempty"`
	PortWredName      string                                                               `protobuf:"bytes,3,opt,name=portWredName,proto3" json:"portWredName,omitempty"`
	QosPortQueueStats *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats `protobuf:"bytes,4,opt,name=qosPortQueueStats,proto3" json:"qosPortQueueStats,omitempty"`
	QueueScheduleMode Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode  `protobuf:"varint,5,opt,name=queueScheduleMode,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode" json:"queueScheduleMode,omitempty"`
	ServiceClass      Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass       `protobuf:"varint,6,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass" json:"serviceClass,omitempty"`
	Shaping           uint32                                                               `protobuf:"varint,7,opt,name=shaping,proto3" json:"shaping,omitempty"`
	ShapingPercentage uint32                                                               `protobuf:"varint,8,opt,name=shapingPercentage,proto3" json:"shapingPercentage,omitempty"`
	Weight            uint32                                                               `protobuf:"varint,9,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[370]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[370]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 23, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue) GetLowlatency() Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency {
	if x != nil {
		return x.Lowlatency
	}
	return Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency_DISABLE
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue) GetPortWredName() string {
	if x != nil {
		return x.PortWredName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue) GetQosPortQueueStats() *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats {
	if x != nil {
		return x.QosPortQueueStats
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue) GetQueueScheduleMode() Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode {
	if x != nil {
		return x.QueueScheduleMode
	}
	return Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode_LPQ
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue) GetServiceClass() Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass_AF1
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue) GetShaping() uint32 {
	if x != nil {
		return x.Shaping
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue) GetShapingPercentage() uint32 {
	if x != nil {
		return x.ShapingPercentage
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPortQueueStat []*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat `protobuf:"bytes,1,rep,name=qosPortQueueStat,proto3" json:"qosPortQueueStat,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[371]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[371]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 23, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats) GetQosPortQueueStat() []*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat {
	if x != nil {
		return x.QosPortQueueStat
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufTotal         uint32                                                                                         `protobuf:"varint,1,opt,name=bufTotal,proto3" json:"bufTotal,omitempty"`
	BufUsed          uint32                                                                                         `protobuf:"varint,2,opt,name=bufUsed,proto3" json:"bufUsed,omitempty"`
	CqUseage         uint32                                                                                         `protobuf:"varint,3,opt,name=cqUseage,proto3" json:"cqUseage,omitempty"`
	DropByteRate     uint64                                                                                         `protobuf:"varint,4,opt,name=dropByteRate,proto3" json:"dropByteRate,omitempty"`
	DropBytes        uint64                                                                                         `protobuf:"varint,5,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropPackets      uint64                                                                                         `protobuf:"varint,6,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktRate      uint64                                                                                         `protobuf:"varint,7,opt,name=dropPktRate,proto3" json:"dropPktRate,omitempty"`
	DropTailByteRate uint64                                                                                         `protobuf:"varint,8,opt,name=dropTailByteRate,proto3" json:"dropTailByteRate,omitempty"`
	DropTailBytes    uint64                                                                                         `protobuf:"varint,9,opt,name=dropTailBytes,proto3" json:"dropTailBytes,omitempty"`
	DropTailPackets  uint64                                                                                         `protobuf:"varint,10,opt,name=dropTailPackets,proto3" json:"dropTailPackets,omitempty"`
	DropTailPktRate  uint64                                                                                         `protobuf:"varint,11,opt,name=dropTailPktRate,proto3" json:"dropTailPktRate,omitempty"`
	DropWredByteRate uint64                                                                                         `protobuf:"varint,12,opt,name=dropWredByteRate,proto3" json:"dropWredByteRate,omitempty"`
	DropWredBytes    uint64                                                                                         `protobuf:"varint,13,opt,name=dropWredBytes,proto3" json:"dropWredBytes,omitempty"`
	DropWredPackets  uint64                                                                                         `protobuf:"varint,14,opt,name=dropWredPackets,proto3" json:"dropWredPackets,omitempty"`
	DropWredPktRate  uint64                                                                                         `protobuf:"varint,15,opt,name=dropWredPktRate,proto3" json:"dropWredPktRate,omitempty"`
	Isonboard        Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard `protobuf:"varint,16,opt,name=isonboard,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard" json:"isonboard,omitempty"`
	PassByteRate     uint64                                                                                         `protobuf:"varint,17,opt,name=passByteRate,proto3" json:"passByteRate,omitempty"`
	PassBytes        uint64                                                                                         `protobuf:"varint,18,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets      uint64                                                                                         `protobuf:"varint,19,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktRate      uint64                                                                                         `protobuf:"varint,20,opt,name=passPktRate,proto3" json:"passPktRate,omitempty"`
	PeakRate         uint64                                                                                         `protobuf:"varint,21,opt,name=peakRate,proto3" json:"peakRate,omitempty"`
	PeakTime         string                                                                                         `protobuf:"bytes,22,opt,name=peakTime,proto3" json:"peakTime,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[372]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) ProtoMessage() {
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[372]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 23, 0, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetBufTotal() uint32 {
	if x != nil {
		return x.BufTotal
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetBufUsed() uint32 {
	if x != nil {
		return x.BufUsed
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetCqUseage() uint32 {
	if x != nil {
		return x.CqUseage
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetDropByteRate() uint64 {
	if x != nil {
		return x.DropByteRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetDropPktRate() uint64 {
	if x != nil {
		return x.DropPktRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetDropTailByteRate() uint64 {
	if x != nil {
		return x.DropTailByteRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetDropTailBytes() uint64 {
	if x != nil {
		return x.DropTailBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetDropTailPackets() uint64 {
	if x != nil {
		return x.DropTailPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetDropTailPktRate() uint64 {
	if x != nil {
		return x.DropTailPktRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetDropWredByteRate() uint64 {
	if x != nil {
		return x.DropWredByteRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetDropWredBytes() uint64 {
	if x != nil {
		return x.DropWredBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetDropWredPackets() uint64 {
	if x != nil {
		return x.DropWredPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetDropWredPktRate() uint64 {
	if x != nil {
		return x.DropWredPktRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetIsonboard() Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard {
	if x != nil {
		return x.Isonboard
	}
	return Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard_NO
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetPassByteRate() uint64 {
	if x != nil {
		return x.PassByteRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetPassPktRate() uint64 {
	if x != nil {
		return x.PassPktRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetPeakRate() uint64 {
	if x != nil {
		return x.PeakRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat) GetPeakTime() string {
	if x != nil {
		return x.PeakTime
	}
	return ""
}

type Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networkheaderlength int32                                                             `protobuf:"varint,1,opt,name=networkheaderlength,proto3" json:"networkheaderlength,omitempty"`
	Pbs                 uint32                                                            `protobuf:"varint,2,opt,name=pbs,proto3" json:"pbs,omitempty"`
	ShapingType         Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType `protobuf:"varint,3,opt,name=shapingType,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType" json:"shapingType,omitempty"`
	ShapingValue        uint32                                                            `protobuf:"varint,4,opt,name=shapingValue,proto3" json:"shapingValue,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[373]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[373]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 24, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping) GetNetworkheaderlength() int32 {
	if x != nil {
		return x.Networkheaderlength
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping) GetPbs() uint32 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping) GetShapingType() Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType {
	if x != nil {
		return x.ShapingType
	}
	return Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType_X_256K
}

func (x *Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping) GetShapingValue() uint32 {
	if x != nil {
		return x.ShapingValue
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cir              uint32                                                            `protobuf:"varint,1,opt,name=cir,proto3" json:"cir,omitempty"`
	CirPercent       uint32                                                            `protobuf:"varint,2,opt,name=cirPercent,proto3" json:"cirPercent,omitempty"`
	Pir              uint32                                                            `protobuf:"varint,3,opt,name=pir,proto3" json:"pir,omitempty"`
	PirPercent       uint32                                                            `protobuf:"varint,4,opt,name=pirPercent,proto3" json:"pirPercent,omitempty"`
	Priority         Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority          `protobuf:"varint,5,opt,name=priority,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority" json:"priority,omitempty"`
	QosQosQueueStats *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats `protobuf:"bytes,6,opt,name=qosQosQueueStats,proto3" json:"qosQosQueueStats,omitempty"`
	ServiceClass     Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass      `protobuf:"varint,7,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[374]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[374]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 25, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue) GetCir() uint32 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue) GetCirPercent() uint32 {
	if x != nil {
		return x.CirPercent
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue) GetPir() uint32 {
	if x != nil {
		return x.Pir
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue) GetPirPercent() uint32 {
	if x != nil {
		return x.PirPercent
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue) GetPriority() Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority {
	if x != nil {
		return x.Priority
	}
	return Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority_LPQ
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue) GetQosQosQueueStats() *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats {
	if x != nil {
		return x.QosQosQueueStats
	}
	return nil
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue) GetServiceClass() Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass_AF1
}

type Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosQosQueueStat []*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat `protobuf:"bytes,1,rep,name=qosQosQueueStat,proto3" json:"qosQosQueueStat,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[375]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[375]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 25, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats) GetQosQosQueueStat() []*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat {
	if x != nil {
		return x.QosQosQueueStat
	}
	return nil
}

type Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DropByteRate uint64 `protobuf:"varint,1,opt,name=dropByteRate,proto3" json:"dropByteRate,omitempty"`
	DropBytes    uint64 `protobuf:"varint,2,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropPackets  uint64 `protobuf:"varint,3,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktRate  uint64 `protobuf:"varint,4,opt,name=dropPktRate,proto3" json:"dropPktRate,omitempty"`
	PassByteRate uint64 `protobuf:"varint,5,opt,name=passByteRate,proto3" json:"passByteRate,omitempty"`
	PassBytes    uint64 `protobuf:"varint,6,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets  uint64 `protobuf:"varint,7,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktRate  uint64 `protobuf:"varint,8,opt,name=passPktRate,proto3" json:"passPktRate,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[376]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat) ProtoMessage() {
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[376]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 25, 0, 0, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat) GetDropByteRate() uint64 {
	if x != nil {
		return x.DropByteRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat) GetDropPktRate() uint64 {
	if x != nil {
		return x.DropPktRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat) GetPassByteRate() uint64 {
	if x != nil {
		return x.PassByteRate
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat) GetPassPktRate() uint64 {
	if x != nil {
		return x.PassPktRate
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceClass Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass `protobuf:"varint,1,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass" json:"serviceClass,omitempty"`
	ServiceName  string                                                     `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[377]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[377]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 26, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping) GetServiceClass() Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass_AF1
}

func (x *Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type Qos_QosIfQoss_QosIfQos_QosSubPortQApps_QosSubPortQApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubPortQueue   string `protobuf:"bytes,1,opt,name=subPortQueue,proto3" json:"subPortQueue,omitempty"`
	UserGroupQueue string `protobuf:"bytes,2,opt,name=userGroupQueue,proto3" json:"userGroupQueue,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubPortQApps_QosSubPortQApp) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosSubPortQApps_QosSubPortQApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[378]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubPortQApps_QosSubPortQApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosSubPortQApps_QosSubPortQApp) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosSubPortQApps_QosSubPortQApp) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[378]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosSubPortQApps_QosSubPortQApp.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosSubPortQApps_QosSubPortQApp) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 27, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubPortQApps_QosSubPortQApp) GetSubPortQueue() string {
	if x != nil {
		return x.SubPortQueue
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubPortQApps_QosSubPortQApp) GetUserGroupQueue() string {
	if x != nil {
		return x.UserGroupQueue
	}
	return ""
}

type Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DropByteRatesch   uint64                                                                          `protobuf:"varint,1,opt,name=dropByteRatesch,proto3" json:"dropByteRatesch,omitempty"`
	DropBytessch      uint64                                                                          `protobuf:"varint,2,opt,name=dropBytessch,proto3" json:"dropBytessch,omitempty"`
	DropPacketssch    uint64                                                                          `protobuf:"varint,3,opt,name=dropPacketssch,proto3" json:"dropPacketssch,omitempty"`
	DropPktRatesch    uint64                                                                          `protobuf:"varint,4,opt,name=dropPktRatesch,proto3" json:"dropPktRatesch,omitempty"`
	PassByteRatesch   uint64                                                                          `protobuf:"varint,5,opt,name=passByteRatesch,proto3" json:"passByteRatesch,omitempty"`
	PassBytessch      uint64                                                                          `protobuf:"varint,6,opt,name=passBytessch,proto3" json:"passBytessch,omitempty"`
	PassPacketssch    uint64                                                                          `protobuf:"varint,7,opt,name=passPacketssch,proto3" json:"passPacketssch,omitempty"`
	PassPktRatesch    uint64                                                                          `protobuf:"varint,8,opt,name=passPktRatesch,proto3" json:"passPktRatesch,omitempty"`
	ServicebdClasssch Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch `protobuf:"varint,9,opt,name=servicebdClasssch,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch" json:"servicebdClasssch,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[379]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[379]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 28, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch) GetDropByteRatesch() uint64 {
	if x != nil {
		return x.DropByteRatesch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch) GetDropBytessch() uint64 {
	if x != nil {
		return x.DropBytessch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch) GetDropPacketssch() uint64 {
	if x != nil {
		return x.DropPacketssch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch) GetDropPktRatesch() uint64 {
	if x != nil {
		return x.DropPktRatesch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch) GetPassByteRatesch() uint64 {
	if x != nil {
		return x.PassByteRatesch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch) GetPassBytessch() uint64 {
	if x != nil {
		return x.PassBytessch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch) GetPassPacketssch() uint64 {
	if x != nil {
		return x.PassPacketssch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch) GetPassPktRatesch() uint64 {
	if x != nil {
		return x.PassPktRatesch
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch) GetServicebdClasssch() Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch {
	if x != nil {
		return x.ServicebdClasssch
	}
	return Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch_AF1
}

type Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginVlanId     uint32                                                            `protobuf:"varint,1,opt,name=beginVlanId,proto3" json:"beginVlanId,omitempty"`
	Direction       Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction" json:"direction,omitempty"`
	Eachvlan        Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan  `protobuf:"varint,3,opt,name=eachvlan,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan" json:"eachvlan,omitempty"`
	EndVlanId       uint32                                                            `protobuf:"varint,4,opt,name=endVlanId,proto3" json:"endVlanId,omitempty"`
	ProfileName     string                                                            `protobuf:"bytes,5,opt,name=profileName,proto3" json:"profileName,omitempty"`
	QinqBeginVlanId uint32                                                            `protobuf:"varint,6,opt,name=qinqBeginVlanId,proto3" json:"qinqBeginVlanId,omitempty"`
	QinqEndVlanId   uint32                                                            `protobuf:"varint,7,opt,name=qinqEndVlanId,proto3" json:"qinqEndVlanId,omitempty"`
	VlanType        Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType  `protobuf:"varint,8,opt,name=vlanType,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType" json:"vlanType,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[380]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[380]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 29, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf) GetBeginVlanId() uint32 {
	if x != nil {
		return x.BeginVlanId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf) GetDirection() Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction_INBOUND
}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf) GetEachvlan() Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan {
	if x != nil {
		return x.Eachvlan
	}
	return Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan_NO
}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf) GetEndVlanId() uint32 {
	if x != nil {
		return x.EndVlanId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf) GetQinqBeginVlanId() uint32 {
	if x != nil {
		return x.QinqBeginVlanId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf) GetQinqEndVlanId() uint32 {
	if x != nil {
		return x.QinqEndVlanId
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf) GetVlanType() Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType {
	if x != nil {
		return x.VlanType
	}
	return Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType_DOT1Q
}

type Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority       Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority `protobuf:"varint,1,opt,name=priority,proto3,enum=huaweiV8R10_qos.Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority" json:"priority,omitempty"`
	ShapingPercent uint32                                                       `protobuf:"varint,2,opt,name=shapingPercent,proto3" json:"shapingPercent,omitempty"`
	ShapingValue   uint32                                                       `protobuf:"varint,3,opt,name=shapingValue,proto3" json:"shapingValue,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[381]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[381]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 31, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping) GetPriority() Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority {
	if x != nil {
		return x.Priority
	}
	return Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority_LPQ
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping) GetShapingPercent() uint32 {
	if x != nil {
		return x.ShapingPercent
	}
	return 0
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping) GetShapingValue() uint32 {
	if x != nil {
		return x.ShapingValue
	}
	return 0
}

type Qos_QosIfQoss_QosIfQos_QosWfqWeights_QosWfqWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId    string `protobuf:"bytes,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	WeightVal uint32 `protobuf:"varint,2,opt,name=weightVal,proto3" json:"weightVal,omitempty"`
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqWeights_QosWfqWeight) Reset() {
	*x = Qos_QosIfQoss_QosIfQos_QosWfqWeights_QosWfqWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[382]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqWeights_QosWfqWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQoss_QosIfQos_QosWfqWeights_QosWfqWeight) ProtoMessage() {}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqWeights_QosWfqWeight) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[382]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQoss_QosIfQos_QosWfqWeights_QosWfqWeight.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQoss_QosIfQos_QosWfqWeights_QosWfqWeight) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 12, 0, 32, 0}
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqWeights_QosWfqWeight) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

func (x *Qos_QosIfQoss_QosIfQos_QosWfqWeights_QosWfqWeight) GetWeightVal() uint32 {
	if x != nil {
		return x.WeightVal
	}
	return 0
}

type Qos_QosIfQppbCfgs_QosIfQppbCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BehaviorName string                                   `protobuf:"bytes,1,opt,name=behaviorName,proto3" json:"behaviorName,omitempty"`
	Direction    Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction" json:"direction,omitempty"`
	IfName       string                                   `protobuf:"bytes,3,opt,name=ifName,proto3" json:"ifName,omitempty"`
	LocalID      uint32                                   `protobuf:"varint,4,opt,name=localID,proto3" json:"localID,omitempty"`
	PolicyName   string                                   `protobuf:"bytes,5,opt,name=policyName,proto3" json:"policyName,omitempty"`
	State        Qos_QosIfQppbCfgs_QosIfQppbCfg_State     `protobuf:"varint,6,opt,name=state,proto3,enum=huaweiV8R10_qos.Qos_QosIfQppbCfgs_QosIfQppbCfg_State" json:"state,omitempty"`
}

func (x *Qos_QosIfQppbCfgs_QosIfQppbCfg) Reset() {
	*x = Qos_QosIfQppbCfgs_QosIfQppbCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[383]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosIfQppbCfgs_QosIfQppbCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosIfQppbCfgs_QosIfQppbCfg) ProtoMessage() {}

func (x *Qos_QosIfQppbCfgs_QosIfQppbCfg) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[383]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosIfQppbCfgs_QosIfQppbCfg.ProtoReflect.Descriptor instead.
func (*Qos_QosIfQppbCfgs_QosIfQppbCfg) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 13, 0}
}

func (x *Qos_QosIfQppbCfgs_QosIfQppbCfg) GetBehaviorName() string {
	if x != nil {
		return x.BehaviorName
	}
	return ""
}

func (x *Qos_QosIfQppbCfgs_QosIfQppbCfg) GetDirection() Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction_INBOUND
}

func (x *Qos_QosIfQppbCfgs_QosIfQppbCfg) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_QosIfQppbCfgs_QosIfQppbCfg) GetLocalID() uint32 {
	if x != nil {
		return x.LocalID
	}
	return 0
}

func (x *Qos_QosIfQppbCfgs_QosIfQppbCfg) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Qos_QosIfQppbCfgs_QosIfQppbCfg) GetState() Qos_QosIfQppbCfgs_QosIfQppbCfg_State {
	if x != nil {
		return x.State
	}
	return Qos_QosIfQppbCfgs_QosIfQppbCfg_State_ACTIVE
}

type Qos_QosInfUsers_QosInfUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction      Qos_QosInfUsers_QosInfUser_Direction       `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosInfUsers_QosInfUser_Direction" json:"direction,omitempty"`
	QosInfUserCARs *Qos_QosInfUsers_QosInfUser_QosInfUserCARs `protobuf:"bytes,2,opt,name=qosInfUserCARs,proto3" json:"qosInfUserCARs,omitempty"`
	QosInfUserSQs  *Qos_QosInfUsers_QosInfUser_QosInfUserSQs  `protobuf:"bytes,3,opt,name=qosInfUserSQs,proto3" json:"qosInfUserSQs,omitempty"`
	UserID         uint32                                     `protobuf:"varint,4,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *Qos_QosInfUsers_QosInfUser) Reset() {
	*x = Qos_QosInfUsers_QosInfUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[384]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosInfUsers_QosInfUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosInfUsers_QosInfUser) ProtoMessage() {}

func (x *Qos_QosInfUsers_QosInfUser) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[384]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosInfUsers_QosInfUser.ProtoReflect.Descriptor instead.
func (*Qos_QosInfUsers_QosInfUser) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 14, 0}
}

func (x *Qos_QosInfUsers_QosInfUser) GetDirection() Qos_QosInfUsers_QosInfUser_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosInfUsers_QosInfUser_Direction_INBOUND
}

func (x *Qos_QosInfUsers_QosInfUser) GetQosInfUserCARs() *Qos_QosInfUsers_QosInfUser_QosInfUserCARs {
	if x != nil {
		return x.QosInfUserCARs
	}
	return nil
}

func (x *Qos_QosInfUsers_QosInfUser) GetQosInfUserSQs() *Qos_QosInfUsers_QosInfUser_QosInfUserSQs {
	if x != nil {
		return x.QosInfUserSQs
	}
	return nil
}

func (x *Qos_QosInfUsers_QosInfUser) GetUserID() uint32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type Qos_QosInfUsers_QosInfUser_QosInfUserCARs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosInfUserCAR []*Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR `protobuf:"bytes,1,rep,name=qosInfUserCAR,proto3" json:"qosInfUserCAR,omitempty"`
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs) Reset() {
	*x = Qos_QosInfUsers_QosInfUser_QosInfUserCARs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[385]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosInfUsers_QosInfUser_QosInfUserCARs) ProtoMessage() {}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[385]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosInfUsers_QosInfUser_QosInfUserCARs.ProtoReflect.Descriptor instead.
func (*Qos_QosInfUsers_QosInfUser_QosInfUserCARs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 14, 0, 0}
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs) GetQosInfUserCAR() []*Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR {
	if x != nil {
		return x.QosInfUserCAR
	}
	return nil
}

type Qos_QosInfUsers_QosInfUser_QosInfUserSQs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosInfUserSQ []*Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ `protobuf:"bytes,1,rep,name=qosInfUserSQ,proto3" json:"qosInfUserSQ,omitempty"`
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs) Reset() {
	*x = Qos_QosInfUsers_QosInfUser_QosInfUserSQs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[386]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosInfUsers_QosInfUser_QosInfUserSQs) ProtoMessage() {}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[386]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosInfUsers_QosInfUser_QosInfUserSQs.ProtoReflect.Descriptor instead.
func (*Qos_QosInfUsers_QosInfUser_QosInfUserSQs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 14, 0, 1}
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs) GetQosInfUserSQ() []*Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ {
	if x != nil {
		return x.QosInfUserSQ
	}
	return nil
}

type Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CDiscardBytRate uint64                                                          `protobuf:"varint,1,opt,name=cDiscardBytRate,proto3" json:"cDiscardBytRate,omitempty"`
	CDiscardBytes   uint64                                                          `protobuf:"varint,2,opt,name=cDiscardBytes,proto3" json:"cDiscardBytes,omitempty"`
	CDiscardPackets uint64                                                          `protobuf:"varint,3,opt,name=cDiscardPackets,proto3" json:"cDiscardPackets,omitempty"`
	CDiscardPktRate uint64                                                          `protobuf:"varint,4,opt,name=cDiscardPktRate,proto3" json:"cDiscardPktRate,omitempty"`
	CPassByteRate   uint64                                                          `protobuf:"varint,5,opt,name=cPassByteRate,proto3" json:"cPassByteRate,omitempty"`
	CPassBytes      uint64                                                          `protobuf:"varint,6,opt,name=cPassBytes,proto3" json:"cPassBytes,omitempty"`
	CPassPackets    uint64                                                          `protobuf:"varint,7,opt,name=cPassPackets,proto3" json:"cPassPackets,omitempty"`
	CPassPktRate    uint64                                                          `protobuf:"varint,8,opt,name=cPassPktRate,proto3" json:"cPassPktRate,omitempty"`
	ResType         Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType `protobuf:"varint,9,opt,name=resType,proto3,enum=huaweiV8R10_qos.Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType" json:"resType,omitempty"`
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR) Reset() {
	*x = Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[387]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR) ProtoMessage() {}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[387]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR.ProtoReflect.Descriptor instead.
func (*Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 14, 0, 0, 0}
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR) GetCDiscardBytRate() uint64 {
	if x != nil {
		return x.CDiscardBytRate
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR) GetCDiscardBytes() uint64 {
	if x != nil {
		return x.CDiscardBytes
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR) GetCDiscardPackets() uint64 {
	if x != nil {
		return x.CDiscardPackets
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR) GetCDiscardPktRate() uint64 {
	if x != nil {
		return x.CDiscardPktRate
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR) GetCPassByteRate() uint64 {
	if x != nil {
		return x.CPassByteRate
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR) GetCPassBytes() uint64 {
	if x != nil {
		return x.CPassBytes
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR) GetCPassPackets() uint64 {
	if x != nil {
		return x.CPassPackets
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR) GetCPassPktRate() uint64 {
	if x != nil {
		return x.CPassPktRate
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR) GetResType() Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType {
	if x != nil {
		return x.ResType
	}
	return Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType_CAR
}

type Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QDiscardBytRate uint64                                                             `protobuf:"varint,1,opt,name=qDiscardBytRate,proto3" json:"qDiscardBytRate,omitempty"`
	QDiscardBytes   uint64                                                             `protobuf:"varint,2,opt,name=qDiscardBytes,proto3" json:"qDiscardBytes,omitempty"`
	QDiscardPackets uint64                                                             `protobuf:"varint,3,opt,name=qDiscardPackets,proto3" json:"qDiscardPackets,omitempty"`
	QDiscardPktRate uint64                                                             `protobuf:"varint,4,opt,name=qDiscardPktRate,proto3" json:"qDiscardPktRate,omitempty"`
	QPassByteRate   uint64                                                             `protobuf:"varint,5,opt,name=qPassByteRate,proto3" json:"qPassByteRate,omitempty"`
	QPassBytes      uint64                                                             `protobuf:"varint,6,opt,name=qPassBytes,proto3" json:"qPassBytes,omitempty"`
	QPassPackets    uint64                                                             `protobuf:"varint,7,opt,name=qPassPackets,proto3" json:"qPassPackets,omitempty"`
	QPassPktRate    uint64                                                             `protobuf:"varint,8,opt,name=qPassPktRate,proto3" json:"qPassPktRate,omitempty"`
	ServiceClass    Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass `protobuf:"varint,9,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ) Reset() {
	*x = Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[388]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ) ProtoMessage() {}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[388]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ.ProtoReflect.Descriptor instead.
func (*Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 14, 0, 1, 0}
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ) GetQDiscardBytRate() uint64 {
	if x != nil {
		return x.QDiscardBytRate
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ) GetQDiscardBytes() uint64 {
	if x != nil {
		return x.QDiscardBytes
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ) GetQDiscardPackets() uint64 {
	if x != nil {
		return x.QDiscardPackets
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ) GetQDiscardPktRate() uint64 {
	if x != nil {
		return x.QDiscardPktRate
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ) GetQPassByteRate() uint64 {
	if x != nil {
		return x.QPassByteRate
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ) GetQPassBytes() uint64 {
	if x != nil {
		return x.QPassBytes
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ) GetQPassPackets() uint64 {
	if x != nil {
		return x.QPassPackets
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ) GetQPassPktRate() uint64 {
	if x != nil {
		return x.QPassPktRate
	}
	return 0
}

func (x *Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ) GetServiceClass() Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass_AF1
}

type Qos_QosLowLaEns_QosLowLaEn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableType  Qos_QosLowLaEns_QosLowLaEn_EnableType  `protobuf:"varint,1,opt,name=enableType,proto3,enum=huaweiV8R10_qos.Qos_QosLowLaEns_QosLowLaEn_EnableType" json:"enableType,omitempty"`
	EnableValue Qos_QosLowLaEns_QosLowLaEn_EnableValue `protobuf:"varint,2,opt,name=enableValue,proto3,enum=huaweiV8R10_qos.Qos_QosLowLaEns_QosLowLaEn_EnableValue" json:"enableValue,omitempty"`
}

func (x *Qos_QosLowLaEns_QosLowLaEn) Reset() {
	*x = Qos_QosLowLaEns_QosLowLaEn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[389]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLowLaEns_QosLowLaEn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLowLaEns_QosLowLaEn) ProtoMessage() {}

func (x *Qos_QosLowLaEns_QosLowLaEn) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[389]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLowLaEns_QosLowLaEn.ProtoReflect.Descriptor instead.
func (*Qos_QosLowLaEns_QosLowLaEn) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 15, 0}
}

func (x *Qos_QosLowLaEns_QosLowLaEn) GetEnableType() Qos_QosLowLaEns_QosLowLaEn_EnableType {
	if x != nil {
		return x.EnableType
	}
	return Qos_QosLowLaEns_QosLowLaEn_EnableType_FLOWQUEUE
}

func (x *Qos_QosLowLaEns_QosLowLaEn) GetEnableValue() Qos_QosLowLaEns_QosLowLaEn_EnableValue {
	if x != nil {
		return x.EnableValue
	}
	return Qos_QosLowLaEns_QosLowLaEn_EnableValue_ENABLE
}

type Qos_QosLsIfQoss_QosLsIfQos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AtmPvcs          *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs          `protobuf:"bytes,1,opt,name=atmPvcs,proto3" json:"atmPvcs,omitempty"`
	AtmPvps          *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps          `protobuf:"bytes,2,opt,name=atmPvps,proto3" json:"atmPvps,omitempty"`
	IfName           string                                       `protobuf:"bytes,3,opt,name=ifName,proto3" json:"ifName,omitempty"`
	IfPhyType        Qos_QosLsIfQoss_QosLsIfQos_IfPhyType         `protobuf:"varint,4,opt,name=ifPhyType,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_IfPhyType" json:"ifPhyType,omitempty"`
	QosLsAtmTrafficQ *Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ `protobuf:"bytes,5,opt,name=qosLsAtmTrafficQ,proto3" json:"qosLsAtmTrafficQ,omitempty"`
	QosLsPortQueues  *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues  `protobuf:"bytes,6,opt,name=qosLsPortQueues,proto3" json:"qosLsPortQueues,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[390]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[390]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos) GetAtmPvcs() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs {
	if x != nil {
		return x.AtmPvcs
	}
	return nil
}

func (x *Qos_QosLsIfQoss_QosLsIfQos) GetAtmPvps() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps {
	if x != nil {
		return x.AtmPvps
	}
	return nil
}

func (x *Qos_QosLsIfQoss_QosLsIfQos) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_QosLsIfQoss_QosLsIfQos) GetIfPhyType() Qos_QosLsIfQoss_QosLsIfQos_IfPhyType {
	if x != nil {
		return x.IfPhyType
	}
	return Qos_QosLsIfQoss_QosLsIfQos_IfPhyType_ATM
}

func (x *Qos_QosLsIfQoss_QosLsIfQos) GetQosLsAtmTrafficQ() *Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ {
	if x != nil {
		return x.QosLsAtmTrafficQ
	}
	return nil
}

func (x *Qos_QosLsIfQoss_QosLsIfQos) GetQosLsPortQueues() *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues {
	if x != nil {
		return x.QosLsPortQueues
	}
	return nil
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AtmPvc []*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc `protobuf:"bytes,1,rep,name=atmPvc,proto3" json:"atmPvc,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[391]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[391]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs) GetAtmPvc() []*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc {
	if x != nil {
		return x.AtmPvc
	}
	return nil
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AtmPvp []*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp `protobuf:"bytes,1,rep,name=atmPvp,proto3" json:"atmPvp,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_AtmPvps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[392]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[392]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvps.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 1}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps) GetAtmPvp() []*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp {
	if x != nil {
		return x.AtmPvp
	}
	return nil
}

type Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceClass  Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass  `protobuf:"varint,1,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass" json:"serviceClass,omitempty"`
	TrafficQColor Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor `protobuf:"varint,2,opt,name=trafficQColor,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor" json:"trafficQColor,omitempty"`
	TrafficQMode  Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode  `protobuf:"varint,3,opt,name=trafficQMode,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode" json:"trafficQMode,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[393]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[393]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 2}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ) GetServiceClass() Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass_AF1
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ) GetTrafficQColor() Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor {
	if x != nil {
		return x.TrafficQColor
	}
	return Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor_GREEN
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ) GetTrafficQMode() Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode {
	if x != nil {
		return x.TrafficQMode
	}
	return Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode_DISABLE
}

type Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLsPortQueue []*Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue `protobuf:"bytes,1,rep,name=qosLsPortQueue,proto3" json:"qosLsPortQueue,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[394]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[394]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 3}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues) GetQosLsPortQueue() []*Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue {
	if x != nil {
		return x.QosLsPortQueue
	}
	return nil
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLsPvcQueues   *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues   `protobuf:"bytes,1,opt,name=qosLsPvcQueues,proto3" json:"qosLsPvcQueues,omitempty"`
	QosLsPvcTrafficQ *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ `protobuf:"bytes,2,opt,name=qosLsPvcTrafficQ,proto3" json:"qosLsPvcTrafficQ,omitempty"`
	QosLsPvcTrustUps *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps `protobuf:"bytes,3,opt,name=qosLsPvcTrustUps,proto3" json:"qosLsPvcTrustUps,omitempty"`
	Vci              uint32                                                      `protobuf:"varint,4,opt,name=vci,proto3" json:"vci,omitempty"`
	Vpi              uint32                                                      `protobuf:"varint,5,opt,name=vpi,proto3" json:"vpi,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[395]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[395]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0, 0}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc) GetQosLsPvcQueues() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues {
	if x != nil {
		return x.QosLsPvcQueues
	}
	return nil
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc) GetQosLsPvcTrafficQ() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ {
	if x != nil {
		return x.QosLsPvcTrafficQ
	}
	return nil
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc) GetQosLsPvcTrustUps() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps {
	if x != nil {
		return x.QosLsPvcTrustUps
	}
	return nil
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc) GetVci() uint32 {
	if x != nil {
		return x.Vci
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc) GetVpi() uint32 {
	if x != nil {
		return x.Vpi
	}
	return 0
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLsPvcQueue []*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue `protobuf:"bytes,1,rep,name=qosLsPvcQueue,proto3" json:"qosLsPvcQueue,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[396]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[396]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0, 0, 0}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues) GetQosLsPvcQueue() []*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue {
	if x != nil {
		return x.QosLsPvcQueue
	}
	return nil
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceClass  Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass  `protobuf:"varint,1,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass" json:"serviceClass,omitempty"`
	TrafficQColor Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor `protobuf:"varint,2,opt,name=trafficQColor,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor" json:"trafficQColor,omitempty"`
	TrafficQMode  Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode  `protobuf:"varint,3,opt,name=trafficQMode,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode" json:"trafficQMode,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[397]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[397]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0, 0, 1}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ) GetServiceClass() Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass_AF1
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ) GetTrafficQColor() Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor {
	if x != nil {
		return x.TrafficQColor
	}
	return Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor_GREEN
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ) GetTrafficQMode() Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode {
	if x != nil {
		return x.TrafficQMode
	}
	return Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode_DISABLE
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLsPvcTrustUp []*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp `protobuf:"bytes,1,rep,name=qosLsPvcTrustUp,proto3" json:"qosLsPvcTrustUp,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[398]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[398]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0, 0, 2}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps) GetQosLsPvcTrustUp() []*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp {
	if x != nil {
		return x.QosLsPvcTrustUp
	}
	return nil
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PirParaPercent uint32                                                                               `protobuf:"varint,1,opt,name=pirParaPercent,proto3" json:"pirParaPercent,omitempty"`
	PirParaValue   uint32                                                                               `protobuf:"varint,2,opt,name=pirParaValue,proto3" json:"pirParaValue,omitempty"`
	PirSetMode     Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode    `protobuf:"varint,3,opt,name=pirSetMode,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode" json:"pirSetMode,omitempty"`
	PvcQueueMode   Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode  `protobuf:"varint,4,opt,name=pvcQueueMode,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode" json:"pvcQueueMode,omitempty"`
	PvcQueueStat   *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat `protobuf:"bytes,5,opt,name=pvcQueueStat,proto3" json:"pvcQueueStat,omitempty"`
	ServiceClass   Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass  `protobuf:"varint,6,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass" json:"serviceClass,omitempty"`
	WfqWeight      uint32                                                                               `protobuf:"varint,7,opt,name=wfqWeight,proto3" json:"wfqWeight,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[399]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[399]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0, 0, 0, 0}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue) GetPirParaPercent() uint32 {
	if x != nil {
		return x.PirParaPercent
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue) GetPirParaValue() uint32 {
	if x != nil {
		return x.PirParaValue
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue) GetPirSetMode() Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode {
	if x != nil {
		return x.PirSetMode
	}
	return Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode_NOT_CONFIG
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue) GetPvcQueueMode() Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode {
	if x != nil {
		return x.PvcQueueMode
	}
	return Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode_PQ
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue) GetPvcQueueStat() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat {
	if x != nil {
		return x.PvcQueueStat
	}
	return nil
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue) GetServiceClass() Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass_AF1
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue) GetWfqWeight() uint32 {
	if x != nil {
		return x.WfqWeight
	}
	return 0
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputBytes    uint64 `protobuf:"varint,1,opt,name=outputBytes,proto3" json:"outputBytes,omitempty"`
	OutputDropPkts uint64 `protobuf:"varint,2,opt,name=outputDropPkts,proto3" json:"outputDropPkts,omitempty"`
	OutputPkts     uint64 `protobuf:"varint,3,opt,name=outputPkts,proto3" json:"outputPkts,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[400]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat) ProtoMessage() {
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[400]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0, 0, 0, 0, 0}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat) GetOutputBytes() uint64 {
	if x != nil {
		return x.OutputBytes
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat) GetOutputDropPkts() uint64 {
	if x != nil {
		return x.OutputDropPkts
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat) GetOutputPkts() uint64 {
	if x != nil {
		return x.OutputPkts
	}
	return 0
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectType Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType `protobuf:"varint,1,opt,name=directType,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType" json:"directType,omitempty"`
	DsName     string                                                                                `protobuf:"bytes,2,opt,name=dsName,proto3" json:"dsName,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[401]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[401]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 0, 0, 2, 0}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp) GetDirectType() Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType {
	if x != nil {
		return x.DirectType
	}
	return Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType_IN_OUTBOUND
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp) GetDsName() string {
	if x != nil {
		return x.DsName
	}
	return ""
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLsPvpTrafficQ *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ `protobuf:"bytes,1,opt,name=qosLsPvpTrafficQ,proto3" json:"qosLsPvpTrafficQ,omitempty"`
	QosLsPvpTrustUps *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps `protobuf:"bytes,2,opt,name=qosLsPvpTrustUps,proto3" json:"qosLsPvpTrustUps,omitempty"`
	Vpi              uint32                                                      `protobuf:"varint,3,opt,name=vpi,proto3" json:"vpi,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[402]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[402]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 1, 0}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp) GetQosLsPvpTrafficQ() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ {
	if x != nil {
		return x.QosLsPvpTrafficQ
	}
	return nil
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp) GetQosLsPvpTrustUps() *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps {
	if x != nil {
		return x.QosLsPvpTrustUps
	}
	return nil
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp) GetVpi() uint32 {
	if x != nil {
		return x.Vpi
	}
	return 0
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceClass  Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass  `protobuf:"varint,1,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass" json:"serviceClass,omitempty"`
	TrafficQColor Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor `protobuf:"varint,2,opt,name=trafficQColor,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor" json:"trafficQColor,omitempty"`
	TrafficQMode  Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode  `protobuf:"varint,3,opt,name=trafficQMode,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode" json:"trafficQMode,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[403]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[403]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 1, 0, 0}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ) GetServiceClass() Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass_AF1
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ) GetTrafficQColor() Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor {
	if x != nil {
		return x.TrafficQColor
	}
	return Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor_GREEN
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ) GetTrafficQMode() Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode {
	if x != nil {
		return x.TrafficQMode
	}
	return Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode_DISABLE
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLsPvpTrustUp []*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp `protobuf:"bytes,1,rep,name=qosLsPvpTrustUp,proto3" json:"qosLsPvpTrustUp,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[404]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[404]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 1, 0, 1}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps) GetQosLsPvpTrustUp() []*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp {
	if x != nil {
		return x.QosLsPvpTrustUp
	}
	return nil
}

type Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectType Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType `protobuf:"varint,1,opt,name=directType,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType" json:"directType,omitempty"`
	DsName     string                                                                                `protobuf:"bytes,2,opt,name=dsName,proto3" json:"dsName,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[405]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[405]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 1, 0, 1, 0}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp) GetDirectType() Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType {
	if x != nil {
		return x.DirectType
	}
	return Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType_IN_OUTBOUND
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp) GetDsName() string {
	if x != nil {
		return x.DsName
	}
	return ""
}

type Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CirMode            Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode             `protobuf:"varint,1,opt,name=cirMode,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode" json:"cirMode,omitempty"`
	CirParaPercent     uint32                                                                        `protobuf:"varint,2,opt,name=cirParaPercent,proto3" json:"cirParaPercent,omitempty"`
	CirParaValue       uint32                                                                        `protobuf:"varint,3,opt,name=cirParaValue,proto3" json:"cirParaValue,omitempty"`
	MaxBufferTime      uint32                                                                        `protobuf:"varint,4,opt,name=maxBufferTime,proto3" json:"maxBufferTime,omitempty"`
	OperType           Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType            `protobuf:"varint,5,opt,name=operType,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType" json:"operType,omitempty"`
	PirMode            Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode             `protobuf:"varint,6,opt,name=pirMode,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode" json:"pirMode,omitempty"`
	PirParaPercent     uint32                                                                        `protobuf:"varint,7,opt,name=pirParaPercent,proto3" json:"pirParaPercent,omitempty"`
	PirParaValue       uint32                                                                        `protobuf:"varint,8,opt,name=pirParaValue,proto3" json:"pirParaValue,omitempty"`
	QosLsPortQueueStat *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat `protobuf:"bytes,9,opt,name=qosLsPortQueueStat,proto3" json:"qosLsPortQueueStat,omitempty"`
	ScheduleMode       Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode        `protobuf:"varint,10,opt,name=scheduleMode,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode" json:"scheduleMode,omitempty"`
	ServiceClass       Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass        `protobuf:"varint,11,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[406]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[406]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 3, 0}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) GetCirMode() Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode {
	if x != nil {
		return x.CirMode
	}
	return Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode_CIR_PERCENT
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) GetCirParaPercent() uint32 {
	if x != nil {
		return x.CirParaPercent
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) GetCirParaValue() uint32 {
	if x != nil {
		return x.CirParaValue
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) GetMaxBufferTime() uint32 {
	if x != nil {
		return x.MaxBufferTime
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) GetOperType() Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType {
	if x != nil {
		return x.OperType
	}
	return Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType_NEW_CONFIGURE
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) GetPirMode() Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode {
	if x != nil {
		return x.PirMode
	}
	return Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode_NOT_CONFIG
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) GetPirParaPercent() uint32 {
	if x != nil {
		return x.PirParaPercent
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) GetPirParaValue() uint32 {
	if x != nil {
		return x.PirParaValue
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) GetQosLsPortQueueStat() *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat {
	if x != nil {
		return x.QosLsPortQueueStat
	}
	return nil
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) GetScheduleMode() Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode {
	if x != nil {
		return x.ScheduleMode
	}
	return Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode_PQ
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue) GetServiceClass() Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass_AF1
}

type Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DropBytes      uint64 `protobuf:"varint,1,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropBytesRate  uint64 `protobuf:"varint,2,opt,name=dropBytesRate,proto3" json:"dropBytesRate,omitempty"`
	DropPkts       uint64 `protobuf:"varint,3,opt,name=dropPkts,proto3" json:"dropPkts,omitempty"`
	DropPktsRate   uint64 `protobuf:"varint,4,opt,name=dropPktsRate,proto3" json:"dropPktsRate,omitempty"`
	QueueUsage     uint32 `protobuf:"varint,5,opt,name=queueUsage,proto3" json:"queueUsage,omitempty"`
	TotalBytes     uint64 `protobuf:"varint,6,opt,name=totalBytes,proto3" json:"totalBytes,omitempty"`
	TotalBytesRate uint64 `protobuf:"varint,7,opt,name=totalBytesRate,proto3" json:"totalBytesRate,omitempty"`
	TotalPkts      uint64 `protobuf:"varint,8,opt,name=totalPkts,proto3" json:"totalPkts,omitempty"`
	TotalPktsRate  uint64 `protobuf:"varint,9,opt,name=totalPktsRate,proto3" json:"totalPktsRate,omitempty"`
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat) Reset() {
	*x = Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[407]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat) ProtoMessage() {}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[407]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat.ProtoReflect.Descriptor instead.
func (*Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 16, 0, 3, 0, 0}
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat) GetDropBytesRate() uint64 {
	if x != nil {
		return x.DropBytesRate
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat) GetDropPkts() uint64 {
	if x != nil {
		return x.DropPkts
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat) GetDropPktsRate() uint64 {
	if x != nil {
		return x.DropPktsRate
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat) GetQueueUsage() uint32 {
	if x != nil {
		return x.QueueUsage
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat) GetTotalBytes() uint64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat) GetTotalBytesRate() uint64 {
	if x != nil {
		return x.TotalBytesRate
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat) GetTotalPkts() uint64 {
	if x != nil {
		return x.TotalPkts
	}
	return 0
}

func (x *Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat) GetTotalPktsRate() uint64 {
	if x != nil {
		return x.TotalPktsRate
	}
	return 0
}

type Qos_QosPQschedules_QosPQschedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosDirection Qos_QosPQschedules_QosPQschedule_QosDirection `protobuf:"varint,1,opt,name=qosDirection,proto3,enum=huaweiV8R10_qos.Qos_QosPQschedules_QosPQschedule_QosDirection" json:"qosDirection,omitempty"`
	QosMode      Qos_QosPQschedules_QosPQschedule_QosMode      `protobuf:"varint,2,opt,name=qosMode,proto3,enum=huaweiV8R10_qos.Qos_QosPQschedules_QosPQschedule_QosMode" json:"qosMode,omitempty"`
	SlotID       string                                        `protobuf:"bytes,3,opt,name=slotID,proto3" json:"slotID,omitempty"`
	UcCardID     string                                        `protobuf:"bytes,4,opt,name=ucCardID,proto3" json:"ucCardID,omitempty"`
}

func (x *Qos_QosPQschedules_QosPQschedule) Reset() {
	*x = Qos_QosPQschedules_QosPQschedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[408]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosPQschedules_QosPQschedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosPQschedules_QosPQschedule) ProtoMessage() {}

func (x *Qos_QosPQschedules_QosPQschedule) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[408]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosPQschedules_QosPQschedule.ProtoReflect.Descriptor instead.
func (*Qos_QosPQschedules_QosPQschedule) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 18, 0}
}

func (x *Qos_QosPQschedules_QosPQschedule) GetQosDirection() Qos_QosPQschedules_QosPQschedule_QosDirection {
	if x != nil {
		return x.QosDirection
	}
	return Qos_QosPQschedules_QosPQschedule_QosDirection_INBOUND
}

func (x *Qos_QosPQschedules_QosPQschedule) GetQosMode() Qos_QosPQschedules_QosPQschedule_QosMode {
	if x != nil {
		return x.QosMode
	}
	return Qos_QosPQschedules_QosPQschedule_QosMode_HIGH
}

func (x *Qos_QosPQschedules_QosPQschedule) GetSlotID() string {
	if x != nil {
		return x.SlotID
	}
	return ""
}

func (x *Qos_QosPQschedules_QosPQschedule) GetUcCardID() string {
	if x != nil {
		return x.UcCardID
	}
	return ""
}

type Qos_QosPackEnables_QosPackEnable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableType Qos_QosPackEnables_QosPackEnable_EnableType `protobuf:"varint,1,opt,name=enableType,proto3,enum=huaweiV8R10_qos.Qos_QosPackEnables_QosPackEnable_EnableType" json:"enableType,omitempty"`
	SlotIDStr  string                                      `protobuf:"bytes,2,opt,name=slotIDStr,proto3" json:"slotIDStr,omitempty"`
}

func (x *Qos_QosPackEnables_QosPackEnable) Reset() {
	*x = Qos_QosPackEnables_QosPackEnable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[409]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosPackEnables_QosPackEnable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosPackEnables_QosPackEnable) ProtoMessage() {}

func (x *Qos_QosPackEnables_QosPackEnable) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[409]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosPackEnables_QosPackEnable.ProtoReflect.Descriptor instead.
func (*Qos_QosPackEnables_QosPackEnable) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 19, 0}
}

func (x *Qos_QosPackEnables_QosPackEnable) GetEnableType() Qos_QosPackEnables_QosPackEnable_EnableType {
	if x != nil {
		return x.EnableType
	}
	return Qos_QosPackEnables_QosPackEnable_EnableType_DISABLE
}

func (x *Qos_QosPackEnables_QosPackEnable) GetSlotIDStr() string {
	if x != nil {
		return x.SlotIDStr
	}
	return ""
}

type Qos_QosPirPrecisions_QosPirPrecision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotIDStr        string `protobuf:"bytes,1,opt,name=slotIDStr,proto3" json:"slotIDStr,omitempty"`
	UcPrecisionValue uint32 `protobuf:"varint,2,opt,name=ucPrecisionValue,proto3" json:"ucPrecisionValue,omitempty"`
}

func (x *Qos_QosPirPrecisions_QosPirPrecision) Reset() {
	*x = Qos_QosPirPrecisions_QosPirPrecision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[410]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosPirPrecisions_QosPirPrecision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosPirPrecisions_QosPirPrecision) ProtoMessage() {}

func (x *Qos_QosPirPrecisions_QosPirPrecision) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[410]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosPirPrecisions_QosPirPrecision.ProtoReflect.Descriptor instead.
func (*Qos_QosPirPrecisions_QosPirPrecision) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 20, 0}
}

func (x *Qos_QosPirPrecisions_QosPirPrecision) GetSlotIDStr() string {
	if x != nil {
		return x.SlotIDStr
	}
	return ""
}

func (x *Qos_QosPirPrecisions_QosPirPrecision) GetUcPrecisionValue() uint32 {
	if x != nil {
		return x.UcPrecisionValue
	}
	return 0
}

type Qos_QosPolicyMatchIpOnlys_QosPolicyMatchIpOnly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotIdPath string `protobuf:"bytes,1,opt,name=slotIdPath,proto3" json:"slotIdPath,omitempty"`
}

func (x *Qos_QosPolicyMatchIpOnlys_QosPolicyMatchIpOnly) Reset() {
	*x = Qos_QosPolicyMatchIpOnlys_QosPolicyMatchIpOnly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[411]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosPolicyMatchIpOnlys_QosPolicyMatchIpOnly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosPolicyMatchIpOnlys_QosPolicyMatchIpOnly) ProtoMessage() {}

func (x *Qos_QosPolicyMatchIpOnlys_QosPolicyMatchIpOnly) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[411]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosPolicyMatchIpOnlys_QosPolicyMatchIpOnly.ProtoReflect.Descriptor instead.
func (*Qos_QosPolicyMatchIpOnlys_QosPolicyMatchIpOnly) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 21, 0}
}

func (x *Qos_QosPolicyMatchIpOnlys_QosPolicyMatchIpOnly) GetSlotIdPath() string {
	if x != nil {
		return x.SlotIdPath
	}
	return ""
}

type Qos_QosPortQueueStatInfos_QosPortQueueStatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufferPercent    uint32                                                   `protobuf:"varint,1,opt,name=bufferPercent,proto3" json:"bufferPercent,omitempty"`
	BufferTime       uint64                                                   `protobuf:"varint,2,opt,name=bufferTime,proto3" json:"bufferTime,omitempty"`
	CleanTime        uint64                                                   `protobuf:"varint,3,opt,name=cleanTime,proto3" json:"cleanTime,omitempty"`
	CurrentBuffer    uint32                                                   `protobuf:"varint,4,opt,name=currentBuffer,proto3" json:"currentBuffer,omitempty"`
	DroppedBytes     uint64                                                   `protobuf:"varint,5,opt,name=droppedBytes,proto3" json:"droppedBytes,omitempty"`
	DroppedPackets   uint64                                                   `protobuf:"varint,6,opt,name=droppedPackets,proto3" json:"droppedPackets,omitempty"`
	IfName           string                                                   `protobuf:"bytes,7,opt,name=ifName,proto3" json:"ifName,omitempty"`
	MaxBufferPercent uint32                                                   `protobuf:"varint,8,opt,name=maxBufferPercent,proto3" json:"maxBufferPercent,omitempty"`
	Passedbps        uint64                                                   `protobuf:"varint,9,opt,name=passedbps,proto3" json:"passedbps,omitempty"`
	PassedPps        uint64                                                   `protobuf:"varint,10,opt,name=passedPps,proto3" json:"passedPps,omitempty"`
	QueueType        Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType `protobuf:"varint,11,opt,name=queueType,proto3,enum=huaweiV8R10_qos.Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType" json:"queueType,omitempty"`
	TotalBuffer      uint32                                                   `protobuf:"varint,12,opt,name=totalBuffer,proto3" json:"totalBuffer,omitempty"`
	TotalBytes       uint64                                                   `protobuf:"varint,13,opt,name=totalBytes,proto3" json:"totalBytes,omitempty"`
	TotalPackets     uint64                                                   `protobuf:"varint,14,opt,name=totalPackets,proto3" json:"totalPackets,omitempty"`
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) Reset() {
	*x = Qos_QosPortQueueStatInfos_QosPortQueueStatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[412]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) ProtoMessage() {}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[412]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosPortQueueStatInfos_QosPortQueueStatInfo.ProtoReflect.Descriptor instead.
func (*Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 22, 0}
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) GetBufferPercent() uint32 {
	if x != nil {
		return x.BufferPercent
	}
	return 0
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) GetBufferTime() uint64 {
	if x != nil {
		return x.BufferTime
	}
	return 0
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) GetCleanTime() uint64 {
	if x != nil {
		return x.CleanTime
	}
	return 0
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) GetCurrentBuffer() uint32 {
	if x != nil {
		return x.CurrentBuffer
	}
	return 0
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) GetDroppedBytes() uint64 {
	if x != nil {
		return x.DroppedBytes
	}
	return 0
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) GetDroppedPackets() uint64 {
	if x != nil {
		return x.DroppedPackets
	}
	return 0
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) GetMaxBufferPercent() uint32 {
	if x != nil {
		return x.MaxBufferPercent
	}
	return 0
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) GetPassedbps() uint64 {
	if x != nil {
		return x.Passedbps
	}
	return 0
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) GetPassedPps() uint64 {
	if x != nil {
		return x.PassedPps
	}
	return 0
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) GetQueueType() Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType {
	if x != nil {
		return x.QueueType
	}
	return Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType_AF1
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) GetTotalBuffer() uint32 {
	if x != nil {
		return x.TotalBuffer
	}
	return 0
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) GetTotalBytes() uint64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *Qos_QosPortQueueStatInfos_QosPortQueueStatInfo) GetTotalPackets() uint64 {
	if x != nil {
		return x.TotalPackets
	}
	return 0
}

type Qos_QosQppbPolicys_QosQppbPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutboundSrvcFlag bool                                          `protobuf:"varint,1,opt,name=outboundSrvcFlag,proto3" json:"outboundSrvcFlag,omitempty"`
	PolicyName       string                                        `protobuf:"bytes,2,opt,name=policyName,proto3" json:"policyName,omitempty"`
	QosLocalIDs      *Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs `protobuf:"bytes,3,opt,name=qosLocalIDs,proto3" json:"qosLocalIDs,omitempty"`
	StatFlag         bool                                          `protobuf:"varint,4,opt,name=statFlag,proto3" json:"statFlag,omitempty"`
}

func (x *Qos_QosQppbPolicys_QosQppbPolicy) Reset() {
	*x = Qos_QosQppbPolicys_QosQppbPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[413]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosQppbPolicys_QosQppbPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosQppbPolicys_QosQppbPolicy) ProtoMessage() {}

func (x *Qos_QosQppbPolicys_QosQppbPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[413]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosQppbPolicys_QosQppbPolicy.ProtoReflect.Descriptor instead.
func (*Qos_QosQppbPolicys_QosQppbPolicy) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 23, 0}
}

func (x *Qos_QosQppbPolicys_QosQppbPolicy) GetOutboundSrvcFlag() bool {
	if x != nil {
		return x.OutboundSrvcFlag
	}
	return false
}

func (x *Qos_QosQppbPolicys_QosQppbPolicy) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Qos_QosQppbPolicys_QosQppbPolicy) GetQosLocalIDs() *Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs {
	if x != nil {
		return x.QosLocalIDs
	}
	return nil
}

func (x *Qos_QosQppbPolicys_QosQppbPolicy) GetStatFlag() bool {
	if x != nil {
		return x.StatFlag
	}
	return false
}

type Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLocalID []*Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs_QosLocalID `protobuf:"bytes,1,rep,name=qosLocalID,proto3" json:"qosLocalID,omitempty"`
}

func (x *Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs) Reset() {
	*x = Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[414]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs) ProtoMessage() {}

func (x *Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[414]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs.ProtoReflect.Descriptor instead.
func (*Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 23, 0, 0}
}

func (x *Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs) GetQosLocalID() []*Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs_QosLocalID {
	if x != nil {
		return x.QosLocalID
	}
	return nil
}

type Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs_QosLocalID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BehaviorName string `protobuf:"bytes,1,opt,name=behaviorName,proto3" json:"behaviorName,omitempty"`
	LocalID      uint32 `protobuf:"varint,2,opt,name=localID,proto3" json:"localID,omitempty"`
}

func (x *Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs_QosLocalID) Reset() {
	*x = Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs_QosLocalID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[415]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs_QosLocalID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs_QosLocalID) ProtoMessage() {}

func (x *Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs_QosLocalID) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[415]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs_QosLocalID.ProtoReflect.Descriptor instead.
func (*Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs_QosLocalID) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 23, 0, 0, 0}
}

func (x *Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs_QosLocalID) GetBehaviorName() string {
	if x != nil {
		return x.BehaviorName
	}
	return ""
}

func (x *Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs_QosLocalID) GetLocalID() uint32 {
	if x != nil {
		return x.LocalID
	}
	return 0
}

type Qos_QosRdrRouteFlts_QosRdrRouteFlt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterBlackhole bool                                        `protobuf:"varint,1,opt,name=filterBlackhole,proto3" json:"filterBlackhole,omitempty"`
	FilterDefault   bool                                        `protobuf:"varint,2,opt,name=filterDefault,proto3" json:"filterDefault,omitempty"`
	IPFamily        Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily `protobuf:"varint,3,opt,name=iPFamily,proto3,enum=huaweiV8R10_qos.Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily" json:"iPFamily,omitempty"`
	SlotIdPath      string                                      `protobuf:"bytes,4,opt,name=slotIdPath,proto3" json:"slotIdPath,omitempty"`
}

func (x *Qos_QosRdrRouteFlts_QosRdrRouteFlt) Reset() {
	*x = Qos_QosRdrRouteFlts_QosRdrRouteFlt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[416]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosRdrRouteFlts_QosRdrRouteFlt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosRdrRouteFlts_QosRdrRouteFlt) ProtoMessage() {}

func (x *Qos_QosRdrRouteFlts_QosRdrRouteFlt) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[416]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosRdrRouteFlts_QosRdrRouteFlt.ProtoReflect.Descriptor instead.
func (*Qos_QosRdrRouteFlts_QosRdrRouteFlt) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 24, 0}
}

func (x *Qos_QosRdrRouteFlts_QosRdrRouteFlt) GetFilterBlackhole() bool {
	if x != nil {
		return x.FilterBlackhole
	}
	return false
}

func (x *Qos_QosRdrRouteFlts_QosRdrRouteFlt) GetFilterDefault() bool {
	if x != nil {
		return x.FilterDefault
	}
	return false
}

func (x *Qos_QosRdrRouteFlts_QosRdrRouteFlt) GetIPFamily() Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily {
	if x != nil {
		return x.IPFamily
	}
	return Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily_IPV4
}

func (x *Qos_QosRdrRouteFlts_QosRdrRouteFlt) GetSlotIdPath() string {
	if x != nil {
		return x.SlotIdPath
	}
	return ""
}

type Qos_QosRemoteIfQoss_QosRemoteIfQos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfName             string                                                 `protobuf:"bytes,1,opt,name=ifName,proto3" json:"ifName,omitempty"`
	QosRemoteDefClasss *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss `protobuf:"bytes,2,opt,name=qosRemoteDefClasss,proto3" json:"qosRemoteDefClasss,omitempty"`
	QosRemoteIfTrusts  *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts  `protobuf:"bytes,3,opt,name=qosRemoteIfTrusts,proto3" json:"qosRemoteIfTrusts,omitempty"`
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos) Reset() {
	*x = Qos_QosRemoteIfQoss_QosRemoteIfQos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[417]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosRemoteIfQoss_QosRemoteIfQos) ProtoMessage() {}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[417]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosRemoteIfQoss_QosRemoteIfQos.ProtoReflect.Descriptor instead.
func (*Qos_QosRemoteIfQoss_QosRemoteIfQos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 25, 0}
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos) GetQosRemoteDefClasss() *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss {
	if x != nil {
		return x.QosRemoteDefClasss
	}
	return nil
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos) GetQosRemoteIfTrusts() *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts {
	if x != nil {
		return x.QosRemoteIfTrusts
	}
	return nil
}

type Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRemoteDefClass *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass `protobuf:"bytes,1,opt,name=qosRemoteDefClass,proto3" json:"qosRemoteDefClass,omitempty"`
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss) Reset() {
	*x = Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[418]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss) ProtoMessage() {}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[418]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss.ProtoReflect.Descriptor instead.
func (*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 25, 0, 0}
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss) GetQosRemoteDefClass() *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass {
	if x != nil {
		return x.QosRemoteDefClass
	}
	return nil
}

type Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosRemoteIfTrust []*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust `protobuf:"bytes,1,rep,name=qosRemoteIfTrust,proto3" json:"qosRemoteIfTrust,omitempty"`
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts) Reset() {
	*x = Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[419]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts) ProtoMessage() {}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[419]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts.ProtoReflect.Descriptor instead.
func (*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 25, 0, 1}
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts) GetQosRemoteIfTrust() []*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust {
	if x != nil {
		return x.QosRemoteIfTrust
	}
	return nil
}

type Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceClass Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass `protobuf:"varint,1,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass" json:"serviceClass,omitempty"`
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass) Reset() {
	*x = Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[420]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass) ProtoMessage() {}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[420]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass.ProtoReflect.Descriptor instead.
func (*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 25, 0, 0, 0}
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass) GetServiceClass() Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass_AF1
}

type Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasDownFlag   uint32                                                                           `protobuf:"varint,1,opt,name=basDownFlag,proto3" json:"basDownFlag,omitempty"`
	CeBeginVlanID uint32                                                                           `protobuf:"varint,2,opt,name=ceBeginVlanID,proto3" json:"ceBeginVlanID,omitempty"`
	CeEndVlanID   uint32                                                                           `protobuf:"varint,3,opt,name=ceEndVlanID,proto3" json:"ceEndVlanID,omitempty"`
	DirectType    Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType `protobuf:"varint,4,opt,name=directType,proto3,enum=huaweiV8R10_qos.Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType" json:"directType,omitempty"`
	DsName        string                                                                           `protobuf:"bytes,5,opt,name=dsName,proto3" json:"dsName,omitempty"`
	OffLoad       Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad    `protobuf:"varint,6,opt,name=offLoad,proto3,enum=huaweiV8R10_qos.Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad" json:"offLoad,omitempty"`
	TrustType     Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType  `protobuf:"varint,7,opt,name=trustType,proto3,enum=huaweiV8R10_qos.Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType" json:"trustType,omitempty"`
	VlanMode      bool                                                                             `protobuf:"varint,8,opt,name=vlanMode,proto3" json:"vlanMode,omitempty"`
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust) Reset() {
	*x = Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[421]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust) ProtoMessage() {}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[421]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust.ProtoReflect.Descriptor instead.
func (*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 25, 0, 1, 0}
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust) GetBasDownFlag() uint32 {
	if x != nil {
		return x.BasDownFlag
	}
	return 0
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust) GetCeBeginVlanID() uint32 {
	if x != nil {
		return x.CeBeginVlanID
	}
	return 0
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust) GetCeEndVlanID() uint32 {
	if x != nil {
		return x.CeEndVlanID
	}
	return 0
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust) GetDirectType() Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType {
	if x != nil {
		return x.DirectType
	}
	return Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType_IN_OUTBOUND
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust) GetDsName() string {
	if x != nil {
		return x.DsName
	}
	return ""
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust) GetOffLoad() Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad {
	if x != nil {
		return x.OffLoad
	}
	return Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad_DISABLE
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust) GetTrustType() Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType {
	if x != nil {
		return x.TrustType
	}
	return Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType_X_8021P
}

func (x *Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust) GetVlanMode() bool {
	if x != nil {
		return x.VlanMode
	}
	return false
}

type Qos_QosSlotChannelAlarms_QosSlotChannelAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlmType      Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType `protobuf:"varint,1,opt,name=almType,proto3,enum=huaweiV8R10_qos.Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType" json:"almType,omitempty"`
	Pool         Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool    `protobuf:"varint,2,opt,name=pool,proto3,enum=huaweiV8R10_qos.Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool" json:"pool,omitempty"`
	SlotIDStr    string                                               `protobuf:"bytes,3,opt,name=slotIDStr,proto3" json:"slotIDStr,omitempty"`
	ThresholdVal uint32                                               `protobuf:"varint,4,opt,name=thresholdVal,proto3" json:"thresholdVal,omitempty"`
}

func (x *Qos_QosSlotChannelAlarms_QosSlotChannelAlarm) Reset() {
	*x = Qos_QosSlotChannelAlarms_QosSlotChannelAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[422]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotChannelAlarms_QosSlotChannelAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotChannelAlarms_QosSlotChannelAlarm) ProtoMessage() {}

func (x *Qos_QosSlotChannelAlarms_QosSlotChannelAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[422]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotChannelAlarms_QosSlotChannelAlarm.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotChannelAlarms_QosSlotChannelAlarm) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 26, 0}
}

func (x *Qos_QosSlotChannelAlarms_QosSlotChannelAlarm) GetAlmType() Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType {
	if x != nil {
		return x.AlmType
	}
	return Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType_BANDWIDTH
}

func (x *Qos_QosSlotChannelAlarms_QosSlotChannelAlarm) GetPool() Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool {
	if x != nil {
		return x.Pool
	}
	return Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool_ALL
}

func (x *Qos_QosSlotChannelAlarms_QosSlotChannelAlarm) GetSlotIDStr() string {
	if x != nil {
		return x.SlotIDStr
	}
	return ""
}

func (x *Qos_QosSlotChannelAlarms_QosSlotChannelAlarm) GetThresholdVal() uint32 {
	if x != nil {
		return x.ThresholdVal
	}
	return 0
}

type Qos_QosSlotChannelPres_QosSlotChannelPre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotIDStr string                                            `protobuf:"bytes,1,opt,name=slotIDStr,proto3" json:"slotIDStr,omitempty"`
	UpOrDown  Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown `protobuf:"varint,2,opt,name=upOrDown,proto3,enum=huaweiV8R10_qos.Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown" json:"upOrDown,omitempty"`
}

func (x *Qos_QosSlotChannelPres_QosSlotChannelPre) Reset() {
	*x = Qos_QosSlotChannelPres_QosSlotChannelPre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[423]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotChannelPres_QosSlotChannelPre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotChannelPres_QosSlotChannelPre) ProtoMessage() {}

func (x *Qos_QosSlotChannelPres_QosSlotChannelPre) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[423]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotChannelPres_QosSlotChannelPre.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotChannelPres_QosSlotChannelPre) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 27, 0}
}

func (x *Qos_QosSlotChannelPres_QosSlotChannelPre) GetSlotIDStr() string {
	if x != nil {
		return x.SlotIDStr
	}
	return ""
}

func (x *Qos_QosSlotChannelPres_QosSlotChannelPre) GetUpOrDown() Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown {
	if x != nil {
		return x.UpOrDown
	}
	return Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown_DOWN
}

type Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName               string                                                                            `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	QosDisplayChannelProfiles *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles `protobuf:"bytes,2,opt,name=qosDisplayChannelProfiles,proto3" json:"qosDisplayChannelProfiles,omitempty"`
	SlotIDStr                 string                                                                            `protobuf:"bytes,3,opt,name=slotIDStr,proto3" json:"slotIDStr,omitempty"`
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp) Reset() {
	*x = Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[424]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp) ProtoMessage() {}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[424]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 28, 0}
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp) GetQosDisplayChannelProfiles() *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles {
	if x != nil {
		return x.QosDisplayChannelProfiles
	}
	return nil
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp) GetSlotIDStr() string {
	if x != nil {
		return x.SlotIDStr
	}
	return ""
}

type Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosDisplayChannelProfile []*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile `protobuf:"bytes,1,rep,name=qosDisplayChannelProfile,proto3" json:"qosDisplayChannelProfile,omitempty"`
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles) Reset() {
	*x = Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[425]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles) ProtoMessage() {
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[425]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 28, 0, 0}
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles) GetQosDisplayChannelProfile() []*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile {
	if x != nil {
		return x.QosDisplayChannelProfile
	}
	return nil
}

type Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChnnlId            uint32 `protobuf:"varint,1,opt,name=chnnlId,proto3" json:"chnnlId,omitempty"`
	UcTmid             uint32 `protobuf:"varint,2,opt,name=ucTmid,proto3" json:"ucTmid,omitempty"`
	UiCfgBandWidth     uint32 `protobuf:"varint,3,opt,name=uiCfgBandWidth,proto3" json:"uiCfgBandWidth,omitempty"`
	UiFreeBQntyNumA    uint32 `protobuf:"varint,4,opt,name=uiFreeBQntyNumA,proto3" json:"uiFreeBQntyNumA,omitempty"`
	UiFreeBQntyNumB    uint32 `protobuf:"varint,5,opt,name=uiFreeBQntyNumB,proto3" json:"uiFreeBQntyNumB,omitempty"`
	UiFreeBankNoteA    uint32 `protobuf:"varint,6,opt,name=uiFreeBankNoteA,proto3" json:"uiFreeBankNoteA,omitempty"`
	UiFreeBankNoteB    uint32 `protobuf:"varint,7,opt,name=uiFreeBankNoteB,proto3" json:"uiFreeBankNoteB,omitempty"`
	UiFreePirSumA      uint32 `protobuf:"varint,8,opt,name=uiFreePirSumA,proto3" json:"uiFreePirSumA,omitempty"`
	UiFreePirSumB      uint32 `protobuf:"varint,9,opt,name=uiFreePirSumB,proto3" json:"uiFreePirSumB,omitempty"`
	UiRelBandWidthA    uint32 `protobuf:"varint,10,opt,name=uiRelBandWidthA,proto3" json:"uiRelBandWidthA,omitempty"`
	UiRelBandWidthB    uint32 `protobuf:"varint,11,opt,name=uiRelBandWidthB,proto3" json:"uiRelBandWidthB,omitempty"`
	UiSlotMaxQuantity  uint32 `protobuf:"varint,12,opt,name=uiSlotMaxQuantity,proto3" json:"uiSlotMaxQuantity,omitempty"`
	UiSlotQuantity     uint32 `protobuf:"varint,13,opt,name=uiSlotQuantity,proto3" json:"uiSlotQuantity,omitempty"`
	UiSlotRelBandWidth uint32 `protobuf:"varint,14,opt,name=uiSlotRelBandWidth,proto3" json:"uiSlotRelBandWidth,omitempty"`
	UiUseBQntyNumA     uint32 `protobuf:"varint,15,opt,name=uiUseBQntyNumA,proto3" json:"uiUseBQntyNumA,omitempty"`
	UiUseBQntyNumB     uint32 `protobuf:"varint,16,opt,name=uiUseBQntyNumB,proto3" json:"uiUseBQntyNumB,omitempty"`
	UiUseBankNoteA     uint32 `protobuf:"varint,17,opt,name=uiUseBankNoteA,proto3" json:"uiUseBankNoteA,omitempty"`
	UiUseBankNoteB     uint32 `protobuf:"varint,18,opt,name=uiUseBankNoteB,proto3" json:"uiUseBankNoteB,omitempty"`
	UiUsePirSumA       uint32 `protobuf:"varint,19,opt,name=uiUsePirSumA,proto3" json:"uiUsePirSumA,omitempty"`
	UiUsePirSumB       uint32 `protobuf:"varint,20,opt,name=uiUsePirSumB,proto3" json:"uiUsePirSumB,omitempty"`
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) Reset() {
	*x = Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[426]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) ProtoMessage() {
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[426]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 28, 0, 0, 0}
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetChnnlId() uint32 {
	if x != nil {
		return x.ChnnlId
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUcTmid() uint32 {
	if x != nil {
		return x.UcTmid
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiCfgBandWidth() uint32 {
	if x != nil {
		return x.UiCfgBandWidth
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiFreeBQntyNumA() uint32 {
	if x != nil {
		return x.UiFreeBQntyNumA
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiFreeBQntyNumB() uint32 {
	if x != nil {
		return x.UiFreeBQntyNumB
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiFreeBankNoteA() uint32 {
	if x != nil {
		return x.UiFreeBankNoteA
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiFreeBankNoteB() uint32 {
	if x != nil {
		return x.UiFreeBankNoteB
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiFreePirSumA() uint32 {
	if x != nil {
		return x.UiFreePirSumA
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiFreePirSumB() uint32 {
	if x != nil {
		return x.UiFreePirSumB
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiRelBandWidthA() uint32 {
	if x != nil {
		return x.UiRelBandWidthA
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiRelBandWidthB() uint32 {
	if x != nil {
		return x.UiRelBandWidthB
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiSlotMaxQuantity() uint32 {
	if x != nil {
		return x.UiSlotMaxQuantity
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiSlotQuantity() uint32 {
	if x != nil {
		return x.UiSlotQuantity
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiSlotRelBandWidth() uint32 {
	if x != nil {
		return x.UiSlotRelBandWidth
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiUseBQntyNumA() uint32 {
	if x != nil {
		return x.UiUseBQntyNumA
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiUseBQntyNumB() uint32 {
	if x != nil {
		return x.UiUseBQntyNumB
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiUseBankNoteA() uint32 {
	if x != nil {
		return x.UiUseBankNoteA
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiUseBankNoteB() uint32 {
	if x != nil {
		return x.UiUseBankNoteB
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiUsePirSumA() uint32 {
	if x != nil {
		return x.UiUsePirSumA
	}
	return 0
}

func (x *Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile) GetUiUsePirSumB() uint32 {
	if x != nil {
		return x.UiUsePirSumB
	}
	return 0
}

type Qos_QosSlotCvgPcds_QosSlotCvgPcd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cos       Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos      `protobuf:"varint,1,opt,name=cos,proto3,enum=huaweiV8R10_qos.Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos" json:"cos,omitempty"`
	Priority  Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority `protobuf:"varint,2,opt,name=priority,proto3,enum=huaweiV8R10_qos.Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority" json:"priority,omitempty"`
	SlotIDStr string                                    `protobuf:"bytes,3,opt,name=slotIDStr,proto3" json:"slotIDStr,omitempty"`
}

func (x *Qos_QosSlotCvgPcds_QosSlotCvgPcd) Reset() {
	*x = Qos_QosSlotCvgPcds_QosSlotCvgPcd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[427]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotCvgPcds_QosSlotCvgPcd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotCvgPcds_QosSlotCvgPcd) ProtoMessage() {}

func (x *Qos_QosSlotCvgPcds_QosSlotCvgPcd) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[427]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotCvgPcds_QosSlotCvgPcd.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotCvgPcds_QosSlotCvgPcd) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 29, 0}
}

func (x *Qos_QosSlotCvgPcds_QosSlotCvgPcd) GetCos() Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos {
	if x != nil {
		return x.Cos
	}
	return Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos_X_0
}

func (x *Qos_QosSlotCvgPcds_QosSlotCvgPcd) GetPriority() Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority {
	if x != nil {
		return x.Priority
	}
	return Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority_HIGH
}

func (x *Qos_QosSlotCvgPcds_QosSlotCvgPcd) GetSlotIDStr() string {
	if x != nil {
		return x.SlotIDStr
	}
	return ""
}

type Qos_QosSlotPQAlarms_QosSlotPQAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufferPercent uint32                                          `protobuf:"varint,1,opt,name=bufferPercent,proto3" json:"bufferPercent,omitempty"`
	ServiceClass  Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass `protobuf:"varint,2,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass" json:"serviceClass,omitempty"`
	SlotIDStr     string                                          `protobuf:"bytes,3,opt,name=slotIDStr,proto3" json:"slotIDStr,omitempty"`
}

func (x *Qos_QosSlotPQAlarms_QosSlotPQAlarm) Reset() {
	*x = Qos_QosSlotPQAlarms_QosSlotPQAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[428]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotPQAlarms_QosSlotPQAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotPQAlarms_QosSlotPQAlarm) ProtoMessage() {}

func (x *Qos_QosSlotPQAlarms_QosSlotPQAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[428]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotPQAlarms_QosSlotPQAlarm.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotPQAlarms_QosSlotPQAlarm) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 30, 0}
}

func (x *Qos_QosSlotPQAlarms_QosSlotPQAlarm) GetBufferPercent() uint32 {
	if x != nil {
		return x.BufferPercent
	}
	return 0
}

func (x *Qos_QosSlotPQAlarms_QosSlotPQAlarm) GetServiceClass() Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass_AF1
}

func (x *Qos_QosSlotPQAlarms_QosSlotPQAlarm) GetSlotIDStr() string {
	if x != nil {
		return x.SlotIDStr
	}
	return ""
}

type Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscardNum               uint32                                                        `protobuf:"varint,1,opt,name=discardNum,proto3" json:"discardNum,omitempty"`
	DiscardPacketCoefficient uint32                                                        `protobuf:"varint,2,opt,name=discardPacketCoefficient,proto3" json:"discardPacketCoefficient,omitempty"`
	DiscardPacketExponent    uint32                                                        `protobuf:"varint,3,opt,name=discardPacketExponent,proto3" json:"discardPacketExponent,omitempty"`
	DiscardType              Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType  `protobuf:"varint,4,opt,name=discardType,proto3,enum=huaweiV8R10_qos.Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType" json:"discardType,omitempty"`
	IntervalTime             uint32                                                        `protobuf:"varint,5,opt,name=intervalTime,proto3" json:"intervalTime,omitempty"`
	ServiceClass             Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass `protobuf:"varint,6,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass" json:"serviceClass,omitempty"`
	SlotIDStr                string                                                        `protobuf:"bytes,7,opt,name=slotIDStr,proto3" json:"slotIDStr,omitempty"`
}

func (x *Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm) Reset() {
	*x = Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[429]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm) ProtoMessage() {}

func (x *Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[429]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 31, 0}
}

func (x *Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm) GetDiscardNum() uint32 {
	if x != nil {
		return x.DiscardNum
	}
	return 0
}

func (x *Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm) GetDiscardPacketCoefficient() uint32 {
	if x != nil {
		return x.DiscardPacketCoefficient
	}
	return 0
}

func (x *Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm) GetDiscardPacketExponent() uint32 {
	if x != nil {
		return x.DiscardPacketExponent
	}
	return 0
}

func (x *Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm) GetDiscardType() Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType {
	if x != nil {
		return x.DiscardType
	}
	return Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType_DROPBYTES
}

func (x *Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm) GetIntervalTime() uint32 {
	if x != nil {
		return x.IntervalTime
	}
	return 0
}

func (x *Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm) GetServiceClass() Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass_AF1
}

func (x *Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm) GetSlotIDStr() string {
	if x != nil {
		return x.SlotIDStr
	}
	return ""
}

type Qos_QosSlotQoss_QosSlotQos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QOSObsFilterNodes         *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes         `protobuf:"bytes,1,opt,name=qOSObsFilterNodes,proto3" json:"qOSObsFilterNodes,omitempty"`
	QosAccessBoardSchEnOuts   *Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts   `protobuf:"bytes,2,opt,name=qosAccessBoardSchEnOuts,proto3" json:"qosAccessBoardSchEnOuts,omitempty"`
	QosDomCarToSQs            *Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs            `protobuf:"bytes,3,opt,name=qosDomCarToSQs,proto3" json:"qosDomCarToSQs,omitempty"`
	QosExpPhbDisbls           *Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls           `protobuf:"bytes,4,opt,name=qosExpPhbDisbls,proto3" json:"qosExpPhbDisbls,omitempty"`
	QosFabQueueEnables        *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables        `protobuf:"bytes,5,opt,name=qosFabQueueEnables,proto3" json:"qosFabQueueEnables,omitempty"`
	QosMcShapSrvTemplates     *Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates     `protobuf:"bytes,6,opt,name=qosMcShapSrvTemplates,proto3" json:"qosMcShapSrvTemplates,omitempty"`
	QosMcShapers              *Qos_QosSlotQoss_QosSlotQos_QosMcShapers              `protobuf:"bytes,7,opt,name=qosMcShapers,proto3" json:"qosMcShapers,omitempty"`
	QosMulticastShapers       *Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers       `protobuf:"bytes,8,opt,name=qosMulticastShapers,proto3" json:"qosMulticastShapers,omitempty"`
	QosPolicyMatchIpv6S       *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S       `protobuf:"bytes,9,opt,name=qosPolicyMatchIpv6s,proto3" json:"qosPolicyMatchIpv6s,omitempty"`
	QosPolicyMatchMcs         *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs         `protobuf:"bytes,10,opt,name=qosPolicyMatchMcs,proto3" json:"qosPolicyMatchMcs,omitempty"`
	QosPolicyMatchMplsL2S     *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S     `protobuf:"bytes,11,opt,name=qosPolicyMatchMplsL2s,proto3" json:"qosPolicyMatchMplsL2s,omitempty"`
	QosPolicyMatchMplss       *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss       `protobuf:"bytes,12,opt,name=qosPolicyMatchMplss,proto3" json:"qosPolicyMatchMplss,omitempty"`
	QosPolicyMatchPkts        *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts        `protobuf:"bytes,13,opt,name=qosPolicyMatchPkts,proto3" json:"qosPolicyMatchPkts,omitempty"`
	QosPolicyMatchs           *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs           `protobuf:"bytes,14,opt,name=qosPolicyMatchs,proto3" json:"qosPolicyMatchs,omitempty"`
	QosQOSBursts              *Qos_QosSlotQoss_QosSlotQos_QosQOSBursts              `protobuf:"bytes,15,opt,name=qosQOSBursts,proto3" json:"qosQOSBursts,omitempty"`
	QosQOSGlobalBufCfgs       *Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs       `protobuf:"bytes,16,opt,name=qosQOSGlobalBufCfgs,proto3" json:"qosQOSGlobalBufCfgs,omitempty"`
	QosSlotFQPirs             *Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs             `protobuf:"bytes,17,opt,name=qosSlotFQPirs,proto3" json:"qosSlotFQPirs,omitempty"`
	QosSlotMcVpnQueues        *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues        `protobuf:"bytes,18,opt,name=qosSlotMcVpnQueues,proto3" json:"qosSlotMcVpnQueues,omitempty"`
	QosSlotMcVpnShapers       *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers       `protobuf:"bytes,19,opt,name=qosSlotMcVpnShapers,proto3" json:"qosSlotMcVpnShapers,omitempty"`
	QosSlotORideAdjNums       *Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums       `protobuf:"bytes,20,opt,name=qosSlotORideAdjNums,proto3" json:"qosSlotORideAdjNums,omitempty"`
	QosSlotORideDeCycles      *Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles      `protobuf:"bytes,21,opt,name=qosSlotORideDeCycles,proto3" json:"qosSlotORideDeCycles,omitempty"`
	QosSlotORideEnables       *Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables       `protobuf:"bytes,22,opt,name=qosSlotORideEnables,proto3" json:"qosSlotORideEnables,omitempty"`
	QosSlotORideGradeThrdIns  *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns  `protobuf:"bytes,23,opt,name=qosSlotORideGradeThrdIns,proto3" json:"qosSlotORideGradeThrdIns,omitempty"`
	QosSlotORideGradeThrdOuts *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts `protobuf:"bytes,24,opt,name=qosSlotORideGradeThrdOuts,proto3" json:"qosSlotORideGradeThrdOuts,omitempty"`
	QosSlotORideMonitorNums   *Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums   `protobuf:"bytes,25,opt,name=qosSlotORideMonitorNums,proto3" json:"qosSlotORideMonitorNums,omitempty"`
	QosSlotORideUpCycles      *Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles      `protobuf:"bytes,26,opt,name=qosSlotORideUpCycles,proto3" json:"qosSlotORideUpCycles,omitempty"`
	QosSlotUclMatchs          *Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs          `protobuf:"bytes,27,opt,name=qosSlotUclMatchs,proto3" json:"qosSlotUclMatchs,omitempty"`
	QosUserQueueResource4Coss *Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss `protobuf:"bytes,28,opt,name=qosUserQueueResource4Coss,proto3" json:"qosUserQueueResource4Coss,omitempty"`
	SlotId                    string                                                `protobuf:"bytes,29,opt,name=slotId,proto3" json:"slotId,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[430]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[430]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQOSObsFilterNodes() *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes {
	if x != nil {
		return x.QOSObsFilterNodes
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosAccessBoardSchEnOuts() *Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts {
	if x != nil {
		return x.QosAccessBoardSchEnOuts
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosDomCarToSQs() *Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs {
	if x != nil {
		return x.QosDomCarToSQs
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosExpPhbDisbls() *Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls {
	if x != nil {
		return x.QosExpPhbDisbls
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosFabQueueEnables() *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables {
	if x != nil {
		return x.QosFabQueueEnables
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosMcShapSrvTemplates() *Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates {
	if x != nil {
		return x.QosMcShapSrvTemplates
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosMcShapers() *Qos_QosSlotQoss_QosSlotQos_QosMcShapers {
	if x != nil {
		return x.QosMcShapers
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosMulticastShapers() *Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers {
	if x != nil {
		return x.QosMulticastShapers
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosPolicyMatchIpv6S() *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S {
	if x != nil {
		return x.QosPolicyMatchIpv6S
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosPolicyMatchMcs() *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs {
	if x != nil {
		return x.QosPolicyMatchMcs
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosPolicyMatchMplsL2S() *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S {
	if x != nil {
		return x.QosPolicyMatchMplsL2S
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosPolicyMatchMplss() *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss {
	if x != nil {
		return x.QosPolicyMatchMplss
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosPolicyMatchPkts() *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts {
	if x != nil {
		return x.QosPolicyMatchPkts
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosPolicyMatchs() *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs {
	if x != nil {
		return x.QosPolicyMatchs
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosQOSBursts() *Qos_QosSlotQoss_QosSlotQos_QosQOSBursts {
	if x != nil {
		return x.QosQOSBursts
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosQOSGlobalBufCfgs() *Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs {
	if x != nil {
		return x.QosQOSGlobalBufCfgs
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosSlotFQPirs() *Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs {
	if x != nil {
		return x.QosSlotFQPirs
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosSlotMcVpnQueues() *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues {
	if x != nil {
		return x.QosSlotMcVpnQueues
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosSlotMcVpnShapers() *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers {
	if x != nil {
		return x.QosSlotMcVpnShapers
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosSlotORideAdjNums() *Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums {
	if x != nil {
		return x.QosSlotORideAdjNums
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosSlotORideDeCycles() *Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles {
	if x != nil {
		return x.QosSlotORideDeCycles
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosSlotORideEnables() *Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables {
	if x != nil {
		return x.QosSlotORideEnables
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosSlotORideGradeThrdIns() *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns {
	if x != nil {
		return x.QosSlotORideGradeThrdIns
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosSlotORideGradeThrdOuts() *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts {
	if x != nil {
		return x.QosSlotORideGradeThrdOuts
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosSlotORideMonitorNums() *Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums {
	if x != nil {
		return x.QosSlotORideMonitorNums
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosSlotORideUpCycles() *Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles {
	if x != nil {
		return x.QosSlotORideUpCycles
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosSlotUclMatchs() *Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs {
	if x != nil {
		return x.QosSlotUclMatchs
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetQosUserQueueResource4Coss() *Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss {
	if x != nil {
		return x.QosUserQueueResource4Coss
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

type Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QOSObsFilterNode []*Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode `protobuf:"bytes,1,rep,name=qOSObsFilterNode,proto3" json:"qOSObsFilterNode,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[431]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[431]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes) GetQOSObsFilterNode() []*Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode {
	if x != nil {
		return x.QOSObsFilterNode
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosAccessBoardSchEnOut *Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut `protobuf:"bytes,1,opt,name=qosAccessBoardSchEnOut,proto3" json:"qosAccessBoardSchEnOut,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[432]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[432]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 1}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts) GetQosAccessBoardSchEnOut() *Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut {
	if x != nil {
		return x.QosAccessBoardSchEnOut
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosDomCarToSQ []*Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ `protobuf:"bytes,1,rep,name=qosDomCarToSQ,proto3" json:"qosDomCarToSQ,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[433]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[433]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 2}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs) GetQosDomCarToSQ() []*Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ {
	if x != nil {
		return x.QosDomCarToSQ
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosExpPhbDisbl []*Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl `protobuf:"bytes,1,rep,name=qosExpPhbDisbl,proto3" json:"qosExpPhbDisbl,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[434]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[434]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 3}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls) GetQosExpPhbDisbl() []*Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl {
	if x != nil {
		return x.QosExpPhbDisbl
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosFabQueueEnable *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable `protobuf:"bytes,1,opt,name=qosFabQueueEnable,proto3" json:"qosFabQueueEnable,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[435]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[435]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 4}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables) GetQosFabQueueEnable() *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable {
	if x != nil {
		return x.QosFabQueueEnable
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosMcShapSrvTemplate []*Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate `protobuf:"bytes,1,rep,name=qosMcShapSrvTemplate,proto3" json:"qosMcShapSrvTemplate,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[436]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[436]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 5}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates) GetQosMcShapSrvTemplate() []*Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate {
	if x != nil {
		return x.QosMcShapSrvTemplate
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosMcShapers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosMcShaper *Qos_QosSlotQoss_QosSlotQos_QosMcShapers_QosMcShaper `protobuf:"bytes,1,opt,name=qosMcShaper,proto3" json:"qosMcShaper,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapers) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosMcShapers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[437]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosMcShapers) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapers) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[437]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosMcShapers.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosMcShapers) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 6}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapers) GetQosMcShaper() *Qos_QosSlotQoss_QosSlotQos_QosMcShapers_QosMcShaper {
	if x != nil {
		return x.QosMcShaper
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosMulticastShaper []*Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper `protobuf:"bytes,1,rep,name=qosMulticastShaper,proto3" json:"qosMulticastShaper,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[438]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[438]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 7}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers) GetQosMulticastShaper() []*Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper {
	if x != nil {
		return x.QosMulticastShaper
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPolicyMatchIpv6 *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6 `protobuf:"bytes,1,opt,name=qosPolicyMatchIpv6,proto3" json:"qosPolicyMatchIpv6,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[439]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[439]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 8}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S) GetQosPolicyMatchIpv6() *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6 {
	if x != nil {
		return x.QosPolicyMatchIpv6
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPolicyMatchMc *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc `protobuf:"bytes,1,opt,name=qosPolicyMatchMc,proto3" json:"qosPolicyMatchMc,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[440]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[440]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 9}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs) GetQosPolicyMatchMc() *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc {
	if x != nil {
		return x.QosPolicyMatchMc
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPolicyMatchMplsL2 *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S_QosPolicyMatchMplsL2 `protobuf:"bytes,1,opt,name=qosPolicyMatchMplsL2,proto3" json:"qosPolicyMatchMplsL2,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[441]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[441]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 10}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S) GetQosPolicyMatchMplsL2() *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S_QosPolicyMatchMplsL2 {
	if x != nil {
		return x.QosPolicyMatchMplsL2
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPolicyMatchMpls *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss_QosPolicyMatchMpls `protobuf:"bytes,1,opt,name=qosPolicyMatchMpls,proto3" json:"qosPolicyMatchMpls,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[442]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[442]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 11}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss) GetQosPolicyMatchMpls() *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss_QosPolicyMatchMpls {
	if x != nil {
		return x.QosPolicyMatchMpls
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPolicyMatchPkt *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts_QosPolicyMatchPkt `protobuf:"bytes,1,opt,name=qosPolicyMatchPkt,proto3" json:"qosPolicyMatchPkt,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[443]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[443]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 12}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts) GetQosPolicyMatchPkt() *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts_QosPolicyMatchPkt {
	if x != nil {
		return x.QosPolicyMatchPkt
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPolicyMatch *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs_QosPolicyMatch `protobuf:"bytes,1,opt,name=qosPolicyMatch,proto3" json:"qosPolicyMatch,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[444]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[444]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 13}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs) GetQosPolicyMatch() *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs_QosPolicyMatch {
	if x != nil {
		return x.QosPolicyMatch
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosQOSBursts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosQOSBurst *Qos_QosSlotQoss_QosSlotQos_QosQOSBursts_QosQOSBurst `protobuf:"bytes,1,opt,name=qosQOSBurst,proto3" json:"qosQOSBurst,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSBursts) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosQOSBursts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[445]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSBursts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosQOSBursts) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSBursts) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[445]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosQOSBursts.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosQOSBursts) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 14}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSBursts) GetQosQOSBurst() *Qos_QosSlotQoss_QosSlotQos_QosQOSBursts_QosQOSBurst {
	if x != nil {
		return x.QosQOSBurst
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosQOSGlobalBufCfg []*Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg `protobuf:"bytes,1,rep,name=qosQOSGlobalBufCfg,proto3" json:"qosQOSGlobalBufCfg,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[446]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[446]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 15}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs) GetQosQOSGlobalBufCfg() []*Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg {
	if x != nil {
		return x.QosQOSGlobalBufCfg
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotFQPir []*Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir `protobuf:"bytes,1,rep,name=qosSlotFQPir,proto3" json:"qosSlotFQPir,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[447]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[447]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 16}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs) GetQosSlotFQPir() []*Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir {
	if x != nil {
		return x.QosSlotFQPir
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotMcVpnQueue []*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue `protobuf:"bytes,1,rep,name=qosSlotMcVpnQueue,proto3" json:"qosSlotMcVpnQueue,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[448]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[448]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 17}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues) GetQosSlotMcVpnQueue() []*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue {
	if x != nil {
		return x.QosSlotMcVpnQueue
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotMcVpnShaper *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper `protobuf:"bytes,1,opt,name=qosSlotMcVpnShaper,proto3" json:"qosSlotMcVpnShaper,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[449]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[449]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 18}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers) GetQosSlotMcVpnShaper() *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper {
	if x != nil {
		return x.QosSlotMcVpnShaper
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotORideAdjNum *Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums_QosSlotORideAdjNum `protobuf:"bytes,1,opt,name=qosSlotORideAdjNum,proto3" json:"qosSlotORideAdjNum,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[450]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[450]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 19}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums) GetQosSlotORideAdjNum() *Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums_QosSlotORideAdjNum {
	if x != nil {
		return x.QosSlotORideAdjNum
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotORideDeCycle *Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles_QosSlotORideDeCycle `protobuf:"bytes,1,opt,name=qosSlotORideDeCycle,proto3" json:"qosSlotORideDeCycle,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[451]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[451]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 20}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles) GetQosSlotORideDeCycle() *Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles_QosSlotORideDeCycle {
	if x != nil {
		return x.QosSlotORideDeCycle
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotORideEnable *Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables_QosSlotORideEnable `protobuf:"bytes,1,opt,name=qosSlotORideEnable,proto3" json:"qosSlotORideEnable,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[452]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[452]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 21}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables) GetQosSlotORideEnable() *Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables_QosSlotORideEnable {
	if x != nil {
		return x.QosSlotORideEnable
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotORideGradeThrdIn *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns_QosSlotORideGradeThrdIn `protobuf:"bytes,1,opt,name=qosSlotORideGradeThrdIn,proto3" json:"qosSlotORideGradeThrdIn,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[453]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[453]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 22}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns) GetQosSlotORideGradeThrdIn() *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns_QosSlotORideGradeThrdIn {
	if x != nil {
		return x.QosSlotORideGradeThrdIn
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotORideGradeThrdOut *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts_QosSlotORideGradeThrdOut `protobuf:"bytes,1,opt,name=qosSlotORideGradeThrdOut,proto3" json:"qosSlotORideGradeThrdOut,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[454]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[454]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 23}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts) GetQosSlotORideGradeThrdOut() *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts_QosSlotORideGradeThrdOut {
	if x != nil {
		return x.QosSlotORideGradeThrdOut
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotORideMonitorNum *Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums_QosSlotORideMonitorNum `protobuf:"bytes,1,opt,name=qosSlotORideMonitorNum,proto3" json:"qosSlotORideMonitorNum,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[455]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[455]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 24}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums) GetQosSlotORideMonitorNum() *Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums_QosSlotORideMonitorNum {
	if x != nil {
		return x.QosSlotORideMonitorNum
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotORideUpCycle *Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles_QosSlotORideUpCycle `protobuf:"bytes,1,opt,name=qosSlotORideUpCycle,proto3" json:"qosSlotORideUpCycle,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[456]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[456]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 25}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles) GetQosSlotORideUpCycle() *Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles_QosSlotORideUpCycle {
	if x != nil {
		return x.QosSlotORideUpCycle
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotUclMatch []*Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch `protobuf:"bytes,1,rep,name=qosSlotUclMatch,proto3" json:"qosSlotUclMatch,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[457]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[457]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 26}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs) GetQosSlotUclMatch() []*Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch {
	if x != nil {
		return x.QosSlotUclMatch
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosUserQueueResource4Cos []*Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss_QosUserQueueResource4Cos `protobuf:"bytes,1,rep,name=qosUserQueueResource4Cos,proto3" json:"qosUserQueueResource4Cos,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[458]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[458]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 27}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss) GetQosUserQueueResource4Cos() []*Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss_QosUserQueueResource4Cos {
	if x != nil {
		return x.QosUserQueueResource4Cos
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DstIPAddr      string `protobuf:"bytes,1,opt,name=dstIPAddr,proto3" json:"dstIPAddr,omitempty"`
	DstIpAddrMask  string `protobuf:"bytes,2,opt,name=dstIpAddrMask,proto3" json:"dstIpAddrMask,omitempty"`
	DstMacAddr     string `protobuf:"bytes,3,opt,name=dstMacAddr,proto3" json:"dstMacAddr,omitempty"`
	DstPort        uint32 `protobuf:"varint,4,opt,name=dstPort,proto3" json:"dstPort,omitempty"`
	EthType        string `protobuf:"bytes,5,opt,name=ethType,proto3" json:"ethType,omitempty"`
	FilterId       uint32 `protobuf:"varint,6,opt,name=filterId,proto3" json:"filterId,omitempty"`
	IPProtocol     uint32 `protobuf:"varint,7,opt,name=iPProtocol,proto3" json:"iPProtocol,omitempty"`
	PPPProtocol    string `protobuf:"bytes,8,opt,name=pPPProtocol,proto3" json:"pPPProtocol,omitempty"`
	PPPoeSessionId uint32 `protobuf:"varint,9,opt,name=pPPoeSessionId,proto3" json:"pPPoeSessionId,omitempty"`
	SrcIPAddr      string `protobuf:"bytes,10,opt,name=srcIPAddr,proto3" json:"srcIPAddr,omitempty"`
	SrcIPAddrMask  string `protobuf:"bytes,11,opt,name=srcIPAddrMask,proto3" json:"srcIPAddrMask,omitempty"`
	SrcMacAddr     string `protobuf:"bytes,12,opt,name=srcMacAddr,proto3" json:"srcMacAddr,omitempty"`
	SrcPort        uint32 `protobuf:"varint,13,opt,name=srcPort,proto3" json:"srcPort,omitempty"`
	Vlan           uint32 `protobuf:"varint,14,opt,name=vlan,proto3" json:"vlan,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[459]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[459]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 0, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) GetDstIPAddr() string {
	if x != nil {
		return x.DstIPAddr
	}
	return ""
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) GetDstIpAddrMask() string {
	if x != nil {
		return x.DstIpAddrMask
	}
	return ""
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) GetDstMacAddr() string {
	if x != nil {
		return x.DstMacAddr
	}
	return ""
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) GetDstPort() uint32 {
	if x != nil {
		return x.DstPort
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) GetEthType() string {
	if x != nil {
		return x.EthType
	}
	return ""
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) GetFilterId() uint32 {
	if x != nil {
		return x.FilterId
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) GetIPProtocol() uint32 {
	if x != nil {
		return x.IPProtocol
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) GetPPPProtocol() string {
	if x != nil {
		return x.PPPProtocol
	}
	return ""
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) GetPPPoeSessionId() uint32 {
	if x != nil {
		return x.PPPoeSessionId
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) GetSrcIPAddr() string {
	if x != nil {
		return x.SrcIPAddr
	}
	return ""
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) GetSrcIPAddrMask() string {
	if x != nil {
		return x.SrcIPAddrMask
	}
	return ""
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) GetSrcMacAddr() string {
	if x != nil {
		return x.SrcMacAddr
	}
	return ""
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) GetSrcPort() uint32 {
	if x != nil {
		return x.SrcPort
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode) GetVlan() uint32 {
	if x != nil {
		return x.Vlan
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosEnable Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable `protobuf:"varint,1,opt,name=qosEnable,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable" json:"qosEnable,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[460]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[460]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 1, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut) GetQosEnable() Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable {
	if x != nil {
		return x.QosEnable
	}
	return Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable_ENABLE
}

type Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableFlag Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag `protobuf:"varint,1,opt,name=disableFlag,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag" json:"disableFlag,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[461]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[461]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 2, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ) GetDisableFlag() Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag {
	if x != nil {
		return x.DisableFlag
	}
	return Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag_DISABLE
}

type Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableFwdType Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType `protobuf:"varint,1,opt,name=disableFwdType,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType" json:"disableFwdType,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[462]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[462]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 3, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl) GetDisableFwdType() Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType {
	if x != nil {
		return x.DisableFwdType
	}
	return Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType_VLL
}

type Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable            Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable             `protobuf:"varint,1,opt,name=enable,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable" json:"enable,omitempty"`
	QosVOQStatisticss *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss `protobuf:"bytes,2,opt,name=qosVOQStatisticss,proto3" json:"qosVOQStatisticss,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[463]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[463]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 4, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable) GetEnable() Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable {
	if x != nil {
		return x.Enable
	}
	return Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable_ENABLE
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable) GetQosVOQStatisticss() *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss {
	if x != nil {
		return x.QosVOQStatisticss
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosVOQStatistics []*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics `protobuf:"bytes,1,rep,name=qosVOQStatistics,proto3" json:"qosVOQStatistics,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[464]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss) ProtoMessage() {
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[464]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 4, 0, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss) GetQosVOQStatistics() []*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics {
	if x != nil {
		return x.QosVOQStatistics
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CosType        Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType `protobuf:"varint,1,opt,name=cosType,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType" json:"cosType,omitempty"`
	DesSlotID      string                                                                                                     `protobuf:"bytes,2,opt,name=desSlotID,proto3" json:"desSlotID,omitempty"`
	DesTmNum       uint32                                                                                                     `protobuf:"varint,3,opt,name=desTmNum,proto3" json:"desTmNum,omitempty"`
	DiscardBytes   uint64                                                                                                     `protobuf:"varint,4,opt,name=discardBytes,proto3" json:"discardBytes,omitempty"`
	DiscardPackets uint64                                                                                                     `protobuf:"varint,5,opt,name=discardPackets,proto3" json:"discardPackets,omitempty"`
	PassBytes      uint64                                                                                                     `protobuf:"varint,6,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets    uint64                                                                                                     `protobuf:"varint,7,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	SrcTmNum       uint32                                                                                                     `protobuf:"varint,8,opt,name=srcTmNum,proto3" json:"srcTmNum,omitempty"`
	VoqFlag        Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag `protobuf:"varint,9,opt,name=voqFlag,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag" json:"voqFlag,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[465]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics) ProtoMessage() {
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[465]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 4, 0, 0, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics) GetCosType() Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType {
	if x != nil {
		return x.CosType
	}
	return Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType_FOUR
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics) GetDesSlotID() string {
	if x != nil {
		return x.DesSlotID
	}
	return ""
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics) GetDesTmNum() uint32 {
	if x != nil {
		return x.DesTmNum
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics) GetDiscardBytes() uint64 {
	if x != nil {
		return x.DiscardBytes
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics) GetDiscardPackets() uint64 {
	if x != nil {
		return x.DiscardPackets
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics) GetSrcTmNum() uint32 {
	if x != nil {
		return x.SrcTmNum
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics) GetVoqFlag() Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag {
	if x != nil {
		return x.VoqFlag
	}
	return Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag_MULTICAST
}

type Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceClass Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass `protobuf:"varint,1,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass" json:"serviceClass,omitempty"`
	TemplateName string                                                                             `protobuf:"bytes,2,opt,name=templateName,proto3" json:"templateName,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[466]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[466]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 5, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate) GetServiceClass() Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass_AF1
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

type Qos_QosSlotQoss_QosSlotQos_QosMcShapers_QosMcShaper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShapingValue uint32 `protobuf:"varint,1,opt,name=shapingValue,proto3" json:"shapingValue,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapers_QosMcShaper) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosMcShapers_QosMcShaper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[467]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapers_QosMcShaper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosMcShapers_QosMcShaper) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapers_QosMcShaper) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[467]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosMcShapers_QosMcShaper.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosMcShapers_QosMcShaper) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 6, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMcShapers_QosMcShaper) GetShapingValue() uint32 {
	if x != nil {
		return x.ShapingValue
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority     Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority `protobuf:"varint,1,opt,name=priority,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority" json:"priority,omitempty"`
	ShapingValue uint32                                                                     `protobuf:"varint,2,opt,name=shapingValue,proto3" json:"shapingValue,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[468]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[468]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 7, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper) GetPriority() Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority {
	if x != nil {
		return x.Priority
	}
	return Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority_BOTH
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper) GetShapingValue() uint32 {
	if x != nil {
		return x.ShapingValue
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchMode Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode `protobuf:"varint,1,opt,name=matchMode,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode" json:"matchMode,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[469]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[469]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 8, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6) GetMatchMode() Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode {
	if x != nil {
		return x.MatchMode
	}
	return Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode_MASK
}

type Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchMode Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode `protobuf:"varint,1,opt,name=matchMode,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode" json:"matchMode,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[470]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[470]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 9, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc) GetMatchMode() Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode {
	if x != nil {
		return x.MatchMode
	}
	return Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode_ENABLE
}

type Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S_QosPolicyMatchMplsL2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableFlg bool `protobuf:"varint,1,opt,name=enableFlg,proto3" json:"enableFlg,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S_QosPolicyMatchMplsL2) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S_QosPolicyMatchMplsL2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[471]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S_QosPolicyMatchMplsL2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S_QosPolicyMatchMplsL2) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S_QosPolicyMatchMplsL2) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[471]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S_QosPolicyMatchMplsL2.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S_QosPolicyMatchMplsL2) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 10, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S_QosPolicyMatchMplsL2) GetEnableFlg() bool {
	if x != nil {
		return x.EnableFlg
	}
	return false
}

type Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss_QosPolicyMatchMpls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MplsPush bool `protobuf:"varint,1,opt,name=mplsPush,proto3" json:"mplsPush,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss_QosPolicyMatchMpls) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss_QosPolicyMatchMpls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[472]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss_QosPolicyMatchMpls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss_QosPolicyMatchMpls) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss_QosPolicyMatchMpls) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[472]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss_QosPolicyMatchMpls.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss_QosPolicyMatchMpls) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 11, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss_QosPolicyMatchMpls) GetMplsPush() bool {
	if x != nil {
		return x.MplsPush
	}
	return false
}

type Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts_QosPolicyMatchPkt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableFlg bool `protobuf:"varint,1,opt,name=enableFlg,proto3" json:"enableFlg,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts_QosPolicyMatchPkt) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts_QosPolicyMatchPkt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[473]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts_QosPolicyMatchPkt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts_QosPolicyMatchPkt) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts_QosPolicyMatchPkt) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[473]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts_QosPolicyMatchPkt.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts_QosPolicyMatchPkt) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 12, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts_QosPolicyMatchPkt) GetEnableFlg() bool {
	if x != nil {
		return x.EnableFlg
	}
	return false
}

type Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs_QosPolicyMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MplsPop  bool `protobuf:"varint,1,opt,name=mplsPop,proto3" json:"mplsPop,omitempty"`
	MplsPush bool `protobuf:"varint,2,opt,name=mplsPush,proto3" json:"mplsPush,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs_QosPolicyMatch) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs_QosPolicyMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[474]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs_QosPolicyMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs_QosPolicyMatch) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs_QosPolicyMatch) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[474]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs_QosPolicyMatch.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs_QosPolicyMatch) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 13, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs_QosPolicyMatch) GetMplsPop() bool {
	if x != nil {
		return x.MplsPop
	}
	return false
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs_QosPolicyMatch) GetMplsPush() bool {
	if x != nil {
		return x.MplsPush
	}
	return false
}

type Qos_QosSlotQoss_QosSlotQos_QosQOSBursts_QosQOSBurst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bursttime uint32 `protobuf:"varint,1,opt,name=bursttime,proto3" json:"bursttime,omitempty"`
	Minbytes  uint32 `protobuf:"varint,2,opt,name=minbytes,proto3" json:"minbytes,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSBursts_QosQOSBurst) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosQOSBursts_QosQOSBurst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[475]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSBursts_QosQOSBurst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosQOSBursts_QosQOSBurst) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSBursts_QosQOSBurst) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[475]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosQOSBursts_QosQOSBurst.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosQOSBursts_QosQOSBurst) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 14, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSBursts_QosQOSBurst) GetBursttime() uint32 {
	if x != nil {
		return x.Bursttime
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSBursts_QosQOSBurst) GetMinbytes() uint32 {
	if x != nil {
		return x.Minbytes
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction    Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction    `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction" json:"direction,omitempty"`
	ServiceClass Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass `protobuf:"varint,2,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass" json:"serviceClass,omitempty"`
	ShareValue   uint32                                                                         `protobuf:"varint,3,opt,name=shareValue,proto3" json:"shareValue,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[476]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[476]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 15, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg) GetDirection() Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction_INBOUND
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg) GetServiceClass() Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass_AF1
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg) GetShareValue() uint32 {
	if x != nil {
		return x.ShareValue
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FqPirType Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType `protobuf:"varint,1,opt,name=fqPirType,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType" json:"fqPirType,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[477]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[477]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 16, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir) GetFqPirType() Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType {
	if x != nil {
		return x.FqPirType
	}
	return Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType_OFF
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortWredName          string                                                                                 `protobuf:"bytes,1,opt,name=portWredName,proto3" json:"portWredName,omitempty"`
	QosSlotPortQueueStats *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats `protobuf:"bytes,2,opt,name=qosSlotPortQueueStats,proto3" json:"qosSlotPortQueueStats,omitempty"`
	QueueScheduleMode     Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode      `protobuf:"varint,3,opt,name=queueScheduleMode,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode" json:"queueScheduleMode,omitempty"`
	ServiceClass          Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass           `protobuf:"varint,4,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass" json:"serviceClass,omitempty"`
	Shaping               uint32                                                                                 `protobuf:"varint,5,opt,name=shaping,proto3" json:"shaping,omitempty"`
	ShapingPercentage     uint32                                                                                 `protobuf:"varint,6,opt,name=shapingPercentage,proto3" json:"shapingPercentage,omitempty"`
	Weight                uint32                                                                                 `protobuf:"varint,7,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[478]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[478]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 17, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue) GetPortWredName() string {
	if x != nil {
		return x.PortWredName
	}
	return ""
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue) GetQosSlotPortQueueStats() *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats {
	if x != nil {
		return x.QosSlotPortQueueStats
	}
	return nil
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue) GetQueueScheduleMode() Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode {
	if x != nil {
		return x.QueueScheduleMode
	}
	return Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode_LPQ
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue) GetServiceClass() Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass_AF1
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue) GetShaping() uint32 {
	if x != nil {
		return x.Shaping
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue) GetShapingPercentage() uint32 {
	if x != nil {
		return x.ShapingPercentage
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSlotPortQueueStat []*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat `protobuf:"bytes,1,rep,name=qosSlotPortQueueStat,proto3" json:"qosSlotPortQueueStat,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[479]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats) ProtoMessage() {
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[479]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 17, 0, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats) GetQosSlotPortQueueStat() []*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat {
	if x != nil {
		return x.QosSlotPortQueueStat
	}
	return nil
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DropByteRate     uint64 `protobuf:"varint,1,opt,name=dropByteRate,proto3" json:"dropByteRate,omitempty"`
	DropBytes        uint64 `protobuf:"varint,2,opt,name=dropBytes,proto3" json:"dropBytes,omitempty"`
	DropPackets      uint64 `protobuf:"varint,3,opt,name=dropPackets,proto3" json:"dropPackets,omitempty"`
	DropPktRate      uint64 `protobuf:"varint,4,opt,name=dropPktRate,proto3" json:"dropPktRate,omitempty"`
	DropTailByteRate uint64 `protobuf:"varint,5,opt,name=dropTailByteRate,proto3" json:"dropTailByteRate,omitempty"`
	DropTailBytes    uint64 `protobuf:"varint,6,opt,name=dropTailBytes,proto3" json:"dropTailBytes,omitempty"`
	DropTailPackets  uint64 `protobuf:"varint,7,opt,name=dropTailPackets,proto3" json:"dropTailPackets,omitempty"`
	DropTailPktRate  uint64 `protobuf:"varint,8,opt,name=dropTailPktRate,proto3" json:"dropTailPktRate,omitempty"`
	DropWredByteRate uint64 `protobuf:"varint,9,opt,name=dropWredByteRate,proto3" json:"dropWredByteRate,omitempty"`
	DropWredBytes    uint64 `protobuf:"varint,10,opt,name=dropWredBytes,proto3" json:"dropWredBytes,omitempty"`
	DropWredPackets  uint64 `protobuf:"varint,11,opt,name=dropWredPackets,proto3" json:"dropWredPackets,omitempty"`
	DropWredPktRate  uint64 `protobuf:"varint,12,opt,name=dropWredPktRate,proto3" json:"dropWredPktRate,omitempty"`
	PassByteRate     uint64 `protobuf:"varint,13,opt,name=passByteRate,proto3" json:"passByteRate,omitempty"`
	PassBytes        uint64 `protobuf:"varint,14,opt,name=passBytes,proto3" json:"passBytes,omitempty"`
	PassPackets      uint64 `protobuf:"varint,15,opt,name=passPackets,proto3" json:"passPackets,omitempty"`
	PassPktRate      uint64 `protobuf:"varint,16,opt,name=passPktRate,proto3" json:"passPktRate,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[480]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) ProtoMessage() {
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[480]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 17, 0, 0, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetDropByteRate() uint64 {
	if x != nil {
		return x.DropByteRate
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetDropBytes() uint64 {
	if x != nil {
		return x.DropBytes
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetDropPackets() uint64 {
	if x != nil {
		return x.DropPackets
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetDropPktRate() uint64 {
	if x != nil {
		return x.DropPktRate
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetDropTailByteRate() uint64 {
	if x != nil {
		return x.DropTailByteRate
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetDropTailBytes() uint64 {
	if x != nil {
		return x.DropTailBytes
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetDropTailPackets() uint64 {
	if x != nil {
		return x.DropTailPackets
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetDropTailPktRate() uint64 {
	if x != nil {
		return x.DropTailPktRate
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetDropWredByteRate() uint64 {
	if x != nil {
		return x.DropWredByteRate
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetDropWredBytes() uint64 {
	if x != nil {
		return x.DropWredBytes
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetDropWredPackets() uint64 {
	if x != nil {
		return x.DropWredPackets
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetDropWredPktRate() uint64 {
	if x != nil {
		return x.DropWredPktRate
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetPassByteRate() uint64 {
	if x != nil {
		return x.PassByteRate
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetPassBytes() uint64 {
	if x != nil {
		return x.PassBytes
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetPassPackets() uint64 {
	if x != nil {
		return x.PassPackets
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat) GetPassPktRate() uint64 {
	if x != nil {
		return x.PassPktRate
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShapingType  Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType `protobuf:"varint,1,opt,name=shapingType,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType" json:"shapingType,omitempty"`
	ShapingValue uint32                                                                        `protobuf:"varint,2,opt,name=shapingValue,proto3" json:"shapingValue,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[481]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[481]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 18, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper) GetShapingType() Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType {
	if x != nil {
		return x.ShapingType
	}
	return Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType_X_256K
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper) GetShapingValue() uint32 {
	if x != nil {
		return x.ShapingValue
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums_QosSlotORideAdjNum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdjNum uint32 `protobuf:"varint,1,opt,name=adjNum,proto3" json:"adjNum,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums_QosSlotORideAdjNum) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums_QosSlotORideAdjNum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[482]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums_QosSlotORideAdjNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums_QosSlotORideAdjNum) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums_QosSlotORideAdjNum) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[482]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums_QosSlotORideAdjNum.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums_QosSlotORideAdjNum) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 19, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums_QosSlotORideAdjNum) GetAdjNum() uint32 {
	if x != nil {
		return x.AdjNum
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles_QosSlotORideDeCycle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeCycle uint32 `protobuf:"varint,1,opt,name=deCycle,proto3" json:"deCycle,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles_QosSlotORideDeCycle) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles_QosSlotORideDeCycle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[483]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles_QosSlotORideDeCycle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles_QosSlotORideDeCycle) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles_QosSlotORideDeCycle) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[483]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles_QosSlotORideDeCycle.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles_QosSlotORideDeCycle) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 20, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles_QosSlotORideDeCycle) GetDeCycle() uint32 {
	if x != nil {
		return x.DeCycle
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables_QosSlotORideEnable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisablePer uint32 `protobuf:"varint,1,opt,name=disablePer,proto3" json:"disablePer,omitempty"`
	EnablePer  uint32 `protobuf:"varint,2,opt,name=enablePer,proto3" json:"enablePer,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables_QosSlotORideEnable) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables_QosSlotORideEnable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[484]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables_QosSlotORideEnable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables_QosSlotORideEnable) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables_QosSlotORideEnable) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[484]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables_QosSlotORideEnable.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables_QosSlotORideEnable) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 21, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables_QosSlotORideEnable) GetDisablePer() uint32 {
	if x != nil {
		return x.DisablePer
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables_QosSlotORideEnable) GetEnablePer() uint32 {
	if x != nil {
		return x.EnablePer
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns_QosSlotORideGradeThrdIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeThrdValueIn uint32 `protobuf:"varint,1,opt,name=deThrdValueIn,proto3" json:"deThrdValueIn,omitempty"`
	UpThrdValueIn uint32 `protobuf:"varint,2,opt,name=upThrdValueIn,proto3" json:"upThrdValueIn,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns_QosSlotORideGradeThrdIn) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns_QosSlotORideGradeThrdIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[485]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns_QosSlotORideGradeThrdIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns_QosSlotORideGradeThrdIn) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns_QosSlotORideGradeThrdIn) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[485]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns_QosSlotORideGradeThrdIn.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns_QosSlotORideGradeThrdIn) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 22, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns_QosSlotORideGradeThrdIn) GetDeThrdValueIn() uint32 {
	if x != nil {
		return x.DeThrdValueIn
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns_QosSlotORideGradeThrdIn) GetUpThrdValueIn() uint32 {
	if x != nil {
		return x.UpThrdValueIn
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts_QosSlotORideGradeThrdOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeThrdValueOut uint32 `protobuf:"varint,1,opt,name=deThrdValueOut,proto3" json:"deThrdValueOut,omitempty"`
	UpThrdValueOut uint32 `protobuf:"varint,2,opt,name=upThrdValueOut,proto3" json:"upThrdValueOut,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts_QosSlotORideGradeThrdOut) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts_QosSlotORideGradeThrdOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[486]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts_QosSlotORideGradeThrdOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts_QosSlotORideGradeThrdOut) ProtoMessage() {
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts_QosSlotORideGradeThrdOut) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[486]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts_QosSlotORideGradeThrdOut.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts_QosSlotORideGradeThrdOut) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 23, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts_QosSlotORideGradeThrdOut) GetDeThrdValueOut() uint32 {
	if x != nil {
		return x.DeThrdValueOut
	}
	return 0
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts_QosSlotORideGradeThrdOut) GetUpThrdValueOut() uint32 {
	if x != nil {
		return x.UpThrdValueOut
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums_QosSlotORideMonitorNum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonitorNum uint32 `protobuf:"varint,1,opt,name=monitorNum,proto3" json:"monitorNum,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums_QosSlotORideMonitorNum) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums_QosSlotORideMonitorNum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[487]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums_QosSlotORideMonitorNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums_QosSlotORideMonitorNum) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums_QosSlotORideMonitorNum) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[487]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums_QosSlotORideMonitorNum.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums_QosSlotORideMonitorNum) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 24, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums_QosSlotORideMonitorNum) GetMonitorNum() uint32 {
	if x != nil {
		return x.MonitorNum
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles_QosSlotORideUpCycle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpCycle uint32 `protobuf:"varint,1,opt,name=upCycle,proto3" json:"upCycle,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles_QosSlotORideUpCycle) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles_QosSlotORideUpCycle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[488]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles_QosSlotORideUpCycle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles_QosSlotORideUpCycle) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles_QosSlotORideUpCycle) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[488]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles_QosSlotORideUpCycle.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles_QosSlotORideUpCycle) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 25, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles_QosSlotORideUpCycle) GetUpCycle() uint32 {
	if x != nil {
		return x.UpCycle
	}
	return 0
}

type Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchType Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType `protobuf:"varint,1,opt,name=matchType,proto3,enum=huaweiV8R10_qos.Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType" json:"matchType,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[489]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch) ProtoMessage() {}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[489]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 26, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch) GetMatchType() Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType {
	if x != nil {
		return x.MatchType
	}
	return Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType_DESTUSER
}

type Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss_QosUserQueueResource4Cos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CosSizevalue uint32 `protobuf:"varint,1,opt,name=cosSizevalue,proto3" json:"cosSizevalue,omitempty"`
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss_QosUserQueueResource4Cos) Reset() {
	*x = Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss_QosUserQueueResource4Cos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[490]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss_QosUserQueueResource4Cos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss_QosUserQueueResource4Cos) ProtoMessage() {
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss_QosUserQueueResource4Cos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[490]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss_QosUserQueueResource4Cos.ProtoReflect.Descriptor instead.
func (*Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss_QosUserQueueResource4Cos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 32, 0, 27, 0}
}

func (x *Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss_QosUserQueueResource4Cos) GetCosSizevalue() uint32 {
	if x != nil {
		return x.CosSizevalue
	}
	return 0
}

type Qos_QosSubPortQueues_QosSubPortQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSubPortQueueConfigs  *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs  `protobuf:"bytes,1,opt,name=qosSubPortQueueConfigs,proto3" json:"qosSubPortQueueConfigs,omitempty"`
	QosSubPortQueueShapings *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings `protobuf:"bytes,2,opt,name=qosSubPortQueueShapings,proto3" json:"qosSubPortQueueShapings,omitempty"`
	QosSubPortQueueWeights  *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights  `protobuf:"bytes,3,opt,name=qosSubPortQueueWeights,proto3" json:"qosSubPortQueueWeights,omitempty"`
	SubPortQueueName        string                                                        `protobuf:"bytes,4,opt,name=subPortQueueName,proto3" json:"subPortQueueName,omitempty"`
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue) Reset() {
	*x = Qos_QosSubPortQueues_QosSubPortQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[491]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSubPortQueues_QosSubPortQueue) ProtoMessage() {}

func (x *Qos_QosSubPortQueues_QosSubPortQueue) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[491]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSubPortQueues_QosSubPortQueue.ProtoReflect.Descriptor instead.
func (*Qos_QosSubPortQueues_QosSubPortQueue) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 33, 0}
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue) GetQosSubPortQueueConfigs() *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs {
	if x != nil {
		return x.QosSubPortQueueConfigs
	}
	return nil
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue) GetQosSubPortQueueShapings() *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings {
	if x != nil {
		return x.QosSubPortQueueShapings
	}
	return nil
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue) GetQosSubPortQueueWeights() *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights {
	if x != nil {
		return x.QosSubPortQueueWeights
	}
	return nil
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue) GetSubPortQueueName() string {
	if x != nil {
		return x.SubPortQueueName
	}
	return ""
}

type Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSubPortQueueConfig *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig `protobuf:"bytes,1,opt,name=qosSubPortQueueConfig,proto3" json:"qosSubPortQueueConfig,omitempty"`
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs) Reset() {
	*x = Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[492]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs) ProtoMessage() {}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[492]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs.ProtoReflect.Descriptor instead.
func (*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 33, 0, 0}
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs) GetQosSubPortQueueConfig() *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig {
	if x != nil {
		return x.QosSubPortQueueConfig
	}
	return nil
}

type Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSubPortQueueShaping *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings_QosSubPortQueueShaping `protobuf:"bytes,1,opt,name=qosSubPortQueueShaping,proto3" json:"qosSubPortQueueShaping,omitempty"`
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings) Reset() {
	*x = Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[493]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings) ProtoMessage() {}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[493]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings.ProtoReflect.Descriptor instead.
func (*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 33, 0, 1}
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings) GetQosSubPortQueueShaping() *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings_QosSubPortQueueShaping {
	if x != nil {
		return x.QosSubPortQueueShaping
	}
	return nil
}

type Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosSubPortQueueWeight *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight `protobuf:"bytes,1,opt,name=qosSubPortQueueWeight,proto3" json:"qosSubPortQueueWeight,omitempty"`
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights) Reset() {
	*x = Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[494]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights) ProtoMessage() {}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[494]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights.ProtoReflect.Descriptor instead.
func (*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 33, 0, 2}
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights) GetQosSubPortQueueWeight() *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight {
	if x != nil {
		return x.QosSubPortQueueWeight
	}
	return nil
}

type Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction        Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction" json:"direction,omitempty"`
	SubPortQAppIf    string                                                                                      `protobuf:"bytes,2,opt,name=subPortQAppIf,proto3" json:"subPortQAppIf,omitempty"`
	SubPortQueueName string                                                                                      `protobuf:"bytes,3,opt,name=subPortQueueName,proto3" json:"subPortQueueName,omitempty"`
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig) Reset() {
	*x = Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[495]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig) ProtoMessage() {
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[495]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig.ProtoReflect.Descriptor instead.
func (*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 33, 0, 0, 0}
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig) GetDirection() Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction_OUTBOUND
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig) GetSubPortQAppIf() string {
	if x != nil {
		return x.SubPortQAppIf
	}
	return ""
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig) GetSubPortQueueName() string {
	if x != nil {
		return x.SubPortQueueName
	}
	return ""
}

type Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings_QosSubPortQueueShaping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PbsValue     uint32 `protobuf:"varint,1,opt,name=pbsValue,proto3" json:"pbsValue,omitempty"`
	ShapingValue uint32 `protobuf:"varint,2,opt,name=shapingValue,proto3" json:"shapingValue,omitempty"`
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings_QosSubPortQueueShaping) Reset() {
	*x = Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings_QosSubPortQueueShaping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[496]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings_QosSubPortQueueShaping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings_QosSubPortQueueShaping) ProtoMessage() {
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings_QosSubPortQueueShaping) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[496]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings_QosSubPortQueueShaping.ProtoReflect.Descriptor instead.
func (*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings_QosSubPortQueueShaping) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 33, 0, 1, 0}
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings_QosSubPortQueueShaping) GetPbsValue() uint32 {
	if x != nil {
		return x.PbsValue
	}
	return 0
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings_QosSubPortQueueShaping) GetShapingValue() uint32 {
	if x != nil {
		return x.ShapingValue
	}
	return 0
}

type Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction   Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=huaweiV8R10_qos.Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction" json:"direction,omitempty"`
	WeightValue uint32                                                                                      `protobuf:"varint,2,opt,name=weightValue,proto3" json:"weightValue,omitempty"`
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight) Reset() {
	*x = Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[497]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight) ProtoMessage() {
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[497]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight.ProtoReflect.Descriptor instead.
func (*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 33, 0, 2, 0}
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight) GetDirection() Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction {
	if x != nil {
		return x.Direction
	}
	return Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction_OUTBOUND
}

func (x *Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight) GetWeightValue() uint32 {
	if x != nil {
		return x.WeightValue
	}
	return 0
}

type Qos_QosSystemViews_QosSystemView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLinkLayerExcludes *Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes `protobuf:"bytes,1,opt,name=qosLinkLayerExcludes,proto3" json:"qosLinkLayerExcludes,omitempty"`
	QosLinkLayerRedbacks *Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks `protobuf:"bytes,2,opt,name=qosLinkLayerRedbacks,proto3" json:"qosLinkLayerRedbacks,omitempty"`
	QosScheModes         *Qos_QosSystemViews_QosSystemView_QosScheModes         `protobuf:"bytes,3,opt,name=qosScheModes,proto3" json:"qosScheModes,omitempty"`
	QosTMSchTraffs       *Qos_QosSystemViews_QosSystemView_QosTMSchTraffs       `protobuf:"bytes,4,opt,name=qosTMSchTraffs,proto3" json:"qosTMSchTraffs,omitempty"`
	ResType              Qos_QosSystemViews_QosSystemView_ResType               `protobuf:"varint,5,opt,name=resType,proto3,enum=huaweiV8R10_qos.Qos_QosSystemViews_QosSystemView_ResType" json:"resType,omitempty"`
}

func (x *Qos_QosSystemViews_QosSystemView) Reset() {
	*x = Qos_QosSystemViews_QosSystemView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[498]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSystemViews_QosSystemView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSystemViews_QosSystemView) ProtoMessage() {}

func (x *Qos_QosSystemViews_QosSystemView) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[498]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSystemViews_QosSystemView.ProtoReflect.Descriptor instead.
func (*Qos_QosSystemViews_QosSystemView) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34, 0}
}

func (x *Qos_QosSystemViews_QosSystemView) GetQosLinkLayerExcludes() *Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes {
	if x != nil {
		return x.QosLinkLayerExcludes
	}
	return nil
}

func (x *Qos_QosSystemViews_QosSystemView) GetQosLinkLayerRedbacks() *Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks {
	if x != nil {
		return x.QosLinkLayerRedbacks
	}
	return nil
}

func (x *Qos_QosSystemViews_QosSystemView) GetQosScheModes() *Qos_QosSystemViews_QosSystemView_QosScheModes {
	if x != nil {
		return x.QosScheModes
	}
	return nil
}

func (x *Qos_QosSystemViews_QosSystemView) GetQosTMSchTraffs() *Qos_QosSystemViews_QosSystemView_QosTMSchTraffs {
	if x != nil {
		return x.QosTMSchTraffs
	}
	return nil
}

func (x *Qos_QosSystemViews_QosSystemView) GetResType() Qos_QosSystemViews_QosSystemView_ResType {
	if x != nil {
		return x.ResType
	}
	return Qos_QosSystemViews_QosSystemView_ResType_SYSTEMVIEW
}

type Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLinkLayerExclude []*Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude `protobuf:"bytes,1,rep,name=qosLinkLayerExclude,proto3" json:"qosLinkLayerExclude,omitempty"`
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes) Reset() {
	*x = Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[499]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes) ProtoMessage() {}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[499]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes.ProtoReflect.Descriptor instead.
func (*Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34, 0, 0}
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes) GetQosLinkLayerExclude() []*Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude {
	if x != nil {
		return x.QosLinkLayerExclude
	}
	return nil
}

type Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosLinkLayerRedback []*Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback `protobuf:"bytes,1,rep,name=qosLinkLayerRedback,proto3" json:"qosLinkLayerRedback,omitempty"`
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks) Reset() {
	*x = Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[500]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks) ProtoMessage() {}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[500]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks.ProtoReflect.Descriptor instead.
func (*Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34, 0, 1}
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks) GetQosLinkLayerRedback() []*Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback {
	if x != nil {
		return x.QosLinkLayerRedback
	}
	return nil
}

type Qos_QosSystemViews_QosSystemView_QosScheModes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosScheMode []*Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode `protobuf:"bytes,1,rep,name=qosScheMode,proto3" json:"qosScheMode,omitempty"`
}

func (x *Qos_QosSystemViews_QosSystemView_QosScheModes) Reset() {
	*x = Qos_QosSystemViews_QosSystemView_QosScheModes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[501]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSystemViews_QosSystemView_QosScheModes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSystemViews_QosSystemView_QosScheModes) ProtoMessage() {}

func (x *Qos_QosSystemViews_QosSystemView_QosScheModes) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[501]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSystemViews_QosSystemView_QosScheModes.ProtoReflect.Descriptor instead.
func (*Qos_QosSystemViews_QosSystemView_QosScheModes) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34, 0, 2}
}

func (x *Qos_QosSystemViews_QosSystemView_QosScheModes) GetQosScheMode() []*Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode {
	if x != nil {
		return x.QosScheMode
	}
	return nil
}

type Qos_QosSystemViews_QosSystemView_QosTMSchTraffs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosTMSchTraff []*Qos_QosSystemViews_QosSystemView_QosTMSchTraffs_QosTMSchTraff `protobuf:"bytes,1,rep,name=qosTMSchTraff,proto3" json:"qosTMSchTraff,omitempty"`
}

func (x *Qos_QosSystemViews_QosSystemView_QosTMSchTraffs) Reset() {
	*x = Qos_QosSystemViews_QosSystemView_QosTMSchTraffs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[502]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSystemViews_QosSystemView_QosTMSchTraffs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSystemViews_QosSystemView_QosTMSchTraffs) ProtoMessage() {}

func (x *Qos_QosSystemViews_QosSystemView_QosTMSchTraffs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[502]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSystemViews_QosSystemView_QosTMSchTraffs.ProtoReflect.Descriptor instead.
func (*Qos_QosSystemViews_QosSystemView_QosTMSchTraffs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34, 0, 3}
}

func (x *Qos_QosSystemViews_QosSystemView_QosTMSchTraffs) GetQosTMSchTraff() []*Qos_QosSystemViews_QosSystemView_QosTMSchTraffs_QosTMSchTraff {
	if x != nil {
		return x.QosTMSchTraff
	}
	return nil
}

type Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessType  Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType  `protobuf:"varint,1,opt,name=accessType,proto3,enum=huaweiV8R10_qos.Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType" json:"accessType,omitempty"`
	ExcLayeType Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType `protobuf:"varint,2,opt,name=excLayeType,proto3,enum=huaweiV8R10_qos.Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType" json:"excLayeType,omitempty"`
	SlotIDStr   string                                                                                `protobuf:"bytes,3,opt,name=slotIDStr,proto3" json:"slotIDStr,omitempty"`
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude) Reset() {
	*x = Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[503]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude) ProtoMessage() {}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[503]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude.ProtoReflect.Descriptor instead.
func (*Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34, 0, 0, 0}
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude) GetAccessType() Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType {
	if x != nil {
		return x.AccessType
	}
	return Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType_LEASED_LINE_ACCESS
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude) GetExcLayeType() Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType {
	if x != nil {
		return x.ExcLayeType
	}
	return Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType_L2TP_LAYER_EXCLUDE
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude) GetSlotIDStr() string {
	if x != nil {
		return x.SlotIDStr
	}
	return ""
}

type Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedbackType Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType `protobuf:"varint,1,opt,name=redbackType,proto3,enum=huaweiV8R10_qos.Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType" json:"redbackType,omitempty"`
	SlotIDStr   string                                                                                `protobuf:"bytes,2,opt,name=slotIDStr,proto3" json:"slotIDStr,omitempty"`
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback) Reset() {
	*x = Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[504]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback) ProtoMessage() {}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[504]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback.ProtoReflect.Descriptor instead.
func (*Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34, 0, 1, 0}
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback) GetRedbackType() Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType {
	if x != nil {
		return x.RedbackType
	}
	return Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType_LAC
}

func (x *Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback) GetSlotIDStr() string {
	if x != nil {
		return x.SlotIDStr
	}
	return ""
}

type Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModeType Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType `protobuf:"varint,1,opt,name=modeType,proto3,enum=huaweiV8R10_qos.Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType" json:"modeType,omitempty"`
	SlotID   string                                                             `protobuf:"bytes,2,opt,name=slotID,proto3" json:"slotID,omitempty"`
}

func (x *Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode) Reset() {
	*x = Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[505]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode) ProtoMessage() {}

func (x *Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[505]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode.ProtoReflect.Descriptor instead.
func (*Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34, 0, 2, 0}
}

func (x *Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode) GetModeType() Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType {
	if x != nil {
		return x.ModeType
	}
	return Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType_MODE2
}

func (x *Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode) GetSlotID() string {
	if x != nil {
		return x.SlotID
	}
	return ""
}

type Qos_QosSystemViews_QosSystemView_QosTMSchTraffs_QosTMSchTraff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardIDStr string `protobuf:"bytes,1,opt,name=cardIDStr,proto3" json:"cardIDStr,omitempty"`
	SlotIDStr string `protobuf:"bytes,2,opt,name=slotIDStr,proto3" json:"slotIDStr,omitempty"`
}

func (x *Qos_QosSystemViews_QosSystemView_QosTMSchTraffs_QosTMSchTraff) Reset() {
	*x = Qos_QosSystemViews_QosSystemView_QosTMSchTraffs_QosTMSchTraff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[506]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosSystemViews_QosSystemView_QosTMSchTraffs_QosTMSchTraff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosSystemViews_QosSystemView_QosTMSchTraffs_QosTMSchTraff) ProtoMessage() {}

func (x *Qos_QosSystemViews_QosSystemView_QosTMSchTraffs_QosTMSchTraff) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[506]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosSystemViews_QosSystemView_QosTMSchTraffs_QosTMSchTraff.ProtoReflect.Descriptor instead.
func (*Qos_QosSystemViews_QosSystemView_QosTMSchTraffs_QosTMSchTraff) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 34, 0, 3, 0}
}

func (x *Qos_QosSystemViews_QosSystemView_QosTMSchTraffs_QosTMSchTraff) GetCardIDStr() string {
	if x != nil {
		return x.CardIDStr
	}
	return ""
}

func (x *Qos_QosSystemViews_QosSystemView_QosTMSchTraffs_QosTMSchTraff) GetSlotIDStr() string {
	if x != nil {
		return x.SlotIDStr
	}
	return ""
}

type Qos_QosVPNQoss_QosVPNQos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosVpnVxlanCarDisables  *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables  `protobuf:"bytes,1,opt,name=qosVpnVxlanCarDisables,proto3" json:"qosVpnVxlanCarDisables,omitempty"`
	QosVpnVxlanPhbs         *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs         `protobuf:"bytes,2,opt,name=qosVpnVxlanPhbs,proto3" json:"qosVpnVxlanPhbs,omitempty"`
	QosVpnVxlanPolicyApplys *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys `protobuf:"bytes,3,opt,name=qosVpnVxlanPolicyApplys,proto3" json:"qosVpnVxlanPolicyApplys,omitempty"`
	QosVpnVxlanTrusts       *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts       `protobuf:"bytes,4,opt,name=qosVpnVxlanTrusts,proto3" json:"qosVpnVxlanTrusts,omitempty"`
	VpnName                 string                                            `protobuf:"bytes,5,opt,name=vpnName,proto3" json:"vpnName,omitempty"`
}

func (x *Qos_QosVPNQoss_QosVPNQos) Reset() {
	*x = Qos_QosVPNQoss_QosVPNQos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[507]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosVPNQoss_QosVPNQos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosVPNQoss_QosVPNQos) ProtoMessage() {}

func (x *Qos_QosVPNQoss_QosVPNQos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[507]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos.ProtoReflect.Descriptor instead.
func (*Qos_QosVPNQoss_QosVPNQos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0}
}

func (x *Qos_QosVPNQoss_QosVPNQos) GetQosVpnVxlanCarDisables() *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables {
	if x != nil {
		return x.QosVpnVxlanCarDisables
	}
	return nil
}

func (x *Qos_QosVPNQoss_QosVPNQos) GetQosVpnVxlanPhbs() *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs {
	if x != nil {
		return x.QosVpnVxlanPhbs
	}
	return nil
}

func (x *Qos_QosVPNQoss_QosVPNQos) GetQosVpnVxlanPolicyApplys() *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys {
	if x != nil {
		return x.QosVpnVxlanPolicyApplys
	}
	return nil
}

func (x *Qos_QosVPNQoss_QosVPNQos) GetQosVpnVxlanTrusts() *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts {
	if x != nil {
		return x.QosVpnVxlanTrusts
	}
	return nil
}

func (x *Qos_QosVPNQoss_QosVPNQos) GetVpnName() string {
	if x != nil {
		return x.VpnName
	}
	return ""
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosVpnVxlanCarDisable []*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable `protobuf:"bytes,1,rep,name=qosVpnVxlanCarDisable,proto3" json:"qosVpnVxlanCarDisable,omitempty"`
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables) Reset() {
	*x = Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[508]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables) ProtoMessage() {}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[508]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables.ProtoReflect.Descriptor instead.
func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 0}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables) GetQosVpnVxlanCarDisable() []*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable {
	if x != nil {
		return x.QosVpnVxlanCarDisable
	}
	return nil
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosVpnVxlanPhb *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs_QosVpnVxlanPhb `protobuf:"bytes,1,opt,name=qosVpnVxlanPhb,proto3" json:"qosVpnVxlanPhb,omitempty"`
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs) Reset() {
	*x = Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[509]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs) ProtoMessage() {}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[509]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs.ProtoReflect.Descriptor instead.
func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 1}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs) GetQosVpnVxlanPhb() *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs_QosVpnVxlanPhb {
	if x != nil {
		return x.QosVpnVxlanPhb
	}
	return nil
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosVpnVxlanPolicyApply []*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply `protobuf:"bytes,1,rep,name=qosVpnVxlanPolicyApply,proto3" json:"qosVpnVxlanPolicyApply,omitempty"`
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys) Reset() {
	*x = Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[510]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys) ProtoMessage() {}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[510]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys.ProtoReflect.Descriptor instead.
func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 2}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys) GetQosVpnVxlanPolicyApply() []*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply {
	if x != nil {
		return x.QosVpnVxlanPolicyApply
	}
	return nil
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosVpnVxlanTrust []*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust `protobuf:"bytes,1,rep,name=qosVpnVxlanTrust,proto3" json:"qosVpnVxlanTrust,omitempty"`
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts) Reset() {
	*x = Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[511]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts) ProtoMessage() {}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[511]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts.ProtoReflect.Descriptor instead.
func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 3}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts) GetQosVpnVxlanTrust() []*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust {
	if x != nil {
		return x.QosVpnVxlanTrust
	}
	return nil
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableSlot string                                                                            `protobuf:"bytes,1,opt,name=disableSlot,proto3" json:"disableSlot,omitempty"`
	ExcludeMode Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode `protobuf:"varint,2,opt,name=excludeMode,proto3,enum=huaweiV8R10_qos.Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode" json:"excludeMode,omitempty"`
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable) Reset() {
	*x = Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[512]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable) ProtoMessage() {}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[512]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable.ProtoReflect.Descriptor instead.
func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 0, 0}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable) GetDisableSlot() string {
	if x != nil {
		return x.DisableSlot
	}
	return ""
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable) GetExcludeMode() Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode {
	if x != nil {
		return x.ExcludeMode
	}
	return Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode_EXCLUDE
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs_QosVpnVxlanPhb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DsvpnName string `protobuf:"bytes,1,opt,name=dsvpnName,proto3" json:"dsvpnName,omitempty"`
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs_QosVpnVxlanPhb) Reset() {
	*x = Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs_QosVpnVxlanPhb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[513]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs_QosVpnVxlanPhb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs_QosVpnVxlanPhb) ProtoMessage() {}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs_QosVpnVxlanPhb) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[513]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs_QosVpnVxlanPhb.ProtoReflect.Descriptor instead.
func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs_QosVpnVxlanPhb) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 1, 0}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs_QosVpnVxlanPhb) GetDsvpnName() string {
	if x != nil {
		return x.DsvpnName
	}
	return ""
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosVpnVxlanPolicyStats *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats `protobuf:"bytes,1,opt,name=qosVpnVxlanPolicyStats,proto3" json:"qosVpnVxlanPolicyStats,omitempty"`
	Vpndirection           Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection            `protobuf:"varint,2,opt,name=vpndirection,proto3,enum=huaweiV8R10_qos.Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection" json:"vpndirection,omitempty"`
	Vpnlayer               Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer                `protobuf:"varint,3,opt,name=vpnlayer,proto3,enum=huaweiV8R10_qos.Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer" json:"vpnlayer,omitempty"`
	VpnpolicyName          string                                                                                          `protobuf:"bytes,4,opt,name=vpnpolicyName,proto3" json:"vpnpolicyName,omitempty"`
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply) Reset() {
	*x = Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[514]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply) ProtoMessage() {}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[514]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply.ProtoReflect.Descriptor instead.
func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 2, 0}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply) GetQosVpnVxlanPolicyStats() *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats {
	if x != nil {
		return x.QosVpnVxlanPolicyStats
	}
	return nil
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply) GetVpndirection() Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection {
	if x != nil {
		return x.Vpndirection
	}
	return Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection_INBOUND
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply) GetVpnlayer() Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer {
	if x != nil {
		return x.Vpnlayer
	}
	return Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer_LINK
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply) GetVpnpolicyName() string {
	if x != nil {
		return x.VpnpolicyName
	}
	return ""
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosVpnVxlanPolicyStat []*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat `protobuf:"bytes,1,rep,name=qosVpnVxlanPolicyStat,proto3" json:"qosVpnVxlanPolicyStat,omitempty"`
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats) Reset() {
	*x = Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[515]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats) ProtoMessage() {
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[515]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats.ProtoReflect.Descriptor instead.
func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 2, 0, 0}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats) GetQosVpnVxlanPolicyStat() []*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat {
	if x != nil {
		return x.QosVpnVxlanPolicyStat
	}
	return nil
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosVpnVxlanClassifierStats *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats `protobuf:"bytes,1,opt,name=qosVpnVxlanClassifierStats,proto3" json:"qosVpnVxlanClassifierStats,omitempty"`
	SlotId                     string                                                                                                                                           `protobuf:"bytes,2,opt,name=slotId,proto3" json:"slotId,omitempty"`
	VpnapplyTime               string                                                                                                                                           `protobuf:"bytes,3,opt,name=vpnapplyTime,proto3" json:"vpnapplyTime,omitempty"`
	VpnmatchByteRate           uint64                                                                                                                                           `protobuf:"varint,4,opt,name=vpnmatchByteRate,proto3" json:"vpnmatchByteRate,omitempty"`
	VpnmatchBytes              uint64                                                                                                                                           `protobuf:"varint,5,opt,name=vpnmatchBytes,proto3" json:"vpnmatchBytes,omitempty"`
	VpnmatchDropBytes          uint64                                                                                                                                           `protobuf:"varint,6,opt,name=vpnmatchDropBytes,proto3" json:"vpnmatchDropBytes,omitempty"`
	VpnmatchDropBytesRate      uint64                                                                                                                                           `protobuf:"varint,7,opt,name=vpnmatchDropBytesRate,proto3" json:"vpnmatchDropBytesRate,omitempty"`
	VpnmatchDropPkts           uint64                                                                                                                                           `protobuf:"varint,8,opt,name=vpnmatchDropPkts,proto3" json:"vpnmatchDropPkts,omitempty"`
	VpnmatchDropPktsRate       uint64                                                                                                                                           `protobuf:"varint,9,opt,name=vpnmatchDropPktsRate,proto3" json:"vpnmatchDropPktsRate,omitempty"`
	VpnmatchPackets            uint64                                                                                                                                           `protobuf:"varint,10,opt,name=vpnmatchPackets,proto3" json:"vpnmatchPackets,omitempty"`
	VpnmatchPassBytes          uint64                                                                                                                                           `protobuf:"varint,11,opt,name=vpnmatchPassBytes,proto3" json:"vpnmatchPassBytes,omitempty"`
	VpnmatchPassBytesRate      uint64                                                                                                                                           `protobuf:"varint,12,opt,name=vpnmatchPassBytesRate,proto3" json:"vpnmatchPassBytesRate,omitempty"`
	VpnmatchPassPkts           uint64                                                                                                                                           `protobuf:"varint,13,opt,name=vpnmatchPassPkts,proto3" json:"vpnmatchPassPkts,omitempty"`
	VpnmatchPassPktsRate       uint64                                                                                                                                           `protobuf:"varint,14,opt,name=vpnmatchPassPktsRate,proto3" json:"vpnmatchPassPktsRate,omitempty"`
	VpnmatchPktRate            uint64                                                                                                                                           `protobuf:"varint,15,opt,name=vpnmatchPktRate,proto3" json:"vpnmatchPktRate,omitempty"`
	VpnmissBytes               uint64                                                                                                                                           `protobuf:"varint,16,opt,name=vpnmissBytes,proto3" json:"vpnmissBytes,omitempty"`
	VpnmissBytesRate           uint64                                                                                                                                           `protobuf:"varint,17,opt,name=vpnmissBytesRate,proto3" json:"vpnmissBytesRate,omitempty"`
	VpnmissPackets             uint64                                                                                                                                           `protobuf:"varint,18,opt,name=vpnmissPackets,proto3" json:"vpnmissPackets,omitempty"`
	VpnmissPktsRate            uint64                                                                                                                                           `protobuf:"varint,19,opt,name=vpnmissPktsRate,proto3" json:"vpnmissPktsRate,omitempty"`
	VpnstatClearFlag           bool                                                                                                                                             `protobuf:"varint,20,opt,name=vpnstatClearFlag,proto3" json:"vpnstatClearFlag,omitempty"`
	VpnstatClearTime           string                                                                                                                                           `protobuf:"bytes,21,opt,name=vpnstatClearTime,proto3" json:"vpnstatClearTime,omitempty"`
	VpnstatEnableTime          string                                                                                                                                           `protobuf:"bytes,22,opt,name=vpnstatEnableTime,proto3" json:"vpnstatEnableTime,omitempty"`
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) Reset() {
	*x = Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[516]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) ProtoMessage() {
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[516]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat.ProtoReflect.Descriptor instead.
func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 2, 0, 0, 0}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetQosVpnVxlanClassifierStats() *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats {
	if x != nil {
		return x.QosVpnVxlanClassifierStats
	}
	return nil
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnapplyTime() string {
	if x != nil {
		return x.VpnapplyTime
	}
	return ""
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmatchByteRate() uint64 {
	if x != nil {
		return x.VpnmatchByteRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmatchBytes() uint64 {
	if x != nil {
		return x.VpnmatchBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmatchDropBytes() uint64 {
	if x != nil {
		return x.VpnmatchDropBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmatchDropBytesRate() uint64 {
	if x != nil {
		return x.VpnmatchDropBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmatchDropPkts() uint64 {
	if x != nil {
		return x.VpnmatchDropPkts
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmatchDropPktsRate() uint64 {
	if x != nil {
		return x.VpnmatchDropPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmatchPackets() uint64 {
	if x != nil {
		return x.VpnmatchPackets
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmatchPassBytes() uint64 {
	if x != nil {
		return x.VpnmatchPassBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmatchPassBytesRate() uint64 {
	if x != nil {
		return x.VpnmatchPassBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmatchPassPkts() uint64 {
	if x != nil {
		return x.VpnmatchPassPkts
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmatchPassPktsRate() uint64 {
	if x != nil {
		return x.VpnmatchPassPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmatchPktRate() uint64 {
	if x != nil {
		return x.VpnmatchPktRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmissBytes() uint64 {
	if x != nil {
		return x.VpnmissBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmissBytesRate() uint64 {
	if x != nil {
		return x.VpnmissBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmissPackets() uint64 {
	if x != nil {
		return x.VpnmissPackets
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnmissPktsRate() uint64 {
	if x != nil {
		return x.VpnmissPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnstatClearFlag() bool {
	if x != nil {
		return x.VpnstatClearFlag
	}
	return false
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnstatClearTime() string {
	if x != nil {
		return x.VpnstatClearTime
	}
	return ""
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat) GetVpnstatEnableTime() string {
	if x != nil {
		return x.VpnstatEnableTime
	}
	return ""
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosVpnVxlanClassifierStat []*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat `protobuf:"bytes,1,rep,name=qosVpnVxlanClassifierStat,proto3" json:"qosVpnVxlanClassifierStat,omitempty"`
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats) Reset() {
	*x = Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[517]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats) ProtoMessage() {
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[517]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats.ProtoReflect.Descriptor instead.
func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 2, 0, 0, 0, 0}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats) GetQosVpnVxlanClassifierStat() []*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat {
	if x != nil {
		return x.QosVpnVxlanClassifierStat
	}
	return nil
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastSuppressDropBytes     uint64 `protobuf:"varint,1,opt,name=broadcastSuppressDropBytes,proto3" json:"broadcastSuppressDropBytes,omitempty"`
	BroadcastSuppressDropBytesRate uint64 `protobuf:"varint,2,opt,name=broadcastSuppressDropBytesRate,proto3" json:"broadcastSuppressDropBytesRate,omitempty"`
	BroadcastSuppressDropPkts      uint64 `protobuf:"varint,3,opt,name=broadcastSuppressDropPkts,proto3" json:"broadcastSuppressDropPkts,omitempty"`
	BroadcastSuppressDropPktsRate  uint64 `protobuf:"varint,4,opt,name=broadcastSuppressDropPktsRate,proto3" json:"broadcastSuppressDropPktsRate,omitempty"`
	BroadcastSuppressPassBytes     uint64 `protobuf:"varint,5,opt,name=broadcastSuppressPassBytes,proto3" json:"broadcastSuppressPassBytes,omitempty"`
	BroadcastSuppressPassBytesRate uint64 `protobuf:"varint,6,opt,name=broadcastSuppressPassBytesRate,proto3" json:"broadcastSuppressPassBytesRate,omitempty"`
	BroadcastSuppressPassPkts      uint64 `protobuf:"varint,7,opt,name=broadcastSuppressPassPkts,proto3" json:"broadcastSuppressPassPkts,omitempty"`
	BroadcastSuppressPassPktsRate  uint64 `protobuf:"varint,8,opt,name=broadcastSuppressPassPktsRate,proto3" json:"broadcastSuppressPassPktsRate,omitempty"`
	MulticastSuppressDropBytes     uint64 `protobuf:"varint,9,opt,name=multicastSuppressDropBytes,proto3" json:"multicastSuppressDropBytes,omitempty"`
	MulticastSuppressDropBytesRate uint64 `protobuf:"varint,10,opt,name=multicastSuppressDropBytesRate,proto3" json:"multicastSuppressDropBytesRate,omitempty"`
	MulticastSuppressDropPkts      uint64 `protobuf:"varint,11,opt,name=multicastSuppressDropPkts,proto3" json:"multicastSuppressDropPkts,omitempty"`
	MulticastSuppressDropPktsRate  uint64 `protobuf:"varint,12,opt,name=multicastSuppressDropPktsRate,proto3" json:"multicastSuppressDropPktsRate,omitempty"`
	MulticastSuppressPassBytes     uint64 `protobuf:"varint,13,opt,name=multicastSuppressPassBytes,proto3" json:"multicastSuppressPassBytes,omitempty"`
	MulticastSuppressPassBytesRate uint64 `protobuf:"varint,14,opt,name=multicastSuppressPassBytesRate,proto3" json:"multicastSuppressPassBytesRate,omitempty"`
	MulticastSuppressPassPkts      uint64 `protobuf:"varint,15,opt,name=multicastSuppressPassPkts,proto3" json:"multicastSuppressPassPkts,omitempty"`
	MulticastSuppressPassPktsRate  uint64 `protobuf:"varint,16,opt,name=multicastSuppressPassPktsRate,proto3" json:"multicastSuppressPassPktsRate,omitempty"`
	SlotId                         string `protobuf:"bytes,17,opt,name=slotId,proto3" json:"slotId,omitempty"`
	UnknowUniSuppressDropBytes     uint64 `protobuf:"varint,18,opt,name=unknowUniSuppressDropBytes,proto3" json:"unknowUniSuppressDropBytes,omitempty"`
	UnknowUniSuppressDropBytesRate uint64 `protobuf:"varint,19,opt,name=unknowUniSuppressDropBytesRate,proto3" json:"unknowUniSuppressDropBytesRate,omitempty"`
	UnknowUniSuppressDropPkts      uint64 `protobuf:"varint,20,opt,name=unknowUniSuppressDropPkts,proto3" json:"unknowUniSuppressDropPkts,omitempty"`
	UnknowUniSuppressDropPktsRate  uint64 `protobuf:"varint,21,opt,name=unknowUniSuppressDropPktsRate,proto3" json:"unknowUniSuppressDropPktsRate,omitempty"`
	UnknowUniSuppressPassBytes     uint64 `protobuf:"varint,22,opt,name=unknowUniSuppressPassBytes,proto3" json:"unknowUniSuppressPassBytes,omitempty"`
	UnknowUniSuppressPassBytesRate uint64 `protobuf:"varint,23,opt,name=unknowUniSuppressPassBytesRate,proto3" json:"unknowUniSuppressPassBytesRate,omitempty"`
	UnknowUniSuppressPassPkts      uint64 `protobuf:"varint,24,opt,name=unknowUniSuppressPassPkts,proto3" json:"unknowUniSuppressPassPkts,omitempty"`
	UnknowUniSuppressPassPktsRate  uint64 `protobuf:"varint,25,opt,name=unknowUniSuppressPassPktsRate,proto3" json:"unknowUniSuppressPassPktsRate,omitempty"`
	VpncarBytes                    uint64 `protobuf:"varint,26,opt,name=vpncarBytes,proto3" json:"vpncarBytes,omitempty"`
	VpncarBytesRate                uint64 `protobuf:"varint,27,opt,name=vpncarBytesRate,proto3" json:"vpncarBytesRate,omitempty"`
	VpncarDropBytes                uint64 `protobuf:"varint,28,opt,name=vpncarDropBytes,proto3" json:"vpncarDropBytes,omitempty"`
	VpncarDropBytesRate            uint64 `protobuf:"varint,29,opt,name=vpncarDropBytesRate,proto3" json:"vpncarDropBytesRate,omitempty"`
	VpncarDropPkts                 uint64 `protobuf:"varint,30,opt,name=vpncarDropPkts,proto3" json:"vpncarDropPkts,omitempty"`
	VpncarDropPktsRate             uint64 `protobuf:"varint,31,opt,name=vpncarDropPktsRate,proto3" json:"vpncarDropPktsRate,omitempty"`
	VpncarGBytes                   uint64 `protobuf:"varint,32,opt,name=vpncarGBytes,proto3" json:"vpncarGBytes,omitempty"`
	VpncarGBytesRate               uint64 `protobuf:"varint,33,opt,name=vpncarGBytesRate,proto3" json:"vpncarGBytesRate,omitempty"`
	VpncarGPkts                    uint64 `protobuf:"varint,34,opt,name=vpncarGPkts,proto3" json:"vpncarGPkts,omitempty"`
	VpncarGPktsRate                uint64 `protobuf:"varint,35,opt,name=vpncarGPktsRate,proto3" json:"vpncarGPktsRate,omitempty"`
	VpncarPackets                  uint64 `protobuf:"varint,36,opt,name=vpncarPackets,proto3" json:"vpncarPackets,omitempty"`
	VpncarPassBytes                uint64 `protobuf:"varint,37,opt,name=vpncarPassBytes,proto3" json:"vpncarPassBytes,omitempty"`
	VpncarPassBytesRate            uint64 `protobuf:"varint,38,opt,name=vpncarPassBytesRate,proto3" json:"vpncarPassBytesRate,omitempty"`
	VpncarPassPkts                 uint64 `protobuf:"varint,39,opt,name=vpncarPassPkts,proto3" json:"vpncarPassPkts,omitempty"`
	VpncarPassPktsRate             uint64 `protobuf:"varint,40,opt,name=vpncarPassPktsRate,proto3" json:"vpncarPassPktsRate,omitempty"`
	VpncarPktsRate                 uint64 `protobuf:"varint,41,opt,name=vpncarPktsRate,proto3" json:"vpncarPktsRate,omitempty"`
	VpncarRBytes                   uint64 `protobuf:"varint,42,opt,name=vpncarRBytes,proto3" json:"vpncarRBytes,omitempty"`
	VpncarRBytesRate               uint64 `protobuf:"varint,43,opt,name=vpncarRBytesRate,proto3" json:"vpncarRBytesRate,omitempty"`
	VpncarRPkts                    uint64 `protobuf:"varint,44,opt,name=vpncarRPkts,proto3" json:"vpncarRPkts,omitempty"`
	VpncarRPktsRate                uint64 `protobuf:"varint,45,opt,name=vpncarRPktsRate,proto3" json:"vpncarRPktsRate,omitempty"`
	VpncarYBytes                   uint64 `protobuf:"varint,46,opt,name=vpncarYBytes,proto3" json:"vpncarYBytes,omitempty"`
	VpncarYBytesRate               uint64 `protobuf:"varint,47,opt,name=vpncarYBytesRate,proto3" json:"vpncarYBytesRate,omitempty"`
	VpncarYPkts                    uint64 `protobuf:"varint,48,opt,name=vpncarYPkts,proto3" json:"vpncarYPkts,omitempty"`
	VpncarYPktsRate                uint64 `protobuf:"varint,49,opt,name=vpncarYPktsRate,proto3" json:"vpncarYPktsRate,omitempty"`
	VpnclassifierName              string `protobuf:"bytes,50,opt,name=vpnclassifierName,proto3" json:"vpnclassifierName,omitempty"`
	VpnfilterBytes                 uint64 `protobuf:"varint,51,opt,name=vpnfilterBytes,proto3" json:"vpnfilterBytes,omitempty"`
	VpnfilterBytesRate             uint64 `protobuf:"varint,52,opt,name=vpnfilterBytesRate,proto3" json:"vpnfilterBytesRate,omitempty"`
	VpnfilterPackets               uint64 `protobuf:"varint,53,opt,name=vpnfilterPackets,proto3" json:"vpnfilterPackets,omitempty"`
	VpnfilterPktsRate              uint64 `protobuf:"varint,54,opt,name=vpnfilterPktsRate,proto3" json:"vpnfilterPktsRate,omitempty"`
	VpnmatchByteRt                 uint64 `protobuf:"varint,55,opt,name=vpnmatchByteRt,proto3" json:"vpnmatchByteRt,omitempty"`
	VpnmatchBytes                  uint64 `protobuf:"varint,56,opt,name=vpnmatchBytes,proto3" json:"vpnmatchBytes,omitempty"`
	VpnmatchDropBytes              uint64 `protobuf:"varint,57,opt,name=vpnmatchDropBytes,proto3" json:"vpnmatchDropBytes,omitempty"`
	VpnmatchDropBytesRate          uint64 `protobuf:"varint,58,opt,name=vpnmatchDropBytesRate,proto3" json:"vpnmatchDropBytesRate,omitempty"`
	VpnmatchDropPackets            uint64 `protobuf:"varint,59,opt,name=vpnmatchDropPackets,proto3" json:"vpnmatchDropPackets,omitempty"`
	VpnmatchDropPktsRate           uint64 `protobuf:"varint,60,opt,name=vpnmatchDropPktsRate,proto3" json:"vpnmatchDropPktsRate,omitempty"`
	VpnmatchPackets                uint64 `protobuf:"varint,61,opt,name=vpnmatchPackets,proto3" json:"vpnmatchPackets,omitempty"`
	VpnmatchPassBytes              uint64 `protobuf:"varint,62,opt,name=vpnmatchPassBytes,proto3" json:"vpnmatchPassBytes,omitempty"`
	VpnmatchPassBytesRate          uint64 `protobuf:"varint,63,opt,name=vpnmatchPassBytesRate,proto3" json:"vpnmatchPassBytesRate,omitempty"`
	VpnmatchPassPackets            uint64 `protobuf:"varint,64,opt,name=vpnmatchPassPackets,proto3" json:"vpnmatchPassPackets,omitempty"`
	VpnmatchPassPktsRate           uint64 `protobuf:"varint,65,opt,name=vpnmatchPassPktsRate,proto3" json:"vpnmatchPassPktsRate,omitempty"`
	VpnmatchPktRt                  uint64 `protobuf:"varint,66,opt,name=vpnmatchPktRt,proto3" json:"vpnmatchPktRt,omitempty"`
	VpnurpfDropBytes               uint64 `protobuf:"varint,67,opt,name=vpnurpfDropBytes,proto3" json:"vpnurpfDropBytes,omitempty"`
	VpnurpfDropBytesRate           uint64 `protobuf:"varint,68,opt,name=vpnurpfDropBytesRate,proto3" json:"vpnurpfDropBytesRate,omitempty"`
	VpnurpfDropPackets             uint64 `protobuf:"varint,69,opt,name=vpnurpfDropPackets,proto3" json:"vpnurpfDropPackets,omitempty"`
	VpnurpfDropPktsRate            uint64 `protobuf:"varint,70,opt,name=vpnurpfDropPktsRate,proto3" json:"vpnurpfDropPktsRate,omitempty"`
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) Reset() {
	*x = Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[518]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) ProtoMessage() {
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[518]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat.ProtoReflect.Descriptor instead.
func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 2, 0, 0, 0, 0, 0}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetBroadcastSuppressDropBytes() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetBroadcastSuppressDropBytesRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetBroadcastSuppressDropPkts() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropPkts
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetBroadcastSuppressDropPktsRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressDropPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetBroadcastSuppressPassBytes() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetBroadcastSuppressPassBytesRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetBroadcastSuppressPassPkts() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassPkts
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetBroadcastSuppressPassPktsRate() uint64 {
	if x != nil {
		return x.BroadcastSuppressPassPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetMulticastSuppressDropBytes() uint64 {
	if x != nil {
		return x.MulticastSuppressDropBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetMulticastSuppressDropBytesRate() uint64 {
	if x != nil {
		return x.MulticastSuppressDropBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetMulticastSuppressDropPkts() uint64 {
	if x != nil {
		return x.MulticastSuppressDropPkts
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetMulticastSuppressDropPktsRate() uint64 {
	if x != nil {
		return x.MulticastSuppressDropPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetMulticastSuppressPassBytes() uint64 {
	if x != nil {
		return x.MulticastSuppressPassBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetMulticastSuppressPassBytesRate() uint64 {
	if x != nil {
		return x.MulticastSuppressPassBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetMulticastSuppressPassPkts() uint64 {
	if x != nil {
		return x.MulticastSuppressPassPkts
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetMulticastSuppressPassPktsRate() uint64 {
	if x != nil {
		return x.MulticastSuppressPassPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetUnknowUniSuppressDropBytes() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetUnknowUniSuppressDropBytesRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetUnknowUniSuppressDropPkts() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropPkts
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetUnknowUniSuppressDropPktsRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressDropPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetUnknowUniSuppressPassBytes() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetUnknowUniSuppressPassBytesRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetUnknowUniSuppressPassPkts() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassPkts
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetUnknowUniSuppressPassPktsRate() uint64 {
	if x != nil {
		return x.UnknowUniSuppressPassPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarBytes() uint64 {
	if x != nil {
		return x.VpncarBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarBytesRate() uint64 {
	if x != nil {
		return x.VpncarBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarDropBytes() uint64 {
	if x != nil {
		return x.VpncarDropBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarDropBytesRate() uint64 {
	if x != nil {
		return x.VpncarDropBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarDropPkts() uint64 {
	if x != nil {
		return x.VpncarDropPkts
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarDropPktsRate() uint64 {
	if x != nil {
		return x.VpncarDropPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarGBytes() uint64 {
	if x != nil {
		return x.VpncarGBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarGBytesRate() uint64 {
	if x != nil {
		return x.VpncarGBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarGPkts() uint64 {
	if x != nil {
		return x.VpncarGPkts
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarGPktsRate() uint64 {
	if x != nil {
		return x.VpncarGPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarPackets() uint64 {
	if x != nil {
		return x.VpncarPackets
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarPassBytes() uint64 {
	if x != nil {
		return x.VpncarPassBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarPassBytesRate() uint64 {
	if x != nil {
		return x.VpncarPassBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarPassPkts() uint64 {
	if x != nil {
		return x.VpncarPassPkts
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarPassPktsRate() uint64 {
	if x != nil {
		return x.VpncarPassPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarPktsRate() uint64 {
	if x != nil {
		return x.VpncarPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarRBytes() uint64 {
	if x != nil {
		return x.VpncarRBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarRBytesRate() uint64 {
	if x != nil {
		return x.VpncarRBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarRPkts() uint64 {
	if x != nil {
		return x.VpncarRPkts
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarRPktsRate() uint64 {
	if x != nil {
		return x.VpncarRPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarYBytes() uint64 {
	if x != nil {
		return x.VpncarYBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarYBytesRate() uint64 {
	if x != nil {
		return x.VpncarYBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarYPkts() uint64 {
	if x != nil {
		return x.VpncarYPkts
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpncarYPktsRate() uint64 {
	if x != nil {
		return x.VpncarYPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnclassifierName() string {
	if x != nil {
		return x.VpnclassifierName
	}
	return ""
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnfilterBytes() uint64 {
	if x != nil {
		return x.VpnfilterBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnfilterBytesRate() uint64 {
	if x != nil {
		return x.VpnfilterBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnfilterPackets() uint64 {
	if x != nil {
		return x.VpnfilterPackets
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnfilterPktsRate() uint64 {
	if x != nil {
		return x.VpnfilterPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnmatchByteRt() uint64 {
	if x != nil {
		return x.VpnmatchByteRt
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnmatchBytes() uint64 {
	if x != nil {
		return x.VpnmatchBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnmatchDropBytes() uint64 {
	if x != nil {
		return x.VpnmatchDropBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnmatchDropBytesRate() uint64 {
	if x != nil {
		return x.VpnmatchDropBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnmatchDropPackets() uint64 {
	if x != nil {
		return x.VpnmatchDropPackets
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnmatchDropPktsRate() uint64 {
	if x != nil {
		return x.VpnmatchDropPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnmatchPackets() uint64 {
	if x != nil {
		return x.VpnmatchPackets
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnmatchPassBytes() uint64 {
	if x != nil {
		return x.VpnmatchPassBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnmatchPassBytesRate() uint64 {
	if x != nil {
		return x.VpnmatchPassBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnmatchPassPackets() uint64 {
	if x != nil {
		return x.VpnmatchPassPackets
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnmatchPassPktsRate() uint64 {
	if x != nil {
		return x.VpnmatchPassPktsRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnmatchPktRt() uint64 {
	if x != nil {
		return x.VpnmatchPktRt
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnurpfDropBytes() uint64 {
	if x != nil {
		return x.VpnurpfDropBytes
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnurpfDropBytesRate() uint64 {
	if x != nil {
		return x.VpnurpfDropBytesRate
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnurpfDropPackets() uint64 {
	if x != nil {
		return x.VpnurpfDropPackets
	}
	return 0
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat) GetVpnurpfDropPktsRate() uint64 {
	if x != nil {
		return x.VpnurpfDropPktsRate
	}
	return 0
}

type Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DsvpnName    string                                                                   `protobuf:"bytes,1,opt,name=dsvpnName,proto3" json:"dsvpnName,omitempty"`
	TrustvpnType Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType `protobuf:"varint,2,opt,name=trustvpnType,proto3,enum=huaweiV8R10_qos.Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType" json:"trustvpnType,omitempty"`
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust) Reset() {
	*x = Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[519]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust) ProtoMessage() {}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[519]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust.ProtoReflect.Descriptor instead.
func (*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 35, 0, 3, 0}
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust) GetDsvpnName() string {
	if x != nil {
		return x.DsvpnName
	}
	return ""
}

func (x *Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust) GetTrustvpnType() Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType {
	if x != nil {
		return x.TrustvpnType
	}
	return Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType_X_8021P
}

type Qos_QosWred_QosFlowWreds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosFlowWred []*Qos_QosWred_QosFlowWreds_QosFlowWred `protobuf:"bytes,1,rep,name=qosFlowWred,proto3" json:"qosFlowWred,omitempty"`
}

func (x *Qos_QosWred_QosFlowWreds) Reset() {
	*x = Qos_QosWred_QosFlowWreds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[520]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred_QosFlowWreds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred_QosFlowWreds) ProtoMessage() {}

func (x *Qos_QosWred_QosFlowWreds) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[520]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred_QosFlowWreds.ProtoReflect.Descriptor instead.
func (*Qos_QosWred_QosFlowWreds) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 0}
}

func (x *Qos_QosWred_QosFlowWreds) GetQosFlowWred() []*Qos_QosWred_QosFlowWreds_QosFlowWred {
	if x != nil {
		return x.QosFlowWred
	}
	return nil
}

type Qos_QosWred_QosPortWreds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosPortWred []*Qos_QosWred_QosPortWreds_QosPortWred `protobuf:"bytes,1,rep,name=qosPortWred,proto3" json:"qosPortWred,omitempty"`
}

func (x *Qos_QosWred_QosPortWreds) Reset() {
	*x = Qos_QosWred_QosPortWreds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[521]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred_QosPortWreds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred_QosPortWreds) ProtoMessage() {}

func (x *Qos_QosWred_QosPortWreds) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[521]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred_QosPortWreds.ProtoReflect.Descriptor instead.
func (*Qos_QosWred_QosPortWreds) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 1}
}

func (x *Qos_QosWred_QosPortWreds) GetQosPortWred() []*Qos_QosWred_QosPortWreds_QosPortWred {
	if x != nil {
		return x.QosPortWred
	}
	return nil
}

type Qos_QosWred_QosWredQueues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosWredQueue []*Qos_QosWred_QosWredQueues_QosWredQueue `protobuf:"bytes,1,rep,name=qosWredQueue,proto3" json:"qosWredQueue,omitempty"`
}

func (x *Qos_QosWred_QosWredQueues) Reset() {
	*x = Qos_QosWred_QosWredQueues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[522]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred_QosWredQueues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred_QosWredQueues) ProtoMessage() {}

func (x *Qos_QosWred_QosWredQueues) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[522]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred_QosWredQueues.ProtoReflect.Descriptor instead.
func (*Qos_QosWred_QosWredQueues) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 2}
}

func (x *Qos_QosWred_QosWredQueues) GetQosWredQueue() []*Qos_QosWred_QosWredQueues_QosWredQueue {
	if x != nil {
		return x.QosWredQueue
	}
	return nil
}

type Qos_QosWred_QosWreds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosWred []*Qos_QosWred_QosWreds_QosWred `protobuf:"bytes,1,rep,name=qosWred,proto3" json:"qosWred,omitempty"`
}

func (x *Qos_QosWred_QosWreds) Reset() {
	*x = Qos_QosWred_QosWreds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[523]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred_QosWreds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred_QosWreds) ProtoMessage() {}

func (x *Qos_QosWred_QosWreds) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[523]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred_QosWreds.ProtoReflect.Descriptor instead.
func (*Qos_QosWred_QosWreds) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 3}
}

func (x *Qos_QosWred_QosWreds) GetQosWred() []*Qos_QosWred_QosWreds_QosWred {
	if x != nil {
		return x.QosWred
	}
	return nil
}

type Qos_QosWred_QosFlowWreds_QosFlowWred struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowWredName  string                                              `protobuf:"bytes,1,opt,name=flowWredName,proto3" json:"flowWredName,omitempty"`
	QosWredColors *Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors `protobuf:"bytes,2,opt,name=qosWredColors,proto3" json:"qosWredColors,omitempty"`
	QueueDepth    uint32                                              `protobuf:"varint,3,opt,name=queueDepth,proto3" json:"queueDepth,omitempty"`
}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred) Reset() {
	*x = Qos_QosWred_QosFlowWreds_QosFlowWred{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[524]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred_QosFlowWreds_QosFlowWred) ProtoMessage() {}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[524]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred_QosFlowWreds_QosFlowWred.ProtoReflect.Descriptor instead.
func (*Qos_QosWred_QosFlowWreds_QosFlowWred) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 0, 0}
}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred) GetFlowWredName() string {
	if x != nil {
		return x.FlowWredName
	}
	return ""
}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred) GetQosWredColors() *Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors {
	if x != nil {
		return x.QosWredColors
	}
	return nil
}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred) GetQueueDepth() uint32 {
	if x != nil {
		return x.QueueDepth
	}
	return 0
}

type Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosWredColor []*Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor `protobuf:"bytes,1,rep,name=qosWredColor,proto3" json:"qosWredColor,omitempty"`
}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors) Reset() {
	*x = Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[525]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors) ProtoMessage() {}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[525]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors.ProtoReflect.Descriptor instead.
func (*Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 0, 0, 0}
}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors) GetQosWredColor() []*Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor {
	if x != nil {
		return x.QosWredColor
	}
	return nil
}

type Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color        Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color `protobuf:"varint,1,opt,name=color,proto3,enum=huaweiV8R10_qos.Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color" json:"color,omitempty"`
	DiscardPct   uint32                                                                `protobuf:"varint,2,opt,name=discardPct,proto3" json:"discardPct,omitempty"`
	HighLimitPct uint32                                                                `protobuf:"varint,3,opt,name=highLimitPct,proto3" json:"highLimitPct,omitempty"`
	LowLimitPct  uint32                                                                `protobuf:"varint,4,opt,name=lowLimitPct,proto3" json:"lowLimitPct,omitempty"`
}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor) Reset() {
	*x = Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[526]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor) ProtoMessage() {}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[526]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor.ProtoReflect.Descriptor instead.
func (*Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 0, 0, 0, 0}
}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor) GetColor() Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color {
	if x != nil {
		return x.Color
	}
	return Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color_GREEN
}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor) GetDiscardPct() uint32 {
	if x != nil {
		return x.DiscardPct
	}
	return 0
}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor) GetHighLimitPct() uint32 {
	if x != nil {
		return x.HighLimitPct
	}
	return 0
}

func (x *Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor) GetLowLimitPct() uint32 {
	if x != nil {
		return x.LowLimitPct
	}
	return 0
}

type Qos_QosWred_QosPortWreds_QosPortWred struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosWredColors *Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors `protobuf:"bytes,1,opt,name=qosWredColors,proto3" json:"qosWredColors,omitempty"`
	QueueDepth    uint32                                              `protobuf:"varint,2,opt,name=queueDepth,proto3" json:"queueDepth,omitempty"`
	WredName      string                                              `protobuf:"bytes,3,opt,name=wredName,proto3" json:"wredName,omitempty"`
}

func (x *Qos_QosWred_QosPortWreds_QosPortWred) Reset() {
	*x = Qos_QosWred_QosPortWreds_QosPortWred{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[527]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred_QosPortWreds_QosPortWred) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred_QosPortWreds_QosPortWred) ProtoMessage() {}

func (x *Qos_QosWred_QosPortWreds_QosPortWred) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[527]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred_QosPortWreds_QosPortWred.ProtoReflect.Descriptor instead.
func (*Qos_QosWred_QosPortWreds_QosPortWred) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 1, 0}
}

func (x *Qos_QosWred_QosPortWreds_QosPortWred) GetQosWredColors() *Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors {
	if x != nil {
		return x.QosWredColors
	}
	return nil
}

func (x *Qos_QosWred_QosPortWreds_QosPortWred) GetQueueDepth() uint32 {
	if x != nil {
		return x.QueueDepth
	}
	return 0
}

func (x *Qos_QosWred_QosPortWreds_QosPortWred) GetWredName() string {
	if x != nil {
		return x.WredName
	}
	return ""
}

type Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosWredColor []*Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor `protobuf:"bytes,1,rep,name=qosWredColor,proto3" json:"qosWredColor,omitempty"`
}

func (x *Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors) Reset() {
	*x = Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[528]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors) ProtoMessage() {}

func (x *Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[528]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors.ProtoReflect.Descriptor instead.
func (*Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 1, 0, 0}
}

func (x *Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors) GetQosWredColor() []*Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor {
	if x != nil {
		return x.QosWredColor
	}
	return nil
}

type Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color        Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color `protobuf:"varint,1,opt,name=color,proto3,enum=huaweiV8R10_qos.Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color" json:"color,omitempty"`
	DiscardPct   uint32                                                                `protobuf:"varint,2,opt,name=discardPct,proto3" json:"discardPct,omitempty"`
	HighLimitPct uint32                                                                `protobuf:"varint,3,opt,name=highLimitPct,proto3" json:"highLimitPct,omitempty"`
	LowLimitPct  uint32                                                                `protobuf:"varint,4,opt,name=lowLimitPct,proto3" json:"lowLimitPct,omitempty"`
}

func (x *Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor) Reset() {
	*x = Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[529]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor) ProtoMessage() {}

func (x *Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[529]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor.ProtoReflect.Descriptor instead.
func (*Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 1, 0, 0, 0}
}

func (x *Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor) GetColor() Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color {
	if x != nil {
		return x.Color
	}
	return Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color_GREEN
}

func (x *Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor) GetDiscardPct() uint32 {
	if x != nil {
		return x.DiscardPct
	}
	return 0
}

func (x *Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor) GetHighLimitPct() uint32 {
	if x != nil {
		return x.HighLimitPct
	}
	return 0
}

func (x *Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor) GetLowLimitPct() uint32 {
	if x != nil {
		return x.LowLimitPct
	}
	return 0
}

type Qos_QosWred_QosWredQueues_QosWredQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceClass Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass `protobuf:"varint,1,opt,name=serviceClass,proto3,enum=huaweiV8R10_qos.Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass" json:"serviceClass,omitempty"`
	SpeedType    Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType    `protobuf:"varint,2,opt,name=speedType,proto3,enum=huaweiV8R10_qos.Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType" json:"speedType,omitempty"`
	WredName     string                                              `protobuf:"bytes,3,opt,name=wredName,proto3" json:"wredName,omitempty"`
}

func (x *Qos_QosWred_QosWredQueues_QosWredQueue) Reset() {
	*x = Qos_QosWred_QosWredQueues_QosWredQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[530]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred_QosWredQueues_QosWredQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred_QosWredQueues_QosWredQueue) ProtoMessage() {}

func (x *Qos_QosWred_QosWredQueues_QosWredQueue) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[530]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred_QosWredQueues_QosWredQueue.ProtoReflect.Descriptor instead.
func (*Qos_QosWred_QosWredQueues_QosWredQueue) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 2, 0}
}

func (x *Qos_QosWred_QosWredQueues_QosWredQueue) GetServiceClass() Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass {
	if x != nil {
		return x.ServiceClass
	}
	return Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass_AF1
}

func (x *Qos_QosWred_QosWredQueues_QosWredQueue) GetSpeedType() Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType {
	if x != nil {
		return x.SpeedType
	}
	return Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType_BOTHSPEED
}

func (x *Qos_QosWred_QosWredQueues_QosWredQueue) GetWredName() string {
	if x != nil {
		return x.WredName
	}
	return ""
}

type Qos_QosWred_QosWreds_QosWred struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosWredColors *Qos_QosWred_QosWreds_QosWred_QosWredColors `protobuf:"bytes,1,opt,name=qosWredColors,proto3" json:"qosWredColors,omitempty"`
	QueueDepthPct uint32                                      `protobuf:"varint,2,opt,name=queueDepthPct,proto3" json:"queueDepthPct,omitempty"`
	WredName      string                                      `protobuf:"bytes,3,opt,name=wredName,proto3" json:"wredName,omitempty"`
}

func (x *Qos_QosWred_QosWreds_QosWred) Reset() {
	*x = Qos_QosWred_QosWreds_QosWred{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[531]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred_QosWreds_QosWred) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred_QosWreds_QosWred) ProtoMessage() {}

func (x *Qos_QosWred_QosWreds_QosWred) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[531]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred_QosWreds_QosWred.ProtoReflect.Descriptor instead.
func (*Qos_QosWred_QosWreds_QosWred) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 3, 0}
}

func (x *Qos_QosWred_QosWreds_QosWred) GetQosWredColors() *Qos_QosWred_QosWreds_QosWred_QosWredColors {
	if x != nil {
		return x.QosWredColors
	}
	return nil
}

func (x *Qos_QosWred_QosWreds_QosWred) GetQueueDepthPct() uint32 {
	if x != nil {
		return x.QueueDepthPct
	}
	return 0
}

func (x *Qos_QosWred_QosWreds_QosWred) GetWredName() string {
	if x != nil {
		return x.WredName
	}
	return ""
}

type Qos_QosWred_QosWreds_QosWred_QosWredColors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QosWredColor []*Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor `protobuf:"bytes,1,rep,name=qosWredColor,proto3" json:"qosWredColor,omitempty"`
}

func (x *Qos_QosWred_QosWreds_QosWred_QosWredColors) Reset() {
	*x = Qos_QosWred_QosWreds_QosWred_QosWredColors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[532]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred_QosWreds_QosWred_QosWredColors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred_QosWreds_QosWred_QosWredColors) ProtoMessage() {}

func (x *Qos_QosWred_QosWreds_QosWred_QosWredColors) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[532]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred_QosWreds_QosWred_QosWredColors.ProtoReflect.Descriptor instead.
func (*Qos_QosWred_QosWreds_QosWred_QosWredColors) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 3, 0, 0}
}

func (x *Qos_QosWred_QosWreds_QosWred_QosWredColors) GetQosWredColor() []*Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor {
	if x != nil {
		return x.QosWredColor
	}
	return nil
}

type Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color        Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color `protobuf:"varint,1,opt,name=color,proto3,enum=huaweiV8R10_qos.Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color" json:"color,omitempty"`
	DiscardPct   uint32                                                        `protobuf:"varint,2,opt,name=discardPct,proto3" json:"discardPct,omitempty"`
	HighLimitPct uint32                                                        `protobuf:"varint,3,opt,name=highLimitPct,proto3" json:"highLimitPct,omitempty"`
	LowLimitPct  uint32                                                        `protobuf:"varint,4,opt,name=lowLimitPct,proto3" json:"lowLimitPct,omitempty"`
}

func (x *Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor) Reset() {
	*x = Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_qos_proto_msgTypes[533]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor) ProtoMessage() {}

func (x *Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_qos_proto_msgTypes[533]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor.ProtoReflect.Descriptor instead.
func (*Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_qos_proto_rawDescGZIP(), []int{23, 36, 3, 0, 0, 0}
}

func (x *Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor) GetColor() Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color {
	if x != nil {
		return x.Color
	}
	return Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color_GREEN
}

func (x *Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor) GetDiscardPct() uint32 {
	if x != nil {
		return x.DiscardPct
	}
	return 0
}

func (x *Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor) GetHighLimitPct() uint32 {
	if x != nil {
		return x.HighLimitPct
	}
	return 0
}

func (x *Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor) GetLowLimitPct() uint32 {
	if x != nil {
		return x.LowLimitPct
	}
	return 0
}

var File_huaweiV8R10_qos_proto protoreflect.FileDescriptor

var file_huaweiV8R10_qos_proto_rawDesc = []byte{
	0x0a, 0x15, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x2d, 0x71, 0x6f,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x22, 0x91, 0x03, 0x0a, 0x1a, 0x51, 0x6f, 0x73,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x54, 0x4d, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x5c, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x41, 0x54, 0x4d, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x76, 0x63, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x63, 0x69, 0x12,
	0x10, 0x0a, 0x03, 0x76, 0x70, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x70,
	0x69, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07,
	0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0xd5, 0x01, 0x0a,
	0x1c, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5b, 0x0a, 0x0b, 0x62, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x64, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x62, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x0b, 0x42, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x64,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x01, 0x22, 0xdf, 0x01, 0x0a, 0x21, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x60, 0x0a, 0x0b, 0x62, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x64, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x62, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x0b, 0x42, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14,
	0x42, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22, 0xd8, 0x01, 0x0a, 0x23, 0x51, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x76, 0x70, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x65, 0x76, 0x70, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x65, 0x76,
	0x70, 0x6c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x42, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x45, 0x76, 0x70, 0x6c,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x76, 0x70, 0x6c, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x65, 0x76, 0x70, 0x6c, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x0d, 0x45, 0x76, 0x70, 0x6c, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x76, 0x70, 0x6c, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x00, 0x22, 0xaf, 0x01, 0x0a, 0x1b, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x54, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x01, 0x22, 0x31, 0x0a, 0x17, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x48,
	0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x46,
	0x47, 0x51, 0x53, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x01, 0x22, 0xb9, 0x01, 0x0a, 0x14, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x49, 0x66, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x66, 0x43, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49,
	0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01,
	0x22, 0xf3, 0x01, 0x0a, 0x13, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x66, 0x47,
	0x51, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x43,
	0x65, 0x56, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x70, 0x70,
	0x43, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x50, 0x65, 0x56,
	0x6c, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x70, 0x70, 0x50, 0x65,
	0x56, 0x6c, 0x61, 0x6e, 0x12, 0x4c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x49, 0x66, 0x47, 0x51, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16,
	0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22, 0xd7, 0x01, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x66,
	0x51, 0x70, 0x70, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x50, 0x50, 0x52, 0x45, 0x43,
	0x45, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02,
	0x22, 0xb7, 0x01, 0x0a, 0x13, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x66, 0x53,
	0x51, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x66, 0x53, 0x51, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a,
	0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22, 0xed, 0x02, 0x0a, 0x1a, 0x51,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x5c, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22,
	0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53,
	0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1a,
	0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e,
	0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0x33, 0x0a, 0x19, 0x51, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x76, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xdf, 0x01, 0x0a, 0x1a, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x35, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x01, 0x22, 0xee, 0x03, 0x0a, 0x18, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x09, 0x69, 0x73, 0x6f, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x73, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x09,
	0x69, 0x73, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x5a, 0x0a, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x30, 0x0a, 0x09, 0x49, 0x73, 0x6f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x73, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f,
	0x4e, 0x4f, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x73, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x59, 0x45, 0x53, 0x10, 0x01, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10,
	0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x10, 0x08, 0x22, 0xbb, 0x01, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x55, 0x53, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x30, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x55, 0x53, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49,
	0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01,
	0x22, 0xe5, 0x02, 0x0a, 0x16, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0xd8, 0x01,
	0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10,
	0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0xf1, 0x02, 0x0a, 0x1c, 0x51, 0x6f, 0x73,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f,
	0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x69,
	0x64, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07,
	0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0xd4, 0x01, 0x0a,
	0x18, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x56, 0x4f, 0x51,
	0x53, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x69, 0x64, 0x12,
	0x4b, 0x0a, 0x07, 0x76, 0x6f, 0x71, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x31, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x56,
	0x4f, 0x51, 0x53, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x6f, 0x71, 0x46,
	0x6c, 0x61, 0x67, 0x52, 0x07, 0x76, 0x6f, 0x71, 0x46, 0x6c, 0x61, 0x67, 0x22, 0x35, 0x0a, 0x07,
	0x56, 0x6f, 0x71, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x6f, 0x71, 0x46, 0x6c,
	0x61, 0x67, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x56, 0x6f, 0x71, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53,
	0x54, 0x10, 0x01, 0x22, 0x33, 0x0a, 0x19, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x53, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x14, 0x51, 0x6f, 0x73,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x56, 0x6e, 0x69, 0x47, 0x51, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4d, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x56,
	0x6e, 0x69, 0x47, 0x51, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x6e, 0x69, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x76, 0x6e, 0x69, 0x49, 0x44, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x01, 0x22, 0xe9, 0x01, 0x0a, 0x22, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x56,
	0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x70, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x70, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x64, 0x0a, 0x0c, 0x76, 0x70, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56,
	0x70, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x76, 0x70, 0x6e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x0c, 0x56, 0x70, 0x6e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x70, 0x6e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x56, 0x70, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xb8, 0xce, 0x0b, 0x0a, 0x03, 0x51, 0x6f, 0x73,
	0x12, 0x2d, 0x0a, 0x04, 0x68, 0x71, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x52, 0x04, 0x68, 0x71, 0x6f, 0x73, 0x12,
	0x51, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x72, 0x61,
	0x43, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x72, 0x61, 0x43, 0x66, 0x73,
	0x52, 0x10, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x72, 0x61, 0x43,
	0x66, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x71, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x44, 0x51, 0x6f, 0x73, 0x73, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73,
	0x12, 0x3f, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x42, 0x61, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x61,
	0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x42, 0x61, 0x48, 0x6f, 0x73, 0x74,
	0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x71, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62,
	0x51, 0x6f, 0x73, 0x52, 0x08, 0x71, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x12, 0x60, 0x0a,
	0x15, 0x71, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x54, 0x6d, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x54, 0x6d, 0x70, 0x73, 0x52, 0x15, 0x71, 0x6f, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x6d, 0x70, 0x73, 0x12,
	0x33, 0x0a, 0x06, 0x71, 0x6f, 0x73, 0x44, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x73, 0x52, 0x06, 0x71, 0x6f,
	0x73, 0x44, 0x73, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51,
	0x6f, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x73, 0x52, 0x0b, 0x71, 0x6f, 0x73,
	0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x73, 0x12, 0x51, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x71,
	0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x51, 0x70, 0x70, 0x62, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x51, 0x70, 0x70, 0x62, 0x73, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x51, 0x70, 0x70, 0x62, 0x73, 0x12, 0x5a, 0x0a, 0x13, 0x71, 0x6f, 0x73, 0x48,
	0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48,
	0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x73, 0x52,
	0x13, 0x71, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x41, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x73, 0x12, 0x48, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x43,
	0x66, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x43, 0x66, 0x67, 0x73, 0x52, 0x0d, 0x71,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x43, 0x66, 0x67, 0x73, 0x12, 0x42, 0x0a, 0x0b,
	0x71, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x42, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x77, 0x4c, 0x61, 0x45, 0x6e, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c,
	0x6f, 0x77, 0x4c, 0x61, 0x45, 0x6e, 0x73, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x77, 0x4c,
	0x61, 0x45, 0x6e, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x52, 0x0b, 0x71, 0x6f, 0x73,
	0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x12, 0x57, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x4c,
	0x73, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73,
	0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x52, 0x12, 0x71,
	0x6f, 0x73, 0x4c, 0x73, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x12, 0x4b, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x50, 0x51, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x50, 0x51, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x0e,
	0x71, 0x6f, 0x73, 0x50, 0x51, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x4b,
	0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x50, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x0e, 0x71, 0x6f, 0x73,
	0x50, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x10, 0x71,
	0x6f, 0x73, 0x50, 0x69, 0x72, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50,
	0x69, 0x72, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x10, 0x71, 0x6f,
	0x73, 0x50, 0x69, 0x72, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x60,
	0x0a, 0x15, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x70, 0x4f, 0x6e, 0x6c, 0x79, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x70, 0x4f, 0x6e, 0x6c, 0x79, 0x73, 0x52, 0x15, 0x71, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x70, 0x4f, 0x6e, 0x6c, 0x79, 0x73,
	0x12, 0x60, 0x0a, 0x15, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x15, 0x71, 0x6f, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x51, 0x70, 0x70, 0x62, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x51, 0x70, 0x70, 0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x52,
	0x0e, 0x71, 0x6f, 0x73, 0x51, 0x70, 0x70, 0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x12,
	0x4e, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x46, 0x6c,
	0x74, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x52, 0x64, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x46, 0x6c, 0x74, 0x73, 0x52, 0x0f,
	0x71, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x46, 0x6c, 0x74, 0x73, 0x12,
	0x4e, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x52, 0x0f,
	0x71, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x12,
	0x5d, 0x0a, 0x14, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x52, 0x14, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x57,
	0x0a, 0x12, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x50, 0x72, 0x65, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50,
	0x72, 0x65, 0x73, 0x52, 0x12, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x12, 0x6c, 0x0a, 0x19, 0x71, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x41, 0x70, 0x70, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x52, 0x19, 0x71, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x41, 0x70, 0x70, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x43, 0x76, 0x67, 0x50, 0x63, 0x64, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x76, 0x67, 0x50, 0x63,
	0x64, 0x73, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x76, 0x67, 0x50, 0x63,
	0x64, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x73, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x73, 0x12, 0x63, 0x0a, 0x16, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x44,
	0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x52,
	0x16, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x52, 0x0b,
	0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x12, 0x51, 0x0a, 0x10, 0x71,
	0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x10, 0x71, 0x6f,
	0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x4b,
	0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73,
	0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x0e, 0x71, 0x6f, 0x73,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x71,
	0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73,
	0x52, 0x0a, 0x71, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x07,
	0x71, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x52, 0x07, 0x71, 0x6f, 0x73,
	0x57, 0x72, 0x65, 0x64, 0x1a, 0xeb, 0xa8, 0x02, 0x0a, 0x04, 0x48, 0x71, 0x6f, 0x73, 0x12, 0x56,
	0x0a, 0x10, 0x68, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x10, 0x68, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x50, 0x0a, 0x0e, 0x68, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x0e, 0x68, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x62, 0x0a, 0x14, 0x68, 0x71, 0x6f, 0x73,
	0x46, 0x6f, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x14, 0x68, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72,
	0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x56, 0x0a, 0x10,
	0x68, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x52, 0x10, 0x68, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x13, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x54, 0x65, 0x6d, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73,
	0x52, 0x13, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x73, 0x12, 0x50, 0x0a, 0x0e, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x73, 0x52, 0x0e, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x73, 0x12, 0x59, 0x0a, 0x11, 0x68, 0x71, 0x6f, 0x73, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x52,
	0x11, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x73, 0x12, 0x4a, 0x0a, 0x0c, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x52, 0x0c, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x62,
	0x0a, 0x14, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x14, 0x68, 0x71,
	0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x5f, 0x0a, 0x13, 0x68, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x13,
	0x68, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x73, 0x12, 0x65, 0x0a, 0x15, 0x68, 0x71, 0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f,
	0x53, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x52, 0x15, 0x68, 0x71, 0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50,
	0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0xf7, 0x08, 0x0a, 0x10, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x64, 0x0a, 0x0f, 0x68, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x68, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0xfc, 0x07, 0x0a, 0x0f, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6c, 0x6f,
	0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x6b, 0x0a, 0x0c, 0x68, 0x71, 0x6f, 0x73, 0x46, 0x4d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x0c, 0x68, 0x71, 0x6f, 0x73, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0xd1, 0x06, 0x0a, 0x0c, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x75, 0x0a, 0x0b, 0x68, 0x71, 0x6f, 0x73, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0b, 0x68, 0x71, 0x6f,
	0x73, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0xc9, 0x05, 0x0a, 0x0b, 0x48, 0x71, 0x6f,
	0x73, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x8a, 0x01, 0x0a, 0x0e, 0x63, 0x71, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x62, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46,
	0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x43, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0e, 0x63, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x8a, 0x01, 0x0a, 0x0e, 0x66, 0x71, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x62,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46,
	0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46,
	0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x4d, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x2e, 0x46, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x0e, 0x66, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x0e, 0x43, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x43, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x16, 0x0a,
	0x12, 0x43, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12,
	0x43, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43,
	0x53, 0x36, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11,
	0x43, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45,
	0x46, 0x10, 0x07, 0x22, 0xce, 0x01, 0x0a, 0x0e, 0x46, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x71, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x16,
	0x0a, 0x12, 0x46, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x71, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x16,
	0x0a, 0x12, 0x46, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x71, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x16, 0x0a,
	0x12, 0x46, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x15, 0x0a,
	0x11, 0x46, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x45, 0x46, 0x10, 0x07, 0x1a, 0xc8, 0x5d, 0x0a, 0x0e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x0d, 0x68, 0x71, 0x6f, 0x73, 0x46,
	0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x0d, 0x68, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x1a, 0xd7, 0x5c, 0x0a, 0x0d, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x66, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x8e, 0x01,
	0x0a, 0x19, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x50, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x73, 0x52, 0x19, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x8e,
	0x01, 0x0a, 0x19, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x50, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x19, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x6d, 0x0a, 0x0e, 0x68, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x34, 0x63, 0x6f, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x34, 0x43, 0x6f, 0x73, 0x73, 0x52, 0x0e,
	0x68, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x34, 0x63, 0x6f, 0x73, 0x73, 0x12, 0x79,
	0x0a, 0x12, 0x68, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x73, 0x52, 0x12, 0x68, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x73, 0x12, 0x61, 0x0a, 0x0a, 0x68, 0x71, 0x6f,
	0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x52, 0x0a, 0x68, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x6a, 0x0a, 0x0d,
	0x68, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x6d, 0x44, 0x73, 0x63, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x52, 0x64, 0x6d, 0x44, 0x73, 0x63, 0x72, 0x64, 0x73, 0x52, 0x0d, 0x68, 0x71, 0x6f, 0x73, 0x52,
	0x64, 0x6d, 0x44, 0x73, 0x63, 0x72, 0x64, 0x73, 0x12, 0x76, 0x0a, 0x11, 0x68, 0x71, 0x6f, 0x73,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x73, 0x52, 0x11, 0x68,
	0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x73,
	0x12, 0x79, 0x0a, 0x12, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x52, 0x64, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x73, 0x52, 0x12, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x73, 0x12, 0x70, 0x0a, 0x0f, 0x68,
	0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x52, 0x0f, 0x68, 0x71,
	0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x12, 0x6d, 0x0a,
	0x0e, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x66, 0x71, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x66, 0x71, 0x52, 0x0e, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x66, 0x71, 0x1a, 0xf2, 0x03, 0x0a,
	0x19, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x12, 0xa5, 0x01, 0x0a, 0x18, 0x68,
	0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x69, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x18, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x1a, 0xac, 0x02, 0x0a, 0x18, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0xa9, 0x01, 0x0a, 0x11,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x7b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x48, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x14,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x5f, 0x50, 0x51, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x57, 0x46, 0x51, 0x10,
	0x01, 0x1a, 0x81, 0x10, 0x0a, 0x19, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0xa5, 0x01, 0x0a, 0x18, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x69, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x18, 0x68,
	0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0xbb, 0x0e, 0x0a, 0x18, 0x48, 0x71, 0x6f, 0x73,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x12, 0x7f, 0x0a, 0x03, 0x61, 0x66, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x6d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x66, 0x31,
	0x52, 0x03, 0x61, 0x66, 0x31, 0x12, 0x7f, 0x0a, 0x03, 0x61, 0x66, 0x32, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x6d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x66,
	0x32, 0x52, 0x03, 0x61, 0x66, 0x32, 0x12, 0x7f, 0x0a, 0x03, 0x61, 0x66, 0x33, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x6d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x41,
	0x66, 0x33, 0x52, 0x03, 0x61, 0x66, 0x33, 0x12, 0x7f, 0x0a, 0x03, 0x61, 0x66, 0x34, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x6d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x41, 0x66, 0x34, 0x52, 0x03, 0x61, 0x66, 0x34, 0x12, 0x7c, 0x0a, 0x02, 0x62, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x6c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x42, 0x65, 0x52, 0x02, 0x62, 0x65, 0x12, 0x7f, 0x0a, 0x03, 0x63, 0x73, 0x36, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x6d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x43,
	0x73, 0x36, 0x52, 0x03, 0x63, 0x73, 0x36, 0x12, 0x7f, 0x0a, 0x03, 0x63, 0x73, 0x37, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x6d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x43, 0x73, 0x37, 0x52, 0x03, 0x63, 0x73, 0x37, 0x12, 0x7c, 0x0a, 0x02, 0x65, 0x66, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x6c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x45, 0x66, 0x52, 0x02, 0x65, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x62, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x62, 0x73, 0x12, 0xa9, 0x01, 0x0a, 0x11, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x7b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x70, 0x49, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x70, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53,
	0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67,
	0x2e, 0x53, 0x68, 0x61, 0x70, 0x49, 0x64, 0x52, 0x06, 0x73, 0x68, 0x61, 0x70, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50,
	0x69, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x53,
	0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x22, 0x0a, 0x03, 0x41, 0x66, 0x31, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x66, 0x31, 0x5f,
	0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x66, 0x31, 0x5f, 0x54,
	0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x03, 0x41, 0x66, 0x32, 0x12, 0x0d, 0x0a, 0x09,
	0x41, 0x66, 0x32, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x66, 0x32, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x03, 0x41, 0x66, 0x33,
	0x12, 0x0d, 0x0a, 0x09, 0x41, 0x66, 0x33, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x41, 0x66, 0x33, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a,
	0x03, 0x41, 0x66, 0x34, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x66, 0x34, 0x5f, 0x46, 0x41, 0x4c, 0x53,
	0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x66, 0x34, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10,
	0x01, 0x22, 0x1f, 0x0a, 0x02, 0x42, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x65, 0x5f, 0x46, 0x41,
	0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x65, 0x5f, 0x54, 0x52, 0x55, 0x45,
	0x10, 0x01, 0x22, 0x22, 0x0a, 0x03, 0x43, 0x73, 0x36, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x73, 0x36,
	0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x73, 0x36, 0x5f,
	0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x03, 0x43, 0x73, 0x37, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x73, 0x37, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x73, 0x37, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x1f, 0x0a, 0x02, 0x45, 0x66,
	0x12, 0x0c, 0x0a, 0x08, 0x45, 0x66, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x45, 0x66, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x48, 0x0a, 0x11, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x50, 0x51, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f,
	0x57, 0x46, 0x51, 0x10, 0x01, 0x22, 0x2e, 0x0a, 0x06, 0x53, 0x68, 0x61, 0x70, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x0a, 0x53, 0x68, 0x61, 0x70, 0x49, 0x64, 0x5f, 0x58, 0x5f, 0x31, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x68, 0x61, 0x70, 0x49, 0x64, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x10, 0x01, 0x1a, 0xf8, 0x05, 0x0a, 0x0e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x34, 0x43, 0x6f, 0x73, 0x73, 0x12, 0x79, 0x0a, 0x0d, 0x68, 0x71, 0x6f, 0x73,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x34, 0x63, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x53, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46,
	0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x34, 0x43, 0x6f, 0x73, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x34, 0x43, 0x6f, 0x73, 0x52, 0x0d, 0x68, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x34,
	0x63, 0x6f, 0x73, 0x1a, 0xea, 0x04, 0x0a, 0x0d, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x34, 0x43, 0x6f, 0x73, 0x12, 0x78, 0x0a, 0x08, 0x63, 0x6f, 0x73, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x34, 0x43, 0x6f, 0x73, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x34, 0x43, 0x6f, 0x73, 0x2e, 0x43, 0x6f, 0x73,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x62,
	0x73, 0x12, 0x93, 0x01, 0x0a, 0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x65, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x34,
	0x43, 0x6f, 0x73, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x34, 0x43,
	0x6f, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x61, 0x70, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e,
	0x67, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x68,
	0x61, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x72, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x72, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x08, 0x43, 0x6f, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x11, 0x0a, 0x0d, 0x43, 0x6f, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x43, 0x4f, 0x53, 0x30,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6f, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x43,
	0x4f, 0x53, 0x31, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6f, 0x73, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x43, 0x4f, 0x53, 0x32, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6f, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x43, 0x4f, 0x53, 0x33, 0x10, 0x03, 0x22, 0x63, 0x0a, 0x11, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x19, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4c, 0x50, 0x51, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x5f, 0x50, 0x51, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x57, 0x46, 0x51, 0x10, 0x02,
	0x1a, 0x9c, 0x05, 0x0a, 0x12, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x73, 0x12, 0x89, 0x01, 0x0a, 0x11, 0x68, 0x71, 0x6f, 0x73,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x11, 0x68, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x1a, 0xf9, 0x03, 0x0a, 0x11, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x8c, 0x01, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x68, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x2c,
	0x0a, 0x11, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x68, 0x61, 0x70, 0x69,
	0x6e, 0x67, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x72, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x72, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46,
	0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43,
	0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x1a,
	0xdf, 0x09, 0x0a, 0x0a, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x69,
	0x0a, 0x09, 0x68, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x4b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x09,
	0x68, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x1a, 0xe5, 0x08, 0x0a, 0x09, 0x48, 0x71,
	0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x72,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x63, 0x61, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x73, 0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x55, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x4c, 0x6f, 0x77, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x52, 0x09, 0x6c, 0x6f, 0x77, 0x6a, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x12, 0x76, 0x0a, 0x0a, 0x6c, 0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x56, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x4c, 0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x0a, 0x6c, 0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x62, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x62, 0x73, 0x12, 0x8b,
	0x01, 0x0a, 0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5d, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x11, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x7c, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x58, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68,
	0x61, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x72,
	0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x72,
	0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x09, 0x4c, 0x6f, 0x77, 0x6a, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x6f, 0x77, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x6f,
	0x77, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x22, 0x3b, 0x0a, 0x0a, 0x4c, 0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16,
	0x0a, 0x12, 0x4c, 0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x44, 0x49, 0x53,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x6f, 0x77, 0x6c, 0x61, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x22, 0x63, 0x0a,
	0x11, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4c, 0x50, 0x51, 0x10, 0x00, 0x12, 0x18, 0x0a,
	0x14, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x5f, 0x50, 0x51, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x57, 0x46, 0x51,
	0x10, 0x02, 0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10,
	0x07, 0x1a, 0xf7, 0x03, 0x0a, 0x0d, 0x48, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x6d, 0x44, 0x73, 0x63,
	0x72, 0x64, 0x73, 0x12, 0x75, 0x0a, 0x0c, 0x68, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x6d, 0x44, 0x73,
	0x63, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x6d, 0x44, 0x73, 0x63, 0x72, 0x64, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x6d, 0x44, 0x73, 0x63, 0x72, 0x64, 0x52, 0x0c, 0x68, 0x71,
	0x6f, 0x73, 0x52, 0x64, 0x6d, 0x44, 0x73, 0x63, 0x72, 0x64, 0x1a, 0xee, 0x02, 0x0a, 0x0c, 0x48,
	0x71, 0x6f, 0x73, 0x52, 0x64, 0x6d, 0x44, 0x73, 0x63, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x64, 0x6d, 0x44, 0x73, 0x63, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x64, 0x6d, 0x44, 0x73, 0x63, 0x72, 0x64, 0x12, 0x82, 0x01, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5e,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x6d, 0x44, 0x73,
	0x63, 0x72, 0x64, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x6d, 0x44, 0x73, 0x63, 0x72,
	0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0xbc, 0x01, 0x0a,
	0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46,
	0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x1a, 0xa1, 0x0d, 0x0a, 0x11,
	0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44,
	0x73, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53,
	0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x49, 0x44, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x52, 0x10, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x1a, 0x83, 0x0c, 0x0a, 0x10, 0x48, 0x71,
	0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x12, 0x6f,
	0x0a, 0x03, 0x61, 0x66, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5d, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x49, 0x44, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53,
	0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x2e, 0x41, 0x66, 0x31, 0x52, 0x03, 0x61, 0x66, 0x31, 0x12,
	0x6f, 0x0a, 0x03, 0x61, 0x66, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5d, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x49, 0x44, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x2e, 0x41, 0x66, 0x32, 0x52, 0x03, 0x61, 0x66, 0x32,
	0x12, 0x6f, 0x0a, 0x03, 0x61, 0x66, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5d, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53,
	0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x2e, 0x41, 0x66, 0x33, 0x52, 0x03, 0x61, 0x66,
	0x33, 0x12, 0x6f, 0x0a, 0x03, 0x61, 0x66, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5d,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x2e, 0x41, 0x66, 0x34, 0x52, 0x03, 0x61,
	0x66, 0x34, 0x12, 0x6c, 0x0a, 0x02, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5c,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x2e, 0x42, 0x65, 0x52, 0x02, 0x62, 0x65,
	0x12, 0x6f, 0x0a, 0x03, 0x63, 0x73, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5d, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53,
	0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x2e, 0x43, 0x73, 0x36, 0x52, 0x03, 0x63, 0x73,
	0x36, 0x12, 0x6f, 0x0a, 0x03, 0x63, 0x73, 0x37, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5d,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x2e, 0x43, 0x73, 0x37, 0x52, 0x03, 0x63,
	0x73, 0x37, 0x12, 0x6c, 0x0a, 0x02, 0x65, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5c,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x2e, 0x45, 0x66, 0x52, 0x02, 0x65, 0x66,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x62, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70,
	0x62, 0x73, 0x12, 0x99, 0x01, 0x0a, 0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x6b,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x44, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x11, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x69,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x22, 0x0a, 0x03, 0x41, 0x66, 0x31, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x66, 0x31, 0x5f, 0x46,
	0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x66, 0x31, 0x5f, 0x54, 0x52,
	0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x03, 0x41, 0x66, 0x32, 0x12, 0x0d, 0x0a, 0x09, 0x41,
	0x66, 0x32, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x66,
	0x32, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x03, 0x41, 0x66, 0x33, 0x12,
	0x0d, 0x0a, 0x09, 0x41, 0x66, 0x33, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x66, 0x33, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x03,
	0x41, 0x66, 0x34, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x66, 0x34, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x66, 0x34, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01,
	0x22, 0x1f, 0x0a, 0x02, 0x42, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x65, 0x5f, 0x46, 0x41, 0x4c,
	0x53, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x65, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10,
	0x01, 0x22, 0x22, 0x0a, 0x03, 0x43, 0x73, 0x36, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x73, 0x36, 0x5f,
	0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x73, 0x36, 0x5f, 0x54,
	0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x03, 0x43, 0x73, 0x37, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x73, 0x37, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x73, 0x37, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x1f, 0x0a, 0x02, 0x45, 0x66, 0x12,
	0x0c, 0x0a, 0x08, 0x45, 0x66, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x45, 0x66, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x63, 0x0a, 0x11, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x19, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4c, 0x50, 0x51, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f,
	0x50, 0x51, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x57, 0x46, 0x51, 0x10, 0x02, 0x1a,
	0xfe, 0x0a, 0x0a, 0x12, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x52, 0x64, 0x6d, 0x73, 0x12, 0x89, 0x01, 0x0a, 0x11, 0x68, 0x71, 0x6f, 0x73, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x52,
	0x11, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52,
	0x64, 0x6d, 0x1a, 0xdb, 0x09, 0x0a, 0x11, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x12, 0x71, 0x0a, 0x03, 0x61, 0x66, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52,
	0x64, 0x6d, 0x2e, 0x41, 0x66, 0x31, 0x52, 0x03, 0x61, 0x66, 0x31, 0x12, 0x71, 0x0a, 0x03, 0x61,
	0x66, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52,
	0x64, 0x6d, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x52, 0x64, 0x6d, 0x2e, 0x41, 0x66, 0x32, 0x52, 0x03, 0x61, 0x66, 0x32, 0x12, 0x71,
	0x0a, 0x03, 0x61, 0x66, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5f, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x52, 0x64, 0x6d, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x2e, 0x41, 0x66, 0x33, 0x52, 0x03, 0x61, 0x66,
	0x33, 0x12, 0x71, 0x0a, 0x03, 0x61, 0x66, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5f,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x2e, 0x41, 0x66, 0x34, 0x52,
	0x03, 0x61, 0x66, 0x34, 0x12, 0x6e, 0x0a, 0x02, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x5e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46,
	0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x2e, 0x42, 0x65,
	0x52, 0x02, 0x62, 0x65, 0x12, 0x71, 0x0a, 0x03, 0x63, 0x73, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x5f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x2e, 0x43,
	0x73, 0x36, 0x52, 0x03, 0x63, 0x73, 0x36, 0x12, 0x71, 0x0a, 0x03, 0x63, 0x73, 0x37, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x5f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64,
	0x6d, 0x2e, 0x43, 0x73, 0x37, 0x52, 0x03, 0x63, 0x73, 0x37, 0x12, 0x6e, 0x0a, 0x02, 0x65, 0x66,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x64, 0x6d,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65,
	0x52, 0x64, 0x6d, 0x2e, 0x45, 0x66, 0x52, 0x02, 0x65, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x64,
	0x6d, 0x44, 0x73, 0x63, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x64,
	0x6d, 0x44, 0x73, 0x63, 0x72, 0x64, 0x22, 0x22, 0x0a, 0x03, 0x41, 0x66, 0x31, 0x12, 0x0d, 0x0a,
	0x09, 0x41, 0x66, 0x31, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x41, 0x66, 0x31, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x03, 0x41, 0x66,
	0x32, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x66, 0x32, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x41, 0x66, 0x32, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22,
	0x0a, 0x03, 0x41, 0x66, 0x33, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x66, 0x33, 0x5f, 0x46, 0x41, 0x4c,
	0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x66, 0x33, 0x5f, 0x54, 0x52, 0x55, 0x45,
	0x10, 0x01, 0x22, 0x22, 0x0a, 0x03, 0x41, 0x66, 0x34, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x66, 0x34,
	0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x66, 0x34, 0x5f,
	0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x1f, 0x0a, 0x02, 0x42, 0x65, 0x12, 0x0c, 0x0a, 0x08,
	0x42, 0x65, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x65,
	0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x03, 0x43, 0x73, 0x36, 0x12, 0x0d,
	0x0a, 0x09, 0x43, 0x73, 0x36, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x43, 0x73, 0x36, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x03, 0x43,
	0x73, 0x37, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x73, 0x37, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x73, 0x37, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22,
	0x1f, 0x0a, 0x02, 0x45, 0x66, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x66, 0x5f, 0x46, 0x41, 0x4c, 0x53,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x66, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01,
	0x1a, 0xf0, 0x0c, 0x0a, 0x0f, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x73, 0x12, 0x7d, 0x0a, 0x0e, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x52, 0x0e, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x1a, 0xdd, 0x0b, 0x0a, 0x0e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x12, 0x6b, 0x0a, 0x03, 0x61, 0x66, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x2e, 0x41, 0x66, 0x31, 0x52, 0x03,
	0x61, 0x66, 0x31, 0x12, 0x6b, 0x0a, 0x03, 0x61, 0x66, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46,
	0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x2e, 0x41, 0x66, 0x32, 0x52, 0x03, 0x61, 0x66, 0x32,
	0x12, 0x6b, 0x0a, 0x03, 0x61, 0x66, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53,
	0x68, 0x61, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53,
	0x68, 0x61, 0x70, 0x65, 0x2e, 0x41, 0x66, 0x33, 0x52, 0x03, 0x61, 0x66, 0x33, 0x12, 0x6b, 0x0a,
	0x03, 0x61, 0x66, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70,
	0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70,
	0x65, 0x2e, 0x41, 0x66, 0x34, 0x52, 0x03, 0x61, 0x66, 0x34, 0x12, 0x68, 0x0a, 0x02, 0x62, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x58, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x2e, 0x42, 0x65,
	0x52, 0x02, 0x62, 0x65, 0x12, 0x6b, 0x0a, 0x03, 0x63, 0x73, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x2e, 0x43, 0x73, 0x36, 0x52, 0x03, 0x63, 0x73,
	0x36, 0x12, 0x6b, 0x0a, 0x03, 0x63, 0x73, 0x37, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x2e, 0x43, 0x73, 0x37, 0x52, 0x03, 0x63, 0x73, 0x37, 0x12, 0x68,
	0x0a, 0x02, 0x65, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x58, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70,
	0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70,
	0x65, 0x2e, 0x45, 0x66, 0x52, 0x02, 0x65, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x62, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x62, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x11, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x67, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x2e, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69,
	0x6e, 0x67, 0x50, 0x69, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0x22, 0x0a, 0x03, 0x41, 0x66, 0x31, 0x12, 0x0d, 0x0a, 0x09, 0x41,
	0x66, 0x31, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x66,
	0x31, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x03, 0x41, 0x66, 0x32, 0x12,
	0x0d, 0x0a, 0x09, 0x41, 0x66, 0x32, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x66, 0x32, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x03,
	0x41, 0x66, 0x33, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x66, 0x33, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x66, 0x33, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01,
	0x22, 0x22, 0x0a, 0x03, 0x41, 0x66, 0x34, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x66, 0x34, 0x5f, 0x46,
	0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x66, 0x34, 0x5f, 0x54, 0x52,
	0x55, 0x45, 0x10, 0x01, 0x22, 0x1f, 0x0a, 0x02, 0x42, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x65,
	0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x65, 0x5f, 0x54,
	0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x03, 0x43, 0x73, 0x36, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x73, 0x36, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x73, 0x36, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x22, 0x0a, 0x03, 0x43, 0x73, 0x37,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x73, 0x37, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x73, 0x37, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x1f, 0x0a,
	0x02, 0x45, 0x66, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x66, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x66, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x22, 0x63,
	0x0a, 0x11, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4c, 0x50, 0x51, 0x10, 0x00, 0x12, 0x18,
	0x0a, 0x14, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x5f, 0x50, 0x51, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x57, 0x46,
	0x51, 0x10, 0x02, 0x22, 0x6a, 0x0a, 0x0e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x6d,
	0x6f, 0x64, 0x65, 0x66, 0x71, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x6d, 0x6f, 0x64, 0x65, 0x66, 0x71, 0x5f, 0x49, 0x53, 0x34, 0x43, 0x4f, 0x53, 0x10, 0x00,
	0x12, 0x1d, 0x0a, 0x19, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x6d, 0x6f, 0x64, 0x65,
	0x66, 0x71, 0x5f, 0x49, 0x53, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x10, 0x01, 0x12,
	0x1e, 0x0a, 0x1a, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x66,
	0x71, 0x5f, 0x4e, 0x4f, 0x54, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x10, 0x02, 0x1a,
	0xc2, 0x09, 0x0a, 0x14, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x74, 0x0a, 0x13, 0x68, 0x71, 0x6f, 0x73,
	0x46, 0x6f, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x6c,
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x13, 0x68, 0x71, 0x6f, 0x73, 0x46,
	0x6f, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0xb3,
	0x08, 0x0a, 0x13, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x6f, 0x75, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x66, 0x6f, 0x75, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x7f, 0x0a, 0x10, 0x68, 0x71, 0x6f, 0x73,
	0x46, 0x6f, 0x75, 0x72, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x53, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46,
	0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x10, 0x68, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75,
	0x72, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0xe8, 0x06, 0x0a, 0x10, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x8d,
	0x01, 0x0a, 0x0f, 0x68, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x4d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x63, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75,
	0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0f, 0x68,
	0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0xc3,
	0x05, 0x0a, 0x0f, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x4d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0xa3, 0x01, 0x0a, 0x11, 0x66, 0x66, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x75,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f,
	0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x4d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x4d, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x2e, 0x46, 0x66, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x11, 0x66, 0x66, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0xa0, 0x01, 0x0a, 0x10, 0x66, 0x71, 0x6f,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x74, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75, 0x72,
	0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x46, 0x6f, 0x75,
	0x72, 0x46, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x46, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x10, 0x66, 0x71, 0x6f, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x11,
	0x46, 0x66, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x66, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x4f, 0x53, 0x30, 0x10, 0x00, 0x12, 0x1a, 0x0a,
	0x16, 0x46, 0x66, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x43, 0x4f, 0x53, 0x31, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x66, 0x71,
	0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43,
	0x4f, 0x53, 0x32, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x66, 0x71, 0x6f, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x4f, 0x53, 0x33, 0x10,
	0x03, 0x22, 0xe0, 0x01, 0x0a, 0x10, 0x46, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x71, 0x6f, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x46, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x71,
	0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x33, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x17,
	0x0a, 0x13, 0x46, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x71, 0x6f, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10,
	0x05, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x46,
	0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x45, 0x46, 0x10, 0x07, 0x1a, 0xbd, 0x0b, 0x0a, 0x10, 0x48, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55,
	0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x64, 0x0a, 0x0f, 0x68, 0x71, 0x6f,
	0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x0f,
	0x68, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x1a,
	0xc2, 0x0a, 0x0a, 0x0f, 0x48, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x63, 0x69, 0x72, 0x12, 0x62, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6c, 0x6f,
	0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6c, 0x6f, 0x77,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x71, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x71, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x83, 0x01, 0x0a, 0x14, 0x68, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x4f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x14, 0x68, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x69, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xc0, 0x06, 0x0a, 0x14, 0x48, 0x71, 0x6f, 0x73, 0x49, 0x46,
	0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x95,
	0x01, 0x0a, 0x13, 0x68, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x63, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55, 0x73,
	0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55,
	0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55,
	0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x13, 0x68, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x1a, 0x8f, 0x05, 0x0a, 0x13, 0x48, 0x71, 0x6f, 0x73, 0x49,
	0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73,
	0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73,
	0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73,
	0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70,
	0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x70, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x22, 0xd4, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x10, 0x08, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x01, 0x1a, 0xdb, 0x01, 0x0a, 0x13, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x12, 0x70, 0x0a, 0x12,
	0x68, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65, 0x6d,
	0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x54, 0x65, 0x6d, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x12, 0x68, 0x71, 0x6f, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x1a, 0x52,
	0x0a, 0x12, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0xdd, 0x0a, 0x0a, 0x0e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51,
	0x54, 0x65, 0x6d, 0x70, 0x73, 0x12, 0x5c, 0x0a, 0x0d, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x54, 0x65, 0x6d, 0x70, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51,
	0x54, 0x65, 0x6d, 0x70, 0x52, 0x0d, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x54,
	0x65, 0x6d, 0x70, 0x1a, 0xec, 0x09, 0x0a, 0x0d, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x6d, 0x0a, 0x0e, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x50, 0x61, 0x72, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x54, 0x65, 0x6d, 0x70, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x50,
	0x61, 0x72, 0x61, 0x73, 0x52, 0x0e, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x50,
	0x61, 0x72, 0x61, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65, 0x6d,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6f, 0x72,
	0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xc5, 0x08, 0x0a, 0x0e, 0x48,
	0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x50, 0x61, 0x72, 0x61, 0x73, 0x12, 0x79, 0x0a,
	0x0d, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x50, 0x61, 0x72, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x50, 0x61, 0x72, 0x61, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x50, 0x61, 0x72, 0x61, 0x52, 0x0d, 0x68, 0x71, 0x6f, 0x73, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x50, 0x61, 0x72, 0x61, 0x1a, 0xb7, 0x07, 0x0a, 0x0d, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x50, 0x61, 0x72, 0x61, 0x12, 0x7e, 0x0a, 0x0a, 0x6c, 0x6f,
	0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5e,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x54, 0x65, 0x6d, 0x70, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51,
	0x50, 0x61, 0x72, 0x61, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x50,
	0x61, 0x72, 0x61, 0x2e, 0x4c, 0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0a,
	0x6c, 0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x62,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x62, 0x73, 0x12, 0x93, 0x01, 0x0a,
	0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x65, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65, 0x6d,
	0x70, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65, 0x6d, 0x70,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x50, 0x61, 0x72, 0x61, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x50, 0x61, 0x72, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x60, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65,
	0x6d, 0x70, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x54, 0x65, 0x6d,
	0x70, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x50, 0x61, 0x72, 0x61, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x50, 0x61, 0x72, 0x61, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x70,
	0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x72, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x72, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x0a, 0x4c, 0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4c,
	0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x01, 0x22, 0x63, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4c, 0x50, 0x51,
	0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x50, 0x51, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x5f, 0x57, 0x46, 0x51, 0x10, 0x02, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10,
	0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x10, 0x08, 0x1a, 0xa9, 0x25, 0x0a, 0x11, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x12, 0x68, 0x0a, 0x10, 0x68, 0x71, 0x6f, 0x73,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x10, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x1a, 0xa9, 0x24, 0x0a, 0x10, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x50, 0x65,
	0x56, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x70, 0x70, 0x50,
	0x65, 0x56, 0x6c, 0x61, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e,
	0x56, 0x6c, 0x61, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x65,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x65, 0x45, 0x6e, 0x64, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x44, 0x12, 0x64, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x46, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x6a, 0x0a, 0x0b, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x71, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x71, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x0b, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x71, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x82, 0x01,
	0x0a, 0x13, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x13, 0x68,
	0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x79, 0x0a, 0x10, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x10, 0x68, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x82, 0x01,
	0x0a, 0x13, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x13, 0x68,
	0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x6d, 0x0a, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x67, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x41,
	0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xa9, 0x06, 0x0a, 0x0b, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x71, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x73, 0x0a, 0x0a, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x71, 0x53, 0x74,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x71, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x71, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0a, 0x68,
	0x71, 0x6f, 0x73, 0x47, 0x71, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xa4, 0x05, 0x0a, 0x0a, 0x48, 0x71,
	0x6f, 0x73, 0x47, 0x71, 0x53, 0x74, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70,
	0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72,
	0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x76, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x65, 0x76, 0x49, 0x64, 0x12, 0x84, 0x01, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x60, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x47, 0x71, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x47, 0x71, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x0c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34,
	0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53,
	0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x10, 0x08,
	0x1a, 0xc2, 0x06, 0x0a, 0x13, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x93, 0x01, 0x0a, 0x12, 0x68, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x63, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43,
	0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x12, 0x68, 0x71, 0x6f, 0x73,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x1a, 0x94,
	0x05, 0x0a, 0x12, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x85, 0x01, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x6b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x43, 0x61, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x63, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50,
	0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x56,
	0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x65, 0x56,
	0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0xb5, 0x01,
	0x0a, 0x07, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x61, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x55, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x55, 0x4d, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x41, 0x52,
	0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x32,
	0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x61,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x33, 0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44,
	0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x55,
	0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x61, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x5f, 0x55, 0x4e, 0x49, 0x43,
	0x41, 0x53, 0x54, 0x10, 0x07, 0x1a, 0xc8, 0x08, 0x0a, 0x10, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x87, 0x01, 0x0a, 0x0f, 0x68,
	0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x0f, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x1a, 0xa9, 0x07, 0x0a, 0x0f, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x66, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x66, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x55, 0x73, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x75, 0x66, 0x55, 0x73, 0x65, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73,
	0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73,
	0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73,
	0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70,
	0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65,
	0x76, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x65, 0x76, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x72, 0x64, 0x6d, 0x44, 0x63, 0x72, 0x64, 0x42, 0x79, 0x74, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x72, 0x64, 0x6d, 0x44, 0x63,
	0x72, 0x64, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x64,
	0x6d, 0x44, 0x63, 0x72, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x72, 0x64, 0x6d, 0x44, 0x63, 0x72, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x72, 0x64, 0x6d, 0x44, 0x63, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x64, 0x6d, 0x44, 0x63, 0x72, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x64, 0x6d, 0x44, 0x63, 0x72,
	0x64, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x72, 0x64, 0x6d, 0x44, 0x63, 0x72, 0x64, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x8e,
	0x01, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x6a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x49,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x0c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34,
	0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53,
	0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x10, 0x08,
	0x1a, 0x82, 0x04, 0x0a, 0x13, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x93, 0x01, 0x0a, 0x12, 0x68, 0x71, 0x6f,
	0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x63, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x12, 0x68, 0x71, 0x6f, 0x73,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xd4,
	0x02, 0x0a, 0x12, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x61, 0x70,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x72,
	0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72,
	0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f,
	0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76,
	0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x01, 0x22, 0xda, 0x01, 0x0a, 0x0c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x43, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x45, 0x56, 0x43, 0x5f,
	0x43, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12,
	0x1a, 0x0a, 0x16, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x50, 0x45, 0x5f, 0x43, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x45, 0x5f, 0x56,
	0x49, 0x44, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x56, 0x49, 0x44, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x56, 0x49, 0x44, 0x5f, 0x43,
	0x45, 0x5f, 0x56, 0x49, 0x44, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x10, 0x07, 0x22, 0x4e,
	0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14,
	0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x46, 0x41, 0x43, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x10, 0x02, 0x1a, 0x9b,
	0x37, 0x0a, 0x0c, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x54, 0x0a, 0x0b, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0xb4, 0x36, 0x0a, 0x0b, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x66, 0x0a, 0x0d, 0x68, 0x71, 0x6f, 0x73, 0x4d, 0x70, 0x6c,
	0x73, 0x48, 0x71, 0x6f, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x4d, 0x70, 0x6c, 0x73, 0x48, 0x71, 0x6f, 0x73, 0x73, 0x52, 0x0d,
	0x68, 0x71, 0x6f, 0x73, 0x4d, 0x70, 0x6c, 0x73, 0x48, 0x71, 0x6f, 0x73, 0x73, 0x12, 0x60, 0x0a,
	0x0b, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61,
	0x72, 0x73, 0x52, 0x0b, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x73, 0x12,
	0x6c, 0x0a, 0x0f, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x54, 0x6d, 0x70, 0x44, 0x65, 0x73,
	0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x6f, 0x54, 0x6d, 0x70, 0x44, 0x65, 0x73, 0x63, 0x73, 0x52, 0x0f, 0x68, 0x71,
	0x6f, 0x73, 0x50, 0x72, 0x6f, 0x54, 0x6d, 0x70, 0x44, 0x65, 0x73, 0x63, 0x73, 0x12, 0x66, 0x0a,
	0x0d, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x51, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x51, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x0d, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x51, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x17, 0x68, 0x71, 0x6f, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x52, 0x17, 0x68, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x69, 0x0a, 0x0e,
	0x68, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x0e, 0x68, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x9f, 0x02, 0x0a, 0x0d, 0x48, 0x71, 0x6f, 0x73, 0x4d, 0x70,
	0x6c, 0x73, 0x48, 0x71, 0x6f, 0x73, 0x73, 0x12, 0x71, 0x0a, 0x0c, 0x68, 0x71, 0x6f, 0x73, 0x4d,
	0x70, 0x6c, 0x73, 0x48, 0x71, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x4d, 0x70, 0x6c, 0x73, 0x48, 0x71, 0x6f, 0x73, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x4d, 0x70, 0x6c, 0x73, 0x48, 0x71, 0x6f, 0x73, 0x52, 0x0c, 0x68, 0x71,
	0x6f, 0x73, 0x4d, 0x70, 0x6c, 0x73, 0x48, 0x71, 0x6f, 0x73, 0x1a, 0x9a, 0x01, 0x0a, 0x0c, 0x48,
	0x71, 0x6f, 0x73, 0x4d, 0x70, 0x6c, 0x73, 0x48, 0x71, 0x6f, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x66,
	0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6c,
	0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x71, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x71, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xfb, 0x17, 0x0a, 0x0b, 0x48, 0x71, 0x6f, 0x73,
	0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x73, 0x12, 0x69, 0x0a, 0x0a, 0x68, 0x71, 0x6f, 0x73, 0x50,
	0x72, 0x6f, 0x43, 0x61, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x52, 0x0a, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43,
	0x61, 0x72, 0x1a, 0x80, 0x17, 0x0a, 0x0a, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61,
	0x72, 0x12, 0x6b, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61,
	0x72, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x2e, 0x43, 0x61,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x63, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x62, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63,
	0x69, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x41, 0x77, 0x61, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x41, 0x77, 0x61,
	0x72, 0x65, 0x12, 0x71, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x53, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x77, 0x0a, 0x0b, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x55, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50,
	0x72, 0x6f, 0x43, 0x61, 0x72, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x74,
	0x0a, 0x0a, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x54, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61,
	0x72, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x2e, 0x47, 0x72,
	0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0a, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x89, 0x01, 0x0a, 0x11, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x5b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x2e, 0x47, 0x72, 0x65, 0x65,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x11, 0x67,
	0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x62, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70,
	0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x70, 0x69, 0x72, 0x12, 0x71, 0x0a, 0x09, 0x72, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x53, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43,
	0x61, 0x72, 0x2e, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x52, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x43, 0x61, 0x72, 0x2e, 0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x08, 0x72,
	0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x83, 0x01, 0x0a, 0x0f, 0x72, 0x65, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x2e, 0x52, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0f, 0x72, 0x65,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x7a, 0x0a,
	0x0c, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x56, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43,
	0x61, 0x72, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x2e, 0x59,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x79, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x77, 0x0a, 0x0b, 0x79, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x55,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0b, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x8c, 0x01, 0x0a, 0x12, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x12, 0x79,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x22, 0xb5, 0x01, 0x0a, 0x07, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41,
	0x53, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x42, 0x55, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x42, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x43, 0x41, 0x52, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x4c, 0x32, 0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x10, 0x04, 0x12, 0x16,
	0x0a, 0x12, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x33, 0x5f, 0x46, 0x4f, 0x52,
	0x57, 0x41, 0x52, 0x44, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x10, 0x06, 0x12, 0x1a, 0x0a,
	0x16, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x5f,
	0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x10, 0x07, 0x22, 0x4d, 0x0a, 0x09, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01,
	0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55,
	0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x22, 0x3c, 0x0a, 0x0b, 0x47, 0x72, 0x65, 0x65,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x72, 0x65, 0x65, 0x6e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x50, 0x41, 0x53, 0x53, 0x10, 0x01, 0x22, 0x4d, 0x0a, 0x0a, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x72,
	0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x15,
	0x0a, 0x11, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c,
	0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22, 0x8a, 0x02, 0x0a, 0x11, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x47,
	0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10,
	0x01, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15,
	0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x72, 0x65, 0x65, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10,
	0x04, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15,
	0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x72, 0x65, 0x65, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10,
	0x07, 0x12, 0x1f, 0x0a, 0x1b, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x10, 0x08, 0x22, 0x36, 0x0a, 0x09, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x15, 0x0a, 0x11, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x49, 0x53,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x01, 0x22, 0x45, 0x0a, 0x08, 0x52, 0x65,
	0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x65,
	0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10,
	0x02, 0x22, 0xf6, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x17,
	0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10,
	0x04, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53,
	0x37, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19, 0x52,
	0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e,
	0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0x3f, 0x0a, 0x0c, 0x59, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14, 0x59, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x41,
	0x52, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x01, 0x22, 0x51, 0x0a, 0x0b, 0x59,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x59, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10,
	0x00, 0x12, 0x13, 0x0a, 0x0f, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22, 0x94,
	0x02, 0x0a, 0x12, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x1a, 0x0a,
	0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04,
	0x12, 0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16,
	0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x59, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45,
	0x46, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x10, 0x08, 0x1a, 0xc8, 0x01, 0x0a, 0x0f, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x54, 0x6d, 0x70, 0x44, 0x65, 0x73, 0x63, 0x73, 0x12, 0x79, 0x0a, 0x0e, 0x68, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x6f, 0x54, 0x6d, 0x70, 0x44, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x54, 0x6d, 0x70,
	0x44, 0x65, 0x73, 0x63, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x54, 0x6d, 0x70,
	0x44, 0x65, 0x73, 0x63, 0x52, 0x0e, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x54, 0x6d, 0x70,
	0x44, 0x65, 0x73, 0x63, 0x1a, 0x3a, 0x0a, 0x0e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x54,
	0x6d, 0x70, 0x44, 0x65, 0x73, 0x63, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x66, 0x6f,
	0x1a, 0xf1, 0x02, 0x0a, 0x0d, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x51, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x12, 0x71, 0x0a, 0x0c, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x51, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x53, 0x51, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53,
	0x51, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0c, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x51, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0xec, 0x01, 0x0a, 0x0c, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x51,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x75, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x57, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x53, 0x51, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x53, 0x51, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x4d, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x02, 0x1a, 0xe1, 0x08, 0x0a, 0x17, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x12, 0x99, 0x01, 0x0a, 0x16, 0x68, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x61, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x16, 0x68, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0xa9, 0x07, 0x0a,
	0x16, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x0c, 0x61, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x6e,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0c,
	0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x62, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x69, 0x72,
	0x12, 0x89, 0x01, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x6b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f,
	0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66,
	0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x71, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x71,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x62, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x70, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x72, 0x12, 0x9b, 0x01, 0x0a, 0x0f, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x71, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x49, 0x44, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x41, 0x0a, 0x0c, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x18, 0x0a, 0x14, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64,
	0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x22, 0x4d, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x11, 0x0a, 0x0d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x02, 0x22, 0x44, 0x0a, 0x0f, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x44, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x00, 0x12,
	0x17, 0x0a, 0x13, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x44, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x1a, 0x8d, 0x08, 0x0a, 0x0e, 0x48, 0x71, 0x6f,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x75, 0x0a, 0x0d, 0x68,
	0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x0d, 0x68, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x1a, 0x83, 0x07, 0x0a, 0x0d, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f,
	0x6e, 0x43, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5c, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x41, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x62, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x69, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x69, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x69, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x77, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66,
	0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x71, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x71, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x62, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x62, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x69, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x69, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x12, 0x89, 0x01, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5f, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x44, 0x52, 0x0f, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x41, 0x0a, 0x0c, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x18, 0x0a, 0x14, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64,
	0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x22, 0x4d, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x11, 0x0a, 0x0d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x02, 0x22, 0x44, 0x0a, 0x0f, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x44, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x00, 0x12,
	0x17, 0x0a, 0x13, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x44, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x22, 0x42, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x49, 0x53, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x00,
	0x12, 0x1a, 0x0a, 0x16, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x4e, 0x4f,
	0x54, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x01, 0x1a, 0xe4, 0x05, 0x0a,
	0x14, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x74, 0x0a, 0x13, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x13, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0xd5, 0x04, 0x0a, 0x13,
	0x48, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x79, 0x0a, 0x0e, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x72, 0x76, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x53, 0x72, 0x76, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x73, 0x52, 0x0e,
	0x68, 0x71, 0x6f, 0x73, 0x53, 0x72, 0x76, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x86, 0x03, 0x0a, 0x0e, 0x48,
	0x71, 0x6f, 0x73, 0x53, 0x72, 0x76, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x73, 0x12, 0x85, 0x01,
	0x0a, 0x0d, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x72, 0x76, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x72,
	0x76, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x72, 0x76,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x0d, 0x68, 0x71, 0x6f, 0x73, 0x53, 0x72, 0x76, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x1a, 0xeb, 0x01, 0x0a, 0x0d, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x72,
	0x76, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x87, 0x01, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x69, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x53, 0x72, 0x76, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x53, 0x72, 0x76, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x2e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x01, 0x1a, 0xab, 0x21, 0x0a, 0x13, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x70, 0x0a, 0x12, 0x68,
	0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x12, 0x68, 0x71, 0x6f, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x1a, 0xa1, 0x20,
	0x0a, 0x12, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x71, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x71, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x74, 0x0a, 0x0d,
	0x68, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x43, 0x69, 0x72, 0x50, 0x69, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x43, 0x69, 0x72, 0x50,
	0x69, 0x72, 0x73, 0x52, 0x0d, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x43, 0x69, 0x72, 0x50, 0x69,
	0x72, 0x73, 0x12, 0x6e, 0x0a, 0x0b, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x4d, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51,
	0x4d, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0b, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x4d, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x8c, 0x01, 0x0a, 0x15, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x74, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x56, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69,
	0x6e, 0x67, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x74, 0x79, 0x73, 0x52, 0x15, 0x68, 0x71, 0x6f, 0x73,
	0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x74, 0x79,
	0x73, 0x12, 0x77, 0x0a, 0x0e, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0e, 0x68, 0x71, 0x6f, 0x73,
	0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x6e, 0x0a, 0x0b, 0x68, 0x71,
	0x6f, 0x73, 0x47, 0x51, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0b, 0x68,
	0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x6e, 0x0a, 0x0b, 0x68, 0x71,
	0x6f, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x0b, 0x68,
	0x71, 0x6f, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x77, 0x0a, 0x0e, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x67, 0x71, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x6d, 0x6f, 0x64,
	0x65, 0x67, 0x71, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x6d, 0x6f, 0x64,
	0x65, 0x67, 0x71, 0x1a, 0x94, 0x03, 0x0a, 0x0d, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x43, 0x69,
	0x72, 0x50, 0x69, 0x72, 0x73, 0x12, 0x7f, 0x0a, 0x0c, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x43,
	0x69, 0x72, 0x50, 0x69, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x47, 0x51, 0x43, 0x69, 0x72, 0x50, 0x69, 0x72, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x47, 0x51, 0x43, 0x69, 0x72, 0x50, 0x69, 0x72, 0x52, 0x0c, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x51,
	0x43, 0x69, 0x72, 0x50, 0x69, 0x72, 0x1a, 0x81, 0x02, 0x0a, 0x0c, 0x48, 0x71, 0x6f, 0x73, 0x47,
	0x51, 0x43, 0x69, 0x72, 0x50, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x62, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x69, 0x72, 0x12, 0x83, 0x01, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x65, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x43, 0x69, 0x72, 0x50, 0x69, 0x72, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x43, 0x69, 0x72, 0x50, 0x69, 0x72, 0x2e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x62, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x70, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x70, 0x69, 0x72, 0x22, 0x23, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x1a, 0xb1, 0x02, 0x0a, 0x0b, 0x48,
	0x71, 0x6f, 0x73, 0x47, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x77, 0x0a, 0x0a, 0x68, 0x71,
	0x6f, 0x73, 0x47, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x57,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x47, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x4d,
	0x6f, 0x64, 0x65, 0x1a, 0xa8, 0x01, 0x0a, 0x0a, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x70, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x47, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x22, 0x28, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4d,
	0x6f, 0x64, 0x65, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x01, 0x1a, 0xa1,
	0x05, 0x0a, 0x15, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x74, 0x79, 0x73, 0x12, 0x9f, 0x01, 0x0a, 0x14, 0x68, 0x71, 0x6f,
	0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x6b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51,
	0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x74, 0x79, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x74, 0x79, 0x52, 0x14, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70,
	0x69, 0x6e, 0x67, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x74, 0x79, 0x1a, 0xe5, 0x03, 0x0a, 0x14, 0x48,
	0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x74, 0x79, 0x12, 0x93, 0x01, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x75, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51,
	0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x74, 0x79, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x62, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x72, 0x12, 0x90, 0x01,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x74, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x74, 0x79, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53,
	0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x22, 0x23, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x00, 0x22, 0x5b, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x4e, 0x4f,
	0x50, 0x52, 0x49, 0x4f, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x50, 0x52, 0x49, 0x4f, 0x30, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x50, 0x52, 0x49, 0x4f, 0x31, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x50, 0x52, 0x49, 0x4f, 0x32,
	0x10, 0x03, 0x1a, 0x90, 0x03, 0x0a, 0x0e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x0d, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x51,
	0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5d, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x68, 0x71,
	0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0xf7, 0x01, 0x0a, 0x0d,
	0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x85, 0x01,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x67, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x70, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x72, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x01, 0x1a, 0x82, 0x08, 0x0a, 0x0b, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x77, 0x0a, 0x0a, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53,
	0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x47, 0x51, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x0a, 0x68, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xf9,
	0x06, 0x0a, 0x0a, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x74, 0x61, 0x74, 0x12, 0x7f, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x61, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79,
	0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73,
	0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x64, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x47, 0x51, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e,
	0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22,
	0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53,
	0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1a,
	0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e,
	0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x1a, 0xd3, 0x02, 0x0a, 0x0b, 0x48,
	0x71, 0x6f, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x77, 0x0a, 0x0a, 0x68, 0x71,
	0x6f, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x57,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0a, 0x68, 0x71, 0x6f, 0x73, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x1a, 0xca, 0x01, 0x0a, 0x0a, 0x48, 0x71, 0x6f, 0x73, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x7f, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x61, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x23, 0x0a, 0x09, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00,
	0x22, 0x4f, 0x0a, 0x0e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x6d, 0x6f, 0x64, 0x65,
	0x67, 0x71, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x6d, 0x6f,
	0x64, 0x65, 0x67, 0x71, 0x5f, 0x49, 0x53, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x10,
	0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x6d, 0x6f, 0x64,
	0x65, 0x67, 0x71, 0x5f, 0x4e, 0x4f, 0x54, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x10,
	0x01, 0x1a, 0x8f, 0x15, 0x0a, 0x15, 0x48, 0x71, 0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53,
	0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x78, 0x0a, 0x14, 0x68,
	0x71, 0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50,
	0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x56,
	0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x14, 0x68, 0x71, 0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41, 0x70,
	0x70, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0xfb, 0x13, 0x0a, 0x14, 0x48, 0x71, 0x6f, 0x73, 0x56, 0x4e,
	0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x6c,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x4e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f,
	0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f,
	0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x93, 0x01, 0x0a,
	0x16, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6e, 0x69, 0x43,
	0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5b, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x56, 0x4e, 0x49,
	0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e,
	0x6f, 0x64, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56,
	0x6e, 0x69, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x16, 0x68, 0x71, 0x6f, 0x73,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6e, 0x69, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x8a, 0x01, 0x0a, 0x13, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x56, 0x6e, 0x69, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x58, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73,
	0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41,
	0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x56, 0x6e, 0x69, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x13, 0x68, 0x71, 0x6f, 0x73,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6e, 0x69, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6e, 0x69, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x76, 0x6e, 0x69, 0x49, 0x64, 0x1a, 0xea, 0x06, 0x0a, 0x16, 0x48, 0x71, 0x6f, 0x73,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6e, 0x69, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0xa7, 0x01, 0x0a, 0x15, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x56, 0x6e, 0x69, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x71, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71,
	0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50, 0x72,
	0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x56, 0x6e, 0x69, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6e, 0x69, 0x43, 0x61,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x15, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x56, 0x6e, 0x69, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xa5, 0x05, 0x0a,
	0x15, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6e, 0x69, 0x43,
	0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x93, 0x01, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x79, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50, 0x72,
	0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x56, 0x4e,
	0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x48,
	0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6e, 0x69, 0x43, 0x61, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x56, 0x6e, 0x69, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x07, 0x63, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79,
	0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73,
	0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x56, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x65, 0x56, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0xb5, 0x01, 0x0a,
	0x07, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x61, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x55, 0x10, 0x01, 0x12,
	0x0f, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x55, 0x4d, 0x10, 0x02,
	0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x41, 0x52, 0x10,
	0x03, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x32, 0x5f,
	0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x61, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x33, 0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x10,
	0x05, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x55, 0x4c,
	0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x61, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41,
	0x53, 0x54, 0x10, 0x07, 0x1a, 0xf0, 0x08, 0x0a, 0x13, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x56, 0x6e, 0x69, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x9b, 0x01, 0x0a,
	0x12, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6e, 0x69, 0x53,
	0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x6b, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50,
	0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x56,
	0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6e, 0x69, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56,
	0x6e, 0x69, 0x53, 0x74, 0x61, 0x74, 0x52, 0x12, 0x68, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x56, 0x6e, 0x69, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xba, 0x07, 0x0a, 0x12, 0x48,
	0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x6e, 0x69, 0x53, 0x74, 0x61,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x66, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x66, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x75, 0x66, 0x55, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x62, 0x75, 0x66, 0x55, 0x73, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f,
	0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x76, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x70, 0x65, 0x76, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x64, 0x6d,
	0x44, 0x63, 0x72, 0x64, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x72, 0x64, 0x6d, 0x44, 0x63, 0x72, 0x64, 0x42, 0x79, 0x74, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x64, 0x6d, 0x44, 0x63, 0x72, 0x64, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x64, 0x6d, 0x44, 0x63,
	0x72, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x64, 0x6d, 0x44, 0x63,
	0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x72, 0x64, 0x6d, 0x44, 0x63, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x72, 0x64, 0x6d, 0x44, 0x63, 0x72, 0x64, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x64, 0x6d, 0x44, 0x63, 0x72, 0x64,
	0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x78,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x56, 0x4e,
	0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x2e,
	0x48, 0x71, 0x6f, 0x73, 0x56, 0x4e, 0x49, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x41, 0x70, 0x70,
	0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x56, 0x6e, 0x69, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x48, 0x71, 0x6f, 0x73, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x56, 0x6e, 0x69, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x6d, 0x70, 0x49, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x22, 0xd4, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46,
	0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43,
	0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12,
	0x16, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x54, 0x4f, 0x54, 0x41, 0x4c, 0x10, 0x08, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x01, 0x1a, 0xca, 0x02, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x6c, 0x4c, 0x6f,
	0x67, 0x50, 0x61, 0x72, 0x61, 0x43, 0x66, 0x73, 0x12, 0x5f, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x41,
	0x63, 0x6c, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x72, 0x61, 0x43, 0x66, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x6c, 0x4c, 0x6f,
	0x67, 0x50, 0x61, 0x72, 0x61, 0x43, 0x66, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x6c, 0x4c,
	0x6f, 0x67, 0x50, 0x61, 0x72, 0x61, 0x43, 0x66, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x6c,
	0x4c, 0x6f, 0x67, 0x50, 0x61, 0x72, 0x61, 0x43, 0x66, 0x1a, 0xd4, 0x01, 0x0a, 0x0f, 0x51, 0x6f,
	0x73, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x72, 0x61, 0x43, 0x66, 0x12, 0x60, 0x0a,
	0x0a, 0x61, 0x63, 0x6c, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x40, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x6c, 0x4c, 0x6f,
	0x67, 0x50, 0x61, 0x72, 0x61, 0x43, 0x66, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x6c, 0x4c,
	0x6f, 0x67, 0x50, 0x61, 0x72, 0x61, 0x43, 0x66, 0x2e, 0x41, 0x63, 0x6c, 0x6c, 0x6f, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x6c, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x75, 0x6d, 0x22, 0x23, 0x0a, 0x0a, 0x41,
	0x63, 0x6c, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x63, 0x6c,
	0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x43, 0x4c, 0x4c, 0x4f, 0x47, 0x10, 0x00,
	0x1a, 0xf5, 0x7f, 0x0a, 0x09, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x12, 0x43,
	0x0a, 0x08, 0x71, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x52, 0x08, 0x71, 0x6f, 0x73, 0x42, 0x44,
	0x51, 0x6f, 0x73, 0x1a, 0xa2, 0x7f, 0x0a, 0x08, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x7f, 0x0a, 0x19, 0x71, 0x6f, 0x73, 0x42,
	0x64, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x52, 0x19,
	0x71, 0x6f, 0x73, 0x42, 0x64, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x12, 0x4f, 0x0a, 0x09, 0x71, 0x6f, 0x73,
	0x42, 0x64, 0x50, 0x68, 0x62, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x68, 0x62, 0x73, 0x52,
	0x09, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x68, 0x62, 0x73, 0x12, 0x67, 0x0a, 0x11, 0x71, 0x6f,
	0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73,
	0x52, 0x11, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x73, 0x12, 0x55, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x52, 0x0b, 0x71,
	0x6f, 0x73, 0x42, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x12, 0x73, 0x0a, 0x15, 0x71, 0x6f,
	0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x15, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x56,
	0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12,
	0x5e, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x73, 0x52,
	0x0e, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x73, 0x12,
	0x76, 0x0a, 0x16, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78,
	0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x52,
	0x16, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x12, 0x64, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x42, 0x64,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x52, 0x10, 0x71, 0x6f, 0x73,
	0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x1a, 0xd4, 0x04,
	0x0a, 0x19, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x18,
	0x71, 0x6f, 0x73, 0x42, 0x64, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5a,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x18, 0x71, 0x6f, 0x73, 0x42,
	0x64, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x1a, 0x9d, 0x03, 0x0a, 0x18, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x91, 0x01, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x69, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x64, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0xec, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12,
	0x16, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12,
	0x15, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x10, 0x08, 0x1a, 0xaa, 0x04, 0x0a, 0x09, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x68,
	0x62, 0x73, 0x12, 0x56, 0x0a, 0x08, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x68, 0x62, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x64, 0x50, 0x68, 0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x68, 0x62,
	0x52, 0x08, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x68, 0x62, 0x1a, 0xc4, 0x03, 0x0a, 0x08, 0x51,
	0x6f, 0x73, 0x42, 0x64, 0x50, 0x68, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x73, 0x62, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x73, 0x62, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x62, 0x0a, 0x09, 0x6d, 0x61, 0x70, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x68, 0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50,
	0x68, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x61,
	0x70, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6e, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x48,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x68, 0x62,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x68, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x62,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x61, 0x70, 0x62, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x44, 0x53, 0x43, 0x50, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x61, 0x70,
	0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x4e, 0x4e, 0x45, 0x52, 0x5f, 0x38, 0x30, 0x32,
	0x31, 0x50, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x61, 0x70, 0x62, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x4d, 0x50, 0x4c, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e,
	0x4d, 0x61, 0x70, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x03,
	0x12, 0x19, 0x0a, 0x15, 0x4d, 0x61, 0x70, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x55,
	0x54, 0x45, 0x52, 0x5f, 0x38, 0x30, 0x32, 0x31, 0x50, 0x10, 0x04, 0x22, 0x44, 0x0a, 0x0d, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x49,
	0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x1a, 0xa0, 0x35, 0x0a, 0x11, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x12, 0x76, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x42, 0x64,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x4a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x10, 0x71,
	0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x1a,
	0x92, 0x34, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x12, 0x78, 0x0a, 0x0b, 0x62, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x56, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x42, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x62, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6c,
	0x0a, 0x07, 0x62, 0x64, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x52, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x42, 0x64, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x07, 0x62, 0x64, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x62, 0x64, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x62, 0x64, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x84, 0x01, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x41, 0x63, 0x74, 0x53, 0x71, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x41, 0x63, 0x74, 0x53,
	0x71, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x41, 0x63, 0x74,
	0x53, 0x71, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x87, 0x01, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x42,
	0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x10, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x1a, 0xd2, 0x07, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x41, 0x63, 0x74, 0x53, 0x71,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x91, 0x01, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x41,
	0x63, 0x74, 0x53, 0x71, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x69,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64,
	0x41, 0x63, 0x74, 0x53, 0x71, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64,
	0x41, 0x63, 0x74, 0x53, 0x71, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x42, 0x64,
	0x41, 0x63, 0x74, 0x53, 0x71, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xaa, 0x06, 0x0a, 0x0e, 0x51, 0x6f,
	0x73, 0x42, 0x64, 0x41, 0x63, 0x74, 0x53, 0x71, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x64, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x64, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x66, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x66, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x55, 0x73, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x75, 0x66, 0x55, 0x73, 0x65, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79,
	0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x72,
	0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72,
	0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64,
	0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72,
	0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x76, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x41, 0x63, 0x74, 0x53, 0x71,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x41, 0x63, 0x74, 0x53, 0x71,
	0x53, 0x74, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x50, 0x61, 0x74, 0x68, 0x22,
	0xd4, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53,
	0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x16,
	0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x54,
	0x4f, 0x54, 0x41, 0x4c, 0x10, 0x08, 0x1a, 0xf7, 0x26, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x42, 0x64,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x0f,
	0x71, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x6b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x1a, 0xca, 0x25, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x64, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x64,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x64, 0x69,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x64, 0x69,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f,
	0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72,
	0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x62,
	0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x32, 0x0a, 0x14, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x62,
	0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72,
	0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x64,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x30, 0x0a,
	0x13, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x62, 0x64, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x64, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61,
	0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x14, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x64, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0f, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74,
	0x73, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73,
	0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13,
	0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x64, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62,
	0x64, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x62, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x62, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x64, 0x6d, 0x69, 0x73,
	0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x62, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x62, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x6b, 0x74,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x64, 0x73, 0x74, 0x61, 0x74, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x62, 0x64, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x28, 0x0a, 0x0f, 0x62, 0x64, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x64, 0x73, 0x74, 0x61, 0x74,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x64, 0x73,
	0x74, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x64, 0x73, 0x74, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0xb5, 0x01, 0x0a, 0x14, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x80, 0x01, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x14, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x90, 0x1d,
	0x0a, 0x14, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0xc7, 0x01, 0x0a, 0x13, 0x71, 0x6f, 0x73, 0x42, 0x64,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x94, 0x01, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x13, 0x71, 0x6f, 0x73,
	0x42, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x1a, 0xad, 0x1b, 0x0a, 0x13, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x64, 0x63, 0x61,
	0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x64,
	0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x63, 0x61,
	0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x62, 0x64, 0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x64, 0x63, 0x61, 0x72, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x64, 0x63, 0x61,
	0x72, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x62, 0x64, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x64, 0x63, 0x61,
	0x72, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x62, 0x64, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x62, 0x64, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x62, 0x64, 0x63, 0x61, 0x72,
	0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x62, 0x64, 0x63, 0x61, 0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x62, 0x64, 0x63, 0x61, 0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x62, 0x64, 0x63, 0x61, 0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x64, 0x63, 0x61, 0x72, 0x47, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x64, 0x63, 0x61,
	0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x64,
	0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x63, 0x61,
	0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x62, 0x64, 0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x64,
	0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12,
	0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b,
	0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50,
	0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x62,
	0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x6b,
	0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x64, 0x63, 0x61, 0x72, 0x52,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x64, 0x63,
	0x61, 0x72, 0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x64, 0x63, 0x61,
	0x72, 0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x62, 0x64, 0x63, 0x61, 0x72, 0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x64, 0x63, 0x61, 0x72, 0x52, 0x50, 0x6b, 0x74, 0x73,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x64, 0x63, 0x61, 0x72, 0x52, 0x50, 0x6b,
	0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x63, 0x61, 0x72, 0x52, 0x50, 0x6b, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x64, 0x63, 0x61,
	0x72, 0x52, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x64,
	0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x62, 0x64, 0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x62, 0x64, 0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x64, 0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x64, 0x63, 0x61, 0x72, 0x59,
	0x50, 0x6b, 0x74, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x64, 0x63, 0x61,
	0x72, 0x59, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x63, 0x61, 0x72, 0x59,
	0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x62, 0x64, 0x63, 0x61, 0x72, 0x59, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x62, 0x64, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x64, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x64,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x62, 0x64, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x11, 0x62, 0x64, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x62, 0x64, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x62, 0x64, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x64, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x64, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x62, 0x64, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x6b, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42,
	0x79, 0x74, 0x65, 0x52, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x64, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x52, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x64,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x64,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x62, 0x64, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x30,
	0x0a, 0x13, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x62, 0x64, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x64, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x26, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x14, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x64, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73,
	0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x64, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x64,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x62, 0x64, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x64, 0x75, 0x72, 0x70, 0x66, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x64, 0x75, 0x72,
	0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x2b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x62, 0x64, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x64,
	0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x62, 0x64, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x64, 0x75, 0x72,
	0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x2d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x62, 0x64, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70,
	0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x3c, 0x0a, 0x19, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x30, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x19, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44,
	0x0a, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x31, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x19, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50,
	0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x3e, 0x0a, 0x1a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x36,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x46, 0x0a, 0x1e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63,
	0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x38, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72,
	0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63,
	0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50,
	0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1d, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x1a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x3b,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74,
	0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61,
	0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b,
	0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1d, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73,
	0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x1e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x3c, 0x0a, 0x19, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x40, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x19, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44,
	0x0a, 0x1d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x41, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69,
	0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e,
	0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x42, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e,
	0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x43, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x44, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x19, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50,
	0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x45, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x1d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x22, 0x40, 0x0a, 0x0b, 0x42, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x17, 0x0a, 0x13, 0x42, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49,
	0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x64, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x01, 0x22, 0x50, 0x0a, 0x07, 0x42, 0x64, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0f, 0x0a,
	0x0b, 0x42, 0x64, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x42, 0x64, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x42, 0x64, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x4d, 0x50, 0x4c, 0x53,
	0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x64, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x03, 0x1a, 0xd0, 0x04, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x73, 0x12, 0x5e, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x1a, 0xe0, 0x03, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x12, 0x6f, 0x0a, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x62, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x62, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x73, 0x62, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x73, 0x62, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x6c, 0x0a, 0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x61,
	0x0a, 0x0c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x18, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49,
	0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x4e, 0x42,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x02, 0x22, 0x74, 0x0a, 0x0b, 0x54, 0x72, 0x75, 0x73, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x13, 0x54, 0x72, 0x75, 0x73, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x58, 0x5f, 0x38, 0x30, 0x32, 0x31, 0x50, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x53, 0x10, 0x01, 0x12, 0x1b, 0x0a,
	0x17, 0x54, 0x72, 0x75, 0x73, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x4e, 0x4e,
	0x45, 0x52, 0x5f, 0x38, 0x30, 0x32, 0x31, 0x50, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f,
	0x38, 0x30, 0x32, 0x31, 0x50, 0x10, 0x03, 0x1a, 0xa3, 0x03, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x42,
	0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x12, 0x86, 0x01, 0x0a, 0x14, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x43, 0x61, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x52, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56,
	0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x14, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x43, 0x61, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x80, 0x02, 0x0a, 0x14, 0x51,
	0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x6c,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x80, 0x01, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5e, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43,
	0x61, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x43, 0x0a, 0x0b, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x45, 0x58, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x10, 0x00,
	0x12, 0x1b, 0x0a, 0x17, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f,
	0x4e, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x10, 0x01, 0x1a, 0xa9, 0x01,
	0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x73,
	0x12, 0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68,
	0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x52, 0x0d, 0x71,
	0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x1a, 0x2b, 0x0a, 0x0d,
	0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x73, 0x62, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x73, 0x62, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xff, 0x2d, 0x0a, 0x16, 0x51, 0x6f,
	0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x73, 0x12, 0x8a, 0x01, 0x0a, 0x15, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78,
	0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x15, 0x71, 0x6f, 0x73, 0x42,
	0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x1a, 0xd7, 0x2c, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x82, 0x01, 0x0a, 0x0b,
	0x62, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x60, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x42, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x62, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x76, 0x0a, 0x07, 0x62, 0x64, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x42, 0x64, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x07, 0x62, 0x64, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x64, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x62, 0x64, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0xa0, 0x01, 0x0a,
	0x15, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x6a, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x15, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x56,
	0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x1a,
	0x88, 0x28, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0xb3, 0x01, 0x0a, 0x14, 0x71, 0x6f,
	0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x7f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78,
	0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x52, 0x14, 0x71, 0x6f, 0x73, 0x42, 0x64,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x1a,
	0xb8, 0x26, 0x0a, 0x14, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x64, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x64, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x64,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x64, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x64, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x14, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x64, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b,
	0x74, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x13, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x64,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10,
	0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x64, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x13, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73,
	0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x62, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x64, 0x6d,
	0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x62, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x64, 0x6d, 0x69,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x64,
	0x73, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x62, 0x64, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x64, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62,
	0x64, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x62, 0x64, 0x73, 0x74, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x64, 0x73, 0x74, 0x61, 0x74,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0xd8, 0x01, 0x0a, 0x19, 0x71,
	0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x99,
	0x01, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78,
	0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x19, 0x71, 0x6f, 0x73, 0x42,
	0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x1a, 0xda, 0x1d,
	0x0a, 0x19, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0xef, 0x01, 0x0a, 0x18,
	0x71, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0xb2,
	0x01, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78,
	0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x18, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xca, 0x1b,
	0x0a, 0x18, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x64,
	0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x62, 0x64, 0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64,
	0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x62, 0x64, 0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x64, 0x63, 0x61,
	0x72, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x64,
	0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x62, 0x64, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x64,
	0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x62, 0x64, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73,
	0x12, 0x2c, 0x0a, 0x11, 0x62, 0x64, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x62, 0x64, 0x63,
	0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x62, 0x64, 0x63, 0x61, 0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x64, 0x63, 0x61, 0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x62, 0x64, 0x63, 0x61, 0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x64, 0x63, 0x61, 0x72,
	0x47, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x64,
	0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x62, 0x64, 0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64,
	0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x62, 0x64, 0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2e,
	0x0a, 0x12, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x62, 0x64, 0x63, 0x61,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73,
	0x50, 0x6b, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x64, 0x63, 0x61, 0x72, 0x50, 0x6b, 0x74, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x64, 0x63, 0x61, 0x72,
	0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x64, 0x63, 0x61,
	0x72, 0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62,
	0x64, 0x63, 0x61, 0x72, 0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x64,
	0x63, 0x61, 0x72, 0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x64, 0x63, 0x61, 0x72, 0x52, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x64, 0x63, 0x61, 0x72, 0x52, 0x50, 0x6b,
	0x74, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x64, 0x63, 0x61, 0x72, 0x52,
	0x50, 0x6b, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x63, 0x61, 0x72, 0x52, 0x50, 0x6b,
	0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x64,
	0x63, 0x61, 0x72, 0x52, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x62, 0x64, 0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x62, 0x64, 0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x62, 0x64, 0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x64, 0x63, 0x61, 0x72, 0x59, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x64, 0x63, 0x61,
	0x72, 0x59, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x64,
	0x63, 0x61, 0x72, 0x59, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x63, 0x61,
	0x72, 0x59, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x62, 0x64, 0x63, 0x61, 0x72, 0x59, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x62, 0x64, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x64, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x62, 0x64, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x64, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x64, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x62,
	0x64, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x62, 0x64, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x64, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x64,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x62, 0x64, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x6b,
	0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x42, 0x79, 0x74, 0x65, 0x52, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x62,
	0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x52, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x62, 0x64, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14,
	0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x62, 0x64, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x62, 0x64,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x30, 0x0a, 0x13, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50,
	0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x62,
	0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x64, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x64,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x25,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x64,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x64,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x74, 0x18, 0x29, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x62, 0x64, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x62, 0x64, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x64, 0x75, 0x72, 0x70,
	0x66, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x64,
	0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x62, 0x64, 0x75, 0x72, 0x70, 0x66, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x62, 0x64, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x62, 0x64, 0x75, 0x72, 0x70, 0x66, 0x44,
	0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x64,
	0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x2d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x62, 0x64, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72,
	0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x2f, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18,
	0x30, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73,
	0x12, 0x44, 0x0a, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b,
	0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c,
	0x0a, 0x19, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x19, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x35, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x38, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x1d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3e,
	0x0a, 0x1a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x3a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x1a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x46,
	0x0a, 0x1e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x3b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63,
	0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50,
	0x6b, 0x74, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73,
	0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1d, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c,
	0x6f, 0x74, 0x49, 0x64, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74,
	0x49, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x3f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e,
	0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x40, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x41, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x42, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x1d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3e,
	0x0a, 0x1a, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x43, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x1a, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x46,
	0x0a, 0x1e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x44, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e,
	0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50,
	0x6b, 0x74, 0x73, 0x18, 0x45, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73,
	0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e,
	0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1d, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x22, 0x40, 0x0a, 0x0b, 0x42, 0x64,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x64, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x64, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22, 0x2d, 0x0a, 0x07,
	0x42, 0x64, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x64, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x64, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x1a, 0xea, 0x02, 0x0a, 0x10,
	0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73,
	0x12, 0x72, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x1a, 0xe1, 0x01, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78,
	0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x73, 0x62, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x73, 0x62, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x76, 0x0a, 0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x62, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x54, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x44, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x44, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x0a, 0x0b,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x62, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x58, 0x5f, 0x38, 0x30, 0x32,
	0x31, 0x50, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x62, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x44, 0x53, 0x10, 0x01, 0x1a, 0x86, 0x04, 0x0a, 0x0a, 0x51, 0x6f, 0x73,
	0x42, 0x61, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x47, 0x0a, 0x09, 0x71, 0x6f, 0x73, 0x42, 0x61,
	0x48, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x61, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x61, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x42, 0x61, 0x48, 0x6f, 0x73, 0x74,
	0x1a, 0xae, 0x03, 0x0a, 0x09, 0x51, 0x6f, 0x73, 0x42, 0x61, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x45,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x61, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x61, 0x48, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x08, 0x63, 0x6f, 0x73, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x61, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x61, 0x48, 0x6f,
	0x73, 0x74, 0x2e, 0x43, 0x6f, 0x73, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x73,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x73, 0x63, 0x70, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x73, 0x63, 0x70, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0f, 0x0a, 0x0b,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22, 0xb0,
	0x01, 0x0a, 0x08, 0x43, 0x6f, 0x73, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x43,
	0x6f, 0x73, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x43, 0x6f, 0x73, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12,
	0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x73, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x41, 0x46, 0x33, 0x10,
	0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x73, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x41, 0x46,
	0x34, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x73, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x42, 0x45, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x73, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x73, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x73, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x6f, 0x73,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10,
	0x08, 0x1a, 0xf3, 0x03, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73,
	0x12, 0x47, 0x0a, 0x09, 0x71, 0x6f, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x09,
	0x71, 0x6f, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x1a, 0x9b, 0x03, 0x0a, 0x09, 0x51, 0x6f,
	0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x66, 0x50, 0x68, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x66, 0x50, 0x68, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x51, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x33, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6d,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x6d, 0x49, 0x64, 0x22, 0xb6,
	0x01, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x46, 0x32,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x11, 0x0a,
	0x0d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06,
	0x12, 0x10, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x45, 0x46,
	0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x54, 0x4f, 0x54, 0x41, 0x4c, 0x10, 0x08, 0x1a, 0xff, 0xfc, 0x01, 0x0a, 0x08, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x12, 0x4e, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x73, 0x12, 0x54, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x0e, 0x71, 0x6f, 0x73,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x5a, 0x0a, 0x10, 0x71,
	0x6f, 0x73, 0x4d, 0x71, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43,
	0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x71, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x4d, 0x71, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x48, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x73, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x73, 0x12, 0x4e, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x1a, 0xaa, 0xb7, 0x01, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x73, 0x12, 0x58, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x52, 0x0b, 0x71, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x1a, 0xbe, 0xb6,
	0x01, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x41, 0x63,
	0x6c, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67,
	0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67, 0x73,
	0x12, 0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x73, 0x52, 0x0d, 0x71,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x73, 0x12, 0x61, 0x0a, 0x0a,
	0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43,
	0x61, 0x72, 0x73, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x73, 0x12,
	0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0d, 0x71, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x6a, 0x0a, 0x0d, 0x71,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x49, 0x6e, 0x63, 0x50, 0x72, 0x69, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x49, 0x6e, 0x63, 0x50, 0x72, 0x69, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x49, 0x6e, 0x63, 0x50, 0x72, 0x69, 0x73, 0x12, 0x70, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x4c, 0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x46, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c,
	0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x4c, 0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x12, 0x64, 0x0a, 0x0b, 0x71, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x6f, 0x61,
	0x64, 0x73, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x73, 0x12,
	0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4d, 0x69, 0x72, 0x43, 0x61, 0x72, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x4d, 0x69, 0x72, 0x43, 0x61, 0x72, 0x73, 0x52, 0x0d, 0x71, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x4d, 0x69, 0x72, 0x43, 0x61, 0x72, 0x73, 0x12, 0x73, 0x0a, 0x10, 0x71,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x4e, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43,
	0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x4e, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x10,
	0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4e, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x73,
	0x12, 0x76, 0x0a, 0x11, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x11, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x52, 0x64, 0x72, 0x4c, 0x73, 0x70, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64,
	0x72, 0x4c, 0x73, 0x70, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72,
	0x4c, 0x73, 0x70, 0x73, 0x12, 0x6d, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64,
	0x72, 0x4d, 0x68, 0x70, 0x36, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68,
	0x70, 0x36, 0x53, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68,
	0x70, 0x36, 0x73, 0x12, 0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72,
	0x4d, 0x68, 0x70, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x73,
	0x52, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x73, 0x12,
	0x76, 0x0a, 0x11, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x6c, 0x64, 0x70,
	0x54, 0x6e, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x6c, 0x64, 0x70,
	0x54, 0x6e, 0x6c, 0x73, 0x52, 0x11, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d,
	0x6c, 0x64, 0x70, 0x54, 0x6e, 0x6c, 0x73, 0x12, 0x6d, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x36, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x45, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64,
	0x72, 0x4e, 0x68, 0x70, 0x36, 0x53, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64,
	0x72, 0x4e, 0x68, 0x70, 0x36, 0x73, 0x12, 0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4e,
	0x68, 0x70, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4e, 0x68,
	0x70, 0x73, 0x12, 0x73, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x73, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x12, 0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x52, 0x64, 0x72, 0x54, 0x6e, 0x6c, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72,
	0x54, 0x6e, 0x6c, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x54,
	0x6e, 0x6c, 0x73, 0x12, 0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72,
	0x56, 0x70, 0x6e, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x56, 0x70, 0x6e, 0x73,
	0x52, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x56, 0x70, 0x6e, 0x73, 0x12,
	0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x0d, 0x71, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x6a, 0x0a, 0x0d, 0x71,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x72, 0x76, 0x43, 0x6c, 0x73, 0x73, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x53, 0x72, 0x76, 0x43, 0x6c, 0x73, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x53, 0x72, 0x76, 0x43, 0x6c, 0x73, 0x73, 0x12, 0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x79, 0x73,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x79, 0x73, 0x4c,
	0x6f, 0x67, 0x73, 0x12, 0x64, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x55, 0x72, 0x70,
	0x66, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x55, 0x72, 0x70, 0x66, 0x73, 0x52, 0x0b, 0x71, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x55, 0x72, 0x70, 0x66, 0x73, 0x12, 0x73, 0x0a, 0x10, 0x71, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x10, 0x71, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x1a, 0xe2,
	0x03, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67, 0x73,
	0x12, 0x75, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67, 0x1a, 0xd9, 0x02, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67, 0x12, 0x7c, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5c, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x41, 0x63, 0x6c, 0x4c, 0x6f,
	0x67, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x7f, 0x0a, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5d, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x41, 0x63, 0x6c, 0x4c, 0x6f, 0x67, 0x2e, 0x49,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x22, 0x23, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x41, 0x43, 0x4c, 0x4c, 0x4f, 0x47, 0x10, 0x00, 0x22, 0x25, 0x0a, 0x0b,
	0x49, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x49,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x00, 0x1a, 0xce, 0x19, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61,
	0x72, 0x50, 0x70, 0x73, 0x73, 0x12, 0x75, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43,
	0x61, 0x72, 0x50, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x52, 0x0c,
	0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x1a, 0xc5, 0x18, 0x0a,
	0x0c, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x12, 0x7c, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61,
	0x72, 0x50, 0x70, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x62, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x69, 0x72, 0x12,
	0x7c, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x41, 0x77, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x41, 0x77, 0x61, 0x72,
	0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x41, 0x77, 0x61, 0x72, 0x65, 0x12, 0x7f, 0x0a,
	0x0b, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x5d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43,
	0x61, 0x72, 0x50, 0x70, 0x73, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7c,
	0x0a, 0x0a, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43,
	0x61, 0x72, 0x50, 0x70, 0x73, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x52, 0x0a, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x0f,
	0x67, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x73, 0x63, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x44, 0x73, 0x63, 0x70, 0x12, 0x91, 0x01, 0x0a, 0x11, 0x67, 0x72, 0x65, 0x65, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x63, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43,
	0x61, 0x72, 0x50, 0x70, 0x73, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x11, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x79, 0x0a, 0x09, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5b, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50,
	0x70, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73,
	0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x62, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x70, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x72, 0x12, 0x79, 0x0a, 0x09, 0x72, 0x65, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5b, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x2e,
	0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x64, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x2e, 0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x52, 0x08, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x72, 0x65, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x73, 0x63, 0x70, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x73,
	0x63, 0x70, 0x12, 0x8b, 0x01, 0x0a, 0x0f, 0x72, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x61, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x2e,
	0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x0f, 0x72, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x82, 0x01, 0x0a, 0x0c, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7f, 0x0a, 0x0b, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5d, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50, 0x70, 0x73, 0x2e, 0x59, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0b, 0x79, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x73, 0x63, 0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x73,
	0x63, 0x70, 0x12, 0x94, 0x01, 0x0a, 0x12, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x64, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61,
	0x72, 0x50, 0x70, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x50,
	0x70, 0x73, 0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x12, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x20, 0x0a, 0x0a, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x41, 0x52, 0x10, 0x00, 0x22, 0x37, 0x0a, 0x0a, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x41, 0x77, 0x61, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x41, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x41, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x54, 0x52,
	0x55, 0x45, 0x10, 0x01, 0x22, 0x3c, 0x0a, 0x0b, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x41, 0x53, 0x53,
	0x10, 0x01, 0x22, 0x4d, 0x0a, 0x0a, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x10, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47,
	0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x72,
	0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10,
	0x02, 0x22, 0x8a, 0x02, 0x0a, 0x11, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31,
	0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x19, 0x0a,
	0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46,
	0x34, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x19, 0x0a,
	0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53,
	0x37, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1f, 0x0a,
	0x1b, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0x31,
	0x0a, 0x09, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x50, 0x53, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x50, 0x53, 0x10,
	0x01, 0x22, 0x36, 0x0a, 0x09, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15,
	0x0a, 0x11, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x49, 0x53, 0x43,
	0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x01, 0x22, 0x45, 0x0a, 0x08, 0x52, 0x65, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x65, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x52,
	0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02,
	0x22, 0xf6, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x17, 0x0a,
	0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12,
	0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x65, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04,
	0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37,
	0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x65,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f,
	0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0x3f, 0x0a, 0x0c, 0x59, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14, 0x59, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x41, 0x52,
	0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x01, 0x22, 0x51, 0x0a, 0x0b, 0x59, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x59, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f,
	0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22, 0x94, 0x02,
	0x0a, 0x12, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00,
	0x12, 0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16,
	0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x34, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12,
	0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x59,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x59, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46,
	0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x10, 0x08, 0x1a, 0x8b, 0x19, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43,
	0x61, 0x72, 0x73, 0x12, 0x69, 0x0a, 0x09, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x43, 0x61, 0x72, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x1a, 0x91,
	0x18, 0x0a, 0x09, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x12, 0x76, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x56, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43,
	0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x62, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x62, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x69, 0x72,
	0x12, 0x76, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x41, 0x77, 0x61, 0x72, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x56, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61,
	0x72, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x41, 0x77, 0x61, 0x72, 0x65, 0x52, 0x0a, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x41, 0x77, 0x61, 0x72, 0x65, 0x12, 0x79, 0x0a, 0x0b, 0x67, 0x72, 0x65, 0x65,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x57, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x6e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x0a, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x56, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x43, 0x61, 0x72, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x0a, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x67,
	0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x73, 0x63, 0x70, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x44, 0x73, 0x63, 0x70, 0x12, 0x8b, 0x01, 0x0a, 0x11, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x5d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x2e, 0x47,
	0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x52, 0x11, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x73, 0x0a, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x55, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x43, 0x61, 0x72, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x62, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x72, 0x12, 0x73, 0x0a, 0x09,
	0x72, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x55, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x2e, 0x52, 0x65, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x70, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x54, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72,
	0x2e, 0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x08, 0x72, 0x65, 0x64, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x44, 0x73, 0x63, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x64, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x73, 0x63, 0x70, 0x12, 0x85, 0x01, 0x0a, 0x0f, 0x72, 0x65,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x5b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72,
	0x2e, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x52, 0x0f, 0x72, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x7c, 0x0a, 0x0c, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x58, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x43, 0x61, 0x72, 0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x79, 0x0a, 0x0b, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x57, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61,
	0x72, 0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0b, 0x79,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x79, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x44, 0x73, 0x63, 0x70, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x44, 0x73, 0x63, 0x70, 0x12, 0x8e, 0x01, 0x0a, 0x12, 0x79, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x5e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x43, 0x61, 0x72,
	0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x12, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x20, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x43, 0x41, 0x52, 0x10, 0x00, 0x22, 0x37, 0x0a, 0x0a, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x41, 0x77, 0x61, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x41, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x41, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x54, 0x52, 0x55, 0x45,
	0x10, 0x01, 0x22, 0x3c, 0x0a, 0x0b, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x72,
	0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x01,
	0x22, 0x4d, 0x0a, 0x0a, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x10, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45,
	0x45, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x72, 0x65, 0x65,
	0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22,
	0x8a, 0x02, 0x0a, 0x11, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00,
	0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x47,
	0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10,
	0x03, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x47,
	0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10,
	0x06, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b, 0x47,
	0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0x31, 0x0a, 0x09,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x50, 0x53, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x50, 0x53, 0x10, 0x01, 0x22,
	0x36, 0x0a, 0x09, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11,
	0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x41, 0x52,
	0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x01, 0x22, 0x45, 0x0a, 0x08, 0x52, 0x65, 0x64, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f,
	0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x65, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22, 0xf6,
	0x01, 0x0a, 0x0f, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52,
	0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x32, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x17, 0x0a,
	0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x17,
	0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06,
	0x12, 0x16, 0x0a, 0x12, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x65, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0x3f, 0x0a, 0x0c, 0x59, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14, 0x59, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x01, 0x22, 0x51, 0x0a, 0x0b, 0x59, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x59, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22, 0x94, 0x02, 0x0a, 0x12,
	0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x1a,
	0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x59, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34,
	0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x1a, 0x0a,
	0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07,
	0x12, 0x20, 0x0a, 0x1c, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x10, 0x08, 0x1a, 0xda, 0x03, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x75, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x71,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0xd1, 0x02, 0x0a, 0x0c,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x7c, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x70, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x58, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x23, 0x0a, 0x0a,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x10,
	0x00, 0x22, 0x2c, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x44, 0x45, 0x4e, 0x59, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x1a,
	0xb0, 0x02, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x49, 0x6e, 0x63, 0x50, 0x72, 0x69,
	0x73, 0x12, 0x75, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x49, 0x6e, 0x63, 0x50, 0x72,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x49, 0x6e, 0x63, 0x50, 0x72, 0x69, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x49, 0x6e, 0x63, 0x50, 0x72, 0x69, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x49, 0x6e, 0x63, 0x50, 0x72, 0x69, 0x1a, 0xa7, 0x01, 0x0a, 0x0c, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x49, 0x6e, 0x63, 0x50, 0x72, 0x69, 0x12, 0x76, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5a, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x49, 0x6e, 0x63, 0x50, 0x72, 0x69,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x49, 0x6e, 0x63, 0x50, 0x72, 0x69, 0x2e, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x22, 0x1f, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x13, 0x0a,
	0x0f, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x49, 0x4e, 0x43, 0x50, 0x52, 0x49,
	0x10, 0x00, 0x1a, 0x9f, 0x10, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x32, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x12, 0x7d, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x4c, 0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x55,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x32, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x32, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x32, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x1a, 0x8c, 0x0f, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x4c, 0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x62, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x69, 0x72, 0x12, 0x83, 0x01, 0x0a,
	0x0b, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x61, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x4c, 0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x4c, 0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x80, 0x01, 0x0a, 0x0a, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x60, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x2e, 0x47,
	0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0a, 0x67, 0x72, 0x65, 0x65, 0x6e,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x95, 0x01, 0x0a, 0x11, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x67, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x4c, 0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x4c, 0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x11, 0x67, 0x72, 0x65, 0x65,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x7d, 0x0a,
	0x09, 0x72, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x5f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c,
	0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c,
	0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x72, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7a, 0x0a, 0x08,
	0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5e,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x32, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x32, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x08,
	0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x8f, 0x01, 0x0a, 0x0f, 0x72, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x65, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x4c, 0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x4c, 0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0f, 0x72, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x0c, 0x73,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x62, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x4c, 0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x4c, 0x32, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x3c, 0x0a, 0x0b, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x47,
	0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10,
	0x01, 0x22, 0x4d, 0x0a, 0x0a, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x10, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52,
	0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x72, 0x65,
	0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02,
	0x22, 0x8a, 0x02, 0x0a, 0x11, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34,
	0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15,
	0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37,
	0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b,
	0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0x36, 0x0a,
	0x09, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x65,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x50,
	0x41, 0x53, 0x53, 0x10, 0x01, 0x22, 0x45, 0x0a, 0x08, 0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52,
	0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x65, 0x64, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22, 0xf6, 0x01, 0x0a,
	0x0f, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32,
	0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x52,
	0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x34, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13,
	0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x16,
	0x0a, 0x12, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0x8c, 0x01, 0x0a, 0x0c, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x22, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54,
	0x5f, 0x53, 0x55, 0x50, 0x50, 0x52, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x26,
	0x0a, 0x22, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d,
	0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x52, 0x45, 0x53,
	0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x2c, 0x0a, 0x28, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x55,
	0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x52, 0x45, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x10, 0x02, 0x1a, 0x99, 0x04, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c,
	0x6f, 0x61, 0x64, 0x73, 0x12, 0x6d, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c,
	0x6f, 0x61, 0x64, 0x1a, 0x9a, 0x03, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x6f,
	0x61, 0x64, 0x12, 0x78, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x58, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x4c, 0x6f, 0x61, 0x64, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x7b, 0x0a, 0x0b,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x4c, 0x6f, 0x61, 0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4c, 0x6f, 0x61, 0x64,
	0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x28, 0x0a, 0x0a, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x4f, 0x41, 0x44, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43,
	0x45, 0x10, 0x00, 0x22, 0x6b, 0x0a, 0x0b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x4c, 0x32, 0x10, 0x01,
	0x12, 0x16, 0x0a, 0x12, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x46, 0x4c, 0x4f, 0x57, 0x4c, 0x33, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x03,
	0x1a, 0xde, 0x01, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4d, 0x69, 0x72, 0x43, 0x61,
	0x72, 0x73, 0x12, 0x75, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4d, 0x69, 0x72, 0x43,
	0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4d, 0x69, 0x72, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x4d, 0x69, 0x72, 0x43, 0x61, 0x72, 0x52, 0x0c, 0x71, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x4d, 0x69, 0x72, 0x43, 0x61, 0x72, 0x1a, 0x56, 0x0a, 0x0c, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x4d, 0x69, 0x72, 0x43, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x62, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x69, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x62, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x62, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69,
	0x72, 0x1a, 0xe0, 0x04, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4e, 0x73, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x4e, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x57, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4e,
	0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x4e, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x4e, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x1a, 0xc7, 0x03, 0x0a, 0x0f, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x4e, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x12, 0x7c,
	0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x60, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x4e,
	0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x4e, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x82, 0x01, 0x0a,
	0x0a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x62, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x4e, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x4e, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x08, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x11, 0x0a, 0x0d, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x50, 0x56, 0x34,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49,
	0x50, 0x56, 0x36, 0x10, 0x01, 0x22, 0x5d, 0x0a, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x46, 0x49, 0x58, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x00, 0x12, 0x16,
	0x0a, 0x12, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x46, 0x49, 0x58,
	0x54, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x53, 0x10, 0x02, 0x1a, 0xf7, 0x03, 0x0a, 0x11, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x71,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43,
	0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x10, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72,
	0x6f, 0x72, 0x1a, 0xd9, 0x02, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x84, 0x01, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x64, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x4d,
	0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x78,
	0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x60,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x27, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x00, 0x22, 0x1b, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x1a, 0x98,
	0x06, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4c, 0x73, 0x70, 0x73,
	0x12, 0x75, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4c, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4c, 0x73, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4c, 0x73, 0x70, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x52, 0x64, 0x72, 0x4c, 0x73, 0x70, 0x1a, 0x8f, 0x05, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x52, 0x64, 0x72, 0x4c, 0x73, 0x70, 0x12, 0x7c, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5c, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4c, 0x73,
	0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4c, 0x73, 0x70, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x7c, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4c, 0x73, 0x70, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4c, 0x73, 0x70, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74,
	0x48, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48,
	0x6f, 0x70, 0x12, 0x79, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43,
	0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4c, 0x73, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x52, 0x64, 0x72, 0x4c, 0x73, 0x70, 0x2e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x52, 0x09, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x22, 0x28, 0x0a,
	0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x45, 0x44, 0x49, 0x52, 0x45,
	0x43, 0x54, 0x4c, 0x53, 0x50, 0x10, 0x00, 0x22, 0x6d, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x41, 0x44, 0x44, 0x52, 0x10, 0x00, 0x12, 0x18,
	0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x48, 0x50, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e,
	0x44, 0x41, 0x52, 0x59, 0x10, 0x03, 0x22, 0x21, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x1a, 0xff, 0x07, 0x0a, 0x0e, 0x51, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x36, 0x53, 0x12, 0x79, 0x0a, 0x0d,
	0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x36, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x36, 0x53, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x36, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x36, 0x1a, 0xf1, 0x06, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x36, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x68, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x68,
	0x6f, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x4e, 0x68,
	0x70, 0x36, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5f, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x36, 0x53,
	0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x36, 0x2e, 0x51,
	0x6f, 0x73, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x36, 0x53, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x52,
	0x64, 0x72, 0x4e, 0x68, 0x70, 0x36, 0x73, 0x12, 0x75, 0x0a, 0x07, 0x72, 0x64, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x36, 0x53, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x36, 0x2e, 0x52, 0x64,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x1a, 0xbb, 0x02, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70,
	0x36, 0x53, 0x12, 0x8a, 0x01, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70,
	0x36, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x6a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x36, 0x53, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x36, 0x2e, 0x51, 0x6f, 0x73,
	0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x36, 0x53, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x4e,
	0x68, 0x70, 0x36, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x36, 0x1a,
	0x9e, 0x01, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x36, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70,
	0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x71, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x71, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x71, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x71, 0x61, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x70, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x70, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x79, 0x0a, 0x07, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x52,
	0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55,
	0x50, 0x4e, 0x51, 0x41, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x56, 0x50, 0x4e, 0x10, 0x02, 0x12, 0x18, 0x0a,
	0x14, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x56,
	0x50, 0x4e, 0x4e, 0x51, 0x41, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x64, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x04, 0x1a, 0x97, 0x08, 0x0a, 0x0d,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x73, 0x12, 0x75, 0x0a,
	0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64,
	0x72, 0x4d, 0x68, 0x70, 0x1a, 0x8e, 0x07, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52,
	0x64, 0x72, 0x4d, 0x68, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x68, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x68,
	0x6f, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x7c, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x64,
	0x72, 0x4e, 0x68, 0x70, 0x73, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70,
	0x73, 0x12, 0x73, 0x0a, 0x07, 0x72, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52,
	0x64, 0x72, 0x4d, 0x68, 0x70, 0x2e, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72,
	0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69,
	0x70, 0x48, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x69, 0x70,
	0x48, 0x61, 0x73, 0x68, 0x1a, 0xb3, 0x02, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x4e,
	0x68, 0x70, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x09, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x4e, 0x68,
	0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x66, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x68, 0x70, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x64,
	0x72, 0x4e, 0x68, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x52,
	0x09, 0x71, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x1a, 0x9d, 0x01, 0x0a, 0x09, 0x51,
	0x6f, 0x73, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x71,
	0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6e, 0x71, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x6e, 0x71, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x71, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x70, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x70, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x07, 0x52, 0x64,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x64, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x4e, 0x51, 0x41, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x41, 0x43, 0x4b,
	0x55, 0x50, 0x56, 0x50, 0x4e, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x64, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x56, 0x50, 0x4e, 0x4e, 0x51, 0x41, 0x10,
	0x03, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x49, 0x52,
	0x45, 0x43, 0x54, 0x10, 0x04, 0x1a, 0x90, 0x03, 0x0a, 0x11, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x52, 0x64, 0x72, 0x4d, 0x6c, 0x64, 0x70, 0x54, 0x6e, 0x6c, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x10,
	0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x6c, 0x64, 0x70, 0x54, 0x6e, 0x6c,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x6c, 0x64, 0x70, 0x54, 0x6e, 0x6c, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x6c, 0x64, 0x70, 0x54, 0x6e,
	0x6c, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d, 0x6c, 0x64, 0x70,
	0x54, 0x6e, 0x6c, 0x1a, 0xf2, 0x01, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64,
	0x72, 0x4d, 0x6c, 0x64, 0x70, 0x54, 0x6e, 0x6c, 0x12, 0x84, 0x01, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x64, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4d,
	0x6c, 0x64, 0x70, 0x54, 0x6e, 0x6c, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64,
	0x72, 0x4d, 0x6c, 0x64, 0x70, 0x54, 0x6e, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x6d, 0x6c, 0x64, 0x70, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x6c, 0x64, 0x70, 0x54, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x52, 0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x4d, 0x4c, 0x44, 0x50,
	0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 0x10, 0x00, 0x1a, 0xad, 0x05, 0x0a, 0x0e, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x36, 0x53, 0x12, 0x79, 0x0a, 0x0d, 0x71,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x36, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x53, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x36, 0x53, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x36, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52,
	0x64, 0x72, 0x4e, 0x68, 0x70, 0x36, 0x1a, 0x9f, 0x04, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x36, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x68, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x68, 0x6f,
	0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74,
	0x48, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48,
	0x6f, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x71, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x71, 0x61, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x71, 0x61, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x71, 0x61,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x07, 0x72, 0x64, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5b, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x36, 0x53,
	0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x36, 0x2e, 0x52,
	0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x70, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x70, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x79, 0x0a,
	0x07, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x64, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x4e, 0x51,
	0x41, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42,
	0x41, 0x43, 0x4b, 0x55, 0x50, 0x56, 0x50, 0x4e, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x64,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x56, 0x50, 0x4e, 0x4e,
	0x51, 0x41, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x04, 0x1a, 0xd1, 0x05, 0x0a, 0x0d, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x73, 0x12, 0x75, 0x0a, 0x0c, 0x71, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4e, 0x68, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52,
	0x64, 0x72, 0x4e, 0x68, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72,
	0x4e, 0x68, 0x70, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4e, 0x68,
	0x70, 0x1a, 0xc8, 0x04, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4e,
	0x68, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x68, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x68, 0x6f, 0x6c, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f,
	0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70,
	0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x71, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x71, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x71, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x71, 0x61, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x73,
	0x0a, 0x07, 0x72, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64,
	0x72, 0x4e, 0x68, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x4e,
	0x68, 0x70, 0x2e, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x64, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x70, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x70, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x79, 0x0a, 0x07, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e,
	0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x41, 0x43, 0x4b,
	0x55, 0x50, 0x4e, 0x51, 0x41, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x64, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x56, 0x50, 0x4e, 0x10, 0x02, 0x12, 0x18,
	0x0a, 0x14, 0x52, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50,
	0x56, 0x50, 0x4e, 0x4e, 0x51, 0x41, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x64, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x04, 0x1a, 0xbc, 0x03, 0x0a,
	0x10, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x73, 0x12, 0x81, 0x01, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x1a, 0xa3, 0x02, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x52, 0x64, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x12, 0x71, 0x6f,
	0x73, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x61, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x6a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x51, 0x6f, 0x73, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x63, 0x61, 0x6c, 0x43,
	0x61, 0x72, 0x52, 0x12, 0x71, 0x6f, 0x73, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x63, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x22, 0x53, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x48, 0x69, 0x65,
	0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x1a,
	0x51, 0x6f, 0x73, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x63, 0x61, 0x6c, 0x43,
	0x61, 0x72, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19,
	0x51, 0x6f, 0x73, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x63, 0x61, 0x6c, 0x43,
	0x61, 0x72, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0xda, 0x02, 0x0a, 0x0d,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x54, 0x6e, 0x6c, 0x73, 0x12, 0x75, 0x0a,
	0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x54, 0x6e, 0x6c, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x52, 0x64, 0x72, 0x54, 0x6e, 0x6c, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x52, 0x64, 0x72, 0x54, 0x6e, 0x6c, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64,
	0x72, 0x54, 0x6e, 0x6c, 0x1a, 0xd1, 0x01, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52,
	0x64, 0x72, 0x54, 0x6e, 0x6c, 0x12, 0x7c, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x54, 0x6e, 0x6c, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x54, 0x6e, 0x6c, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x0a, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54,
	0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 0x10, 0x00, 0x1a, 0xe8, 0x02, 0x0a, 0x0d, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x56, 0x70, 0x6e, 0x73, 0x12, 0x75, 0x0a, 0x0c, 0x71, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x56, 0x70, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52,
	0x64, 0x72, 0x56, 0x70, 0x6e, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72,
	0x56, 0x70, 0x6e, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x56, 0x70,
	0x6e, 0x1a, 0xdf, 0x01, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x56,
	0x70, 0x6e, 0x12, 0x7c, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x56, 0x70, 0x6e, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x52, 0x64, 0x72, 0x56, 0x70, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x76, 0x70, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x70, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x52, 0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x56, 0x50, 0x4e, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x10, 0x00, 0x1a, 0xf2, 0x04, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x75, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x0c,
	0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x1a, 0xe9, 0x03, 0x0a,
	0x0c, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x7c, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb8, 0x02,
	0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x45, 0x4d, 0x41, 0x52,
	0x4b, 0x38, 0x30, 0x32, 0x31, 0x50, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x49, 0x4e, 0x4e,
	0x45, 0x52, 0x38, 0x30, 0x32, 0x31, 0x50, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x49, 0x50,
	0x44, 0x46, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x49, 0x50, 0x50, 0x52, 0x45, 0x43, 0x45,
	0x44, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x49, 0x50, 0x56, 0x34,
	0x44, 0x53, 0x43, 0x50, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x49, 0x50, 0x56, 0x36, 0x44,
	0x53, 0x43, 0x50, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x4d, 0x50, 0x4c, 0x53, 0x45, 0x58,
	0x50, 0x10, 0x06, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x38, 0x30, 0x32,
	0x31, 0x50, 0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x52, 0x45, 0x4d, 0x41, 0x52, 0x4b, 0x54, 0x4f, 0x53, 0x10, 0x08, 0x12, 0x18,
	0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x45, 0x4d,
	0x41, 0x52, 0x4b, 0x54, 0x54, 0x4c, 0x10, 0x09, 0x1a, 0x85, 0x08, 0x0a, 0x0d, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x53, 0x72, 0x76, 0x43, 0x6c, 0x73, 0x73, 0x12, 0x75, 0x0a, 0x0c, 0x71, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x53, 0x72, 0x76, 0x43, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53,
	0x72, 0x76, 0x43, 0x6c, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x72, 0x76,
	0x43, 0x6c, 0x73, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x72, 0x76, 0x43, 0x6c,
	0x73, 0x1a, 0xfc, 0x06, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x72, 0x76, 0x43,
	0x6c, 0x73, 0x12, 0x7c, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x72, 0x76, 0x43, 0x6c, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x53, 0x72, 0x76, 0x43, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x6d, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x57, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x72,
	0x76, 0x43, 0x6c, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x72, 0x76, 0x43,
	0x6c, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x7c, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x53, 0x72, 0x76, 0x43, 0x6c, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x53, 0x72, 0x76, 0x43, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x46, 0x6c, 0x61,
	0x67, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x82, 0x01,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x5e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x53, 0x72, 0x76, 0x43, 0x6c, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x53, 0x72, 0x76, 0x43, 0x6c, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x22, 0x29, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x17, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x10, 0x00, 0x22, 0x39, 0x0a,
	0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f,
	0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f,
	0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22, 0x3b, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x46, 0x6c, 0x61, 0x67, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x45, 0x4e, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42,
	0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x45, 0x46, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08,
	0x1a, 0x82, 0x03, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x79, 0x73, 0x4c, 0x6f,
	0x67, 0x73, 0x12, 0x75, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x79, 0x73, 0x4c,
	0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x0c, 0x71, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x1a, 0xf9, 0x01, 0x0a, 0x0c, 0x51, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x12, 0x88, 0x01, 0x0a, 0x0e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x60, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x22, 0x40, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x50, 0x53, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x50, 0x50, 0x53, 0x10, 0x01, 0x1a, 0x9a, 0x05, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x55, 0x72, 0x70, 0x66, 0x73, 0x12, 0x6d, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x55,
	0x72, 0x70, 0x66, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x55, 0x72, 0x70, 0x66, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x55, 0x72, 0x70, 0x66, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x55, 0x72, 0x70, 0x66, 0x1a, 0x9b, 0x04, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x55,
	0x72, 0x70, 0x66, 0x12, 0x78, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x58, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x55, 0x72, 0x70, 0x66, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x55, 0x72, 0x70, 0x66, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x7e, 0x0a,
	0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x5a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x55, 0x72, 0x70, 0x66, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x55, 0x72,
	0x70, 0x66, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x75, 0x0a,
	0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x57, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x55,
	0x72, 0x70, 0x66, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x55, 0x72, 0x70, 0x66, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x21, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x55, 0x52, 0x50, 0x46, 0x10, 0x00, 0x22, 0x41, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x22, 0x36, 0x0a, 0x09, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x4f, 0x4f, 0x53, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54,
	0x10, 0x01, 0x1a, 0xda, 0x02, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x57, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x1a, 0xc1, 0x01, 0x0a, 0x0f,
	0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x69,
	0x72, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6c, 0x6f, 0x77,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66,
	0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x71, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x71, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a,
	0xe3, 0x28, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x12, 0x60, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x1a, 0xee, 0x27, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x6b, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x49, 0x44, 0x36, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x49, 0x44, 0x36, 0x53, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44,
	0x36, 0x73, 0x12, 0x68, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x73, 0x52,
	0x0b, 0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x73, 0x12, 0x6b, 0x0a, 0x0c,
	0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x6c, 0x36, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x47, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x6c, 0x36, 0x53, 0x52, 0x0c, 0x71, 0x6f, 0x73,
	0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x6c, 0x36, 0x73, 0x12, 0x68, 0x0a, 0x0b, 0x71, 0x6f, 0x73,
	0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75,
	0x6c, 0x65, 0x41, 0x63, 0x6c, 0x73, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41,
	0x63, 0x6c, 0x73, 0x12, 0x68, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x6e,
	0x79, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x6e, 0x79, 0x73,
	0x52, 0x0b, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x6e, 0x79, 0x73, 0x12, 0x77, 0x0a,
	0x10, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x50, 0x76, 0x36, 0x41,
	0x64, 0x64, 0x72, 0x73, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x50, 0x76,
	0x36, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x68, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x4d, 0x61, 0x63, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x4d,
	0x61, 0x63, 0x73, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x4d, 0x61, 0x63, 0x73,
	0x12, 0x77, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x73, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x73, 0x12, 0x71, 0x0a, 0x0e, 0x71, 0x6f, 0x73,
	0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x36, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x49, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f,
	0x73, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x36, 0x53, 0x52, 0x0e, 0x71, 0x6f,
	0x73, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x36, 0x73, 0x12, 0x74, 0x0a, 0x0f,
	0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x63, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43,
	0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x63, 0x70, 0x46, 0x6c, 0x61, 0x67,
	0x73, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x63, 0x70, 0x46, 0x6c, 0x61,
	0x67, 0x73, 0x1a, 0xb6, 0x01, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49,
	0x44, 0x36, 0x53, 0x12, 0x75, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49,
	0x44, 0x36, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x36,
	0x53, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x36, 0x52, 0x0b, 0x71,
	0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x36, 0x1a, 0x2f, 0x0a, 0x0b, 0x51, 0x6f,
	0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x36, 0x12, 0x20, 0x0a, 0x0b, 0x71, 0x6f, 0x73,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x36, 0x1a, 0xae, 0x01, 0x0a, 0x0b,
	0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x73, 0x12, 0x71, 0x0a, 0x0a, 0x71,
	0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x49, 0x44, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x1a, 0x2c,
	0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x1a, 0xae, 0x01, 0x0a,
	0x0c, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x6c, 0x36, 0x53, 0x12, 0x75, 0x0a,
	0x0b, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x6c, 0x36, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x53, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x6c, 0x36, 0x53, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x41, 0x63, 0x6c, 0x36, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65,
	0x41, 0x63, 0x6c, 0x36, 0x1a, 0x27, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41,
	0x63, 0x6c, 0x36, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xa8, 0x01,
	0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x6c, 0x73, 0x12, 0x71, 0x0a,
	0x0a, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f,
	0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x6c, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x41, 0x63, 0x6c, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x6c,
	0x1a, 0x26, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xcb, 0x02, 0x0a, 0x0b, 0x51, 0x6f, 0x73,
	0x52, 0x75, 0x6c, 0x65, 0x41, 0x6e, 0x79, 0x73, 0x12, 0x71, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x41, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65,
	0x41, 0x6e, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x6e, 0x79, 0x52,
	0x0a, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x6e, 0x79, 0x1a, 0xc8, 0x01, 0x0a, 0x0a,
	0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41, 0x6e, 0x79, 0x12, 0x7f, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x5d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x41, 0x6e, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x41,
	0x6e, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x22, 0x39, 0x0a, 0x0b, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f,
	0x49, 0x50, 0x56, 0x36, 0x10, 0x01, 0x1a, 0xbc, 0x03, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x52, 0x75,
	0x6c, 0x65, 0x49, 0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x0f,
	0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43,
	0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x50, 0x76, 0x36, 0x41, 0x64, 0x64,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x50, 0x76, 0x36, 0x41, 0x64,
	0x64, 0x72, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x50, 0x76, 0x36, 0x41,
	0x64, 0x64, 0x72, 0x1a, 0x9f, 0x02, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x49,
	0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x12, 0x89, 0x01, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x67, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x49, 0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75,
	0x6c, 0x65, 0x49, 0x50, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x36, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4c, 0x65,
	0x6e, 0x22, 0x42, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x10, 0x01, 0x1a, 0xd6, 0x02, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x4d, 0x61, 0x63, 0x73, 0x12, 0x71, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65,
	0x4d, 0x61, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x4d, 0x61, 0x63,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x4d, 0x61, 0x63, 0x52, 0x0a, 0x71, 0x6f,
	0x73, 0x52, 0x75, 0x6c, 0x65, 0x4d, 0x61, 0x63, 0x1a, 0xd3, 0x01, 0x0a, 0x0a, 0x51, 0x6f, 0x73,
	0x52, 0x75, 0x6c, 0x65, 0x4d, 0x61, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x73, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x4d, 0x61, 0x63, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75,
	0x6c, 0x65, 0x4d, 0x61, 0x63, 0x2e, 0x4d, 0x61, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d,
	0x61, 0x63, 0x54, 0x79, 0x70, 0x65, 0x22, 0x36, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x61, 0x63, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x45, 0x53,
	0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x61,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x01, 0x1a, 0xe4,
	0x06, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75,
	0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x1a, 0xc7, 0x05, 0x0a, 0x0f,
	0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x8c, 0x01, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x68, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0c, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x68, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x58, 0x5f, 0x38, 0x30, 0x32, 0x31, 0x50, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44,
	0x53, 0x43, 0x50, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x53, 0x43, 0x50, 0x36, 0x10, 0x02, 0x12, 0x1d, 0x0a,
	0x19, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x50,
	0x50, 0x52, 0x45, 0x43, 0x45, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x50, 0x4c,
	0x53, 0x45, 0x58, 0x50, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x43,
	0x4c, 0x41, 0x53, 0x53, 0x10, 0x05, 0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46,
	0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x45, 0x46, 0x10, 0x07, 0x1a, 0xea, 0x02, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x36, 0x53, 0x12, 0x7d, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x36, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x57, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x36, 0x53, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x36, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x36, 0x1a, 0xd8, 0x01, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x36, 0x12, 0x85, 0x01, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x63, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x36, 0x53, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x36, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x23, 0x0a,
	0x0b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x10,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x49, 0x50, 0x56, 0x36,
	0x10, 0x00, 0x1a, 0x81, 0x05, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x63,
	0x70, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x52, 0x75,
	0x6c, 0x65, 0x54, 0x63, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x54, 0x63, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x54, 0x63, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x54, 0x63, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x1a, 0xe9, 0x03, 0x0a, 0x0e, 0x51,
	0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x63, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x8a, 0x01,
	0x0a, 0x0c, 0x62, 0x69, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x66, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x63, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x63, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x2e,
	0x42, 0x69, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x62, 0x69,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x63,
	0x70, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x63, 0x70,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x63, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x4d,
	0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x63, 0x70, 0x46, 0x6c,
	0x61, 0x67, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x8d, 0x02, 0x0a, 0x0c, 0x42, 0x69, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x69, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x42, 0x69, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x57,
	0x52, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x69, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x45, 0x43, 0x45, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x69, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x45, 0x53, 0x54, 0x41, 0x42, 0x4c,
	0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x69, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x46, 0x49, 0x4e, 0x10, 0x04, 0x12, 0x1a, 0x0a,
	0x16, 0x42, 0x69, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x4f,
	0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x69, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x53, 0x10, 0x06, 0x12, 0x14,
	0x0a, 0x10, 0x42, 0x69, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50,
	0x53, 0x48, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x69, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x53, 0x54, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x69,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x59, 0x4e, 0x10, 0x09,
	0x12, 0x14, 0x0a, 0x10, 0x42, 0x69, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x55, 0x52, 0x47, 0x10, 0x0a, 0x22, 0x2d, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x41,
	0x4e, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x4f, 0x52, 0x10, 0x01, 0x1a, 0xb6, 0x03, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x4d, 0x71, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x68, 0x0a, 0x0f, 0x71, 0x6f,
	0x73, 0x4d, 0x71, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x71, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x71, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x4d, 0x71, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x1a, 0xb7, 0x02, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x4d, 0x71, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x71, 0x6f, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x62, 0x12, 0x22, 0x0a, 0x0c,
	0x71, 0x6f, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x63,
	0x12, 0x22, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x6f, 0x73, 0x46, 0x72, 0x65, 0x65, 0x54,
	0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x46, 0x72, 0x65, 0x65,
	0x54, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x6f, 0x73, 0x46, 0x72, 0x65, 0x65, 0x54, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x46, 0x72, 0x65, 0x65, 0x54, 0x63,
	0x12, 0x1c, 0x0a, 0x09, 0x71, 0x6f, 0x73, 0x46, 0x72, 0x65, 0x65, 0x54, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x46, 0x72, 0x65, 0x65, 0x54, 0x70, 0x12, 0x1e,
	0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x62, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x62, 0x12, 0x1e,
	0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x63, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x63, 0x12, 0x1e,
	0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x70, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x70, 0x1a, 0xb9,
	0x12, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x12, 0x50, 0x0a,
	0x09, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x1a,
	0xd8, 0x11, 0x0a, 0x09, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x7e, 0x0a, 0x15, 0x71,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x4d,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x51,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x4d,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x15, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e,
	0x6f, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x69, 0x0a, 0x0e, 0x71,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x57, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x46, 0x6c, 0x61,
	0x67, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12,
	0x6c, 0x0a, 0x0f, 0x76, 0x36, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x45,
	0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x56, 0x36, 0x51,
	0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x45, 0x6e, 0x73, 0x52, 0x0f, 0x76, 0x36,
	0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x45, 0x6e, 0x73, 0x12, 0x60, 0x0a,
	0x0b, 0x76, 0x36, 0x51, 0x6f, 0x73, 0x56, 0x6e, 0x69, 0x45, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x56, 0x36, 0x51, 0x6f, 0x73, 0x56, 0x6e, 0x69, 0x45,
	0x6e, 0x73, 0x52, 0x0b, 0x76, 0x36, 0x51, 0x6f, 0x73, 0x56, 0x6e, 0x69, 0x45, 0x6e, 0x73, 0x1a,
	0x82, 0x06, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64,
	0x65, 0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x91, 0x01, 0x0a, 0x14, 0x71, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x51, 0x6f, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x64,
	0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65,
	0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x14, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x1a, 0xd4, 0x04,
	0x0a, 0x14, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4e,
	0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x85, 0x01, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x67, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x4d,
	0x6f, 0x64, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x63,
	0x65, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72,
	0x65, 0x63, 0x65, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x97, 0x01, 0x0a, 0x0f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x6d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x6f, 0x64,
	0x65, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x49, 0x43, 0x45, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x10, 0x01, 0x22, 0x4e, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x49,
	0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x10, 0x01, 0x1a, 0x80, 0x02, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x75, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x0d, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x77,
	0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x1a, 0xc6, 0x01, 0x0a, 0x0f, 0x56, 0x36, 0x51, 0x6f,
	0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x45, 0x6e, 0x73, 0x12, 0x79, 0x0a, 0x0e, 0x76,
	0x36, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x45, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x56, 0x36, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x49, 0x44, 0x45, 0x6e, 0x73, 0x2e, 0x56, 0x36, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x49, 0x44, 0x45, 0x6e, 0x52, 0x0e, 0x76, 0x36, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x49, 0x44, 0x45, 0x6e, 0x1a, 0x38, 0x0a, 0x0e, 0x56, 0x36, 0x51, 0x6f, 0x73, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x45, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x36, 0x51, 0x6f,
	0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x45, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x76, 0x36, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x45, 0x6e,
	0x1a, 0xa6, 0x01, 0x0a, 0x0b, 0x56, 0x36, 0x51, 0x6f, 0x73, 0x56, 0x6e, 0x69, 0x45, 0x6e, 0x73,
	0x12, 0x69, 0x0a, 0x0a, 0x76, 0x36, 0x51, 0x6f, 0x73, 0x56, 0x6e, 0x69, 0x45, 0x6e, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x56, 0x36, 0x51, 0x6f, 0x73, 0x56, 0x6e,
	0x69, 0x45, 0x6e, 0x73, 0x2e, 0x56, 0x36, 0x51, 0x6f, 0x73, 0x56, 0x6e, 0x69, 0x45, 0x6e, 0x52,
	0x0a, 0x76, 0x36, 0x51, 0x6f, 0x73, 0x56, 0x6e, 0x69, 0x45, 0x6e, 0x1a, 0x2c, 0x0a, 0x0a, 0x56,
	0x36, 0x51, 0x6f, 0x73, 0x56, 0x6e, 0x69, 0x45, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x36, 0x51,
	0x6f, 0x73, 0x56, 0x6e, 0x69, 0x45, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76,
	0x36, 0x51, 0x6f, 0x73, 0x56, 0x6e, 0x69, 0x45, 0x6e, 0x22, 0x38, 0x0a, 0x09, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x22, 0x35, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x44, 0x49, 0x53, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x46, 0x6c, 0x61,
	0x67, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0xcd, 0x03, 0x0a, 0x0c, 0x51,
	0x6f, 0x73, 0x56, 0x70, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x58, 0x0a, 0x0b, 0x71,
	0x6f, 0x73, 0x56, 0x70, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x56, 0x70, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0xe2, 0x02, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x70, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x56, 0x70, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x70, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76,
	0x70, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xbc, 0x01, 0x0a, 0x0f,
	0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x7d, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x43, 0x62, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0e,
	0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x2a,
	0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x72, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x72, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x93, 0x05, 0x0a, 0x15, 0x51,
	0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x6d, 0x70, 0x73, 0x12, 0x73, 0x0a, 0x14, 0x71, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x6d, 0x70, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x6d, 0x70, 0x52, 0x14, 0x71, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x6d, 0x70, 0x1a, 0x84, 0x04, 0x0a, 0x14, 0x51, 0x6f,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54,
	0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x15, 0x71, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x66, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x6d, 0x70, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x54, 0x6d, 0x70, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x66, 0x67, 0x73, 0x52, 0x15, 0x71, 0x6f, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x66,
	0x67, 0x73, 0x1a, 0xbb, 0x02, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x66, 0x67, 0x73, 0x12, 0x9e, 0x01, 0x0a,
	0x14, 0x71, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x43, 0x66, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x6a, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x54, 0x6d, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x6d, 0x70, 0x2e, 0x51, 0x6f, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x66,
	0x67, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x43, 0x66, 0x67, 0x52, 0x14, 0x71, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x66, 0x67, 0x1a, 0x80, 0x01,
	0x0a, 0x14, 0x51, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x43, 0x66, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x75, 0x69, 0x42, 0x61, 0x6e, 0x64,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x75, 0x69, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x69, 0x43, 0x68, 0x6e, 0x6e, 0x6c, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x69, 0x43, 0x68, 0x6e, 0x6e, 0x6c, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x69, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x69, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x1a, 0xe3, 0x10, 0x0a, 0x06, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x71,
	0x6f, 0x73, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x52, 0x05, 0x71,
	0x6f, 0x73, 0x44, 0x73, 0x1a, 0x9f, 0x10, 0x0a, 0x05, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x73,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x09, 0x71, 0x6f,
	0x73, 0x41, 0x70, 0x70, 0x49, 0x66, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x41, 0x70, 0x70, 0x49, 0x66, 0x73, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x41,
	0x70, 0x70, 0x49, 0x66, 0x73, 0x12, 0x40, 0x0a, 0x06, 0x71, 0x6f, 0x73, 0x42, 0x61, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x61, 0x73, 0x52,
	0x06, 0x71, 0x6f, 0x73, 0x42, 0x61, 0x73, 0x12, 0x43, 0x0a, 0x07, 0x71, 0x6f, 0x73, 0x50, 0x68,
	0x62, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x44, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50,
	0x68, 0x62, 0x73, 0x52, 0x07, 0x71, 0x6f, 0x73, 0x50, 0x68, 0x62, 0x73, 0x1a, 0xb7, 0x02, 0x0a,
	0x09, 0x51, 0x6f, 0x73, 0x41, 0x70, 0x70, 0x49, 0x66, 0x73, 0x12, 0x50, 0x0a, 0x08, 0x71, 0x6f,
	0x73, 0x41, 0x70, 0x70, 0x49, 0x66, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x70, 0x70, 0x49, 0x66, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x70, 0x70,
	0x49, 0x66, 0x52, 0x08, 0x71, 0x6f, 0x73, 0x41, 0x70, 0x70, 0x49, 0x66, 0x1a, 0xd7, 0x01, 0x0a,
	0x08, 0x51, 0x6f, 0x73, 0x41, 0x70, 0x70, 0x49, 0x66, 0x12, 0x5c, 0x0a, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x41, 0x70, 0x70, 0x49, 0x66, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x70, 0x70,
	0x49, 0x66, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x55, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x15,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x5f, 0x4f, 0x55, 0x54,
	0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x1a, 0xe2, 0x05, 0x0a, 0x06, 0x51, 0x6f, 0x73, 0x42, 0x61,
	0x73, 0x12, 0x44, 0x0a, 0x05, 0x71, 0x6f, 0x73, 0x42, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x44, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x61, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x61,
	0x52, 0x05, 0x71, 0x6f, 0x73, 0x42, 0x61, 0x1a, 0x91, 0x05, 0x0a, 0x05, 0x51, 0x6f, 0x73, 0x42,
	0x61, 0x12, 0x4d, 0x0a, 0x06, 0x62, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x35, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x44, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x61, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42,
	0x61, 0x2e, 0x42, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x62, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x62, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x44, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x42, 0x61, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x5f, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x42, 0x61, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x42, 0x61, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x5c, 0x0a, 0x06, 0x42, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x61, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x58, 0x5f, 0x38, 0x30,
	0x32, 0x31, 0x50, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x61, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x49, 0x50, 0x44, 0x53, 0x43, 0x50, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x4d, 0x50, 0x4c, 0x53, 0x45, 0x58, 0x50, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13,
	0x42, 0x61, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x50, 0x52, 0x49, 0x4f, 0x52,
	0x49, 0x54, 0x59, 0x10, 0x03, 0x22, 0x39, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0f,
	0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02,
	0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46,
	0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43,
	0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12,
	0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x1a, 0xf8, 0x05, 0x0a, 0x07,
	0x51, 0x6f, 0x73, 0x50, 0x68, 0x62, 0x73, 0x12, 0x48, 0x0a, 0x06, 0x71, 0x6f, 0x73, 0x50, 0x68,
	0x62, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x44, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x68,
	0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x68, 0x62, 0x52, 0x06, 0x71, 0x6f, 0x73, 0x50, 0x68,
	0x62, 0x1a, 0xa2, 0x05, 0x0a, 0x06, 0x51, 0x6f, 0x73, 0x50, 0x68, 0x62, 0x12, 0x4c, 0x0a, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x50, 0x68, 0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x68, 0x62, 0x2e, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x07, 0x70, 0x68,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x50, 0x68, 0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x68, 0x62, 0x2e, 0x50, 0x68,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x70, 0x68, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x68, 0x62, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x68, 0x62, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x61, 0x0a, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x44, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x68, 0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50,
	0x68, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x39, 0x0a,
	0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f,
	0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f,
	0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22, 0x61, 0x0a, 0x07, 0x50, 0x68, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x68, 0x62, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x58,
	0x5f, 0x38, 0x30, 0x32, 0x31, 0x50, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x68, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x49, 0x50, 0x44, 0x53, 0x43, 0x50, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x50, 0x68, 0x62, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x50, 0x4c, 0x53, 0x45, 0x58, 0x50, 0x10,
	0x02, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x68, 0x62, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x10, 0x03, 0x22, 0xd8, 0x01, 0x0a, 0x0c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x1a, 0xdb, 0x21, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x45, 0x56,
	0x50, 0x4c, 0x51, 0x6f, 0x73, 0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x45, 0x56, 0x50,
	0x4c, 0x51, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c,
	0x51, 0x6f, 0x73, 0x1a, 0xfe, 0x20, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51,
	0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76, 0x70, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x76, 0x70, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x68,
	0x0a, 0x10, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68,
	0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56,
	0x50, 0x4c, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c,
	0x61, 0x6e, 0x50, 0x68, 0x62, 0x73, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56,
	0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x73, 0x12, 0x80, 0x01, 0x0a, 0x18, 0x71, 0x6f, 0x73,
	0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x73, 0x52, 0x18, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x12, 0x6e, 0x0a, 0x12, 0x71,
	0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50,
	0x4c, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61,
	0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x52, 0x12, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x1a, 0xbd, 0x01, 0x0a, 0x10,
	0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x73,
	0x12, 0x76, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x50, 0x68, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45,
	0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78,
	0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56,
	0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x1a, 0x31, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x45,
	0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x73, 0x65, 0x76, 0x70, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x73, 0x65, 0x76, 0x70, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xa0, 0x19, 0x0a, 0x18,
	0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x17, 0x71, 0x6f, 0x73,
	0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56,
	0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x17, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70,
	0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x1a, 0xea, 0x17, 0x0a, 0x17, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c,
	0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x90, 0x01,
	0x0a, 0x0d, 0x65, 0x76, 0x70, 0x6c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x6a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45,
	0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45,
	0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x2e, 0x45, 0x76, 0x70, 0x6c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x65, 0x76, 0x70, 0x6c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x84, 0x01, 0x0a, 0x09, 0x65, 0x76, 0x70, 0x6c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x66, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56,
	0x50, 0x4c, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76,
	0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x2e, 0x45, 0x76, 0x70, 0x6c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x09, 0x65, 0x76,
	0x70, 0x6c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x76, 0x70, 0x6c, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x65, 0x76, 0x70, 0x6c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0xae, 0x01, 0x0a, 0x17, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x74, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51,
	0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56,
	0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e,
	0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x17, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x1a, 0xf9, 0x12, 0x0a, 0x17, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0xc4, 0x01, 0x0a,
	0x16, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x8b, 0x01,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45,
	0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73,
	0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x52, 0x16, 0x71, 0x6f, 0x73,
	0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x1a, 0x96, 0x11, 0x0a, 0x16, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56,
	0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x65, 0x76, 0x70, 0x6c, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x76, 0x70, 0x6c, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x65, 0x76, 0x70, 0x6c,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x76,
	0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x65, 0x76,
	0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x65, 0x76, 0x70, 0x6c,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x65,
	0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73,
	0x12, 0x34, 0x0a, 0x15, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x15, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b,
	0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12,
	0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x16, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x76,
	0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x65, 0x76, 0x70, 0x6c,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x76,
	0x70, 0x6c, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x11, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x65, 0x76, 0x70,
	0x6c, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x69, 0x73,
	0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x76, 0x70, 0x6c,
	0x6d, 0x69, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x76, 0x70, 0x6c, 0x73, 0x74, 0x61, 0x74,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x65, 0x76, 0x70, 0x6c, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x76, 0x70, 0x6c, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65,
	0x76, 0x70, 0x6c, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x65, 0x76, 0x70, 0x6c, 0x73, 0x74, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x76,
	0x70, 0x6c, 0x73, 0x74, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0xea, 0x01, 0x0a, 0x1b, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61,
	0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0xa7, 0x01, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50,
	0x4c, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c,
	0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61,
	0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x1b, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6c, 0x6f, 0x74, 0x49, 0x64, 0x1a, 0xd4, 0x07, 0x0a, 0x1b, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70,
	0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x83, 0x02, 0x0a, 0x1a, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70,
	0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0xc2, 0x01, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70,
	0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61,
	0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x1a, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xae, 0x05, 0x0a, 0x1a,
	0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x76,
	0x70, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x76, 0x70, 0x6c, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x76,
	0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x52, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79,
	0x74, 0x65, 0x52, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x65, 0x76,
	0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12,
	0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x16,
	0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x65, 0x76,
	0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x14, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x65, 0x76, 0x70, 0x6c,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x76,
	0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x65, 0x76,
	0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x65, 0x76, 0x70, 0x6c,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x65, 0x76, 0x70, 0x6c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x6b, 0x74, 0x52, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x0d,
	0x45, 0x76, 0x70, 0x6c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x16, 0x45, 0x76, 0x70, 0x6c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f,
	0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x22, 0x33, 0x0a, 0x09, 0x45, 0x76, 0x70,
	0x6c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x76, 0x70, 0x6c, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x76,
	0x70, 0x6c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x1a, 0x93,
	0x03, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x73, 0x12, 0x7e, 0x0a, 0x11, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x50, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x52, 0x11, 0x71, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x1a, 0xfc, 0x01, 0x0a, 0x11, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70,
	0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x73, 0x65, 0x76, 0x70, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x73, 0x65, 0x76, 0x70, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x0d,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x76, 0x70, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x5e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50,
	0x4c, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x56, 0x50, 0x4c, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x76, 0x70, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x76, 0x70, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x40, 0x0a, 0x0d, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x76, 0x70, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x76, 0x70, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x58, 0x5f, 0x38, 0x30, 0x32, 0x31, 0x50, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x76, 0x70, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x44, 0x53, 0x10, 0x01, 0x1a, 0xfa, 0x2c, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x12, 0x5f, 0x0a, 0x0f, 0x71, 0x6f, 0x73,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x1a, 0x84, 0x2c, 0x0a, 0x0f, 0x51,
	0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x5d,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x6f, 0x0a,
	0x0f, 0x71, 0x6f, 0x73, 0x47, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x51, 0x6f,
	0x73, 0x47, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0f, 0x71,
	0x6f, 0x73, 0x47, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x57,
	0x0a, 0x07, 0x75, 0x63, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x55, 0x63, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x75, 0x63, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xbe, 0x28, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x47,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x7c, 0x0a, 0x0e, 0x71,
	0x6f, 0x73, 0x47, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x47, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xac, 0x27, 0x0a, 0x0e, 0x51, 0x6f,
	0x73, 0x47, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x61,
	0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x61,
	0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61,
	0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x63, 0x61, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61,
	0x72, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x63, 0x61, 0x72, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x6b,
	0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42,
	0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70,
	0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73,
	0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73,
	0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x69,
	0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x6b,
	0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x13, 0x71, 0x6f, 0x73, 0x47, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x68, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x47,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x13,
	0x71, 0x6f, 0x73, 0x47, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x74, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x72, 0x70, 0x66, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x75, 0x72, 0x70, 0x66, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x75, 0x72, 0x70, 0x66, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x75, 0x72, 0x70, 0x66, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x72, 0x70, 0x66, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x72, 0x70, 0x66, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x72, 0x70, 0x66, 0x50, 0x6b, 0x74,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x75, 0x72, 0x70,
	0x66, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x1a, 0xbc, 0x1c, 0x0a, 0x13, 0x51, 0x6f,
	0x73, 0x47, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0xab, 0x01, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x47, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x7b,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x12, 0x71, 0x6f, 0x73,
	0x47, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x1a,
	0xf6, 0x1a, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x47, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x3e, 0x0a, 0x1a, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c,
	0x0a, 0x19, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x19, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50,
	0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73,
	0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61,
	0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63, 0x61,
	0x72, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x61, 0x72, 0x44, 0x72,
	0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61,
	0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63,
	0x61, 0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x47,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x63, 0x61, 0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61,
	0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x61, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63, 0x61,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x61, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61,
	0x72, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x63, 0x61, 0x72, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x61, 0x72, 0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x63, 0x61, 0x72, 0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61,
	0x72, 0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x52, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x63, 0x61, 0x72, 0x52, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x61, 0x72, 0x52, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x52, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x59, 0x50, 0x6b, 0x74, 0x73,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x61, 0x72, 0x59, 0x50, 0x6b, 0x74, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x59, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x59, 0x50, 0x6b, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x6b,
	0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x52,
	0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79,
	0x74, 0x65, 0x52, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x29, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x2c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x2d, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b,
	0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x2f, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x31, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x74, 0x12, 0x3e, 0x0a, 0x1a,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x1a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x35,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74,
	0x73, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61,
	0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b,
	0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1d, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70,
	0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x38, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x1e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x3c, 0x0a, 0x19, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x3a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x19, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44,
	0x0a, 0x1d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x3b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x1a, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c,
	0x0a, 0x19, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x40, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x19, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x41, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x1d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x42, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e,
	0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x43, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50,
	0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x44, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73,
	0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x45, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x1d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x47, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x48, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x75, 0x72, 0x70,
	0x66, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10,
	0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x49, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70,
	0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x01, 0x22, 0x2b, 0x0a, 0x07, 0x55, 0x63, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0f, 0x0a, 0x0b, 0x55, 0x63, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x43, 0x4c, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x63, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x43, 0x4c, 0x10,
	0x01, 0x1a, 0xfc, 0x01, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x51,
	0x70, 0x70, 0x62, 0x73, 0x12, 0x57, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x51, 0x70, 0x70, 0x62, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x51, 0x70, 0x70, 0x62, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x51, 0x70, 0x70, 0x62, 0x52, 0x0d,
	0x71, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x51, 0x70, 0x70, 0x62, 0x1a, 0x90, 0x01,
	0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x51, 0x70, 0x70, 0x62, 0x12,
	0x4d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x51, 0x70,
	0x70, 0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x51, 0x70, 0x70,
	0x62, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x01,
	0x1a, 0xe6, 0x02, 0x0a, 0x13, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65,
	0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x73, 0x12, 0x6b, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x48,
	0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61,
	0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x12, 0x71, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x41, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0xe1, 0x01, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72,
	0x64, 0x50, 0x69, 0x70, 0x65, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x5d, 0x0a, 0x07,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x41,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50,
	0x69, 0x70, 0x65, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x07, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x07, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0d,
	0x0a, 0x09, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x4d, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x4e, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x41,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x53, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x55, 0x10, 0x04, 0x1a, 0xa9, 0x99, 0x02, 0x0a, 0x09, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x12, 0x43, 0x0a, 0x08, 0x71, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x52, 0x08, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x1a, 0xd5, 0x98,
	0x02, 0x0a, 0x08, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x70, 0x0a, 0x14, 0x71, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x42, 0x61, 0x73,
	0x49, 0x6e, 0x73, 0x43, 0x66, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x4f, 0x53, 0x50, 0x72,
	0x6f, 0x42, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x43, 0x66, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x14, 0x71, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x42, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x43, 0x66, 0x67,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x43, 0x76, 0x67, 0x50,
	0x63, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x76, 0x67, 0x50, 0x63, 0x64, 0x73, 0x52, 0x0a, 0x71,
	0x6f, 0x73, 0x43, 0x76, 0x67, 0x50, 0x63, 0x64, 0x73, 0x12, 0x58, 0x0a, 0x0c, 0x71, 0x6f, 0x73,
	0x44, 0x65, 0x66, 0x53, 0x51, 0x43, 0x69, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x53,
	0x51, 0x43, 0x69, 0x72, 0x73, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x53, 0x51, 0x43,
	0x69, 0x72, 0x73, 0x12, 0x79, 0x0a, 0x17, 0x71, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x73, 0x52, 0x17, 0x71, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x12, 0x5b,
	0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x44, 0x65, 0x69, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x44, 0x65, 0x69, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x0d, 0x71, 0x6f,
	0x73, 0x44, 0x65, 0x69, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x0d, 0x71,
	0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x4c, 0x6e, 0x6b, 0x41, 0x64, 0x6a, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44,
	0x6f, 0x6d, 0x4c, 0x6e, 0x6b, 0x41, 0x64, 0x6a, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x44, 0x6f,
	0x6d, 0x4c, 0x6e, 0x6b, 0x41, 0x64, 0x6a, 0x73, 0x12, 0x58, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x44,
	0x6f, 0x6d, 0x4c, 0x6e, 0x6b, 0x41, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x4c, 0x6e,
	0x6b, 0x41, 0x64, 0x73, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x4c, 0x6e, 0x6b, 0x41,
	0x64, 0x73, 0x12, 0x5e, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6f,
	0x6c, 0x73, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6f,
	0x6c, 0x73, 0x12, 0x4f, 0x0a, 0x09, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x41, 0x70, 0x70, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x47, 0x51, 0x41, 0x70, 0x70, 0x73, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x41,
	0x70, 0x70, 0x73, 0x12, 0x58, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69,
	0x70, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x73, 0x52,
	0x0c, 0x71, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x73, 0x12, 0x5e, 0x0a,
	0x0e, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x44, 0x69, 0x73, 0x70, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x44, 0x69, 0x73, 0x70, 0x73, 0x52, 0x0e, 0x71,
	0x6f, 0x73, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x44, 0x69, 0x73, 0x70, 0x73, 0x12, 0x4f, 0x0a,
	0x09, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43,
	0x61, 0x72, 0x73, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x12, 0x4f,
	0x0a, 0x09, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x50, 0x68, 0x62, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x50, 0x68, 0x62, 0x73, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x50, 0x68, 0x62, 0x73, 0x12,
	0x52, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x73, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70,
	0x70, 0x62, 0x73, 0x12, 0x55, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x52, 0x0b, 0x71,
	0x6f, 0x73, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x12, 0x5e, 0x0a, 0x0e, 0x71, 0x6f,
	0x73, 0x4c, 0x64, 0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x73, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c,
	0x64, 0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x73, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x4c,
	0x64, 0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x73, 0x12, 0x46, 0x0a, 0x06, 0x71, 0x6f,
	0x73, 0x4c, 0x72, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x72, 0x73, 0x52, 0x06, 0x71, 0x6f, 0x73, 0x4c,
	0x72, 0x73, 0x12, 0x61, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x4c, 0x76, 0x48, 0x61, 0x72, 0x64, 0x50,
	0x53, 0x74, 0x56, 0x77, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x76, 0x48, 0x61, 0x72, 0x64, 0x50, 0x53,
	0x74, 0x56, 0x77, 0x73, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x4c, 0x76, 0x48, 0x61, 0x72, 0x64, 0x50,
	0x53, 0x74, 0x56, 0x77, 0x73, 0x12, 0x5e, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x4c,
	0x69, 0x6e, 0x6b, 0x53, 0x63, 0x68, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x4c, 0x69, 0x6e,
	0x6b, 0x53, 0x63, 0x68, 0x73, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x4c, 0x69, 0x6e,
	0x6b, 0x53, 0x63, 0x68, 0x73, 0x12, 0x58, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x4d, 0x70, 0x6c, 0x73,
	0x4c, 0x32, 0x76, 0x63, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x70, 0x6c, 0x73, 0x4c, 0x32, 0x56, 0x63,
	0x73, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x4d, 0x70, 0x6c, 0x73, 0x4c, 0x32, 0x76, 0x63, 0x73, 0x12,
	0x6a, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x52, 0x12, 0x71, 0x6f, 0x73, 0x50, 0x51, 0x44, 0x69,
	0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x61, 0x0a, 0x0f, 0x71,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x52, 0x0f, 0x71,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x12, 0x6a,
	0x0a, 0x12, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x52, 0x12, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x5b, 0x0a, 0x0d, 0x71, 0x6f,
	0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x61, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x58, 0x0a, 0x0c, 0x71, 0x6f,
	0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x6f, 0x73,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x70, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0b,
	0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x61, 0x0a, 0x0f, 0x71,
	0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x41, 0x70, 0x70, 0x73, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x41, 0x70, 0x70, 0x73, 0x52, 0x0f, 0x71,
	0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x41, 0x70, 0x70, 0x73, 0x12, 0x6d,
	0x0a, 0x13, 0x71, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x70, 0x6f, 0x72, 0x74, 0x71, 0x75, 0x53, 0x74,
	0x61, 0x73, 0x63, 0x68, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x70, 0x6f, 0x72, 0x74, 0x71,
	0x75, 0x53, 0x74, 0x61, 0x73, 0x63, 0x68, 0x73, 0x52, 0x13, 0x71, 0x6f, 0x73, 0x53, 0x75, 0x62,
	0x70, 0x6f, 0x72, 0x74, 0x71, 0x75, 0x53, 0x74, 0x61, 0x73, 0x63, 0x68, 0x73, 0x12, 0x64, 0x0a,
	0x10, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x66,
	0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x66,
	0x73, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6c, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x66, 0x73, 0x12, 0x52, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x56, 0x6c, 0x6c, 0x50, 0x69, 0x70,
	0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x56, 0x6c, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x52, 0x0a, 0x71, 0x6f, 0x73,
	0x56, 0x6c, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x12, 0x5e, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x57, 0x66,
	0x71, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x66, 0x71, 0x53,
	0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x57, 0x66, 0x71, 0x53,
	0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x5b, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x57, 0x66,
	0x71, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x66, 0x71, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x57, 0x66, 0x71, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x1a, 0xfc, 0x08, 0x0a, 0x14, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x42,
	0x61, 0x73, 0x49, 0x6e, 0x73, 0x43, 0x66, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x82, 0x01,
	0x0a, 0x13, 0x71, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x42, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x43, 0x66,
	0x67, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x42, 0x61, 0x73, 0x49, 0x6e,
	0x73, 0x43, 0x66, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f,
	0x42, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x43, 0x66, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x13, 0x71,
	0x4f, 0x53, 0x50, 0x72, 0x6f, 0x42, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x43, 0x66, 0x67, 0x4e, 0x6f,
	0x64, 0x65, 0x1a, 0xde, 0x07, 0x0a, 0x13, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x42, 0x61, 0x73,
	0x49, 0x6e, 0x73, 0x43, 0x66, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x0c, 0x61,
	0x6e, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x5d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x4f, 0x53, 0x50, 0x72,
	0x6f, 0x42, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x43, 0x66, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x2e,
	0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x42, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x43, 0x66, 0x67, 0x4e,
	0x6f, 0x64, 0x65, 0x2e, 0x41, 0x6e, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0c, 0x61, 0x6e, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x50, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x70, 0x70, 0x50, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x56, 0x6c, 0x61, 0x6e,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x56, 0x6c, 0x61, 0x6e, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x56, 0x6c,
	0x61, 0x6e, 0x49, 0x44, 0x12, 0x78, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x42, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x43, 0x66, 0x67,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x42, 0x61, 0x73, 0x49,
	0x6e, 0x73, 0x43, 0x66, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x81, 0x01, 0x0a,
	0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x5d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x4f, 0x53,
	0x50, 0x72, 0x6f, 0x42, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x43, 0x66, 0x67, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x2e, 0x51, 0x4f, 0x53, 0x50, 0x72, 0x6f, 0x42, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x43, 0x66,
	0x67, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x6d, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4c, 0x6d, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0x5e, 0x0a, 0x0c, 0x41, 0x6e, 0x79, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x6e, 0x79, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x6e, 0x79, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x51, 0x49, 0x4e, 0x51, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16,
	0x41, 0x6e, 0x79, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x10, 0x02, 0x22, 0x4d, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12,
	0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54,
	0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x22, 0xc9, 0x01, 0x0a, 0x0c, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f,
	0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x45, 0x5f, 0x56, 0x49, 0x44,
	0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e,
	0x38, 0x32, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x45, 0x5f, 0x43, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x10, 0x04,
	0x12, 0x17, 0x0a, 0x13, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x50, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x49,
	0x44, 0x10, 0x06, 0x1a, 0xf8, 0x01, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x43, 0x76, 0x67, 0x50, 0x63,
	0x64, 0x73, 0x12, 0x5a, 0x0a, 0x09, 0x71, 0x6f, 0x73, 0x43, 0x76, 0x67, 0x50, 0x63, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x43, 0x76, 0x67, 0x50, 0x63, 0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x76, 0x67,
	0x50, 0x63, 0x64, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x43, 0x76, 0x67, 0x50, 0x63, 0x64, 0x1a, 0x8d,
	0x01, 0x0a, 0x09, 0x51, 0x6f, 0x73, 0x43, 0x76, 0x67, 0x50, 0x63, 0x64, 0x12, 0x61, 0x0a, 0x08,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x76, 0x67, 0x50, 0x63,
	0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x43, 0x76, 0x67, 0x50, 0x63, 0x64, 0x2e, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22,
	0x1d, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x11, 0x0a, 0x0d, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x00, 0x1a, 0xf1,
	0x02, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x53, 0x51, 0x43, 0x69, 0x72, 0x73, 0x12,
	0x62, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x53, 0x51, 0x43, 0x69, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x44, 0x65, 0x66, 0x53, 0x51, 0x43, 0x69, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x65,
	0x66, 0x53, 0x51, 0x43, 0x69, 0x72, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x53, 0x51,
	0x43, 0x69, 0x72, 0x1a, 0xfc, 0x01, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x53, 0x51,
	0x43, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x62, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x63, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x63, 0x69, 0x72, 0x12, 0x68, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x53, 0x51, 0x43, 0x69, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x53, 0x51, 0x43, 0x69, 0x72, 0x2e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x62, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x70, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x70, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x23, 0x0a,
	0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x00, 0x1a, 0xaa, 0x04, 0x0a, 0x17, 0x51, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x12, 0x8e,
	0x01, 0x0a, 0x16, 0x71, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x56, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x16, 0x71, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x1a,
	0xfd, 0x02, 0x0a, 0x16, 0x51, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x87, 0x01, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x63, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45,
	0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45,
	0x46, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x1a,
	0xc9, 0x02, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x44, 0x65, 0x69, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x12, 0x66, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x44, 0x65, 0x69, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x44, 0x65, 0x69, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x44, 0x65, 0x69, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0c, 0x71, 0x6f, 0x73,
	0x44, 0x65, 0x69, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0xcf, 0x01, 0x0a, 0x0c, 0x51, 0x6f,
	0x73, 0x44, 0x65, 0x69, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x6a, 0x0a, 0x09, 0x64, 0x65,
	0x69, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x65, 0x69, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x65, 0x69, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x44, 0x65, 0x69, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x64, 0x65, 0x69,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x09, 0x44, 0x65, 0x69, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x65, 0x69, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x1a, 0xa9, 0x01, 0x0a, 0x0d,
	0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x4c, 0x6e, 0x6b, 0x41, 0x64, 0x6a, 0x73, 0x12, 0x66, 0x0a,
	0x0c, 0x71, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x4c, 0x6e, 0x6b, 0x41, 0x64, 0x6a, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x44, 0x6f, 0x6d, 0x4c, 0x6e, 0x6b, 0x41, 0x64, 0x6a, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f,
	0x6d, 0x4c, 0x6e, 0x6b, 0x41, 0x64, 0x6a, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x4c,
	0x6e, 0x6b, 0x41, 0x64, 0x6a, 0x1a, 0x30, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x4c,
	0x6e, 0x6b, 0x41, 0x64, 0x6a, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x9c, 0x02, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x44,
	0x6f, 0x6d, 0x4c, 0x6e, 0x6b, 0x41, 0x64, 0x73, 0x12, 0x62, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x44,
	0x6f, 0x6d, 0x4c, 0x6e, 0x6b, 0x41, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x4c, 0x6e, 0x6b,
	0x41, 0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x4c, 0x6e, 0x6b, 0x41, 0x64, 0x52,
	0x0b, 0x71, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x4c, 0x6e, 0x6b, 0x41, 0x64, 0x1a, 0xa7, 0x01, 0x0a,
	0x0b, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x4c, 0x6e, 0x6b, 0x41, 0x64, 0x12, 0x65, 0x0a, 0x08,
	0x6d, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x4c, 0x6e,
	0x6b, 0x41, 0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x4c, 0x6e, 0x6b, 0x41, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x31, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x11, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x45, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x1a, 0xd0, 0x02, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x44, 0x6f,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73,
	0x44, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6f, 0x6c, 0x1a, 0xd1, 0x01, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x6c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x22, 0x3a, 0x0a,
	0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f,
	0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x1a, 0xea, 0x03, 0x0a, 0x09, 0x51, 0x6f,
	0x73, 0x47, 0x51, 0x41, 0x70, 0x70, 0x73, 0x12, 0x56, 0x0a, 0x08, 0x71, 0x6f, 0x73, 0x47, 0x51,
	0x41, 0x70, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x51, 0x41, 0x70, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x47, 0x51, 0x41, 0x70, 0x70, 0x52, 0x08, 0x71, 0x6f, 0x73, 0x47, 0x51, 0x41, 0x70, 0x70, 0x1a,
	0x84, 0x03, 0x0a, 0x08, 0x51, 0x6f, 0x73, 0x47, 0x51, 0x41, 0x70, 0x70, 0x12, 0x68, 0x0a, 0x0b,
	0x67, 0x71, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x46, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x51,
	0x41, 0x70, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x51, 0x41, 0x70, 0x70, 0x2e, 0x47, 0x71,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x67, 0x71, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x71, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x71, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x6b, 0x0a, 0x0c, 0x67, 0x71, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x51, 0x41, 0x70, 0x70,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x47, 0x51, 0x41, 0x70, 0x70, 0x2e, 0x47, 0x71, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0c, 0x67, 0x71, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x71, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x71, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a,
	0x0b, 0x47, 0x71, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13,
	0x47, 0x71, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x71, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22,
	0x25, 0x0a, 0x0c, 0x47, 0x71, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x15, 0x0a, 0x11, 0x47, 0x71, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x1a, 0xc2, 0x09, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x48, 0x61,
	0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x73, 0x12, 0x62, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x48, 0x61,
	0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70,
	0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x52, 0x0b,
	0x71, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x1a, 0xcd, 0x08, 0x0a, 0x0b,
	0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62,
	0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x7a, 0x0a, 0x0f, 0x71, 0x6f, 0x73,
	0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x50, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48,
	0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64,
	0x50, 0x69, 0x70, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x7d, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64,
	0x50, 0x69, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64,
	0x50, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70,
	0x65, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x1a, 0xa8, 0x05, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64,
	0x50, 0x69, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x0f, 0x71, 0x6f,
	0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x61, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72,
	0x64, 0x50, 0x69, 0x70, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69,
	0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50,
	0x69, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x1a, 0x85, 0x04, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x48,
	0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x89, 0x01, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x6b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64,
	0x50, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70,
	0x65, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64,
	0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x64,
	0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61,
	0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e,
	0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22,
	0x7a, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x51, 0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x41, 0x43, 0x48, 0x41, 0x52, 0x44, 0x50, 0x49, 0x50, 0x45,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x51, 0x6f, 0x73, 0x48, 0x61,
	0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x45, 0x58, 0x43, 0x4c, 0x55,
	0x53, 0x49, 0x56, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x51,
	0x6f, 0x73, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x53,
	0x48, 0x41, 0x52, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x02, 0x1a, 0xb0, 0x08, 0x0a, 0x0e,
	0x51, 0x6f, 0x73, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x44, 0x69, 0x73, 0x70, 0x73, 0x12, 0x6a,
	0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x44, 0x69, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x44, 0x69, 0x73, 0x70, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x44, 0x69, 0x73, 0x70, 0x52, 0x0d, 0x71, 0x6f, 0x73,
	0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x44, 0x69, 0x73, 0x70, 0x1a, 0xb1, 0x07, 0x0a, 0x0d, 0x51,
	0x6f, 0x73, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x44, 0x69, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x63, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x6c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x44, 0x69,
	0x73, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x44, 0x69, 0x73,
	0x70, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79,
	0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x63, 0x68,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x73, 0x63, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x73, 0x63, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x73, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x72,
	0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x73, 0x63, 0x68, 0x12, 0x26, 0x0a, 0x0e,
	0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x63, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x73, 0x63, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x73, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x63, 0x68, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x73, 0x63, 0x68, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x73,
	0x63, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x73, 0x63, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x70, 0x61, 0x73, 0x73,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x73, 0x63, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x63, 0x68, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73,
	0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x7b,
	0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x53, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x44, 0x69, 0x73, 0x70, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x44, 0x69, 0x73, 0x70, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x6c, 0x61,
	0x6e, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e,
	0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22,
	0xec, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32,
	0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34,
	0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10,
	0x05, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07,
	0x12, 0x1c, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x1a, 0xf6,
	0x25, 0x0a, 0x09, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x12, 0x56, 0x0a, 0x08,
	0x71, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x52, 0x08, 0x71, 0x6f, 0x73, 0x49,
	0x66, 0x43, 0x61, 0x72, 0x1a, 0x90, 0x25, 0x0a, 0x08, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x62, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x63, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x63, 0x69, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x41, 0x77,
	0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x41, 0x77, 0x61, 0x72, 0x65, 0x12, 0x62, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x43, 0x61, 0x72, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x68, 0x0a, 0x0b, 0x67, 0x72, 0x65,
	0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x6e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x65, 0x0a, 0x0a, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x43, 0x61, 0x72, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0a,
	0x67, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x7a, 0x0a, 0x11, 0x67, 0x72,
	0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61,
	0x72, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x11, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x65, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x62, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x72, 0x12, 0x77, 0x0a, 0x10, 0x71,
	0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x45, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61,
	0x72, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x45, 0x78, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x45, 0x78, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x6e, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x62, 0x0a, 0x09, 0x72, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x43, 0x61, 0x72, 0x2e, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72,
	0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x2e, 0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x08, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x74, 0x0a, 0x0f, 0x72, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x4a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x2e, 0x52,
	0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0f,
	0x72, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x6b, 0x0a, 0x0c, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x49, 0x66, 0x43, 0x61, 0x72, 0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x68, 0x0a, 0x0b, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61,
	0x72, 0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0b, 0x79,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x7d, 0x0a, 0x12, 0x79, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43,
	0x61, 0x72, 0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x12, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x1a, 0xca, 0x09, 0x0a, 0x10, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x45, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x85,
	0x01, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x45, 0x78, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x43, 0x61, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x45, 0x78, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x45, 0x78,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x45,
	0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xad, 0x08, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x43, 0x61, 0x72, 0x45, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x72,
	0x70, 0x56, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x49, 0x6e, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x61, 0x72, 0x70, 0x56, 0x6c, 0x61,
	0x6e, 0x43, 0x61, 0x72, 0x49, 0x6e, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x34,
	0x0a, 0x15, 0x61, 0x72, 0x70, 0x56, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x4f, 0x75, 0x74, 0x44,
	0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x61,
	0x72, 0x70, 0x56, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x4f, 0x75, 0x74, 0x44, 0x72, 0x6f, 0x70,
	0x50, 0x6b, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x4f, 0x75, 0x74, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x14, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4f, 0x75, 0x74,
	0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x43,
	0x61, 0x72, 0x49, 0x6e, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x43, 0x61, 0x72, 0x49, 0x6e, 0x44, 0x72, 0x6f, 0x70,
	0x50, 0x6b, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x71, 0x6f, 0x73, 0x43, 0x61, 0x72, 0x4f, 0x75,
	0x74, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x71, 0x6f, 0x73, 0x43, 0x61, 0x72, 0x4f, 0x75, 0x74, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b,
	0x74, 0x73, 0x12, 0x3c, 0x0a, 0x19, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74,
	0x4c, 0x65, 0x6e, 0x52, 0x78, 0x31, 0x30, 0x32, 0x34, 0x54, 0x6f, 0x31, 0x35, 0x31, 0x38, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b,
	0x74, 0x4c, 0x65, 0x6e, 0x52, 0x78, 0x31, 0x30, 0x32, 0x34, 0x54, 0x6f, 0x31, 0x35, 0x31, 0x38,
	0x12, 0x38, 0x0a, 0x17, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65,
	0x6e, 0x52, 0x78, 0x31, 0x32, 0x38, 0x54, 0x6f, 0x32, 0x35, 0x35, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e,
	0x52, 0x78, 0x31, 0x32, 0x38, 0x54, 0x6f, 0x32, 0x35, 0x35, 0x12, 0x38, 0x0a, 0x17, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x52, 0x78, 0x32, 0x35, 0x36,
	0x54, 0x6f, 0x35, 0x31, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x52, 0x78, 0x32, 0x35, 0x36, 0x54,
	0x6f, 0x35, 0x31, 0x31, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x52, 0x78, 0x35, 0x31, 0x32, 0x54, 0x6f, 0x31, 0x30, 0x32, 0x33,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x52, 0x78, 0x35, 0x31, 0x32, 0x54, 0x6f, 0x31, 0x30, 0x32, 0x33,
	0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65,
	0x6e, 0x52, 0x78, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x52, 0x78, 0x36, 0x34, 0x12, 0x36,
	0x0a, 0x16, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x52,
	0x78, 0x36, 0x35, 0x54, 0x6f, 0x31, 0x32, 0x37, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x52, 0x78, 0x36,
	0x35, 0x54, 0x6f, 0x31, 0x32, 0x37, 0x12, 0x3c, 0x0a, 0x19, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x52, 0x78, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x72, 0x31,
	0x35, 0x31, 0x38, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x52, 0x78, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x72,
	0x31, 0x35, 0x31, 0x38, 0x12, 0x3c, 0x0a, 0x19, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x54, 0x78, 0x31, 0x30, 0x32, 0x34, 0x54, 0x6f, 0x31, 0x35, 0x31,
	0x38, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x54, 0x78, 0x31, 0x30, 0x32, 0x34, 0x54, 0x6f, 0x31, 0x35,
	0x31, 0x38, 0x12, 0x38, 0x0a, 0x17, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74,
	0x4c, 0x65, 0x6e, 0x54, 0x78, 0x31, 0x32, 0x38, 0x54, 0x6f, 0x32, 0x35, 0x35, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c,
	0x65, 0x6e, 0x54, 0x78, 0x31, 0x32, 0x38, 0x54, 0x6f, 0x32, 0x35, 0x35, 0x12, 0x38, 0x0a, 0x17,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x54, 0x78, 0x32,
	0x35, 0x36, 0x54, 0x6f, 0x35, 0x31, 0x31, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x54, 0x78, 0x32, 0x35,
	0x36, 0x54, 0x6f, 0x35, 0x31, 0x31, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x54, 0x78, 0x35, 0x31, 0x32, 0x54, 0x6f, 0x31, 0x30,
	0x32, 0x33, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x54, 0x78, 0x35, 0x31, 0x32, 0x54, 0x6f, 0x31, 0x30,
	0x32, 0x33, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74,
	0x4c, 0x65, 0x6e, 0x54, 0x78, 0x36, 0x34, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x54, 0x78, 0x36, 0x34,
	0x12, 0x36, 0x0a, 0x16, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65,
	0x6e, 0x54, 0x78, 0x36, 0x35, 0x54, 0x6f, 0x31, 0x32, 0x37, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x54,
	0x78, 0x36, 0x35, 0x54, 0x6f, 0x31, 0x32, 0x37, 0x12, 0x3c, 0x0a, 0x19, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x54, 0x78, 0x4c, 0x61, 0x72, 0x67, 0x65,
	0x72, 0x31, 0x35, 0x31, 0x38, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6b, 0x74, 0x4c, 0x65, 0x6e, 0x54, 0x78, 0x4c, 0x61, 0x72, 0x67,
	0x65, 0x72, 0x31, 0x35, 0x31, 0x38, 0x1a, 0xf9, 0x03, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x79, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x49,
	0x66, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x55,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x1a, 0xec, 0x02, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x43, 0x61, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64,
	0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72,
	0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73,
	0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6c, 0x6f, 0x74,
	0x49, 0x64, 0x50, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6c,
	0x6f, 0x74, 0x49, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22, 0x3c,
	0x0a, 0x0b, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x13, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x49, 0x53,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x01, 0x22, 0x4d, 0x0a, 0x0a,
	0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x72,
	0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22, 0x8a, 0x02, 0x0a, 0x11,
	0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33,
	0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x18, 0x0a,
	0x14, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36,
	0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x18, 0x0a,
	0x14, 0x47, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b, 0x47, 0x72, 0x65, 0x65, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0x7a, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x5f, 0x43, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x4e, 0x4f, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x5f, 0x56, 0x49, 0x44, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x56, 0x49, 0x44, 0x5f, 0x43, 0x45, 0x5f, 0x56,
	0x49, 0x44, 0x10, 0x04, 0x22, 0x36, 0x0a, 0x09, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44,
	0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x01, 0x22, 0x45, 0x0a, 0x08,
	0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x64, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x52, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f,
	0x57, 0x10, 0x02, 0x22, 0xf6, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00,
	0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33,
	0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x52,
	0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42,
	0x45, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13,
	0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1d, 0x0a,
	0x19, 0x52, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0x3f, 0x0a, 0x0c,
	0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14,
	0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x49, 0x53,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x01, 0x22, 0x51, 0x0a,
	0x0b, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x11,
	0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45, 0x45,
	0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x59, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02,
	0x22, 0x94, 0x02, 0x0a, 0x12, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46,
	0x31, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12,
	0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x59,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x59, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45,
	0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x1a,
	0x0a, 0x16, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x59, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x1a, 0xd5, 0x04, 0x0a, 0x09, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x50, 0x68, 0x62, 0x73, 0x12, 0x56, 0x0a, 0x08, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x50, 0x68,
	0x62, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x50, 0x68, 0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x50, 0x68, 0x62, 0x52, 0x08, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x50, 0x68, 0x62, 0x1a, 0xef, 0x03,
	0x0a, 0x08, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x50, 0x68, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x07,
	0x6d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x50, 0x68, 0x62, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x50, 0x68, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x68, 0x0a, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x46, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x50, 0x68,
	0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x50, 0x68, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x76, 0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x76, 0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x75, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44,
	0x53, 0x43, 0x50, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x49, 0x4e, 0x4e, 0x45, 0x52, 0x5f, 0x38, 0x30, 0x32, 0x31, 0x50, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x4d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x50, 0x4c, 0x53, 0x5f, 0x45,
	0x58, 0x50, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x61, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x38, 0x30, 0x32, 0x31, 0x50, 0x10, 0x04, 0x22,
	0x3e, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x13, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x49,
	0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0x92, 0x22, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x73, 0x12, 0x5a,
	0x0a, 0x09, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x70, 0x70, 0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x52,
	0x09, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x1a, 0xa7, 0x21, 0x0a, 0x09, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x12, 0x5e, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x52,
	0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x55, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x70, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x73, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x70, 0x70, 0x62, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x58, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x42, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x70, 0x70, 0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xab, 0x1c, 0x0a,
	0x0e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x7f, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x70, 0x70, 0x62, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x1a, 0x97, 0x1b, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x61, 0x72,
	0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x44,
	0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63,
	0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61,
	0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63,
	0x61, 0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x47,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x63, 0x61, 0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61,
	0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73,
	0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50,
	0x6b, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x52, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x61, 0x72, 0x52, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x52, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x61, 0x72,
	0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x72, 0x52, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x61,
	0x72, 0x52, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x52, 0x50, 0x6b,
	0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x61,
	0x72, 0x52, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61,
	0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63,
	0x61, 0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x59,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x72, 0x59, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x63, 0x61, 0x72, 0x59, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61,
	0x72, 0x59, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x63, 0x61, 0x72, 0x59, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6c,
	0x6f, 0x74, 0x49, 0x64, 0x50, 0x61, 0x74, 0x68, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71,
	0x41, 0x46, 0x31, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x31, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71, 0x41, 0x46, 0x31, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x71,
	0x41, 0x46, 0x31, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x73, 0x71, 0x41, 0x46, 0x31, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x31, 0x44, 0x72, 0x6f, 0x70,
	0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x71, 0x41, 0x46, 0x31, 0x44,
	0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73,
	0x71, 0x41, 0x46, 0x31, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x73, 0x71, 0x41, 0x46, 0x31, 0x50, 0x61, 0x73, 0x73, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x31, 0x50, 0x61, 0x73, 0x73,
	0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71, 0x41, 0x46, 0x31, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x73, 0x71, 0x41, 0x46, 0x31, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x31, 0x50, 0x61, 0x73, 0x73, 0x50, 0x52, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x31, 0x50, 0x61,
	0x73, 0x73, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x71, 0x41, 0x46,
	0x31, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x73, 0x71, 0x41, 0x46, 0x31, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x32, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x52, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x23, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x32, 0x44, 0x72,
	0x6f, 0x70, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71, 0x41, 0x46,
	0x32, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x73, 0x71, 0x41, 0x46, 0x32, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x32, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x52, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x32,
	0x44, 0x72, 0x6f, 0x70, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x71,
	0x41, 0x46, 0x32, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x26, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x73, 0x71, 0x41, 0x46, 0x32, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x32, 0x50, 0x61, 0x73, 0x73, 0x42, 0x52, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x27, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x32,
	0x50, 0x61, 0x73, 0x73, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71,
	0x41, 0x46, 0x32, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x73, 0x71, 0x41, 0x46, 0x32, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x32, 0x50, 0x61, 0x73, 0x73, 0x50,
	0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x29, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x41,
	0x46, 0x32, 0x50, 0x61, 0x73, 0x73, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x71, 0x41, 0x46, 0x32, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x71, 0x41, 0x46, 0x32, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b,
	0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x33, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x41,
	0x46, 0x33, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x71, 0x41, 0x46, 0x33, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x2c,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x71, 0x41, 0x46, 0x33, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x33, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73,
	0x71, 0x41, 0x46, 0x33, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x71, 0x41, 0x46, 0x33, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18,
	0x2e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x71, 0x41, 0x46, 0x33, 0x44, 0x72, 0x6f, 0x70,
	0x50, 0x6b, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x33, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73,
	0x71, 0x41, 0x46, 0x33, 0x50, 0x61, 0x73, 0x73, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x73, 0x71, 0x41, 0x46, 0x33, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x30, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x71, 0x41, 0x46, 0x33, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x33, 0x50,
	0x61, 0x73, 0x73, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x31, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x73, 0x71, 0x41, 0x46, 0x33, 0x50, 0x61, 0x73, 0x73, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x71, 0x41, 0x46, 0x33, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74,
	0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x71, 0x41, 0x46, 0x33, 0x50, 0x61,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x34, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x73, 0x71, 0x41, 0x46, 0x34, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71, 0x41, 0x46, 0x34, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x71, 0x41, 0x46, 0x34, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x41, 0x46,
	0x34, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x35, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x34, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x52, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x71, 0x41, 0x46, 0x34, 0x44, 0x72, 0x6f, 0x70, 0x50,
	0x6b, 0x74, 0x73, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x71, 0x41, 0x46, 0x34,
	0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x41, 0x46,
	0x34, 0x50, 0x61, 0x73, 0x73, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x37, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x34, 0x50, 0x61, 0x73, 0x73, 0x42, 0x52, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71, 0x41, 0x46, 0x34, 0x50, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x38, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x71, 0x41, 0x46,
	0x34, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71,
	0x41, 0x46, 0x34, 0x50, 0x61, 0x73, 0x73, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x39, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x41, 0x46, 0x34, 0x50, 0x61, 0x73, 0x73, 0x50, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x71, 0x41, 0x46, 0x34, 0x50, 0x61, 0x73,
	0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x71, 0x41,
	0x46, 0x34, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71,
	0x42, 0x45, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x3b, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x73, 0x71, 0x42, 0x45, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x52, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x71, 0x42, 0x45, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x71, 0x42, 0x45, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71, 0x42, 0x45,
	0x44, 0x72, 0x6f, 0x70, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x73, 0x71, 0x42, 0x45, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x71, 0x42, 0x45, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73,
	0x18, 0x3e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x71, 0x42, 0x45, 0x44, 0x72, 0x6f, 0x70,
	0x50, 0x6b, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71, 0x42, 0x45, 0x50, 0x61, 0x73, 0x73,
	0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x71,
	0x42, 0x45, 0x50, 0x61, 0x73, 0x73, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x71, 0x42, 0x45, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x40, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x71, 0x42, 0x45, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71, 0x42, 0x45, 0x50, 0x61, 0x73, 0x73, 0x50, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x41, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x71, 0x42, 0x45,
	0x50, 0x61, 0x73, 0x73, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x71,
	0x42, 0x45, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x42, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x73, 0x71, 0x42, 0x45, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x71, 0x43, 0x53, 0x36, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x52, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x43, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x43, 0x53, 0x36, 0x44, 0x72,
	0x6f, 0x70, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71, 0x43, 0x53,
	0x36, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x44, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x73, 0x71, 0x43, 0x53, 0x36, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x43, 0x53, 0x36, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x52, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x45, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x43, 0x53, 0x36,
	0x44, 0x72, 0x6f, 0x70, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x71,
	0x43, 0x53, 0x36, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x73, 0x71, 0x43, 0x53, 0x36, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x43, 0x53, 0x36, 0x50, 0x61, 0x73, 0x73, 0x42, 0x52, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x47, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x43, 0x53, 0x36,
	0x50, 0x61, 0x73, 0x73, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71,
	0x43, 0x53, 0x36, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x48, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x73, 0x71, 0x43, 0x53, 0x36, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x43, 0x53, 0x36, 0x50, 0x61, 0x73, 0x73, 0x50,
	0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x49, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x43,
	0x53, 0x36, 0x50, 0x61, 0x73, 0x73, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x71, 0x43, 0x53, 0x36, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x4a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x71, 0x43, 0x53, 0x36, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b,
	0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x43, 0x53, 0x37, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x71, 0x43,
	0x53, 0x37, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x71, 0x43, 0x53, 0x37, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x4c,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x71, 0x43, 0x53, 0x37, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x43, 0x53, 0x37, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73,
	0x71, 0x43, 0x53, 0x37, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x71, 0x43, 0x53, 0x37, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18,
	0x4e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x71, 0x43, 0x53, 0x37, 0x44, 0x72, 0x6f, 0x70,
	0x50, 0x6b, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x43, 0x53, 0x37, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73,
	0x71, 0x43, 0x53, 0x37, 0x50, 0x61, 0x73, 0x73, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x73, 0x71, 0x43, 0x53, 0x37, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x71, 0x43, 0x53, 0x37, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x71, 0x43, 0x53, 0x37, 0x50,
	0x61, 0x73, 0x73, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x51, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x73, 0x71, 0x43, 0x53, 0x37, 0x50, 0x61, 0x73, 0x73, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x71, 0x43, 0x53, 0x37, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74,
	0x73, 0x18, 0x52, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x71, 0x43, 0x53, 0x37, 0x50, 0x61,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71, 0x45, 0x46, 0x44, 0x72,
	0x6f, 0x70, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x53, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x73, 0x71, 0x45, 0x46, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x71, 0x45, 0x46, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x54, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x71, 0x45, 0x46, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71, 0x45, 0x46, 0x44, 0x72, 0x6f, 0x70,
	0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x55, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x71,
	0x45, 0x46, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x71, 0x45, 0x46, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x56, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x73, 0x71, 0x45, 0x46, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71, 0x45, 0x46, 0x50, 0x61, 0x73, 0x73, 0x42, 0x52, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x57, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x71, 0x45, 0x46, 0x50, 0x61,
	0x73, 0x73, 0x42, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x71, 0x45, 0x46,
	0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x58, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x73, 0x71, 0x45, 0x46, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x73, 0x71, 0x45, 0x46, 0x50, 0x61, 0x73, 0x73, 0x50, 0x52, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x59, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x71, 0x45, 0x46, 0x50, 0x61, 0x73, 0x73,
	0x50, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x71, 0x45, 0x46, 0x50, 0x61,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x71,
	0x45, 0x46, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x22, 0x32, 0x0a, 0x07, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44,
	0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x49, 0x44, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x22, 0x42,
	0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x49,
	0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x65,
	0x5f, 0x49, 0x50, 0x50, 0x52, 0x45, 0x43, 0x45, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x02, 0x22, 0x30, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x10, 0x01, 0x1a, 0x96, 0x05, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x73, 0x12, 0x5e, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x1a, 0xa6, 0x04, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x66, 0x0a, 0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x70, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76,
	0x70, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x59, 0x0a, 0x0a, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x49, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49,
	0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x02, 0x22, 0x6a, 0x0a, 0x09, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x58, 0x5f, 0x38, 0x30,
	0x32, 0x31, 0x50, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x44, 0x53, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x4e, 0x4e, 0x45, 0x52, 0x5f, 0x38, 0x30, 0x32, 0x31, 0x50,
	0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x38, 0x30, 0x32, 0x31, 0x50, 0x10, 0x03, 0x1a, 0xae, 0x02,
	0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x4c, 0x64, 0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x73,
	0x12, 0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x4c, 0x64, 0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x64, 0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x4c, 0x64, 0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x0d, 0x71,
	0x6f, 0x73, 0x4c, 0x64, 0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x1a, 0xaf, 0x01, 0x0a,
	0x0d, 0x51, 0x6f, 0x73, 0x4c, 0x64, 0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x72,
	0x0a, 0x0b, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x50, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x4c, 0x64, 0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c,
	0x64, 0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x2a, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x4c, 0x44, 0x50, 0x5f, 0x54, 0x52, 0x41, 0x46, 0x46, 0x49, 0x43, 0x10, 0x00, 0x1a, 0x6f,
	0x0a, 0x06, 0x51, 0x6f, 0x73, 0x4c, 0x72, 0x73, 0x12, 0x4a, 0x0a, 0x05, 0x71, 0x6f, 0x73, 0x4c,
	0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x72, 0x52, 0x05, 0x71,
	0x6f, 0x73, 0x4c, 0x72, 0x1a, 0x19, 0x0a, 0x05, 0x51, 0x6f, 0x73, 0x4c, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x69, 0x72, 0x1a,
	0xcc, 0x04, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x4c, 0x76, 0x48, 0x61, 0x72, 0x64, 0x50, 0x53, 0x74,
	0x56, 0x77, 0x73, 0x12, 0x6e, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x4c, 0x76, 0x48, 0x61, 0x72, 0x64,
	0x50, 0x53, 0x74, 0x56, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x76, 0x48, 0x61, 0x72, 0x64, 0x50, 0x53,
	0x74, 0x56, 0x77, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x76, 0x48, 0x61, 0x72, 0x64, 0x50, 0x53,
	0x74, 0x56, 0x77, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x4c, 0x76, 0x48, 0x61, 0x72, 0x64, 0x50, 0x53,
	0x74, 0x56, 0x77, 0x1a, 0xc8, 0x03, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x4c, 0x76, 0x48, 0x61, 0x72,
	0x64, 0x50, 0x53, 0x74, 0x56, 0x77, 0x12, 0x6e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x50, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x76, 0x48, 0x61, 0x72, 0x64, 0x50, 0x53, 0x74, 0x56,
	0x77, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x76, 0x48, 0x61, 0x72, 0x64, 0x50, 0x53, 0x74, 0x56,
	0x77, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79,
	0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x72,
	0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72,
	0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64,
	0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72,
	0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x1a, 0x89,
	0x04, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x63, 0x68,
	0x73, 0x12, 0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x53,
	0x63, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x63, 0x68, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x63, 0x68, 0x52, 0x0d,
	0x71, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x63, 0x68, 0x1a, 0x8a, 0x03,
	0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x63, 0x68, 0x12,
	0x5d, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x4c, 0x69, 0x6e,
	0x6b, 0x53, 0x63, 0x68, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x4c, 0x69, 0x6e, 0x6b,
	0x53, 0x63, 0x68, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x66,
	0x0a, 0x07, 0x71, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x4c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x4c,
	0x69, 0x6e, 0x6b, 0x53, 0x63, 0x68, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x4c, 0x69,
	0x6e, 0x6b, 0x53, 0x63, 0x68, 0x2e, 0x51, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x71,
	0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1b, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x13,
	0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x44, 0x49, 0x53, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54,
	0x45, 0x10, 0x00, 0x22, 0x94, 0x01, 0x0a, 0x07, 0x51, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x51, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x51,
	0x55, 0x45, 0x55, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x51, 0x6f, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x53, 0x48, 0x41, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x16, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49,
	0x4c, 0x45, 0x43, 0x41, 0x52, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x51, 0x4f, 0x53, 0x43, 0x41, 0x52, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x51,
	0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x54, 0x52, 0x41, 0x46, 0x46, 0x49, 0x43, 0x43, 0x41,
	0x52, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x51, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x05, 0x1a, 0x99, 0x01, 0x0a, 0x0c, 0x51,
	0x6f, 0x73, 0x4d, 0x70, 0x6c, 0x73, 0x4c, 0x32, 0x56, 0x63, 0x73, 0x12, 0x62, 0x0a, 0x0b, 0x71,
	0x6f, 0x73, 0x4d, 0x70, 0x6c, 0x73, 0x4c, 0x32, 0x76, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x40, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x70, 0x6c,
	0x73, 0x4c, 0x32, 0x56, 0x63, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x70, 0x6c, 0x73, 0x4c, 0x32,
	0x56, 0x63, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x4d, 0x70, 0x6c, 0x73, 0x4c, 0x32, 0x76, 0x63, 0x1a,
	0x25, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x4d, 0x70, 0x6c, 0x73, 0x4c, 0x32, 0x56, 0x63, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xf9, 0x06, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x50, 0x51,
	0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x7a, 0x0a,
	0x11, 0x71, 0x6f, 0x73, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x11, 0x71, 0x6f, 0x73, 0x50, 0x51, 0x44, 0x69, 0x73,
	0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x1a, 0xe6, 0x05, 0x0a, 0x11, 0x51, 0x6f,
	0x73, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x12,
	0x3a, 0x0a, 0x18, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x18, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x64,
	0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x64, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x12, 0x7a, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x58, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x7d, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x22, 0x61, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44,
	0x52, 0x4f, 0x50, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x69,
	0x73, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x4b,
	0x54, 0x53, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x10, 0x02, 0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10,
	0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46,
	0x10, 0x07, 0x1a, 0xd0, 0x24, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x12, 0x6e, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x1a, 0xcc, 0x23, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x6e, 0x0a, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x50, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x71, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x62, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65,
	0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x65,
	0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x7a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x53, 0x51, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x51, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x51, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x7d, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6c, 0x61,
	0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x6c, 0x61,
	0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x1a, 0xfe, 0x06, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x53, 0x51, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x41,
	0x63, 0x74, 0x53, 0x51, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x61,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x51, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x51, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x51, 0x53, 0x74, 0x61, 0x74, 0x1a,
	0xe4, 0x05, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x51, 0x53, 0x74, 0x61, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x66, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x66, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x75, 0x66, 0x55, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62,
	0x75, 0x66, 0x55, 0x73, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73,
	0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73,
	0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73,
	0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70,
	0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x6e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74,
	0x53, 0x51, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x53, 0x51,
	0x53, 0x74, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22,
	0xd4, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53,
	0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x16,
	0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x54,
	0x4f, 0x54, 0x41, 0x4c, 0x10, 0x08, 0x1a, 0xec, 0x14, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x89, 0x01, 0x0a, 0x0d, 0x71, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x63, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xcd, 0x13, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x50, 0x6b, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x50,
	0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42,
	0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72,
	0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73,
	0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x69, 0x73, 0x73,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x69,
	0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d,
	0x69, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x94, 0x01,
	0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x70, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74,
	0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x72, 0x70, 0x66,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x72, 0x70,
	0x66, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x72, 0x70, 0x66, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x75,
	0x72, 0x70, 0x66, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x75, 0x72, 0x70, 0x66, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x75, 0x72, 0x70, 0x66, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x75, 0x72, 0x70, 0x66, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x23,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x75, 0x72, 0x70, 0x66, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x1a, 0xa8, 0x08, 0x0a, 0x0c, 0x51,
	0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x9e, 0x01, 0x0a, 0x0b,
	0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x7c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x0b, 0x71, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xf6, 0x06, 0x0a,
	0x0b, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x65, 0x56, 0x6c, 0x61, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0xa5, 0x01, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x86, 0x01, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x66, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x66, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f,
	0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x65, 0x56, 0x6c, 0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x65,
	0x56, 0x6c, 0x61, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0xae, 0x01, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x85, 0x01,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x46,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x10, 0x01, 0x22, 0x30, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12,
	0x11, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x49, 0x50, 0x56, 0x34,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x49,
	0x50, 0x56, 0x36, 0x10, 0x01, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x01, 0x22, 0x7a, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x15, 0x0a, 0x11, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x43, 0x45,
	0x5f, 0x56, 0x49, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x5f, 0x4e, 0x4f, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x56, 0x49, 0x44,
	0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x5f, 0x56, 0x49, 0x44, 0x5f, 0x43, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x10, 0x04, 0x22, 0x46, 0x0a,
	0x05, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x4c,
	0x49, 0x4e, 0x4b, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x4d,
	0x50, 0x4c, 0x53, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x03, 0x1a, 0x8a, 0x04, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x7a, 0x0a, 0x11,
	0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x11, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x1a, 0xf7, 0x02, 0x0a, 0x11, 0x51, 0x6f, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x24,
	0x0a, 0x0d, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x12, 0x7d, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10,
	0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46,
	0x10, 0x07, 0x1a, 0xd0, 0x11, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x0c,
	0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x1a, 0xd6, 0x10, 0x0a,
	0x0c, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x6d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x4d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x4c, 0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x0a, 0x6c, 0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x62, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x11, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x11, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x11, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x54, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x11, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x73, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x73,
	0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x1a, 0xe0, 0x08, 0x0a, 0x11, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x91, 0x01, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x65, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xb6, 0x07, 0x0a, 0x10,
	0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x66, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x66, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x75, 0x66, 0x55, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62,
	0x75, 0x66, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x71, 0x55, 0x73, 0x65, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x71, 0x55, 0x73, 0x65, 0x61,
	0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79,
	0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f,
	0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x72, 0x6f, 0x70,
	0x54, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x74, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x69, 0x6c,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x72, 0x6f,
	0x70, 0x54, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x72,
	0x6f, 0x70, 0x54, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x69, 0x6c,
	0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x64,
	0x72, 0x6f, 0x70, 0x54, 0x61, 0x69, 0x6c, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x64, 0x72, 0x6f, 0x70, 0x57, 0x72, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x64, 0x72, 0x6f, 0x70, 0x57, 0x72,
	0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x72,
	0x6f, 0x70, 0x57, 0x72, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x57, 0x72, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x57, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x57,
	0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x72,
	0x6f, 0x70, 0x57, 0x72, 0x65, 0x64, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x57, 0x72, 0x65, 0x64, 0x50, 0x6b, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x09, 0x69, 0x73, 0x6f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x6f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x51, 0x6f, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x2e,
	0x49, 0x73, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x09, 0x69, 0x73, 0x6f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73,
	0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73,
	0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73,
	0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70,
	0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65,
	0x61, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x65,
	0x61, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x61, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x61, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x30, 0x0a, 0x09, 0x49, 0x73, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x10, 0x0a, 0x0c, 0x49, 0x73, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x4e, 0x4f, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x73, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x59,
	0x45, 0x53, 0x10, 0x01, 0x22, 0x3b, 0x0a, 0x0a, 0x4c, 0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x6f, 0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x6f,
	0x77, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x22, 0x63, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4c, 0x50, 0x51, 0x10,
	0x00, 0x12, 0x18, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x50, 0x51, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x5f, 0x57, 0x46, 0x51, 0x10, 0x02, 0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46,
	0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x45, 0x46, 0x10, 0x07, 0x1a, 0xc8, 0x03, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x6e, 0x0a, 0x0e, 0x71, 0x6f, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x46, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0xc4, 0x02, 0x0a, 0x0e, 0x51, 0x6f,
	0x73, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x13,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x62, 0x73,
	0x12, 0x74, 0x0a, 0x0b, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x52, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x68,
	0x61, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x70, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x68,
	0x61, 0x70, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x54, 0x0a, 0x0b, 0x53, 0x68,
	0x61, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x58, 0x5f, 0x32, 0x35, 0x36, 0x4b, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x58, 0x5f, 0x35, 0x31, 0x32, 0x4b, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x02,
	0x1a, 0x82, 0x0a, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x12, 0x62, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x51, 0x6f, 0x73,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x1a, 0x8d, 0x09, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x51, 0x6f, 0x73,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x63, 0x69, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x69, 0x72, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x69, 0x72,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x69, 0x72,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70,
	0x69, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x65, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x7d, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x51, 0x6f, 0x73,
	0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x10, 0x71,
	0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x71, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51,
	0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x1a, 0xc0, 0x03, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x51,
	0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x61, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x6f,
	0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x51, 0x6f, 0x73, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x1a, 0x9d, 0x02, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x51, 0x6f, 0x73,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x6f,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x22, 0x3f, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x4c, 0x50,
	0x51, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x50, 0x51, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x57, 0x46, 0x51, 0x10, 0x02, 0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46,
	0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x45, 0x46, 0x10, 0x07, 0x1a, 0xea, 0x03, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x53, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x5e, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x70,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x53, 0x68,
	0x61, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0xfa, 0x02, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x53, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x12, 0x6f, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10,
	0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x10, 0x08, 0x1a, 0xdf, 0x01, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x41, 0x70, 0x70, 0x73, 0x12, 0x6e, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x53, 0x75, 0x62,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x41, 0x70, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x41, 0x70, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x41, 0x70, 0x70, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x41, 0x70, 0x70, 0x1a, 0x5c, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x41, 0x70, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x1a, 0x86, 0x07, 0x0a, 0x13, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x70,
	0x6f, 0x72, 0x74, 0x71, 0x75, 0x53, 0x74, 0x61, 0x73, 0x63, 0x68, 0x73, 0x12, 0x7e, 0x0a, 0x12,
	0x71, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x70, 0x6f, 0x72, 0x74, 0x71, 0x75, 0x53, 0x74, 0x61, 0x73,
	0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x70, 0x6f, 0x72, 0x74, 0x71, 0x75, 0x53, 0x74,
	0x61, 0x73, 0x63, 0x68, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x70, 0x6f, 0x72, 0x74,
	0x71, 0x75, 0x53, 0x74, 0x61, 0x73, 0x63, 0x68, 0x52, 0x12, 0x71, 0x6f, 0x73, 0x53, 0x75, 0x62,
	0x70, 0x6f, 0x72, 0x74, 0x71, 0x75, 0x53, 0x74, 0x61, 0x73, 0x63, 0x68, 0x1a, 0xee, 0x05, 0x0a,
	0x12, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x70, 0x6f, 0x72, 0x74, 0x71, 0x75, 0x53, 0x74, 0x61,
	0x73, 0x63, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x72,
	0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x63, 0x68, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x73, 0x63, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x73, 0x63,
	0x68, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x73, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x72, 0x6f, 0x70, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x73, 0x63, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x72, 0x6f,
	0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x63,
	0x68, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x73, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x61, 0x73, 0x73,
	0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x63, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x73, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x73, 0x63, 0x68, 0x12,
	0x26, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x73, 0x63,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x73, 0x63, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x50,
	0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x63, 0x68, 0x12,
	0x8e, 0x01, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x73, 0x63, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x60, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x70, 0x6f, 0x72, 0x74, 0x71,
	0x75, 0x53, 0x74, 0x61, 0x73, 0x63, 0x68, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x70,
	0x6f, 0x72, 0x74, 0x71, 0x75, 0x53, 0x74, 0x61, 0x73, 0x63, 0x68, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x63, 0x68, 0x52, 0x11, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x63, 0x68,
	0x22, 0x8a, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x73, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x63, 0x68, 0x5f, 0x41, 0x46, 0x31, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x73, 0x63, 0x68, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x63,
	0x68, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x63, 0x68, 0x5f, 0x41, 0x46, 0x34,
	0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x73, 0x63, 0x68, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x63,
	0x68, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x63, 0x68, 0x5f, 0x43, 0x53, 0x37,
	0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x73, 0x63, 0x68, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x63,
	0x68, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x1a, 0xba, 0x06,
	0x0a, 0x10, 0x51, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x6f,
	0x66, 0x73, 0x12, 0x72, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6c, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x66, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6c, 0x61, 0x6e,
	0x50, 0x72, 0x6f, 0x66, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6c, 0x61,
	0x6e, 0x50, 0x72, 0x6f, 0x66, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x56, 0x6c,
	0x61, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x1a, 0xb1, 0x05, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x56, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x70, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x52, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x56, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x56, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6d,
	0x0a, 0x08, 0x65, 0x61, 0x63, 0x68, 0x76, 0x6c, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x56, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x56, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x2e, 0x45, 0x61, 0x63, 0x68, 0x76,
	0x6c, 0x61, 0x6e, 0x52, 0x08, 0x65, 0x61, 0x63, 0x68, 0x76, 0x6c, 0x61, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x6e, 0x64, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x65, 0x6e, 0x64, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x71, 0x69, 0x6e, 0x71, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x71, 0x69, 0x6e, 0x71, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x71, 0x69, 0x6e, 0x71, 0x45,
	0x6e, 0x64, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x71, 0x69, 0x6e, 0x71, 0x45, 0x6e, 0x64, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x6d, 0x0a,
	0x08, 0x76, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x51, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x56, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x56, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x2e, 0x56, 0x6c, 0x61, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x0a, 0x09,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55,
	0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22, 0x2d, 0x0a, 0x08, 0x45, 0x61, 0x63, 0x68,
	0x76, 0x6c, 0x61, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x61, 0x63, 0x68, 0x76, 0x6c, 0x61, 0x6e,
	0x5f, 0x4e, 0x4f, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x61, 0x63, 0x68, 0x76, 0x6c, 0x61,
	0x6e, 0x5f, 0x59, 0x45, 0x53, 0x10, 0x01, 0x22, 0x31, 0x0a, 0x08, 0x56, 0x6c, 0x61, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x56, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x44, 0x4f, 0x54, 0x31, 0x51, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x6c, 0x61, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x51, 0x49, 0x4e, 0x51, 0x10, 0x01, 0x1a, 0xb0, 0x09, 0x0a, 0x0a, 0x51,
	0x6f, 0x73, 0x56, 0x6c, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x6c, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x2e, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x65, 0x67, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x56, 0x6c, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x2e, 0x45, 0x67, 0x50, 0x69, 0x70, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x65, 0x67, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x60, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x56, 0x6c, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x67, 0x50, 0x69, 0x70,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x57, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x56, 0x6c, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x63, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x6c,
	0x6c, 0x50, 0x69, 0x70, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x5a,
	0x0a, 0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x6c,
	0x6c, 0x50, 0x69, 0x70, 0x65, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x39, 0x0a, 0x05, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45,
	0x45, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c,
	0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22, 0x53, 0x0a, 0x0a, 0x45, 0x67, 0x50, 0x69, 0x70, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x67, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x5f, 0x50, 0x49, 0x50, 0x45, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x67, 0x50, 0x69,
	0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x50, 0x49, 0x50, 0x45,
	0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x67, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x5f, 0x55, 0x4e, 0x49, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x02, 0x22, 0x57, 0x0a, 0x0b, 0x49, 0x6e,
	0x67, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x6e, 0x67,
	0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x50, 0x49, 0x50, 0x45, 0x10, 0x00, 0x12,
	0x19, 0x0a, 0x15, 0x49, 0x6e, 0x67, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x53,
	0x48, 0x4f, 0x52, 0x54, 0x50, 0x49, 0x50, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x6e,
	0x67, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x55, 0x4e, 0x49, 0x46, 0x4f, 0x52,
	0x4d, 0x10, 0x02, 0x22, 0x4b, 0x0a, 0x08, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x11, 0x0a, 0x0d, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x50, 0x49, 0x50, 0x45,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x53,
	0x48, 0x4f, 0x52, 0x54, 0x50, 0x49, 0x50, 0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x69,
	0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x55, 0x4e, 0x49, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x02,
	0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46,
	0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43,
	0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x22,
	0x4c, 0x0a, 0x09, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x4e, 0x50, 0x52, 0x49, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49,
	0x50, 0x44, 0x53, 0x43, 0x50, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x52, 0x49, 0x10, 0x02, 0x1a, 0x86, 0x03,
	0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x57, 0x66, 0x71, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x6a, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x57, 0x66, 0x71, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x57, 0x66, 0x71, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x57, 0x66, 0x71, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x71,
	0x6f, 0x73, 0x57, 0x66, 0x71, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0x87, 0x02, 0x0a,
	0x0d, 0x51, 0x6f, 0x73, 0x57, 0x66, 0x71, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x69,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x4d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x66, 0x71,
	0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x66, 0x71, 0x53,
	0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x4c, 0x50,
	0x51, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x50, 0x51, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x57, 0x46, 0x51, 0x10, 0x02, 0x1a, 0xbd, 0x01, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x57, 0x66,
	0x71, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x66, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x57,
	0x66, 0x71, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x66, 0x71, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x66, 0x71, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x57, 0x66, 0x71, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x1a, 0x44, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x57, 0x66, 0x71, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x56, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x1a, 0x90, 0x04, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x49, 0x66,
	0x51, 0x70, 0x70, 0x62, 0x43, 0x66, 0x67, 0x73, 0x12, 0x53, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x70, 0x70, 0x62, 0x43, 0x66, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x43, 0x66,
	0x67, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x43, 0x66, 0x67, 0x52,
	0x0c, 0x71, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x43, 0x66, 0x67, 0x1a, 0xa9, 0x03,
	0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x43, 0x66, 0x67, 0x12, 0x22,
	0x0a, 0x0c, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x57, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x66, 0x51, 0x70, 0x70, 0x62, 0x43, 0x66, 0x67, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51,
	0x70, 0x70, 0x62, 0x43, 0x66, 0x67, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x43, 0x66, 0x67, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x43, 0x66, 0x67, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16,
	0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22, 0x41, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x5f, 0x50, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x49,
	0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x1a, 0xa8, 0x0f, 0x0a, 0x0b, 0x51, 0x6f,
	0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x71, 0x6f, 0x73,
	0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x49,
	0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x1a, 0xcb, 0x0e, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x49, 0x6e,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x0e, 0x71, 0x6f,
	0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x43, 0x41, 0x52, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x2e,
	0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x43, 0x41, 0x52, 0x73, 0x52, 0x0e,
	0x71, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x43, 0x41, 0x52, 0x73, 0x12, 0x5f,
	0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x53, 0x51, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73,
	0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x53, 0x51, 0x73,
	0x52, 0x0d, 0x71, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x53, 0x51, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0xbd, 0x05, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x49,
	0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x43, 0x41, 0x52, 0x73, 0x12, 0x6e, 0x0a, 0x0d, 0x71, 0x6f,
	0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x43, 0x41, 0x52, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x48, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x51,
	0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x43, 0x41, 0x52, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x43, 0x41, 0x52, 0x52, 0x0d, 0x71, 0x6f, 0x73,
	0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x43, 0x41, 0x52, 0x1a, 0xba, 0x04, 0x0a, 0x0d, 0x51,
	0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x43, 0x41, 0x52, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x42, 0x79, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x42,
	0x79, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x44, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63,
	0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x44, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x63, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79,
	0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x50, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x50, 0x61, 0x73, 0x73, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x50,
	0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x50,
	0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x63, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x6a,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x50, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73,
	0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x43, 0x41, 0x52, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x43, 0x41, 0x52, 0x2e, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x07, 0x52,
	0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x43, 0x41, 0x52, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x4c, 0x32, 0x43, 0x41, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x65,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x32, 0x4c, 0x33, 0x43, 0x41, 0x52, 0x10, 0x02, 0x12,
	0x11, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x33, 0x43, 0x41, 0x52,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x51,
	0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x51,
	0x43, 0x41, 0x52, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x06, 0x1a, 0x8e, 0x06, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x49,
	0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x53, 0x51, 0x73, 0x12, 0x6a, 0x0a, 0x0c, 0x71, 0x6f, 0x73,
	0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x53, 0x51, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x46, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73,
	0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x53, 0x51, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x53, 0x51, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x51, 0x1a, 0x90, 0x05, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x51, 0x12, 0x28, 0x0a, 0x0f, 0x71, 0x44, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x42, 0x79, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x71, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x42, 0x79, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x71, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x71, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x71, 0x44, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x71, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x71, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x6b, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x71, 0x44, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x71, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x71, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x71, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x71, 0x50, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x71, 0x50, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x71, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x71, 0x50, 0x61, 0x73,
	0x73, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x77, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x53,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x51, 0x6f, 0x73, 0x49,
	0x6e, 0x66, 0x55, 0x73, 0x65, 0x72, 0x53, 0x51, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x49, 0x6e, 0x66,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x51, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x22, 0xd4, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x10, 0x08, 0x22, 0x3a, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x01, 0x1a, 0xa7, 0x03, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x77, 0x4c,
	0x61, 0x45, 0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x77, 0x4c, 0x61,
	0x45, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x4c, 0x6f, 0x77, 0x4c, 0x61, 0x45, 0x6e, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x6f,
	0x77, 0x4c, 0x61, 0x45, 0x6e, 0x52, 0x0a, 0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x77, 0x4c, 0x61, 0x45,
	0x6e, 0x1a, 0xca, 0x02, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x77, 0x4c, 0x61, 0x45, 0x6e,
	0x12, 0x56, 0x0a, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x6f,
	0x77, 0x4c, 0x61, 0x45, 0x6e, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x77, 0x4c, 0x61, 0x45,
	0x6e, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x59, 0x0a, 0x0b, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x77, 0x4c, 0x61, 0x45, 0x6e, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x77, 0x4c, 0x61, 0x45, 0x6e, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x62, 0x0a, 0x0a, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x46, 0x4c, 0x4f, 0x57, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x55, 0x42, 0x50, 0x4f, 0x52,
	0x54, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x02, 0x22, 0x25, 0x0a, 0x0b, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x1a, 0xb9,
	0x3e, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x12, 0x4b,
	0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x52,
	0x0a, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x1a, 0xdc, 0x3d, 0x0a, 0x0a,
	0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x12, 0x4d, 0x0a, 0x07, 0x61, 0x74,
	0x6d, 0x50, 0x76, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x73,
	0x52, 0x07, 0x61, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x73, 0x12, 0x4d, 0x0a, 0x07, 0x61, 0x74, 0x6d,
	0x50, 0x76, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x70, 0x73, 0x52,
	0x07, 0x61, 0x74, 0x6d, 0x50, 0x76, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x53, 0x0a, 0x09, 0x69, 0x66, 0x50, 0x68, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x49, 0x66, 0x50, 0x68, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x69, 0x66, 0x50, 0x68,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x68, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x41, 0x74,
	0x6d, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x4c, 0x73, 0x41, 0x74, 0x6d, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x52, 0x10, 0x71,
	0x6f, 0x73, 0x4c, 0x73, 0x41, 0x74, 0x6d, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x12,
	0x65, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73,
	0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x1a, 0xcc, 0x17, 0x0a, 0x07, 0x41, 0x74, 0x6d, 0x50, 0x76,
	0x63, 0x73, 0x12, 0x52, 0x0a, 0x06, 0x61, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e,
	0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x52, 0x06,
	0x61, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x1a, 0xec, 0x16, 0x0a, 0x06, 0x41, 0x74, 0x6d, 0x50, 0x76,
	0x63, 0x12, 0x71, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x73, 0x2e, 0x41,
	0x74, 0x6d, 0x50, 0x76, 0x63, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x12, 0x77, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50,
	0x76, 0x63, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73,
	0x50, 0x76, 0x63, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x52, 0x10, 0x71, 0x6f, 0x73,
	0x4c, 0x73, 0x50, 0x76, 0x63, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x12, 0x77, 0x0a,
	0x10, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55, 0x70,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x73, 0x2e, 0x41, 0x74, 0x6d,
	0x50, 0x76, 0x63, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x55, 0x70, 0x73, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x55, 0x70, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x63, 0x69, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x63, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x70, 0x69, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x76, 0x70, 0x69, 0x1a, 0xa0, 0x0a, 0x0a, 0x0e, 0x51,
	0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x7d, 0x0a,
	0x0d, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73,
	0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63,
	0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x0d, 0x71,
	0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x1a, 0x8e, 0x09, 0x0a,
	0x0d, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x70, 0x69, 0x72, 0x50, 0x61, 0x72, 0x61, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x69, 0x72, 0x50, 0x61, 0x72, 0x61, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x69, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x69,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x0a, 0x70,
	0x69, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x62, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d,
	0x50, 0x76, 0x63, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x2e, 0x51, 0x6f, 0x73, 0x4c,
	0x73, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73,
	0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x50, 0x69, 0x72, 0x53, 0x65, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x0a, 0x70, 0x69, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x88, 0x01, 0x0a, 0x0c, 0x70, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x64, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50,
	0x76, 0x63, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x70, 0x76,
	0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x0c, 0x70,
	0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x64, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41,
	0x74, 0x6d, 0x50, 0x76, 0x63, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x2e, 0x51, 0x6f,
	0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x4c, 0x73, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x50, 0x76, 0x63, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0c, 0x70, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x88, 0x01, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x64, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63,
	0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76,
	0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x77, 0x66, 0x71, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x77, 0x66, 0x71, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x78,
	0x0a, 0x0c, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x50, 0x6b, 0x74, 0x73, 0x22, 0x5d, 0x0a, 0x0a, 0x50, 0x69, 0x72, 0x53,
	0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x69, 0x72, 0x53, 0x65, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x69, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x5f,
	0x50, 0x49, 0x52, 0x5f, 0x50, 0x45, 0x52, 0x43, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a,
	0x14, 0x50, 0x69, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x50, 0x49, 0x52, 0x5f,
	0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x02, 0x22, 0x39, 0x0a, 0x0c, 0x50, 0x76, 0x63, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x76, 0x63, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x50, 0x51, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x57, 0x46, 0x51,
	0x10, 0x01, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10,
	0x07, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x1a, 0x88, 0x06,
	0x0a, 0x10, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x51, 0x12, 0x7c, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x58, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73,
	0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x73, 0x2e, 0x41, 0x74,
	0x6d, 0x50, 0x76, 0x63, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x51, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x7f, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x73, 0x2e, 0x41, 0x74, 0x6d,
	0x50, 0x76, 0x63, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x51, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x7c, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x58, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x73, 0x2e, 0x41, 0x74, 0x6d,
	0x50, 0x76, 0x63, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x51, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x22,
	0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53,
	0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1a,
	0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e,
	0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0x59, 0x0a, 0x0d, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x13, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45,
	0x45, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c,
	0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22, 0x41, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x51, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x51, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12,
	0x17, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x5f,
	0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0xaa, 0x03, 0x0a, 0x10, 0x51, 0x6f, 0x73,
	0x4c, 0x73, 0x50, 0x76, 0x63, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55, 0x70, 0x73, 0x12, 0x85, 0x01,
	0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55,
	0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x73, 0x2e, 0x41, 0x74, 0x6d,
	0x50, 0x76, 0x63, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x55, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x55, 0x70, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x63, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x55, 0x70, 0x1a, 0x8d, 0x02, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50,
	0x76, 0x63, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55, 0x70, 0x12, 0x86, 0x01, 0x0a, 0x0a, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x66,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50,
	0x76, 0x63, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x63, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73,
	0x50, 0x76, 0x63, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c,
	0x73, 0x50, 0x76, 0x63, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55, 0x70, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x0a, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x02, 0x1a, 0xa4, 0x0c, 0x0a, 0x07, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x70,
	0x73, 0x12, 0x52, 0x0a, 0x06, 0x61, 0x74, 0x6d, 0x50, 0x76, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41,
	0x74, 0x6d, 0x50, 0x76, 0x70, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x70, 0x52, 0x06, 0x61,
	0x74, 0x6d, 0x50, 0x76, 0x70, 0x1a, 0xc4, 0x0b, 0x0a, 0x06, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x70,
	0x12, 0x77, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x70, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x51, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x70, 0x73, 0x2e,
	0x41, 0x74, 0x6d, 0x50, 0x76, 0x70, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x70, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76,
	0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x12, 0x77, 0x0a, 0x10, 0x71, 0x6f, 0x73,
	0x4c, 0x73, 0x50, 0x76, 0x70, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x70, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x70, 0x2e,
	0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x70, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55, 0x70, 0x73,
	0x52, 0x10, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x70, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55,
	0x70, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x70, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x76, 0x70, 0x69, 0x1a, 0x88, 0x06, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76,
	0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x12, 0x7c, 0x0a, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x58, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d,
	0x50, 0x76, 0x70, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x70, 0x2e, 0x51, 0x6f, 0x73, 0x4c,
	0x73, 0x50, 0x76, 0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x7f, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50,
	0x76, 0x70, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x70, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73,
	0x50, 0x76, 0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x2e, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x7c, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x58,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50,
	0x76, 0x70, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x70, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73,
	0x50, 0x76, 0x70, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x2e, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46,
	0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10,
	0x08, 0x22, 0x59, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22, 0x41, 0x0a, 0x0c,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x14,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x44, 0x49, 0x53,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0xaa, 0x03, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x70, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x55, 0x70, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76,
	0x70, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5b,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50,
	0x76, 0x70, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x70, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73,
	0x50, 0x76, 0x70, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c,
	0x73, 0x50, 0x76, 0x70, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55, 0x70, 0x52, 0x0f, 0x71, 0x6f, 0x73,
	0x4c, 0x73, 0x50, 0x76, 0x70, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55, 0x70, 0x1a, 0x8d, 0x02, 0x0a,
	0x0f, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x70, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55, 0x70,
	0x12, 0x86, 0x01, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x66, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c,
	0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76, 0x70, 0x73, 0x2e, 0x41, 0x74, 0x6d, 0x50, 0x76,
	0x70, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x70, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55,
	0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x76, 0x70, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x55, 0x70, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x59, 0x0a, 0x0a, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x4e,
	0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x1a, 0xdb, 0x05, 0x0a,
	0x10, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x41, 0x74, 0x6d, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x51, 0x12, 0x6d, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x41, 0x74, 0x6d, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x51, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x70, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x41, 0x74, 0x6d, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x51, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x6d, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73,
	0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x41, 0x74, 0x6d, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x4d, 0x6f, 0x64,
	0x65, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07,
	0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x22, 0x59, 0x0a, 0x0d,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x17, 0x0a,
	0x13, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47,
	0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x51, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a,
	0x14, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59,
	0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x22, 0x41, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x51, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x4d, 0x6f, 0x64,
	0x65, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0x93, 0x0f, 0x0a, 0x0f, 0x51,
	0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x72,
	0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x1a, 0x8b, 0x0e, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x6c, 0x0a, 0x07, 0x63, 0x69, 0x72, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x52, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x43, 0x69, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x63, 0x69, 0x72, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x69, 0x72, 0x50, 0x61, 0x72, 0x61, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x69, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x69, 0x72, 0x50, 0x61, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x63, 0x69, 0x72, 0x50, 0x61, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x42, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x6f, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x53, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6c, 0x0a, 0x07, 0x70, 0x69, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x52, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x2e, 0x50, 0x69, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x70, 0x69, 0x72,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x69, 0x72, 0x50, 0x61, 0x72, 0x61, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x69,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x69, 0x72, 0x50, 0x61, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x70, 0x69, 0x72, 0x50, 0x61, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x8d, 0x01, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5d, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x12, 0x71, 0x6f,
	0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x12, 0x7b, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x57, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x7b, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x57, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49,
	0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x1a, 0xc4, 0x02, 0x0a, 0x12, 0x51,
	0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x22, 0x51, 0x0a, 0x07, 0x43, 0x69, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x13,
	0x43, 0x69, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x43, 0x49, 0x52, 0x5f, 0x50, 0x45, 0x52, 0x43,
	0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x69, 0x72, 0x4d, 0x6f, 0x64, 0x65,
	0x5f, 0x43, 0x49, 0x52, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x43, 0x69, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x10, 0x02, 0x22, 0x61, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x45, 0x57,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19,
	0x4f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x51,
	0x55, 0x45, 0x55, 0x45, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x4f,
	0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x48,
	0x41, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x51, 0x0a, 0x07, 0x50, 0x69, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x69, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x69,
	0x72, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x50, 0x49, 0x52, 0x5f, 0x50, 0x45, 0x52, 0x43, 0x45, 0x4e,
	0x54, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x69, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x50,
	0x49, 0x52, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x02, 0x22, 0x39, 0x0a, 0x0c, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x50, 0x51, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f,
	0x57, 0x46, 0x51, 0x10, 0x01, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42,
	0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x45, 0x46, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08,
	0x22, 0x87, 0x01, 0x0a, 0x09, 0x49, 0x66, 0x50, 0x68, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x49, 0x66, 0x50, 0x68, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x54, 0x4d, 0x10,
	0x00, 0x12, 0x1d, 0x0a, 0x19, 0x49, 0x66, 0x50, 0x68, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47,
	0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x5f, 0x4d, 0x50, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x01,
	0x12, 0x16, 0x0a, 0x12, 0x49, 0x66, 0x50, 0x68, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x50,
	0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x66, 0x50, 0x68,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x10, 0x03, 0x12, 0x1a,
	0x0a, 0x16, 0x49, 0x66, 0x50, 0x68, 0x79, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x54, 0x52, 0x55, 0x4e,
	0x4b, 0x5f, 0x53, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x10, 0x04, 0x1a, 0xf9, 0x01, 0x0a, 0x12, 0x51,
	0x6f, 0x73, 0x4c, 0x73, 0x51, 0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x12, 0x7c, 0x0a, 0x18, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x51,
	0x6f, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x2e, 0x51, 0x6f, 0x73,
	0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x18, 0x71, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x65, 0x63, 0x22,
	0x65, 0x0a, 0x18, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x24, 0x0a, 0x20, 0x51,
	0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x53, 0x70, 0x65, 0x63, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x00, 0x12, 0x23, 0x0a, 0x1f, 0x51, 0x6f, 0x73, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x65, 0x63, 0x5f, 0x45, 0x4e,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0xdb, 0x03, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x50, 0x51,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x0d, 0x71, 0x6f, 0x73,
	0x50, 0x51, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x51, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x51, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x50, 0x51, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x1a, 0xef, 0x02, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x50, 0x51, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x62, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x50, 0x51, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x50, 0x51, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x51, 0x6f,
	0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x07, 0x71, 0x6f, 0x73, 0x4d,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x50, 0x51, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x50, 0x51, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x51, 0x6f, 0x73,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x71, 0x6f, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6c, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x63, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x63, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x44, 0x22, 0x43, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x14, 0x51, 0x6f, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x51,
	0x6f, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22, 0x2c, 0x0a, 0x07, 0x51, 0x6f, 0x73, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x48, 0x49, 0x47,
	0x48, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4c,
	0x4f, 0x57, 0x10, 0x01, 0x1a, 0xb4, 0x02, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x50, 0x61, 0x63, 0x6b,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x50, 0x61,
	0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x1a, 0xc8, 0x01, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x5c, 0x0a, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x50, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50,
	0x61, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53, 0x74, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53, 0x74, 0x72, 0x22, 0x3b,
	0x0a, 0x0a, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a, 0xd0, 0x01, 0x0a, 0x10,
	0x51, 0x6f, 0x73, 0x50, 0x69, 0x72, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x5f, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x50, 0x69, 0x72, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x50, 0x69, 0x72, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x50, 0x69, 0x72, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0f, 0x71, 0x6f, 0x73, 0x50, 0x69, 0x72, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x1a, 0x5b, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x50, 0x69, 0x72, 0x50, 0x72, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53, 0x74,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53,
	0x74, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x75, 0x63, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x75, 0x63,
	0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xc4,
	0x01, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x70, 0x4f, 0x6e, 0x6c, 0x79, 0x73, 0x12, 0x73, 0x0a, 0x14, 0x71, 0x6f, 0x73, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x70, 0x4f, 0x6e, 0x6c, 0x79,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x70, 0x4f, 0x6e, 0x6c,
	0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x70, 0x4f, 0x6e, 0x6c, 0x79, 0x52, 0x14, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x70, 0x4f, 0x6e, 0x6c, 0x79, 0x1a, 0x36, 0x0a,
	0x14, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x70, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x49,
	0x64, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x83, 0x07, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x73, 0x0a, 0x14, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14,
	0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xf4, 0x05, 0x0a, 0x14, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a,
	0x0d, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x70,
	0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64,
	0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x64,
	0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6d,
	0x61, 0x78, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x65,
	0x64, 0x62, 0x70, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73,
	0x65, 0x64, 0x62, 0x70, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x50,
	0x70, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64,
	0x50, 0x70, 0x73, 0x12, 0x67, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x11, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x46,
	0x31, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x11,
	0x0a, 0x0d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x53, 0x36, 0x10,
	0x05, 0x12, 0x11, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43,
	0x53, 0x37, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x10, 0x08, 0x1a, 0x8a, 0x04, 0x0a, 0x0e,
	0x51, 0x6f, 0x73, 0x51, 0x70, 0x70, 0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x12, 0x57,
	0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x51, 0x70, 0x70, 0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51,
	0x70, 0x70, 0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x70,
	0x70, 0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x51, 0x70, 0x70,
	0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x1a, 0x9e, 0x03, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x51,
	0x70, 0x70, 0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x72, 0x76, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x72, 0x76,
	0x63, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x51, 0x70, 0x70, 0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x51, 0x70, 0x70, 0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x51, 0x6f,
	0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x73, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x49, 0x44, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x46, 0x6c,
	0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x46, 0x6c,
	0x61, 0x67, 0x1a, 0xc3, 0x01, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49,
	0x44, 0x73, 0x12, 0x68, 0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x51, 0x70, 0x70, 0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51,
	0x70, 0x70, 0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x49, 0x44, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44,
	0x52, 0x0a, 0x71, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x1a, 0x4a, 0x0a, 0x0a,
	0x51, 0x6f, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x1a, 0x94, 0x03, 0x0a, 0x0f, 0x51, 0x6f, 0x73,
	0x52, 0x64, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x46, 0x6c, 0x74, 0x73, 0x12, 0x5b, 0x0a, 0x0e,
	0x71, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x46, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x64,
	0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x46, 0x6c, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x64,
	0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x46, 0x6c, 0x74, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x52, 0x64,
	0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x46, 0x6c, 0x74, 0x1a, 0xa3, 0x02, 0x0a, 0x0e, 0x51, 0x6f,
	0x73, 0x52, 0x64, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x46, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x68, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x68, 0x6f, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x58, 0x0a, 0x08,
	0x69, 0x50, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x46, 0x6c, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x64, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x46, 0x6c, 0x74, 0x2e, 0x49, 0x50, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x08, 0x69, 0x50,
	0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6c, 0x6f, 0x74,
	0x49, 0x64, 0x50, 0x61, 0x74, 0x68, 0x22, 0x47, 0x0a, 0x08, 0x49, 0x50, 0x46, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x50, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x49,
	0x50, 0x56, 0x34, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x50, 0x46, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x49, 0x50, 0x56, 0x36, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x49, 0x50, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x10, 0x02, 0x1a,
	0xea, 0x0e, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51,
	0x6f, 0x73, 0x73, 0x12, 0x5b, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x49, 0x66, 0x51, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x52, 0x0e, 0x71, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x1a, 0xf9, 0x0d, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x76, 0x0a, 0x12, 0x71,
	0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x66, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x66, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x52,
	0x12, 0x71, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x66, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x73, 0x12, 0x73, 0x0a, 0x11, 0x71, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x73, 0x52, 0x11, 0x71, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x1a, 0x9a, 0x04, 0x0a, 0x12, 0x51, 0x6f, 0x73,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x66, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x12,
	0x86, 0x01, 0x0a, 0x11, 0x71, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x66,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x58, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x66, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x66,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x11, 0x71, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x44, 0x65, 0x66, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x1a, 0xfa, 0x02, 0x0a, 0x11, 0x51, 0x6f, 0x73,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x66, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x89,
	0x01, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x65, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x66, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x66, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46,
	0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43,
	0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x10, 0x08, 0x1a, 0xc4, 0x07, 0x0a, 0x11, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x10,
	0x71, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x52, 0x10,
	0x71, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x1a, 0xa9, 0x06, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x44, 0x6f, 0x77, 0x6e,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x44,
	0x6f, 0x77, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x65, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x63, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x44, 0x12,
	0x81, 0x01, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x61, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x78, 0x0a, 0x07, 0x6f,
	0x66, 0x66, 0x4c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5e, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x2e, 0x4f, 0x66, 0x66, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x6f, 0x66,
	0x66, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x7e, 0x0a, 0x09, 0x74, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x60, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x66, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x6c, 0x61, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x22, 0x59, 0x0a, 0x0a, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x4e,
	0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x22, 0x32, 0x0a, 0x07,
	0x4f, 0x66, 0x66, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x66, 0x66, 0x4c, 0x6f,
	0x61, 0x64, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x4f, 0x66, 0x66, 0x4c, 0x6f, 0x61, 0x64, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x22, 0x6a, 0x0a, 0x09, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x58, 0x5f, 0x38, 0x30, 0x32,
	0x31, 0x50, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x44, 0x53, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x49, 0x4e, 0x4e, 0x45, 0x52, 0x5f, 0x38, 0x30, 0x32, 0x31, 0x50, 0x10,
	0x02, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f,
	0x55, 0x54, 0x45, 0x52, 0x5f, 0x38, 0x30, 0x32, 0x31, 0x50, 0x10, 0x03, 0x1a, 0x8a, 0x04, 0x0a,
	0x14, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x6f, 0x0a, 0x13, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x52, 0x13, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x1a, 0x80, 0x03, 0x0a, 0x13, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x5f,
	0x0a, 0x07, 0x61, 0x6c, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x45, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x41,
	0x6c, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x6c, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x56, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49,
	0x44, 0x53, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74,
	0x49, 0x44, 0x53, 0x74, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x22, 0x36, 0x0a, 0x07, 0x41, 0x6c, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x6c, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x42, 0x41, 0x4e, 0x44, 0x57, 0x49, 0x44, 0x54, 0x48, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x41,
	0x6c, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x10,
	0x01, 0x22, 0x36, 0x0a, 0x04, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x6f, 0x6f,
	0x6c, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x6f, 0x6f, 0x6c, 0x5f,
	0x50, 0x4f, 0x4f, 0x4c, 0x5f, 0x30, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x6f, 0x6f, 0x6c,
	0x5f, 0x50, 0x4f, 0x4f, 0x4c, 0x5f, 0x31, 0x10, 0x02, 0x1a, 0xc1, 0x02, 0x0a, 0x12, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x73,
	0x12, 0x67, 0x0a, 0x11, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x50, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x50, 0x72, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x52, 0x11, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x1a, 0xc1, 0x01, 0x0a, 0x11, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53, 0x74, 0x72, 0x12, 0x5e, 0x0a,
	0x08, 0x75, 0x70, 0x4f, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x42, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x4f, 0x72, 0x44,
	0x6f, 0x77, 0x6e, 0x52, 0x08, 0x75, 0x70, 0x4f, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x22, 0x2e, 0x0a,
	0x08, 0x55, 0x70, 0x4f, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x70, 0x4f,
	0x72, 0x44, 0x6f, 0x77, 0x6e, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x70, 0x4f, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x5f, 0x55, 0x50, 0x10, 0x01, 0x1a, 0xa4, 0x0b,
	0x0a, 0x19, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x18,
	0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x52, 0x18, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70,
	0x70, 0x1a, 0x80, 0x0a, 0x0a, 0x18, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x9f, 0x01, 0x0a, 0x19, 0x71, 0x6f, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x61, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x41, 0x70, 0x70, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x2e, 0x51, 0x6f,
	0x73, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x19, 0x71, 0x6f, 0x73, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53, 0x74, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53, 0x74, 0x72,
	0x1a, 0x81, 0x08, 0x0a, 0x19, 0x51, 0x6f, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0xb6,
	0x01, 0x0a, 0x18, 0x71, 0x6f, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x7a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x18, 0x71,
	0x6f, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0xaa, 0x06, 0x0a, 0x18, 0x51, 0x6f, 0x73, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x6e, 0x6e, 0x6c, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x6e, 0x6e, 0x6c, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x63, 0x54, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x63, 0x54, 0x6d, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x69, 0x43, 0x66, 0x67, 0x42,
	0x61, 0x6e, 0x64, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x75, 0x69, 0x43, 0x66, 0x67, 0x42, 0x61, 0x6e, 0x64, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x28,
	0x0a, 0x0f, 0x75, 0x69, 0x46, 0x72, 0x65, 0x65, 0x42, 0x51, 0x6e, 0x74, 0x79, 0x4e, 0x75, 0x6d,
	0x41, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x69, 0x46, 0x72, 0x65, 0x65, 0x42,
	0x51, 0x6e, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x41, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x69, 0x46, 0x72,
	0x65, 0x65, 0x42, 0x51, 0x6e, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x42, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x75, 0x69, 0x46, 0x72, 0x65, 0x65, 0x42, 0x51, 0x6e, 0x74, 0x79, 0x4e, 0x75,
	0x6d, 0x42, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x69, 0x46, 0x72, 0x65, 0x65, 0x42, 0x61, 0x6e, 0x6b,
	0x4e, 0x6f, 0x74, 0x65, 0x41, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x69, 0x46,
	0x72, 0x65, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x12, 0x28, 0x0a, 0x0f,
	0x75, 0x69, 0x46, 0x72, 0x65, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x74, 0x65, 0x42, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x69, 0x46, 0x72, 0x65, 0x65, 0x42, 0x61, 0x6e,
	0x6b, 0x4e, 0x6f, 0x74, 0x65, 0x42, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x69, 0x46, 0x72, 0x65, 0x65,
	0x50, 0x69, 0x72, 0x53, 0x75, 0x6d, 0x41, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75,
	0x69, 0x46, 0x72, 0x65, 0x65, 0x50, 0x69, 0x72, 0x53, 0x75, 0x6d, 0x41, 0x12, 0x24, 0x0a, 0x0d,
	0x75, 0x69, 0x46, 0x72, 0x65, 0x65, 0x50, 0x69, 0x72, 0x53, 0x75, 0x6d, 0x42, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x69, 0x46, 0x72, 0x65, 0x65, 0x50, 0x69, 0x72, 0x53, 0x75,
	0x6d, 0x42, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x69, 0x52, 0x65, 0x6c, 0x42, 0x61, 0x6e, 0x64, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x41, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x69, 0x52,
	0x65, 0x6c, 0x42, 0x61, 0x6e, 0x64, 0x57, 0x69, 0x64, 0x74, 0x68, 0x41, 0x12, 0x28, 0x0a, 0x0f,
	0x75, 0x69, 0x52, 0x65, 0x6c, 0x42, 0x61, 0x6e, 0x64, 0x57, 0x69, 0x64, 0x74, 0x68, 0x42, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x69, 0x52, 0x65, 0x6c, 0x42, 0x61, 0x6e, 0x64,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x42, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x69, 0x53, 0x6c, 0x6f, 0x74,
	0x4d, 0x61, 0x78, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x11, 0x75, 0x69, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x61, 0x78, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x69, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x75, 0x69,
	0x53, 0x6c, 0x6f, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x12,
	0x75, 0x69, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x6c, 0x42, 0x61, 0x6e, 0x64, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x75, 0x69, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x65, 0x6c, 0x42, 0x61, 0x6e, 0x64, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e,
	0x75, 0x69, 0x55, 0x73, 0x65, 0x42, 0x51, 0x6e, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x41, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x75, 0x69, 0x55, 0x73, 0x65, 0x42, 0x51, 0x6e, 0x74, 0x79,
	0x4e, 0x75, 0x6d, 0x41, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x69, 0x55, 0x73, 0x65, 0x42, 0x51, 0x6e,
	0x74, 0x79, 0x4e, 0x75, 0x6d, 0x42, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x75, 0x69,
	0x55, 0x73, 0x65, 0x42, 0x51, 0x6e, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x42, 0x12, 0x26, 0x0a, 0x0e,
	0x75, 0x69, 0x55, 0x73, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x75, 0x69, 0x55, 0x73, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x4e,
	0x6f, 0x74, 0x65, 0x41, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x69, 0x55, 0x73, 0x65, 0x42, 0x61, 0x6e,
	0x6b, 0x4e, 0x6f, 0x74, 0x65, 0x42, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x75, 0x69,
	0x55, 0x73, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x74, 0x65, 0x42, 0x12, 0x22, 0x0a, 0x0c,
	0x75, 0x69, 0x55, 0x73, 0x65, 0x50, 0x69, 0x72, 0x53, 0x75, 0x6d, 0x41, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x75, 0x69, 0x55, 0x73, 0x65, 0x50, 0x69, 0x72, 0x53, 0x75, 0x6d, 0x41,
	0x12, 0x22, 0x0a, 0x0c, 0x75, 0x69, 0x55, 0x73, 0x65, 0x50, 0x69, 0x72, 0x53, 0x75, 0x6d, 0x42,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x75, 0x69, 0x55, 0x73, 0x65, 0x50, 0x69, 0x72,
	0x53, 0x75, 0x6d, 0x42, 0x1a, 0xa1, 0x03, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x43, 0x76, 0x67, 0x50, 0x63, 0x64, 0x73, 0x12, 0x57, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x43, 0x76, 0x67, 0x50, 0x63, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x76, 0x67, 0x50,
	0x63, 0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x76, 0x67, 0x50, 0x63,
	0x64, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x76, 0x67, 0x50, 0x63, 0x64,
	0x1a, 0xb5, 0x02, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x76, 0x67, 0x50,
	0x63, 0x64, 0x12, 0x47, 0x0a, 0x03, 0x63, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x35, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x76, 0x67,
	0x50, 0x63, 0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x76, 0x67, 0x50,
	0x63, 0x64, 0x2e, 0x43, 0x6f, 0x73, 0x52, 0x03, 0x63, 0x6f, 0x73, 0x12, 0x56, 0x0a, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x76, 0x67, 0x50, 0x63,
	0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x43, 0x76, 0x67, 0x50, 0x63, 0x64,
	0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53, 0x74, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53, 0x74,
	0x72, 0x22, 0x46, 0x0a, 0x03, 0x43, 0x6f, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x73, 0x5f,
	0x58, 0x5f, 0x30, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x73, 0x5f, 0x58, 0x5f, 0x31,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x73, 0x5f, 0x58, 0x5f, 0x32, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x73, 0x5f, 0x58, 0x5f, 0x33, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07,
	0x43, 0x6f, 0x73, 0x5f, 0x58, 0x5f, 0x34, 0x10, 0x04, 0x22, 0x1d, 0x0a, 0x08, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x00, 0x1a, 0xea, 0x03, 0x0a, 0x0f, 0x51, 0x6f, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x5b, 0x0a, 0x0e,
	0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x50, 0x51, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x50, 0x51, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x50, 0x51, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x1a, 0xf9, 0x02, 0x0a, 0x0e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x24, 0x0a, 0x0d,
	0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x12, 0x64, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74,
	0x49, 0x44, 0x53, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x6f,
	0x74, 0x49, 0x44, 0x53, 0x74, 0x72, 0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46,
	0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x45, 0x46, 0x10, 0x07, 0x1a, 0x86, 0x07, 0x0a, 0x16, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73,
	0x12, 0x77, 0x0a, 0x15, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x44, 0x69, 0x73,
	0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x41, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x44,
	0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x52, 0x15, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x44, 0x69, 0x73,
	0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x1a, 0xf2, 0x05, 0x0a, 0x15, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64,
	0x4e, 0x75, 0x6d, 0x12, 0x3a, 0x0a, 0x18, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x34, 0x0a, 0x15, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x45, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15,
	0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x6f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50,
	0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x2e, 0x44, 0x69,
	0x73, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x72, 0x0a, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x4e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51,
	0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x51, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53, 0x74, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53, 0x74, 0x72, 0x22, 0x61, 0x0a, 0x0b,
	0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x44,
	0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x42,
	0x59, 0x54, 0x45, 0x53, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x4b, 0x54, 0x53, 0x10, 0x01,
	0x12, 0x1d, 0x0a, 0x19, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x44, 0x52, 0x4f, 0x50, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x10, 0x02, 0x22,
	0xbc, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53,
	0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x1a, 0xfe,
	0x72, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x12, 0x4b,
	0x0a, 0x0a, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x52,
	0x0a, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x1a, 0xa1, 0x72, 0x0a, 0x0a,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x12, 0x6b, 0x0a, 0x11, 0x71, 0x4f,
	0x53, 0x4f, 0x62, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x4f, 0x53, 0x4f, 0x62, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x11, 0x71, 0x4f, 0x53, 0x4f, 0x62, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x7d, 0x0a, 0x17, 0x71, 0x6f, 0x73, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x63, 0x68, 0x45, 0x6e, 0x4f, 0x75,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x53, 0x63, 0x68, 0x45, 0x6e, 0x4f, 0x75, 0x74, 0x73, 0x52, 0x17, 0x71,
	0x6f, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x63, 0x68,
	0x45, 0x6e, 0x4f, 0x75, 0x74, 0x73, 0x12, 0x62, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x44, 0x6f, 0x6d,
	0x43, 0x61, 0x72, 0x54, 0x6f, 0x53, 0x51, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44,
	0x6f, 0x6d, 0x43, 0x61, 0x72, 0x54, 0x6f, 0x53, 0x51, 0x73, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x44,
	0x6f, 0x6d, 0x43, 0x61, 0x72, 0x54, 0x6f, 0x53, 0x51, 0x73, 0x12, 0x65, 0x0a, 0x0f, 0x71, 0x6f,
	0x73, 0x45, 0x78, 0x70, 0x50, 0x68, 0x62, 0x44, 0x69, 0x73, 0x62, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x45, 0x78, 0x70, 0x50, 0x68, 0x62, 0x44, 0x69, 0x73, 0x62, 0x6c, 0x73,
	0x52, 0x0f, 0x71, 0x6f, 0x73, 0x45, 0x78, 0x70, 0x50, 0x68, 0x62, 0x44, 0x69, 0x73, 0x62, 0x6c,
	0x73, 0x12, 0x6e, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x46, 0x61, 0x62, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x46, 0x61,
	0x62, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x12, 0x71,
	0x6f, 0x73, 0x46, 0x61, 0x62, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x12, 0x77, 0x0a, 0x15, 0x71, 0x6f, 0x73, 0x4d, 0x63, 0x53, 0x68, 0x61, 0x70, 0x53, 0x72,
	0x76, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x4d, 0x63, 0x53, 0x68, 0x61, 0x70, 0x53, 0x72, 0x76, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x15, 0x71, 0x6f, 0x73, 0x4d, 0x63, 0x53, 0x68, 0x61, 0x70, 0x53, 0x72,
	0x76, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x0c, 0x71, 0x6f,
	0x73, 0x4d, 0x63, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x4d, 0x63, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x73, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x4d,
	0x63, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x73, 0x12, 0x71, 0x0a, 0x13, 0x71, 0x6f, 0x73, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x68, 0x61, 0x70, 0x65, 0x72, 0x73, 0x52, 0x13, 0x71, 0x6f, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x73, 0x12, 0x71, 0x0a, 0x13, 0x71,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x70, 0x76,
	0x36, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x70, 0x76, 0x36, 0x53, 0x52, 0x13, 0x71, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x70, 0x76, 0x36, 0x73, 0x12, 0x6b,
	0x0a, 0x11, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x4d, 0x63, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x63, 0x73, 0x52, 0x11, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x63, 0x73, 0x12, 0x77, 0x0a, 0x15, 0x71,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x70, 0x6c,
	0x73, 0x4c, 0x32, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x70, 0x6c, 0x73, 0x4c, 0x32, 0x53, 0x52, 0x15, 0x71,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x70, 0x6c,
	0x73, 0x4c, 0x32, 0x73, 0x12, 0x71, 0x0a, 0x13, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x70, 0x6c, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51,
	0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x70, 0x6c,
	0x73, 0x73, 0x52, 0x13, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x4d, 0x70, 0x6c, 0x73, 0x73, 0x12, 0x6e, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x6b, 0x74, 0x73, 0x52, 0x12, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x65, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x52, 0x0f, 0x71,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x12, 0x5c,
	0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x42, 0x75, 0x72, 0x73, 0x74, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x42, 0x75, 0x72, 0x73, 0x74, 0x73, 0x52, 0x0c,
	0x71, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x42, 0x75, 0x72, 0x73, 0x74, 0x73, 0x12, 0x71, 0x0a, 0x13,
	0x71, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42, 0x75, 0x66, 0x43,
	0x66, 0x67, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x42, 0x75, 0x66, 0x43, 0x66, 0x67, 0x73, 0x52, 0x13, 0x71, 0x6f, 0x73, 0x51,
	0x4f, 0x53, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42, 0x75, 0x66, 0x43, 0x66, 0x67, 0x73, 0x12,
	0x5f, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x51, 0x50, 0x69, 0x72, 0x73,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x51, 0x50, 0x69, 0x72,
	0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x51, 0x50, 0x69, 0x72, 0x73,
	0x12, 0x6e, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x12, 0x71, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x12, 0x71, 0x0a, 0x13, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x73, 0x52, 0x13,
	0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x53, 0x68, 0x61, 0x70,
	0x65, 0x72, 0x73, 0x12, 0x71, 0x0a, 0x13, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52,
	0x69, 0x64, 0x65, 0x41, 0x64, 0x6a, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x41, 0x64, 0x6a, 0x4e, 0x75, 0x6d,
	0x73, 0x52, 0x13, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x41,
	0x64, 0x6a, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x74, 0x0a, 0x14, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x44, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x44, 0x65,
	0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x14, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f,
	0x52, 0x69, 0x64, 0x65, 0x44, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x71, 0x0a, 0x13,
	0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52,
	0x69, 0x64, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x13, 0x71, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12,
	0x80, 0x01, 0x0a, 0x18, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65,
	0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x68, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x54, 0x68, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x52, 0x18, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x68, 0x72, 0x64, 0x49,
	0x6e, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x19, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52,
	0x69, 0x64, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x68, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x73,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65,
	0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x68, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x73, 0x52, 0x19, 0x71,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x68, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x73, 0x12, 0x7d, 0x0a, 0x17, 0x71, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4e,
	0x75, 0x6d, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52,
	0x69, 0x64, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x73, 0x52, 0x17,
	0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x74, 0x0a, 0x14, 0x71, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x55, 0x70, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x55,
	0x70, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x14, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x4f, 0x52, 0x69, 0x64, 0x65, 0x55, 0x70, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x68, 0x0a,
	0x10, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x55, 0x63, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x55, 0x63, 0x6c, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x73, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x55, 0x63,
	0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x19, 0x71, 0x6f, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x34, 0x43, 0x6f, 0x73, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x34, 0x43, 0x6f,
	0x73, 0x73, 0x52, 0x19, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x34, 0x43, 0x6f, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6c, 0x6f, 0x74, 0x49, 0x64, 0x1a, 0xd4, 0x04, 0x0a, 0x11, 0x51, 0x4f, 0x53, 0x4f, 0x62, 0x73,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x7a, 0x0a, 0x10, 0x71,
	0x4f, 0x53, 0x4f, 0x62, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x4f, 0x53, 0x4f, 0x62, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x2e, 0x51, 0x4f, 0x53, 0x4f, 0x62, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x71, 0x4f, 0x53, 0x4f, 0x62, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0xc2, 0x03, 0x0a, 0x10, 0x51, 0x4f, 0x53, 0x4f,
	0x62, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x73, 0x74, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x73, 0x74, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x73,
	0x74, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x73, 0x74, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x74,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x74, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x50, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x50, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x50, 0x50, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x50, 0x50, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x50, 0x50, 0x6f, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x50, 0x50, 0x6f,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x72,
	0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x72, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x72, 0x63, 0x49,
	0x50, 0x41, 0x64, 0x64, 0x72, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x72, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x72, 0x63, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x72, 0x63, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x73, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6c, 0x61, 0x6e,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x6c, 0x61, 0x6e, 0x1a, 0xf1, 0x02, 0x0a,
	0x17, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53,
	0x63, 0x68, 0x45, 0x6e, 0x4f, 0x75, 0x74, 0x73, 0x12, 0x92, 0x01, 0x0a, 0x16, 0x71, 0x6f, 0x73,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x63, 0x68, 0x45, 0x6e,
	0x4f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x63, 0x68, 0x45, 0x6e, 0x4f, 0x75, 0x74, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x63, 0x68,
	0x45, 0x6e, 0x4f, 0x75, 0x74, 0x52, 0x16, 0x71, 0x6f, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x63, 0x68, 0x45, 0x6e, 0x4f, 0x75, 0x74, 0x1a, 0xc0, 0x01,
	0x0a, 0x16, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x53, 0x63, 0x68, 0x45, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x09, 0x71, 0x6f, 0x73,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x64, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x63, 0x68, 0x45, 0x6e, 0x4f, 0x75, 0x74,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x53, 0x63, 0x68, 0x45, 0x6e, 0x4f, 0x75, 0x74, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x21, 0x0a,
	0x09, 0x51, 0x6f, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x51, 0x6f,
	0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00,
	0x1a, 0xb2, 0x02, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x54, 0x6f,
	0x53, 0x51, 0x73, 0x12, 0x6e, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x43, 0x61, 0x72,
	0x54, 0x6f, 0x53, 0x51, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x43, 0x61,
	0x72, 0x54, 0x6f, 0x53, 0x51, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x43, 0x61, 0x72,
	0x54, 0x6f, 0x53, 0x51, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x54,
	0x6f, 0x53, 0x51, 0x1a, 0xaf, 0x01, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x43, 0x61,
	0x72, 0x54, 0x6f, 0x53, 0x51, 0x12, 0x76, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x54, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x43, 0x61,
	0x72, 0x54, 0x6f, 0x53, 0x51, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x44, 0x6f, 0x6d, 0x43, 0x61, 0x72,
	0x54, 0x6f, 0x53, 0x51, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x67,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x22, 0x26, 0x0a,
	0x0b, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x17, 0x0a, 0x13,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x44, 0x49, 0x53, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x00, 0x1a, 0xc6, 0x02, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x45, 0x78, 0x70,
	0x50, 0x68, 0x62, 0x44, 0x69, 0x73, 0x62, 0x6c, 0x73, 0x12, 0x72, 0x0a, 0x0e, 0x71, 0x6f, 0x73,
	0x45, 0x78, 0x70, 0x50, 0x68, 0x62, 0x44, 0x69, 0x73, 0x62, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x4a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51,
	0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x45, 0x78, 0x70, 0x50, 0x68, 0x62, 0x44, 0x69, 0x73, 0x62, 0x6c, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x45, 0x78, 0x70, 0x50, 0x68, 0x62, 0x44, 0x69, 0x73, 0x62, 0x6c, 0x52, 0x0e, 0x71,
	0x6f, 0x73, 0x45, 0x78, 0x70, 0x50, 0x68, 0x62, 0x44, 0x69, 0x73, 0x62, 0x6c, 0x1a, 0xbe, 0x01,
	0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x45, 0x78, 0x70, 0x50, 0x68, 0x62, 0x44, 0x69, 0x73, 0x62, 0x6c,
	0x12, 0x81, 0x01, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x77, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x78, 0x70, 0x50, 0x68, 0x62,
	0x44, 0x69, 0x73, 0x62, 0x6c, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x45, 0x78, 0x70, 0x50, 0x68, 0x62,
	0x44, 0x69, 0x73, 0x62, 0x6c, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x77, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x77, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x28, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46,
	0x77, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x46, 0x77, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x56, 0x4c, 0x4c, 0x10, 0x00, 0x1a, 0xb3,
	0x0a, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x46, 0x61, 0x62, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x7e, 0x0a, 0x11, 0x71, 0x6f, 0x73, 0x46, 0x61, 0x62, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x50, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x46, 0x61, 0x62, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x46, 0x61, 0x62, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x11, 0x71, 0x6f, 0x73, 0x46, 0x61, 0x62, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x9c, 0x09, 0x0a, 0x11, 0x51, 0x6f, 0x73, 0x46, 0x61, 0x62,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x6f, 0x0a, 0x06, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x57, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x46, 0x61, 0x62, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x46,
	0x61, 0x62, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x90, 0x01, 0x0a,
	0x11, 0x71, 0x6f, 0x73, 0x56, 0x4f, 0x51, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x62, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x46, 0x61, 0x62, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x46, 0x61, 0x62, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x4f,
	0x51, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x73, 0x52, 0x11, 0x71, 0x6f,
	0x73, 0x56, 0x4f, 0x51, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x73, 0x1a,
	0xe5, 0x06, 0x0a, 0x11, 0x51, 0x6f, 0x73, 0x56, 0x4f, 0x51, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x73, 0x12, 0x9f, 0x01, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x56, 0x4f, 0x51,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x73, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x46, 0x61, 0x62, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x46, 0x61, 0x62, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x4f, 0x51, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x4f, 0x51, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x10, 0x71, 0x6f, 0x73, 0x56, 0x4f, 0x51, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x1a, 0xad, 0x05, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x56,
	0x4f, 0x51, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x95, 0x01, 0x0a,
	0x07, 0x63, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x7b,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x46,
	0x61, 0x62, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x46, 0x61, 0x62, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x51, 0x6f, 0x73, 0x56, 0x4f, 0x51, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x4f, 0x51, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x43, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x54, 0x6d, 0x4e, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x73, 0x54, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70,
	0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x72,
	0x63, 0x54, 0x6d, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x72,
	0x63, 0x54, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x95, 0x01, 0x0a, 0x07, 0x76, 0x6f, 0x71, 0x46, 0x6c,
	0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x7b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x46, 0x61, 0x62, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x46, 0x61, 0x62, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x4f,
	0x51, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x56, 0x4f, 0x51, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x56, 0x6f,
	0x71, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x07, 0x76, 0x6f, 0x71, 0x46, 0x6c, 0x61, 0x67, 0x22, 0x50,
	0x0a, 0x07, 0x43, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x46, 0x4f, 0x55, 0x52, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43,
	0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x43, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x45, 0x10, 0x02, 0x12,
	0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x54, 0x57, 0x4f, 0x10, 0x03,
	0x22, 0x35, 0x0a, 0x07, 0x56, 0x6f, 0x71, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x15, 0x0a, 0x11, 0x56,
	0x6f, 0x71, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x6f, 0x71, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x55, 0x4e,
	0x49, 0x43, 0x41, 0x53, 0x54, 0x10, 0x01, 0x22, 0x1b, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x45, 0x4e, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x00, 0x1a, 0xc6, 0x04, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x4d, 0x63, 0x53, 0x68,
	0x61, 0x70, 0x53, 0x72, 0x76, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x8a,
	0x01, 0x0a, 0x14, 0x71, 0x6f, 0x73, 0x4d, 0x63, 0x53, 0x68, 0x61, 0x70, 0x53, 0x72, 0x76, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x56, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x63,
	0x53, 0x68, 0x61, 0x70, 0x53, 0x72, 0x76, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x63, 0x53, 0x68, 0x61, 0x70, 0x53, 0x72, 0x76, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x14, 0x71, 0x6f, 0x73, 0x4d, 0x63, 0x53, 0x68, 0x61, 0x70,
	0x53, 0x72, 0x76, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0x9f, 0x03, 0x0a, 0x14,
	0x51, 0x6f, 0x73, 0x4d, 0x63, 0x53, 0x68, 0x61, 0x70, 0x53, 0x72, 0x76, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x63, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x63, 0x53, 0x68,
	0x61, 0x70, 0x53, 0x72, 0x76, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x4d, 0x63, 0x53, 0x68, 0x61, 0x70, 0x53, 0x72, 0x76, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10,
	0x07, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x08, 0x1a, 0xa9, 0x01,
	0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x4d, 0x63, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x73, 0x12, 0x66,
	0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x4d, 0x63, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x63, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x4d, 0x63, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x4d, 0x63,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x1a, 0x31, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x4d, 0x63, 0x53,
	0x68, 0x61, 0x70, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x8f, 0x03, 0x0a, 0x13, 0x51, 0x6f,
	0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72,
	0x73, 0x12, 0x82, 0x01, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61,
	0x73, 0x74, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x68, 0x61, 0x70,
	0x65, 0x72, 0x52, 0x12, 0x71, 0x6f, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x1a, 0xf2, 0x01, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x12, 0x77, 0x0a,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x5b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x68,
	0x61, 0x70, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x08, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x42, 0x4f, 0x54, 0x48, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x48, 0x50, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x4c, 0x50, 0x10, 0x02, 0x1a, 0xce, 0x02, 0x0a, 0x13,
	0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x70,
	0x76, 0x36, 0x53, 0x12, 0x82, 0x01, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x70, 0x76, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x52, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x70, 0x76, 0x36,
	0x53, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x70, 0x76, 0x36, 0x52, 0x12, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x70, 0x76, 0x36, 0x1a, 0xb1, 0x01, 0x0a, 0x12, 0x51, 0x6f, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x70, 0x76, 0x36, 0x12,
	0x7a, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x70,
	0x76, 0x36, 0x53, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x70, 0x76, 0x36, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x1f, 0x0a, 0x09, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x10, 0x00, 0x1a, 0xbf, 0x02, 0x0a,
	0x11, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d,
	0x63, 0x73, 0x12, 0x7a, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x63, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x63, 0x52, 0x10, 0x71, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x63, 0x1a, 0xad,
	0x01, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4d, 0x63, 0x12, 0x76, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x58, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x4d, 0x63, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x63, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x21, 0x0a, 0x09, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x1a, 0xda,
	0x01, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4d, 0x70, 0x6c, 0x73, 0x4c, 0x32, 0x53, 0x12, 0x8a, 0x01, 0x0a, 0x14, 0x71, 0x6f, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x70, 0x6c, 0x73, 0x4c,
	0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x4d, 0x70, 0x6c, 0x73, 0x4c, 0x32, 0x53, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x70, 0x6c, 0x73, 0x4c, 0x32, 0x52,
	0x14, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d,
	0x70, 0x6c, 0x73, 0x4c, 0x32, 0x1a, 0x34, 0x0a, 0x14, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x70, 0x6c, 0x73, 0x4c, 0x32, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6c, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6c, 0x67, 0x1a, 0xcc, 0x01, 0x0a, 0x13,
	0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x70,
	0x6c, 0x73, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x70, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x52, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x70, 0x6c, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x4d, 0x70, 0x6c, 0x73, 0x52, 0x12, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x70, 0x6c, 0x73, 0x1a, 0x30, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x70, 0x6c, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x70, 0x6c, 0x73, 0x50, 0x75, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6d, 0x70, 0x6c, 0x73, 0x50, 0x75, 0x73, 0x68, 0x1a, 0xc7, 0x01, 0x0a, 0x12, 0x51,
	0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74,
	0x73, 0x12, 0x7e, 0x0a, 0x11, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x11,
	0x71, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b,
	0x74, 0x1a, 0x31, 0x0a, 0x11, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x46, 0x6c, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x46, 0x6c, 0x67, 0x1a, 0xcd, 0x01, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x12, 0x72, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x4a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x0e, 0x71, 0x6f,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x46, 0x0a, 0x0e,
	0x51, 0x6f, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x70, 0x6c, 0x73, 0x50, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x6d, 0x70, 0x6c, 0x73, 0x50, 0x6f, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x70, 0x6c, 0x73,
	0x50, 0x75, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x70, 0x6c, 0x73,
	0x50, 0x75, 0x73, 0x68, 0x1a, 0xbf, 0x01, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x42,
	0x75, 0x72, 0x73, 0x74, 0x73, 0x12, 0x66, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x42,
	0x75, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x42, 0x75,
	0x72, 0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x42, 0x75, 0x72, 0x73, 0x74,
	0x52, 0x0b, 0x71, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x42, 0x75, 0x72, 0x73, 0x74, 0x1a, 0x47, 0x0a,
	0x0b, 0x51, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x42, 0x75, 0x72, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x75, 0x72, 0x73, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x62, 0x75, 0x72, 0x73, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69,
	0x6e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x1a, 0xea, 0x05, 0x0a, 0x13, 0x51, 0x6f, 0x73, 0x51, 0x4f,
	0x53, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42, 0x75, 0x66, 0x43, 0x66, 0x67, 0x73, 0x12, 0x82,
	0x01, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42,
	0x75, 0x66, 0x43, 0x66, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42, 0x75, 0x66, 0x43, 0x66, 0x67, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x51, 0x4f, 0x53, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42, 0x75, 0x66, 0x43, 0x66, 0x67, 0x52,
	0x12, 0x71, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42, 0x75, 0x66,
	0x43, 0x66, 0x67, 0x1a, 0xcd, 0x04, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x51, 0x4f, 0x53, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x42, 0x75, 0x66, 0x43, 0x66, 0x67, 0x12, 0x7a, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5c, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x4f,
	0x53, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42, 0x75, 0x66, 0x43, 0x66, 0x67, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x51, 0x4f, 0x53, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42, 0x75, 0x66, 0x43, 0x66,
	0x67, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x83, 0x01, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5f, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x51, 0x4f,
	0x53, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42, 0x75, 0x66, 0x43, 0x66, 0x67, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x51, 0x4f, 0x53, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42, 0x75, 0x66, 0x43, 0x66,
	0x67, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x09,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55,
	0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x34, 0x10,
	0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x37,
	0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x10, 0x08, 0x1a, 0x9c, 0x02, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x46,
	0x51, 0x50, 0x69, 0x72, 0x73, 0x12, 0x6a, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x46, 0x51, 0x50, 0x69, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x46, 0x51, 0x50, 0x69, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x51,
	0x50, 0x69, 0x72, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x51, 0x50, 0x69,
	0x72, 0x1a, 0x9e, 0x01, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x51, 0x50,
	0x69, 0x72, 0x12, 0x6e, 0x0a, 0x09, 0x66, 0x71, 0x50, 0x69, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x50, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x51, 0x50, 0x69, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x51, 0x50, 0x69, 0x72, 0x2e, 0x46, 0x71,
	0x50, 0x69, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66, 0x71, 0x50, 0x69, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x1e, 0x0a, 0x09, 0x46, 0x71, 0x50, 0x69, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x11, 0x0a, 0x0d, 0x46, 0x71, 0x50, 0x69, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x46, 0x46,
	0x10, 0x00, 0x1a, 0xc5, 0x0e, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63,
	0x56, 0x70, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x7e, 0x0a, 0x11, 0x71, 0x6f, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70,
	0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x11, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d,
	0x63, 0x56, 0x70, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x1a, 0xae, 0x0d, 0x0a, 0x11, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x15, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x66, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x15, 0x71, 0x6f, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x90, 0x01, 0x0a, 0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x62,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5d, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x70,
	0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0xba, 0x06, 0x0a, 0x15, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0xaf, 0x01, 0x0a, 0x14, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x7b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x14, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xee, 0x04, 0x0a, 0x14, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x69, 0x6c,
	0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10,
	0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x69,
	0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61,
	0x69, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x69, 0x6c, 0x50, 0x6b, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x54,
	0x61, 0x69, 0x6c, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x72,
	0x6f, 0x70, 0x57, 0x72, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x64, 0x72, 0x6f, 0x70, 0x57, 0x72, 0x65, 0x64, 0x42, 0x79,
	0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x57, 0x72,
	0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64,
	0x72, 0x6f, 0x70, 0x57, 0x72, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x64, 0x72, 0x6f, 0x70, 0x57, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x57, 0x72, 0x65, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x57, 0x72,
	0x65, 0x64, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x64, 0x72, 0x6f, 0x70, 0x57, 0x72, 0x65, 0x64, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x50,
	0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x22, 0x63, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x5f, 0x4c, 0x50, 0x51, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x50, 0x51, 0x10, 0x01,
	0x12, 0x19, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x57, 0x46, 0x51, 0x10, 0x02, 0x22, 0xbc, 0x01, 0x0a, 0x0c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x31,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41,
	0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36, 0x10, 0x05, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x1a, 0xae, 0x03, 0x0a, 0x13, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x53, 0x68, 0x61, 0x70, 0x65,
	0x72, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63,
	0x56, 0x70, 0x6e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x52, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x72, 0x52, 0x12, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70,
	0x6e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x1a, 0x91, 0x02, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x12, 0x80,
	0x01, 0x0a, 0x0b, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x5e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56, 0x70, 0x6e, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x63, 0x56,
	0x70, 0x6e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x54, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x58, 0x5f, 0x32, 0x35, 0x36, 0x4b, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x58, 0x5f, 0x35, 0x31,
	0x32, 0x4b, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x02, 0x1a, 0xc8, 0x01, 0x0a, 0x13,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x41, 0x64, 0x6a, 0x4e,
	0x75, 0x6d, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f,
	0x52, 0x69, 0x64, 0x65, 0x41, 0x64, 0x6a, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x52, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x41, 0x64, 0x6a, 0x4e, 0x75, 0x6d,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x41, 0x64,
	0x6a, 0x4e, 0x75, 0x6d, 0x52, 0x12, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69,
	0x64, 0x65, 0x41, 0x64, 0x6a, 0x4e, 0x75, 0x6d, 0x1a, 0x2c, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x41, 0x64, 0x6a, 0x4e, 0x75, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x64, 0x6a, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x61, 0x64, 0x6a, 0x4e, 0x75, 0x6d, 0x1a, 0xd0, 0x01, 0x0a, 0x14, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x44, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x12,
	0x86, 0x01, 0x0a, 0x13, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65,
	0x44, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x44, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x44, 0x65, 0x43, 0x79,
	0x63, 0x6c, 0x65, 0x52, 0x13, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64,
	0x65, 0x44, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x1a, 0x2f, 0x0a, 0x13, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x44, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x64, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x1a, 0xee, 0x01, 0x0a, 0x13, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x12, 0x82, 0x01, 0x0a, 0x12, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69,
	0x64, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x12, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x52, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x1a, 0x9a, 0x02, 0x0a, 0x18, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x68, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x17, 0x71, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x68, 0x72,
	0x64, 0x49, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5c, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52,
	0x69, 0x64, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x68, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x54, 0x68, 0x72, 0x64, 0x49, 0x6e, 0x52, 0x17, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x4f, 0x52, 0x69, 0x64, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x68, 0x72, 0x64, 0x49, 0x6e,
	0x1a, 0x65, 0x0a, 0x17, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65,
	0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x68, 0x72, 0x64, 0x49, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x64,
	0x65, 0x54, 0x68, 0x72, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x54, 0x68, 0x72, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49,
	0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x54, 0x68, 0x72, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x49, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x70, 0x54, 0x68, 0x72, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x1a, 0xa4, 0x02, 0x0a, 0x19, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x68, 0x72,
	0x64, 0x4f, 0x75, 0x74, 0x73, 0x12, 0x9a, 0x01, 0x0a, 0x18, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x68, 0x72, 0x64, 0x4f,
	0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c,
	0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69,
	0x64, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x68, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x54, 0x68, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x52, 0x18, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x68, 0x72, 0x64, 0x4f,
	0x75, 0x74, 0x1a, 0x6a, 0x0a, 0x18, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69,
	0x64, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x54, 0x68, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x64, 0x65, 0x54, 0x68, 0x72, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x64, 0x65, 0x54, 0x68, 0x72, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x70, 0x54, 0x68, 0x72, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x75, 0x70, 0x54, 0x68, 0x72, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x75, 0x74, 0x1a, 0xe8,
	0x01, 0x0a, 0x17, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x92, 0x01, 0x0a, 0x16, 0x71,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x4f, 0x52, 0x69, 0x64, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x16, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x4f, 0x52, 0x69, 0x64, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x1a,
	0x38, 0x0a, 0x16, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x1a, 0xd0, 0x01, 0x0a, 0x14, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x55, 0x70, 0x43, 0x79, 0x63, 0x6c,
	0x65, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x13, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52,
	0x69, 0x64, 0x65, 0x55, 0x70, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x54, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x55, 0x70, 0x43, 0x79, 0x63, 0x6c,
	0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x55,
	0x70, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x13, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f,
	0x52, 0x69, 0x64, 0x65, 0x55, 0x70, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x1a, 0x2f, 0x0a, 0x13, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x52, 0x69, 0x64, 0x65, 0x55, 0x70, 0x43, 0x79, 0x63,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x70, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x1a, 0xd5, 0x02, 0x0a,
	0x10, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x55, 0x63, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x73, 0x12, 0x76, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x55, 0x63, 0x6c, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x55,
	0x63, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74,
	0x55, 0x63, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x53, 0x6c, 0x6f,
	0x74, 0x55, 0x63, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x1a, 0xc8, 0x01, 0x0a, 0x0f, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x55, 0x63, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x74, 0x0a,
	0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x56, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x6c, 0x6f, 0x74, 0x55, 0x63, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x55, 0x63, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x12, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x45,
	0x53, 0x54, 0x55, 0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x41,
	0x43, 0x4c, 0x10, 0x01, 0x1a, 0xf8, 0x01, 0x0a, 0x19, 0x51, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x34, 0x43, 0x6f,
	0x73, 0x73, 0x12, 0x9a, 0x01, 0x0a, 0x18, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x34, 0x43, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x6c, 0x6f, 0x74, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x34, 0x43, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x34, 0x43, 0x6f, 0x73, 0x52, 0x18, 0x71, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x34, 0x43, 0x6f, 0x73, 0x1a,
	0x3e, 0x0a, 0x18, 0x51, 0x6f, 0x73, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x34, 0x43, 0x6f, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x6f, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0xd8, 0x0d, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x1a, 0xe2, 0x0c, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x16, 0x71, 0x6f,
	0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x16, 0x71, 0x6f, 0x73, 0x53, 0x75, 0x62,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x12, 0x87, 0x01, 0x0a, 0x17, 0x71, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x17, 0x71, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x16, 0x71,
	0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x16, 0x71, 0x6f, 0x73, 0x53, 0x75,
	0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x62,
	0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xd1, 0x03,
	0x0a, 0x16, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x98, 0x01, 0x0a, 0x15, 0x71, 0x6f, 0x73,
	0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x62, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x15, 0x71, 0x6f,
	0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x1a, 0x9b, 0x02, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x8a, 0x01,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x6c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75,
	0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x41, 0x70, 0x70, 0x49, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x41, 0x70, 0x70, 0x49, 0x66,
	0x12, 0x2a, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x62, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x09,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x00, 0x1a, 0x92, 0x02, 0x0a, 0x17, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x9c, 0x01,
	0x0a, 0x16, 0x71, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x64,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x68, 0x61,
	0x70, 0x69, 0x6e, 0x67, 0x52, 0x16, 0x71, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0x58, 0x0a, 0x16,
	0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x62, 0x73, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x62, 0x73, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x70, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xa1, 0x03, 0x0a, 0x16, 0x51, 0x6f, 0x73, 0x53, 0x75,
	0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x12, 0x98, 0x01, 0x0a, 0x15, 0x71, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x62, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x15, 0x71, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0xeb, 0x01, 0x0a,
	0x15, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x8a, 0x01, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x6c, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x50,
	0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x23, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x1a, 0xa8, 0x12, 0x0a, 0x0e, 0x51,
	0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x57, 0x0a,
	0x0d, 0x71, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x1a, 0xbc, 0x11, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x12, 0x7a, 0x0a, 0x14, 0x71, 0x6f, 0x73, 0x4c,
	0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x69, 0x6e,
	0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x52, 0x14,
	0x71, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x73, 0x12, 0x7a, 0x0a, 0x14, 0x71, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x46, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x14, 0x71, 0x6f, 0x73, 0x4c,
	0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73,
	0x12, 0x62, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x53, 0x63, 0x68, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x63, 0x68,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x53, 0x63, 0x68, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x68, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x54, 0x4d, 0x53, 0x63, 0x68,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x2e,
	0x51, 0x6f, 0x73, 0x54, 0x4d, 0x53, 0x63, 0x68, 0x54, 0x72, 0x61, 0x66, 0x66, 0x73, 0x52, 0x0e,
	0x71, 0x6f, 0x73, 0x54, 0x4d, 0x53, 0x63, 0x68, 0x54, 0x72, 0x61, 0x66, 0x66, 0x73, 0x12, 0x53,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x39, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56,
	0x69, 0x65, 0x77, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69,
	0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x1a, 0x90, 0x05, 0x0a, 0x14, 0x51, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x12, 0x8c, 0x01, 0x0a,
	0x13, 0x71, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x51, 0x6f,
	0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x45,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x13, 0x71, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x1a, 0xe8, 0x03, 0x0a, 0x13,
	0x51, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x65, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x51, 0x6f, 0x73, 0x4c,
	0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x0b,
	0x65, 0x78, 0x63, 0x4c, 0x61, 0x79, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x66, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x56, 0x69, 0x65, 0x77, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x69, 0x6e,
	0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x2e, 0x45, 0x78,
	0x63, 0x4c, 0x61, 0x79, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x65, 0x78, 0x63, 0x4c, 0x61,
	0x79, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44,
	0x53, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49,
	0x44, 0x53, 0x74, 0x72, 0x22, 0x49, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x44, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x41, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x4e, 0x4f, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x01, 0x22,
	0x55, 0x0a, 0x0b, 0x45, 0x78, 0x63, 0x4c, 0x61, 0x79, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22,
	0x0a, 0x1e, 0x45, 0x78, 0x63, 0x4c, 0x61, 0x79, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x32,
	0x54, 0x50, 0x5f, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x43, 0x4c, 0x55, 0x44, 0x45,
	0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x45, 0x78, 0x63, 0x4c, 0x61, 0x79, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x43,
	0x4c, 0x55, 0x44, 0x45, 0x10, 0x01, 0x1a, 0xb7, 0x03, 0x0a, 0x14, 0x51, 0x6f, 0x73, 0x4c, 0x69,
	0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12,
	0x8c, 0x01, 0x0a, 0x13, 0x71, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5a, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65,
	0x77, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77,
	0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x13, 0x71, 0x6f, 0x73, 0x4c, 0x69,
	0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x1a, 0x8f,
	0x02, 0x0a, 0x13, 0x51, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x88, 0x01, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x66, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x2e,
	0x51, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53, 0x74, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53, 0x74, 0x72, 0x22,
	0x4f, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13,
	0x0a, 0x0f, 0x52, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x41,
	0x43, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x4c, 0x4e, 0x53, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x4e, 0x53, 0x4c, 0x41, 0x43, 0x10, 0x02,
	0x1a, 0xc9, 0x02, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x53, 0x63, 0x68, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x6c, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x53, 0x63, 0x68, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x63, 0x68,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x63, 0x68, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x53, 0x63, 0x68, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x1a,
	0xca, 0x01, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x53, 0x63, 0x68, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x6f, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x53, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x56, 0x69, 0x65, 0x77, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x63, 0x68, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53, 0x63, 0x68, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x22, 0x32, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x32, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x33, 0x10, 0x01, 0x1a, 0xd3, 0x01, 0x0a,
	0x0e, 0x51, 0x6f, 0x73, 0x54, 0x4d, 0x53, 0x63, 0x68, 0x54, 0x72, 0x61, 0x66, 0x66, 0x73, 0x12,
	0x74, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x54, 0x4d, 0x53, 0x63, 0x68, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x51, 0x6f, 0x73, 0x54, 0x4d, 0x53,
	0x63, 0x68, 0x54, 0x72, 0x61, 0x66, 0x66, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x54, 0x4d, 0x53, 0x63,
	0x68, 0x54, 0x72, 0x61, 0x66, 0x66, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x54, 0x4d, 0x53, 0x63, 0x68,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x1a, 0x4b, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x54, 0x4d, 0x53, 0x63,
	0x68, 0x54, 0x72, 0x61, 0x66, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44,
	0x53, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x49,
	0x44, 0x53, 0x74, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53, 0x74,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x53,
	0x74, 0x72, 0x22, 0x21, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x12, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x56,
	0x49, 0x45, 0x57, 0x10, 0x00, 0x1a, 0xf6, 0x3b, 0x0a, 0x0a, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e,
	0x51, 0x6f, 0x73, 0x73, 0x12, 0x47, 0x0a, 0x09, 0x71, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51,
	0x6f, 0x73, 0x52, 0x09, 0x71, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x1a, 0x9e, 0x3b,
	0x0a, 0x09, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x12, 0x78, 0x0a, 0x16, 0x71,
	0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c,
	0x61, 0x6e, 0x43, 0x61, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x16, 0x71,
	0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x63, 0x0a, 0x0f, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56,
	0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x73, 0x52, 0x0f, 0x71, 0x6f, 0x73, 0x56, 0x70,
	0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x73, 0x12, 0x7b, 0x0a, 0x17, 0x71, 0x6f,
	0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c,
	0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x52, 0x17,
	0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x12, 0x69, 0x0a, 0x11, 0x71, 0x6f, 0x73, 0x56, 0x70,
	0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51,
	0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x52,
	0x11, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x70, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x70, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xaf, 0x03, 0x0a,
	0x16, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x8c, 0x01, 0x0a, 0x15, 0x71, 0x6f, 0x73, 0x56,
	0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61,
	0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x15, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x85, 0x02, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x56, 0x70,
	0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x6c,
	0x6f, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x62, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43,
	0x61, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70,
	0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x61, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x43, 0x0a, 0x0b, 0x45, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x5f, 0x45, 0x58, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x10,
	0x00, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x10, 0x01, 0x1a, 0xb3,
	0x01, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x68,
	0x62, 0x73, 0x12, 0x70, 0x0a, 0x0e, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61,
	0x6e, 0x50, 0x68, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56,
	0x50, 0x4e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61,
	0x6e, 0x50, 0x68, 0x62, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61,
	0x6e, 0x50, 0x68, 0x62, 0x52, 0x0e, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61,
	0x6e, 0x50, 0x68, 0x62, 0x1a, 0x2e, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78,
	0x6c, 0x61, 0x6e, 0x50, 0x68, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x73, 0x76, 0x70, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x73, 0x76, 0x70, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xc6, 0x2f, 0x0a, 0x17, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56,
	0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73,
	0x12, 0x90, 0x01, 0x0a, 0x16, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x58, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f,
	0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x16, 0x71, 0x6f, 0x73,
	0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x1a, 0x97, 0x2e, 0x0a, 0x16, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78,
	0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0xa7,
	0x01, 0x0a, 0x16, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x6f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70,
	0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x16, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x89, 0x01, 0x0a, 0x0c, 0x76, 0x70, 0x6e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x65, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70,
	0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x56, 0x70, 0x6e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x76, 0x70, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7d, 0x0a, 0x08, 0x76, 0x70, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x61, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x2e, 0x56, 0x70, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x08, 0x76, 0x70, 0x6e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x70, 0x6e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x70, 0x6e, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xaa, 0x29, 0x0a, 0x16, 0x51, 0x6f,
	0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0xbc, 0x01, 0x0a, 0x15, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56,
	0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x85, 0x01, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56,
	0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56,
	0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e,
	0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c,
	0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x52, 0x15, 0x71, 0x6f,
	0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x1a, 0xd0, 0x27, 0x0a, 0x15, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78,
	0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x12, 0xe1, 0x01,
	0x0a, 0x1a, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0xa0, 0x01, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e,
	0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c,
	0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x51, 0x6f,
	0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70,
	0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x1a, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c,
	0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x70, 0x6e,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x76, 0x70, 0x6e, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x42, 0x79, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x70, 0x6e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x2c, 0x0a, 0x11, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x76, 0x70, 0x6e, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x34, 0x0a,
	0x15, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x76, 0x70,
	0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x76,
	0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12,
	0x32, 0x0a, 0x14, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50,
	0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x76,
	0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x70,
	0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2c, 0x0a,
	0x11, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x76,
	0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x76, 0x70, 0x6e, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73,
	0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x76, 0x70, 0x6e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x32, 0x0a,
	0x14, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74,
	0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x76, 0x70, 0x6e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x70, 0x6e, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76,
	0x70, 0x6e, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x76, 0x70, 0x6e, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x2a, 0x0a, 0x10, 0x76, 0x70, 0x6e, 0x6d, 0x69, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x76, 0x70, 0x6e, 0x6d, 0x69,
	0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76,
	0x70, 0x6e, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x76, 0x70, 0x6e, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x70, 0x6e, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x6b,
	0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x70,
	0x6e, 0x6d, 0x69, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x76, 0x70, 0x6e, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x61,
	0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x76, 0x70, 0x6e, 0x73, 0x74, 0x61, 0x74,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x70, 0x6e,
	0x73, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x70, 0x6e, 0x73, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x70, 0x6e, 0x73, 0x74, 0x61, 0x74,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x76, 0x70, 0x6e, 0x73, 0x74, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x1a, 0xc0, 0x1e, 0x0a, 0x1a, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78,
	0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0xf9, 0x01, 0x0a, 0x19, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c,
	0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0xba, 0x01, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70,
	0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56,
	0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x51,
	0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e,
	0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x19, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x1a, 0xa5,
	0x1c, 0x0a, 0x19, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x3e, 0x0a, 0x1a,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x1a, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b,
	0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70,
	0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x3c, 0x0a, 0x19, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x19, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44,
	0x0a, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63,
	0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x19, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x1d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x3e, 0x0a, 0x1a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x46, 0x0a, 0x1e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63,
	0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73,
	0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63,
	0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50,
	0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1d, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c,
	0x6f, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e,
	0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e,
	0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x19, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x1d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x3e, 0x0a, 0x1a, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x46, 0x0a, 0x1e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73,
	0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61,
	0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x73, 0x73, 0x50,
	0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1d, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x55, 0x6e, 0x69, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x70, 0x6e, 0x63,
	0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x13, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x44, 0x72,
	0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x76, 0x70,
	0x6e, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12,
	0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72,
	0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x76, 0x70, 0x6e, 0x63,
	0x61, 0x72, 0x47, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x47, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x47,
	0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x70, 0x6e, 0x63,
	0x61, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x76, 0x70, 0x6e, 0x63,
	0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x26, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x70,
	0x6e, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b,
	0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73,
	0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12,
	0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x50, 0x6b, 0x74, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x76, 0x70, 0x6e, 0x63,
	0x61, 0x72, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x70,
	0x6e, 0x63, 0x61, 0x72, 0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72,
	0x52, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x70,
	0x6e, 0x63, 0x61, 0x72, 0x52, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x52, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x52, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x2d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x52, 0x50, 0x6b,
	0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72,
	0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x70,
	0x6e, 0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x70,
	0x6e, 0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x2f,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x59, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72,
	0x59, 0x50, 0x6b, 0x74, 0x73, 0x18, 0x30, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x76, 0x70, 0x6e,
	0x63, 0x61, 0x72, 0x59, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x70, 0x6e, 0x63,
	0x61, 0x72, 0x59, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x76, 0x70, 0x6e, 0x63, 0x61, 0x72, 0x59, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x70, 0x6e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76,
	0x70, 0x6e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x76, 0x70, 0x6e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x76, 0x70, 0x6e, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x76, 0x70, 0x6e, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x34,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x76, 0x70, 0x6e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x70, 0x6e, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x35, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x76, 0x70, 0x6e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x70, 0x6e, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x76, 0x70, 0x6e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79,
	0x74, 0x65, 0x52, 0x74, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x76, 0x70, 0x6e, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x52, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x70,
	0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x38, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x11, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x39, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x76, 0x70, 0x6e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x34,
	0x0a, 0x15, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x76,
	0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x3b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x13, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x72,
	0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x70,
	0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x3d, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61,
	0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x15, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x76, 0x70, 0x6e, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x40, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x61, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x76, 0x70,
	0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6b, 0x74, 0x52, 0x74, 0x18,
	0x42, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x76, 0x70, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x6b, 0x74, 0x52, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x70, 0x6e, 0x75, 0x72, 0x70, 0x66, 0x44,
	0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x43, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10,
	0x76, 0x70, 0x6e, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x32, 0x0a, 0x14, 0x76, 0x70, 0x6e, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x44, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14,
	0x76, 0x70, 0x6e, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x76, 0x70, 0x6e, 0x75, 0x72, 0x70, 0x66, 0x44,
	0x72, 0x6f, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x45, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x12, 0x76, 0x70, 0x6e, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x76, 0x70, 0x6e, 0x75, 0x72, 0x70, 0x66, 0x44,
	0x72, 0x6f, 0x70, 0x50, 0x6b, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x13, 0x76, 0x70, 0x6e, 0x75, 0x72, 0x70, 0x66, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x6b,
	0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x22, 0x43, 0x0a, 0x0c, 0x56, 0x70, 0x6e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x70, 0x6e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00,
	0x12, 0x19, 0x0a, 0x15, 0x56, 0x70, 0x6e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22, 0x30, 0x0a, 0x08, 0x56,
	0x70, 0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x70, 0x6e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x70,
	0x6e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x1a, 0xfe, 0x02,
	0x0a, 0x11, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x73, 0x12, 0x78, 0x0a, 0x10, 0x71, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c,
	0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56,
	0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70,
	0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x52, 0x10, 0x71, 0x6f, 0x73,
	0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x1a, 0xee, 0x01,
	0x0a, 0x10, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x73, 0x76, 0x70, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x73, 0x76, 0x70, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x7d, 0x0a, 0x0c, 0x74, 0x72, 0x75, 0x73, 0x74, 0x76, 0x70, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x56, 0x50, 0x4e, 0x51, 0x6f, 0x73, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x50, 0x4e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x76, 0x70, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x74, 0x72, 0x75, 0x73, 0x74, 0x76, 0x70, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x3d, 0x0a, 0x0c, 0x54, 0x72, 0x75, 0x73, 0x74, 0x76, 0x70, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x14, 0x54, 0x72, 0x75, 0x73, 0x74, 0x76, 0x70, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x58, 0x5f, 0x38, 0x30, 0x32, 0x31, 0x50, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x76, 0x70, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x53, 0x10, 0x01, 0x1a, 0xf2,
	0x17, 0x0a, 0x07, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x0c, 0x71, 0x6f,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x65, 0x64, 0x73, 0x52, 0x0c, 0x71, 0x6f, 0x73,
	0x46, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x65, 0x64, 0x73, 0x12, 0x4d, 0x0a, 0x0c, 0x71, 0x6f, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f,
	0x73, 0x50, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x73, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x50,
	0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x73, 0x12, 0x50, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x57,
	0x72, 0x65, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f,
	0x73, 0x57, 0x72, 0x65, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73,
	0x57, 0x72, 0x65, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x08, 0x71, 0x6f,
	0x73, 0x57, 0x72, 0x65, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72,
	0x65, 0x64, 0x73, 0x52, 0x08, 0x71, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x73, 0x1a, 0xce, 0x05,
	0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x65, 0x64, 0x73, 0x12, 0x57,
	0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65,
	0x64, 0x2e, 0x51, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x65, 0x64, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x65, 0x64, 0x52, 0x0b, 0x71, 0x6f, 0x73, 0x46,
	0x6c, 0x6f, 0x77, 0x57, 0x72, 0x65, 0x64, 0x1a, 0xe4, 0x04, 0x0a, 0x0b, 0x51, 0x6f, 0x73, 0x46,
	0x6c, 0x6f, 0x77, 0x57, 0x72, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x57,
	0x72, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x6c, 0x6f, 0x77, 0x57, 0x72, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x69, 0x0a, 0x0d, 0x71,
	0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x43, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64,
	0x2e, 0x51, 0x6f, 0x73, 0x46, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x65, 0x64, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x46, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65,
	0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x44,
	0x65, 0x70, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x1a, 0xa5, 0x03, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x57, 0x72,
	0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x74, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x57,
	0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x50,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73,
	0x46, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x65, 0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x52, 0x0c, 0x71, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x1a, 0x9d,
	0x02, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x6c, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x56,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73,
	0x46, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x65, 0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x46, 0x6c, 0x6f,
	0x77, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x63, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x68, 0x69, 0x67, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x68, 0x69, 0x67, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x63,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x50, 0x63, 0x74, 0x22, 0x39, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0f, 0x0a, 0x0b,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x1a, 0xc6,
	0x05, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x73, 0x12,
	0x57, 0x0a, 0x0b, 0x71, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72,
	0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x52, 0x0b, 0x71, 0x6f, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x1a, 0xdc, 0x04, 0x0a, 0x0b, 0x51, 0x6f, 0x73,
	0x50, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x12, 0x69, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x57,
	0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x43, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f,
	0x73, 0x50, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x44, 0x65, 0x70, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x44, 0x65,
	0x70, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x72, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x72, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x1a,
	0xa5, 0x03, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x73, 0x12, 0x74, 0x0a, 0x0c, 0x71, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65,
	0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51,
	0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x57, 0x72,
	0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x1a, 0x9d, 0x02, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x57,
	0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x6c, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x56, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65,
	0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51,
	0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73,
	0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x50, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x50, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x69, 0x67, 0x68, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x50, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x68, 0x69,
	0x67, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f,
	0x77, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x63, 0x74, 0x22, 0x39, 0x0a, 0x05,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47,
	0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f,
	0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59,
	0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x1a, 0xfa, 0x04, 0x0a, 0x0d, 0x51, 0x6f, 0x73, 0x57,
	0x72, 0x65, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x0c, 0x71, 0x6f, 0x73,
	0x57, 0x72, 0x65, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f,
	0x73, 0x57, 0x72, 0x65, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57,
	0x72, 0x65, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x0c, 0x71, 0x6f, 0x73, 0x57, 0x72, 0x65,
	0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x1a, 0x8b, 0x04, 0x0a, 0x0c, 0x51, 0x6f, 0x73, 0x57, 0x72,
	0x65, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x68, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73, 0x57,
	0x72, 0x65, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65,
	0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x5f, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72,
	0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x70, 0x65, 0x65, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x72, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x72, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xbc,
	0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x41, 0x46, 0x31, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x32, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x41, 0x46, 0x33, 0x10,
	0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x41, 0x46, 0x34, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x42, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x43, 0x53, 0x36,
	0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x43, 0x53, 0x37, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x45, 0x46, 0x10, 0x07, 0x22, 0x55, 0x0a,
	0x09, 0x53, 0x70, 0x65, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x4f, 0x54, 0x48, 0x53, 0x50, 0x45, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x70, 0x65, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x48, 0x49, 0x47, 0x48, 0x53, 0x50, 0x45, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x4f, 0x57, 0x53, 0x50, 0x45,
	0x45, 0x44, 0x10, 0x02, 0x1a, 0x9c, 0x05, 0x0a, 0x08, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64,
	0x73, 0x12, 0x47, 0x0a, 0x07, 0x71, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64,
	0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65,
	0x64, 0x52, 0x07, 0x71, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x1a, 0xc6, 0x04, 0x0a, 0x07, 0x51,
	0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x12, 0x61, 0x0a, 0x0d, 0x71, 0x6f, 0x73, 0x57, 0x72, 0x65,
	0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73, 0x57,
	0x72, 0x65, 0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73,
	0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x52, 0x0d, 0x71, 0x6f, 0x73, 0x57,
	0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x50, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x50, 0x63, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x77, 0x72, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x77, 0x72, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x95, 0x03, 0x0a, 0x0d,
	0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x6c, 0x0a,
	0x0c, 0x71, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65,
	0x64, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72,
	0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0c, 0x71,
	0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x1a, 0x95, 0x02, 0x0a, 0x0c,
	0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x64, 0x0a, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65,
	0x64, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72,
	0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x57, 0x72, 0x65, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x50,
	0x63, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x69, 0x67, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50,
	0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x68, 0x69, 0x67, 0x68, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x50, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x50, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x6f, 0x77,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x63, 0x74, 0x22, 0x39, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x52, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f,
	0x57, 0x10, 0x02, 0x22, 0x74, 0x0a, 0x14, 0x48, 0x77, 0x58, 0x51, 0x6f, 0x53, 0x50, 0x6f, 0x72,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x72, 0x75,
	0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x54,
	0x72, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x79, 0x0a, 0x19, 0x48, 0x77, 0x58,
	0x51, 0x6f, 0x53, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x32, 0xc1, 0x0f, 0x0a, 0x09, 0x48, 0x75, 0x61, 0x77, 0x65, 0x69, 0x51,
	0x6f, 0x73, 0x12, 0x5a, 0x0a, 0x13, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x54,
	0x4d, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x2b, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x41, 0x54, 0x4d, 0x50, 0x76, 0x63, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5e,
	0x0a, 0x15, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x42, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x68,
	0x0a, 0x1a, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x42, 0x64, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6c, 0x0a, 0x1c, 0x51, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x45, 0x76, 0x70, 0x6c, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x14, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2c,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x10, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x12, 0x28, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x0e, 0x51, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x12, 0x26, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x46, 0x47, 0x51, 0x53, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4e, 0x0a, 0x0d,
	0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x66, 0x43, 0x61, 0x72, 0x12, 0x25, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x66, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0c,
	0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x66, 0x47, 0x51, 0x12, 0x24, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x66, 0x47, 0x51, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x0e, 0x51, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x12, 0x26, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x66, 0x51, 0x70, 0x70, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0c,
	0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x66, 0x53, 0x51, 0x12, 0x24, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x66, 0x53, 0x51, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5a, 0x0a, 0x13, 0x51, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x12, 0x2b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x4c, 0x76, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70, 0x65, 0x12, 0x2a, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x76, 0x48, 0x61, 0x72, 0x64, 0x50, 0x69, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x5a, 0x0a, 0x13, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x56, 0x0a, 0x11,
	0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x12, 0x29, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x0e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x55, 0x53, 0x74, 0x12, 0x26, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x55, 0x53, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x52, 0x0a, 0x0f, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x27, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5e, 0x0a, 0x15, 0x51, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x12, 0x2d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x6c,
	0x6f, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x56, 0x0a, 0x11, 0x51, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x56, 0x4f, 0x51, 0x53, 0x74, 0x12,
	0x29, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f,
	0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x56, 0x4f,
	0x51, 0x53, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x58, 0x0a, 0x12, 0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x53, 0x74, 0x12, 0x2a, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x53, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x51, 0x53, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4e, 0x0a, 0x0d,
	0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x56, 0x6e, 0x69, 0x47, 0x51, 0x12, 0x25, 0x2e,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e,
	0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x56, 0x6e, 0x69, 0x47, 0x51, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6a, 0x0a, 0x1b,
	0x51, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x2e, 0x68, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71, 0x6f, 0x73, 0x2e, 0x51, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x56, 0x70, 0x6e, 0x56, 0x78, 0x6c, 0x61, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x71,
	0x6f, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_huaweiV8R10_qos_proto_rawDescOnce sync.Once
	file_huaweiV8R10_qos_proto_rawDescData = file_huaweiV8R10_qos_proto_rawDesc
)

func file_huaweiV8R10_qos_proto_rawDescGZIP() []byte {
	file_huaweiV8R10_qos_proto_rawDescOnce.Do(func() {
		file_huaweiV8R10_qos_proto_rawDescData = protoimpl.X.CompressGZIP(file_huaweiV8R10_qos_proto_rawDescData)
	})
	return file_huaweiV8R10_qos_proto_rawDescData
}

var file_huaweiV8R10_qos_proto_enumTypes = make([]protoimpl.EnumInfo, 360)
var file_huaweiV8R10_qos_proto_msgTypes = make([]protoimpl.MessageInfo, 534)
var file_huaweiV8R10_qos_proto_goTypes = []interface{}{
	(QosResetATMPvcQueueRequest_ServiceClass)(0),                                           // 0: huaweiV8R10_qos.QosResetATMPvcQueueRequest.ServiceClass
	(QosResetBdPolicyApplyRequest_Bddirection)(0),                                          // 1: huaweiV8R10_qos.QosResetBdPolicyApplyRequest.Bddirection
	(QosResetBdVxlanPolicyApplyRequest_Bddirection)(0),                                     // 2: huaweiV8R10_qos.QosResetBdVxlanPolicyApplyRequest.Bddirection
	(QosResetEvplVxlanPolicyApplyRequest_Evpldirection)(0),                                 // 3: huaweiV8R10_qos.QosResetEvplVxlanPolicyApplyRequest.Evpldirection
	(QosResetGlobalPolicyRequest_Direction)(0),                                             // 4: huaweiV8R10_qos.QosResetGlobalPolicyRequest.Direction
	(QosResetIFGQStRequest_Direction)(0),                                                   // 5: huaweiV8R10_qos.QosResetIFGQStRequest.Direction
	(QosResetIfCarRequest_Direction)(0),                                                    // 6: huaweiV8R10_qos.QosResetIfCarRequest.Direction
	(QosResetIfGQRequest_Direction)(0),                                                     // 7: huaweiV8R10_qos.QosResetIfGQRequest.Direction
	(QosResetIfQppbRequest_Direction)(0),                                                   // 8: huaweiV8R10_qos.QosResetIfQppbRequest.Direction
	(QosResetIfSQRequest_Direction)(0),                                                     // 9: huaweiV8R10_qos.QosResetIfSQRequest.Direction
	(QosResetLsPortQueueRequest_ServiceClass)(0),                                           // 10: huaweiV8R10_qos.QosResetLsPortQueueRequest.ServiceClass
	(QosResetPolicyApplyRequest_Direction)(0),                                              // 11: huaweiV8R10_qos.QosResetPolicyApplyRequest.Direction
	(QosResetPortQueueRequest_Isonboard)(0),                                                // 12: huaweiV8R10_qos.QosResetPortQueueRequest.Isonboard
	(QosResetPortQueueRequest_ServiceClass)(0),                                             // 13: huaweiV8R10_qos.QosResetPortQueueRequest.ServiceClass
	(QosResetProUStRequest_Direction)(0),                                                   // 14: huaweiV8R10_qos.QosResetProUStRequest.Direction
	(QosResetProfileRequest_ServiceClass)(0),                                               // 15: huaweiV8R10_qos.QosResetProfileRequest.ServiceClass
	(QosResetSlotPortQueueRequest_ServiceClass)(0),                                         // 16: huaweiV8R10_qos.QosResetSlotPortQueueRequest.ServiceClass
	(QosResetSlotVOQStRequest_VoqFlag)(0),                                                  // 17: huaweiV8R10_qos.QosResetSlotVOQStRequest.VoqFlag
	(QosResetVniGQRequest_Direction)(0),                                                    // 18: huaweiV8R10_qos.QosResetVniGQRequest.Direction
	(QosResetVpnVxlanPolicyApplyRequest_Vpndirection)(0),                                   // 19: huaweiV8R10_qos.QosResetVpnVxlanPolicyApplyRequest.Vpndirection
	(Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_CqServiceClass)(0), // 20: huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.HqosFlowMapping.HqosFMParams.HqosFMParam.CqServiceClass
	(Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam_FqServiceClass)(0), // 21: huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.HqosFlowMapping.HqosFMParams.HqosFMParam.FqServiceClass
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_Prioritymodefq)(0),                              // 22: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.Prioritymodefq
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode_QueueScheduleMode)(0),            // 23: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityScheduleModes.HqosPriorityScheduleMode.QueueScheduleMode
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af1)(0),                          // 24: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Af1
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af2)(0),                          // 25: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Af2
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af3)(0),                          // 26: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Af3
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Af4)(0),                          // 27: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Af4
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Be)(0),                           // 28: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Be
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs6)(0),                          // 29: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Cs6
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Cs7)(0),                          // 30: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Cs7
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_Ef)(0),                           // 31: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Ef
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_QueueScheduleMode)(0),            // 32: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.QueueScheduleMode
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping_ShapId)(0),                       // 33: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.ShapId
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_CosValue)(0),                                           // 34: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueue4Coss.HqosQueue4Cos.CosValue
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos_QueueScheduleMode)(0),                                  // 35: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueue4Coss.HqosQueue4Cos.QueueScheduleMode
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority_ServiceClass)(0),                               // 36: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueuePrioritys.HqosQueuePriority.ServiceClass
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowjitter)(0),                                                  // 37: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.HqosQueue.Lowjitter
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_Lowlatency)(0),                                                 // 38: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.HqosQueue.Lowlatency
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_QueueScheduleMode)(0),                                          // 39: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.HqosQueue.QueueScheduleMode
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue_ServiceClass)(0),                                               // 40: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.HqosQueue.ServiceClass
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd_ServiceClass)(0),                                         // 41: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosRdmDscrds.HqosRdmDscrd.ServiceClass
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af1)(0),                                          // 42: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Af1
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af2)(0),                                          // 43: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Af2
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af3)(0),                                          // 44: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Af3
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Af4)(0),                                          // 45: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Af4
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Be)(0),                                           // 46: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Be
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs6)(0),                                          // 47: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Cs6
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Cs7)(0),                                          // 48: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Cs7
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_Ef)(0),                                           // 49: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Ef
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID_QueueScheduleMode)(0),                            // 50: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.QueueScheduleMode
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af1)(0),                                        // 51: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Af1
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af2)(0),                                        // 52: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Af2
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af3)(0),                                        // 53: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Af3
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Af4)(0),                                        // 54: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Af4
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Be)(0),                                         // 55: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Be
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs6)(0),                                        // 56: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Cs6
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Cs7)(0),                                        // 57: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Cs7
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm_Ef)(0),                                         // 58: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Ef
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af1)(0),                                              // 59: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Af1
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af2)(0),                                              // 60: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Af2
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af3)(0),                                              // 61: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Af3
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Af4)(0),                                              // 62: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Af4
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Be)(0),                                               // 63: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Be
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs6)(0),                                              // 64: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Cs6
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Cs7)(0),                                              // 65: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Cs7
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_Ef)(0),                                               // 66: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Ef
	(Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape_QueueScheduleMode)(0),                                // 67: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.QueueScheduleMode
	(Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FfqosServiceClass)(0),                  // 68: huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.HqosFourFlowMapping.HqosFourFMParams.HqosFourFMParam.FfqosServiceClass
	(Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam_FqosServiceClass)(0),                   // 69: huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.HqosFourFlowMapping.HqosFourFMParams.HqosFourFMParam.FqosServiceClass
	(Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_Direction)(0),                                                                   // 70: huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.HqosIFUserQueue.Direction
	(Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat_ServiceClass)(0),                       // 71: huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.HqosIFUserQueue.HqosIFUserQueueStats.HqosIFUserQueueStat.ServiceClass
	(Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_Lowlatency)(0),                                         // 72: huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.HqosPortQParas.HqosPortQPara.Lowlatency
	(Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_QueueScheduleMode)(0),                                  // 73: huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.HqosPortQParas.HqosPortQPara.QueueScheduleMode
	(Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara_ServiceClass)(0),                                       // 74: huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.HqosPortQParas.HqosPortQPara.ServiceClass
	(Qos_Hqos_HqosProfileApplys_HqosProfileApply_Direction)(0),                                                                 // 75: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.Direction
	(Qos_Hqos_HqosProfileApplys_HqosProfileApply_IdentifyType)(0),                                                              // 76: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.IdentifyType
	(Qos_Hqos_HqosProfileApplys_HqosProfileApply_ProAppType)(0),                                                                // 77: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.ProAppType
	(Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat_ServiceClass)(0),                                       // 78: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosGqStats.HqosGqStat.ServiceClass
	(Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat_CarType)(0),                            // 79: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileCarStats.HqosProfileCarStat.CarType
	(Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat_ServiceClass)(0),                             // 80: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileStats.HqosProfileStat.ServiceClass
	(Qos_Hqos_HqosProfiles_HqosProfile_TimeRange)(0),                                                                           // 81: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.TimeRange
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_CarType)(0),                                                      // 82: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.CarType
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_Direction)(0),                                                    // 83: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.Direction
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenAction)(0),                                                  // 84: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.GreenAction
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenColor)(0),                                                   // 85: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.GreenColor
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_GreenServiceClass)(0),                                            // 86: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.GreenServiceClass
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedAction)(0),                                                    // 87: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.RedAction
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedColor)(0),                                                     // 88: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.RedColor
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_RedServiceClass)(0),                                              // 89: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.RedServiceClass
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowAction)(0),                                                 // 90: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.YellowAction
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowColor)(0),                                                  // 91: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.YellowColor
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar_YellowServiceClass)(0),                                           // 92: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.YellowServiceClass
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight_Direction)(0),                                                // 93: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosSQWeights.HqosSQWeight.Direction
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_AdjustOnCard)(0),                         // 94: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueueTimeRanges.HqosUserQueueTimeRange.AdjustOnCard
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_Direction)(0),                            // 95: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueueTimeRanges.HqosUserQueueTimeRange.Direction
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange_PriorityLevelID)(0),                      // 96: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueueTimeRanges.HqosUserQueueTimeRange.PriorityLevelID
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_AdjustOnCard)(0),                                           // 97: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueues.HqosUserQueue.AdjustOnCard
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_Direction)(0),                                              // 98: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueues.HqosUserQueue.Direction
	(Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue_PriorityLevelID)(0),                                        // 99: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueues.HqosUserQueue.PriorityLevelID
	(Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength_Direction)(0),                              // 100: huaweiV8R10_qos.Qos.Hqos.HqosServiceTemplates.HqosServiceTemplate.HqosSrvLengths.HqosSrvLength.Direction
	(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_Prioritymodegq)(0),                                                        // 101: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.Prioritymodegq
	(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir_Direction)(0),                                  // 102: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQCirPirs.HqosGQCirPir.Direction
	(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode_Mode)(0),                                           // 103: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQModes.HqosGQMode.Mode
	(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Direction)(0),                  // 104: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapingpriortys.HqosGQShapingpriorty.Direction
	(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty_Priority)(0),                   // 105: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapingpriortys.HqosGQShapingpriorty.Priority
	(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping_Direction)(0),                                // 106: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapings.HqosGQShaping.Direction
	(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_Direction)(0),                                      // 107: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQStats.HqosGQStat.Direction
	(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat_ServiceClass)(0),                                   // 108: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQStats.HqosGQStat.ServiceClass
	(Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight_Direction)(0),                                      // 109: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosWeights.HqosWeight.Direction
	(Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_Direction)(0),                                                         // 110: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.Direction
	(Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat_CarType)(0),              // 111: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniCarStats.HqosProfileVniCarStat.CarType
	(Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat_ServiceClass)(0),               // 112: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniStats.HqosProfileVniStat.ServiceClass
	(Qos_QosAclLogParaCfs_QosAclLogParaCf_AcllogType)(0),                                                                       // 113: huaweiV8R10_qos.Qos.QosAclLogParaCfs.QosAclLogParaCf.AcllogType
	(Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass_ServicebdClass)(0),                              // 114: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdDefaultServiceClasss.QosBdDefaultServiceClass.ServicebdClass
	(Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_MapbdType)(0),                                                                   // 115: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPhbs.QosBdPhb.MapbdType
	(Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb_OperatebdType)(0),                                                               // 116: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPhbs.QosBdPhb.OperatebdType
	(Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bddirection)(0),                                                 // 117: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.Bddirection
	(Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_Bdlayer)(0),                                                     // 118: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.Bdlayer
	(Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat_ServiceClass)(0),                 // 119: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdActSqStats.QosBdActSqStat.ServiceClass
	(Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_DirectbdType)(0),                                                            // 120: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdTrusts.QosBdTrust.DirectbdType
	(Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust_TrustbdType)(0),                                                             // 121: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdTrusts.QosBdTrust.TrustbdType
	(Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable_ExcludeMode)(0),                                         // 122: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanCarDisables.QosBdVxlanCarDisable.ExcludeMode
	(Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bddirection)(0),                                       // 123: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.Bddirection
	(Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_Bdlayer)(0),                                           // 124: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.Bdlayer
	(Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust_TrustbdType)(0),                                                   // 125: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanTrusts.QosBdVxlanTrust.TrustbdType
	(Qos_QosBaHosts_QosBaHost_Color)(0),                                                                                        // 126: huaweiV8R10_qos.Qos.QosBaHosts.QosBaHost.Color
	(Qos_QosBaHosts_QosBaHost_Cosvalue)(0),                                                                                     // 127: huaweiV8R10_qos.Qos.QosBaHosts.QosBaHost.Cosvalue
	(Qos_QosBuffers_QosBuffer_QueueType)(0),                                                                                    // 128: huaweiV8R10_qos.Qos.QosBuffers.QosBuffer.QueueType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_ActionType)(0),                                           // 129: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActAclLogs.QosActAclLog.ActionType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog_IsConfigure)(0),                                          // 130: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActAclLogs.QosActAclLog.IsConfigure
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ActionType)(0),                                           // 131: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.ActionType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_ColorAware)(0),                                           // 132: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.ColorAware
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenAction)(0),                                          // 133: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.GreenAction
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenColor)(0),                                           // 134: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.GreenColor
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_GreenServiceClass)(0),                                    // 135: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.GreenServiceClass
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_LimitType)(0),                                            // 136: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.LimitType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedAction)(0),                                            // 137: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.RedAction
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedColor)(0),                                             // 138: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.RedColor
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_RedServiceClass)(0),                                      // 139: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.RedServiceClass
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowAction)(0),                                         // 140: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.YellowAction
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowColor)(0),                                          // 141: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.YellowColor
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps_YellowServiceClass)(0),                                   // 142: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.YellowServiceClass
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ActionType)(0),                                                 // 143: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.ActionType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_ColorAware)(0),                                                 // 144: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.ColorAware
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenAction)(0),                                                // 145: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.GreenAction
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenColor)(0),                                                 // 146: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.GreenColor
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_GreenServiceClass)(0),                                          // 147: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.GreenServiceClass
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_LimitType)(0),                                                  // 148: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.LimitType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedAction)(0),                                                  // 149: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.RedAction
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedColor)(0),                                                   // 150: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.RedColor
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_RedServiceClass)(0),                                            // 151: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.RedServiceClass
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowAction)(0),                                               // 152: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.YellowAction
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowColor)(0),                                                // 153: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.YellowColor
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar_YellowServiceClass)(0),                                         // 154: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.YellowServiceClass
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_ActionType)(0),                                           // 155: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActFilters.QosActFilter.ActionType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter_Filter)(0),                                               // 156: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActFilters.QosActFilter.Filter
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri_Priority)(0),                                             // 157: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActIncPris.QosActIncPri.Priority
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenAction)(0),                                      // 158: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.GreenAction
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenColor)(0),                                       // 159: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.GreenColor
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_GreenServiceClass)(0),                                // 160: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.GreenServiceClass
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedAction)(0),                                        // 161: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.RedAction
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedColor)(0),                                         // 162: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.RedColor
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_RedServiceClass)(0),                                  // 163: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.RedServiceClass
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre_SuppressType)(0),                                     // 164: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.SuppressType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_ActionType)(0),                                               // 165: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActLoads.QosActLoad.ActionType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad_BalanceType)(0),                                              // 166: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActLoads.QosActLoad.BalanceType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_FlowType)(0),                                       // 167: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActNsSamplers.QosActNsSampler.FlowType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler_SampleType)(0),                                     // 168: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActNsSamplers.QosActNsSampler.SampleType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_ActionType)(0),                                   // 169: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActPortMirrors.QosActPortMirror.ActionType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror_Enable)(0),                                       // 170: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActPortMirrors.QosActPortMirror.Enable
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ActionType)(0),                                           // 171: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrLsps.QosActRdrLsp.ActionType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_ConfigType)(0),                                           // 172: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrLsps.QosActRdrLsp.ConfigType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp_Secondary)(0),                                            // 173: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrLsps.QosActRdrLsp.Secondary
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_RdrType)(0),                                            // 174: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhp6S.QosActRdrMhp6.RdrType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_RdrType)(0),                                              // 175: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhps.QosActRdrMhp.RdrType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl_ActionType)(0),                                   // 176: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMldpTnls.QosActRdrMldpTnl.ActionType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6_RdrType)(0),                                            // 177: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhp6S.QosActRdrNhp6.RdrType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp_RdrType)(0),                                              // 178: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhps.QosActRdrNhp.RdrType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy_QosHierarchicalCar)(0),                             // 179: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrPolicys.QosActRdrPolicy.QosHierarchicalCar
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl_ActionType)(0),                                           // 180: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrTnls.QosActRdrTnl.ActionType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn_ActionType)(0),                                           // 181: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrVpns.QosActRdrVpn.ActionType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark_ActionType)(0),                                           // 182: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRemarks.QosActRemark.ActionType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ActionType)(0),                                           // 183: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.QosActSrvCls.ActionType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_Color)(0),                                                // 184: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.QosActSrvCls.Color
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_RemarkFlag)(0),                                           // 185: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.QosActSrvCls.RemarkFlag
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls_ServiceClass)(0),                                         // 186: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.QosActSrvCls.ServiceClass
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog_StatisticsType)(0),                                       // 187: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSysLogs.QosActSysLog.StatisticsType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_ActionType)(0),                                               // 188: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUrpfs.QosActUrpf.ActionType
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_AllowDefault)(0),                                             // 189: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUrpfs.QosActUrpf.AllowDefault
	(Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf_CheckType)(0),                                                // 190: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUrpfs.QosActUrpf.CheckType
	(Qos_QosCbQos_QosClassifiers_QosClassifier_Operator)(0),                                                                    // 191: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.Operator
	(Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny_ProtoFamily)(0),                                          // 192: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAnys.QosRuleAny.ProtoFamily
	(Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr_AddressType)(0),                                // 193: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleIPv6Addrs.QosRuleIPv6Addr.AddressType
	(Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac_MacType)(0),                                              // 194: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleMacs.QosRuleMac.MacType
	(Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_PriorityType)(0),                               // 195: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRulePrioritys.QosRulePriority.PriorityType
	(Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority_ServiceClass)(0),                               // 196: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRulePrioritys.QosRulePriority.ServiceClass
	(Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6_ProtoFamily)(0),                                    // 197: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleProto6S.QosRuleProto6.ProtoFamily
	(Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag_BitMatchType)(0),                                 // 198: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleTcpFlags.QosRuleTcpFlag.BitMatchType
	(Qos_QosCbQos_QosPolicys_QosPolicy_ShareMode)(0),                                                                           // 199: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.ShareMode
	(Qos_QosCbQos_QosPolicys_QosPolicy_StatFlag)(0),                                                                            // 200: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.StatFlag
	(Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_GroupType)(0),                                // 201: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodeNewModes.QosPolicyNodeNewMode.GroupType
	(Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode_StreamDirection)(0),                          // 202: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodeNewModes.QosPolicyNodeNewMode.StreamDirection
	(Qos_QosDss_QosDs_QosAppIfs_QosAppIf_Direction)(0),                                                                         // 203: huaweiV8R10_qos.Qos.QosDss.QosDs.QosAppIfs.QosAppIf.Direction
	(Qos_QosDss_QosDs_QosBas_QosBa_BaType)(0),                                                                                  // 204: huaweiV8R10_qos.Qos.QosDss.QosDs.QosBas.QosBa.BaType
	(Qos_QosDss_QosDs_QosBas_QosBa_Color)(0),                                                                                   // 205: huaweiV8R10_qos.Qos.QosDss.QosDs.QosBas.QosBa.Color
	(Qos_QosDss_QosDs_QosBas_QosBa_ServiceClass)(0),                                                                            // 206: huaweiV8R10_qos.Qos.QosDss.QosDs.QosBas.QosBa.ServiceClass
	(Qos_QosDss_QosDs_QosPhbs_QosPhb_Color)(0),                                                                                 // 207: huaweiV8R10_qos.Qos.QosDss.QosDs.QosPhbs.QosPhb.Color
	(Qos_QosDss_QosDs_QosPhbs_QosPhb_PhbType)(0),                                                                               // 208: huaweiV8R10_qos.Qos.QosDss.QosDs.QosPhbs.QosPhb.PhbType
	(Qos_QosDss_QosDs_QosPhbs_QosPhb_ServiceClass)(0),                                                                          // 209: huaweiV8R10_qos.Qos.QosDss.QosDs.QosPhbs.QosPhb.ServiceClass
	(Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpldirection)(0),                             // 210: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.Evpldirection
	(Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_Evpllayer)(0),                                 // 211: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.Evpllayer
	(Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust_TrustevplType)(0),                                         // 212: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanTrusts.QosEvplVxlanTrust.TrustevplType
	(Qos_QosGlobalPolicys_QosGlobalPolicy_Direction)(0),                                                                        // 213: huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.Direction
	(Qos_QosGlobalPolicys_QosGlobalPolicy_UclType)(0),                                                                          // 214: huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.UclType
	(Qos_QosGlobalQppbs_QosGlobalQppb_Value)(0),                                                                                // 215: huaweiV8R10_qos.Qos.QosGlobalQppbs.QosGlobalQppb.Value
	(Qos_QosHardPipeAbilitys_QosHardPipeAbility_Ability)(0),                                                                    // 216: huaweiV8R10_qos.Qos.QosHardPipeAbilitys.QosHardPipeAbility.Ability
	(Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_AnyOtherType)(0),                                          // 217: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QOSProBasInsCfgNodes.QOSProBasInsCfgNode.AnyOtherType
	(Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_Direction)(0),                                             // 218: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QOSProBasInsCfgNodes.QOSProBasInsCfgNode.Direction
	(Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode_IdentifyType)(0),                                          // 219: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QOSProBasInsCfgNodes.QOSProBasInsCfgNode.IdentifyType
	(Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd_Priority)(0),                                                                  // 220: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosCvgPcds.QosCvgPcd.Priority
	(Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir_Direction)(0),                                                             // 221: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefSQCirs.QosDefSQCir.Direction
	(Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass_ServiceClass)(0),                                    // 222: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefaultServiceClasss.QosDefaultServiceClass.ServiceClass
	(Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable_DeiEnable)(0),                                                           // 223: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDeiEnables.QosDeiEnable.DeiEnable
	(Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd_ModeType)(0),                                                              // 224: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomLnkAds.QosDomLnkAd.ModeType
	(Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool_Direction)(0),                                                         // 225: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomRespools.QosDomRespool.Direction
	(Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqDirection)(0),                                                                 // 226: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosGQApps.QosGQApp.GqDirection
	(Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp_GqIdentifier)(0),                                                                // 227: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosGQApps.QosGQApp.GqIdentifier
	(Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeMode)(0),                                                       // 228: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.QosHardPipe.QosHardPipeMode
	(Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat_Direction)(0),                            // 229: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.QosHardPipe.QosHardPipeStats.QosHardPipeStat.Direction
	(Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_Direction)(0),                                                         // 230: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIFGQStDisps.QosIFGQStDisp.Direction
	(Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp_ServicebdClass)(0),                                                    // 231: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIFGQStDisps.QosIFGQStDisp.ServicebdClass
	(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Direction)(0),                                                                   // 232: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.Direction
	(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenAction)(0),                                                                 // 233: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.GreenAction
	(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenColor)(0),                                                                  // 234: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.GreenColor
	(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_GreenServiceClass)(0),                                                           // 235: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.GreenServiceClass
	(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_Identifier)(0),                                                                  // 236: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.Identifier
	(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedAction)(0),                                                                   // 237: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.RedAction
	(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedColor)(0),                                                                    // 238: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.RedColor
	(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_RedServiceClass)(0),                                                             // 239: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.RedServiceClass
	(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowAction)(0),                                                                // 240: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.YellowAction
	(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowColor)(0),                                                                 // 241: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.YellowColor
	(Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_YellowServiceClass)(0),                                                          // 242: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.YellowServiceClass
	(Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_MapType)(0),                                                                     // 243: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfPhbs.QosIfPhb.MapType
	(Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb_OperateType)(0),                                                                 // 244: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfPhbs.QosIfPhb.OperateType
	(Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_LocalID)(0),                                                                   // 245: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.LocalID
	(Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Mode)(0),                                                                      // 246: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.Mode
	(Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_Value)(0),                                                                     // 247: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.Value
	(Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_DirectType)(0),                                                              // 248: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfTrusts.QosIfTrust.DirectType
	(Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust_TrustType)(0),                                                               // 249: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfTrusts.QosIfTrust.TrustType
	(Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic_Traffictype)(0),                                                       // 250: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLdpTraffics.QosLdpTraffic.Traffictype
	(Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw_Direction)(0),                                                       // 251: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLvHardPStVws.QosLvHardPStVw.Direction
	(Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_Mode)(0),                                                              // 252: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMemLinkSchs.QosMemLinkSch.Mode
	(Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch_QosType)(0),                                                           // 253: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMemLinkSchs.QosMemLinkSch.QosType
	(Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_DiscardType)(0),                                               // 254: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPQDiscardAlarms.QosPQDiscardAlarm.DiscardType
	(Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm_ServiceClass)(0),                                              // 255: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPQDiscardAlarms.QosPQDiscardAlarm.ServiceClass
	(Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Direction)(0),                                                       // 256: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.Direction
	(Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Identifier)(0),                                                      // 257: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.Identifier
	(Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_Layer)(0),                                                           // 258: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.Layer
	(Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat_ServiceClass)(0),                         // 259: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosActSQStats.QosActSQStat.ServiceClass
	(Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Direction)(0), // 260: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.QosPolicyStat.QosRuleStats.QosRuleStat.Direction
	(Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat_Protocol)(0),  // 261: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.QosPolicyStat.QosRuleStats.QosRuleStat.Protocol
	(Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm_ServiceClass)(0),                                              // 262: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueueAlarms.QosPortQueueAlarm.ServiceClass
	(Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_Lowlatency)(0),                                                          // 263: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.Lowlatency
	(Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QueueScheduleMode)(0),                                                   // 264: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.QueueScheduleMode
	(Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_ServiceClass)(0),                                                        // 265: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.ServiceClass
	(Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat_Isonboard)(0),                        // 266: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.QosPortQueueStats.QosPortQueueStat.Isonboard
	(Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping_ShapingType)(0),                                                     // 267: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortShapings.QosPortShaping.ShapingType
	(Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_Priority)(0),                                                              // 268: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.QosQosQueue.Priority
	(Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_ServiceClass)(0),                                                          // 269: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.QosQosQueue.ServiceClass
	(Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping_ServiceClass)(0),                                                            // 270: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosShapings.QosShaping.ServiceClass
	(Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch_ServicebdClasssch)(0),                                       // 271: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosSubportquStaschs.QosSubportquStasch.ServicebdClasssch
	(Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Direction)(0),                                                     // 272: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosUserVlanProfs.QosUserVlanProf.Direction
	(Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_Eachvlan)(0),                                                      // 273: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosUserVlanProfs.QosUserVlanProf.Eachvlan
	(Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf_VlanType)(0),                                                      // 274: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosUserVlanProfs.QosUserVlanProf.VlanType
	(Qos_QosIfQoss_QosIfQos_QosVllPipe_Color)(0),                                                                               // 275: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.Color
	(Qos_QosIfQoss_QosIfQos_QosVllPipe_EgPipeMode)(0),                                                                          // 276: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.EgPipeMode
	(Qos_QosIfQoss_QosIfQos_QosVllPipe_IngPipeMode)(0),                                                                         // 277: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.IngPipeMode
	(Qos_QosIfQoss_QosIfQos_QosVllPipe_PipeMode)(0),                                                                            // 278: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.PipeMode
	(Qos_QosIfQoss_QosIfQos_QosVllPipe_ServiceClass)(0),                                                                        // 279: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.ServiceClass
	(Qos_QosIfQoss_QosIfQos_QosVllPipe_TrustType)(0),                                                                           // 280: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.TrustType
	(Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping_Priority)(0),                                                          // 281: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosWfqShapings.QosWfqShaping.Priority
	(Qos_QosIfQppbCfgs_QosIfQppbCfg_Direction)(0),                                                                              // 282: huaweiV8R10_qos.Qos.QosIfQppbCfgs.QosIfQppbCfg.Direction
	(Qos_QosIfQppbCfgs_QosIfQppbCfg_State)(0),                                                                                  // 283: huaweiV8R10_qos.Qos.QosIfQppbCfgs.QosIfQppbCfg.State
	(Qos_QosInfUsers_QosInfUser_Direction)(0),                                                                                  // 284: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.Direction
	(Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR_ResType)(0),                                                       // 285: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserCARs.QosInfUserCAR.ResType
	(Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ_ServiceClass)(0),                                                    // 286: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserSQs.QosInfUserSQ.ServiceClass
	(Qos_QosLowLaEns_QosLowLaEn_EnableType)(0),                                                                                 // 287: huaweiV8R10_qos.Qos.QosLowLaEns.QosLowLaEn.EnableType
	(Qos_QosLowLaEns_QosLowLaEn_EnableValue)(0),                                                                                // 288: huaweiV8R10_qos.Qos.QosLowLaEns.QosLowLaEn.EnableValue
	(Qos_QosLsIfQoss_QosLsIfQos_IfPhyType)(0),                                                                                  // 289: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.IfPhyType
	(Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PirSetMode)(0),                                     // 290: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.QosLsPvcQueue.PirSetMode
	(Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueMode)(0),                                   // 291: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.QosLsPvcQueue.PvcQueueMode
	(Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_ServiceClass)(0),                                   // 292: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.QosLsPvcQueue.ServiceClass
	(Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_ServiceClass)(0),                                               // 293: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrafficQ.ServiceClass
	(Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQColor)(0),                                              // 294: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrafficQ.TrafficQColor
	(Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ_TrafficQMode)(0),                                               // 295: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrafficQ.TrafficQMode
	(Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp_DirectType)(0),                                 // 296: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrustUps.QosLsPvcTrustUp.DirectType
	(Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_ServiceClass)(0),                                               // 297: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrafficQ.ServiceClass
	(Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQColor)(0),                                              // 298: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrafficQ.TrafficQColor
	(Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ_TrafficQMode)(0),                                               // 299: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrafficQ.TrafficQMode
	(Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp_DirectType)(0),                                 // 300: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrustUps.QosLsPvpTrustUp.DirectType
	(Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_ServiceClass)(0),                                                              // 301: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsAtmTrafficQ.ServiceClass
	(Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQColor)(0),                                                             // 302: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsAtmTrafficQ.TrafficQColor
	(Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ_TrafficQMode)(0),                                                              // 303: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsAtmTrafficQ.TrafficQMode
	(Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_CirMode)(0),                                                     // 304: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.CirMode
	(Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_OperType)(0),                                                    // 305: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.OperType
	(Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_PirMode)(0),                                                     // 306: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.PirMode
	(Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ScheduleMode)(0),                                                // 307: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.ScheduleMode
	(Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_ServiceClass)(0),                                                // 308: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.ServiceClass
	(Qos_QosLsQosGlobalPara_QosLsPortQueueWeightSpec)(0),                                                                       // 309: huaweiV8R10_qos.Qos.QosLsQosGlobalPara.QosLsPortQueueWeightSpec
	(Qos_QosPQschedules_QosPQschedule_QosDirection)(0),                                                                         // 310: huaweiV8R10_qos.Qos.QosPQschedules.QosPQschedule.QosDirection
	(Qos_QosPQschedules_QosPQschedule_QosMode)(0),                                                                              // 311: huaweiV8R10_qos.Qos.QosPQschedules.QosPQschedule.QosMode
	(Qos_QosPackEnables_QosPackEnable_EnableType)(0),                                                                           // 312: huaweiV8R10_qos.Qos.QosPackEnables.QosPackEnable.EnableType
	(Qos_QosPortQueueStatInfos_QosPortQueueStatInfo_QueueType)(0),                                                              // 313: huaweiV8R10_qos.Qos.QosPortQueueStatInfos.QosPortQueueStatInfo.QueueType
	(Qos_QosRdrRouteFlts_QosRdrRouteFlt_IPFamily)(0),                                                                           // 314: huaweiV8R10_qos.Qos.QosRdrRouteFlts.QosRdrRouteFlt.IPFamily
	(Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass_ServiceClass)(0),                                  // 315: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteDefClasss.QosRemoteDefClass.ServiceClass
	(Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_DirectType)(0),                                      // 316: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteIfTrusts.QosRemoteIfTrust.DirectType
	(Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_OffLoad)(0),                                         // 317: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteIfTrusts.QosRemoteIfTrust.OffLoad
	(Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust_TrustType)(0),                                       // 318: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteIfTrusts.QosRemoteIfTrust.TrustType
	(Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_AlmType)(0),                                                                  // 319: huaweiV8R10_qos.Qos.QosSlotChannelAlarms.QosSlotChannelAlarm.AlmType
	(Qos_QosSlotChannelAlarms_QosSlotChannelAlarm_Pool)(0),                                                                     // 320: huaweiV8R10_qos.Qos.QosSlotChannelAlarms.QosSlotChannelAlarm.Pool
	(Qos_QosSlotChannelPres_QosSlotChannelPre_UpOrDown)(0),                                                                     // 321: huaweiV8R10_qos.Qos.QosSlotChannelPres.QosSlotChannelPre.UpOrDown
	(Qos_QosSlotCvgPcds_QosSlotCvgPcd_Cos)(0),                                                                                  // 322: huaweiV8R10_qos.Qos.QosSlotCvgPcds.QosSlotCvgPcd.Cos
	(Qos_QosSlotCvgPcds_QosSlotCvgPcd_Priority)(0),                                                                             // 323: huaweiV8R10_qos.Qos.QosSlotCvgPcds.QosSlotCvgPcd.Priority
	(Qos_QosSlotPQAlarms_QosSlotPQAlarm_ServiceClass)(0),                                                                       // 324: huaweiV8R10_qos.Qos.QosSlotPQAlarms.QosSlotPQAlarm.ServiceClass
	(Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_DiscardType)(0),                                                          // 325: huaweiV8R10_qos.Qos.QosSlotPQDiscardAlarms.QosSlotPQDiscardAlarm.DiscardType
	(Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm_ServiceClass)(0),                                                         // 326: huaweiV8R10_qos.Qos.QosSlotPQDiscardAlarms.QosSlotPQDiscardAlarm.ServiceClass
	(Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut_QosEnable)(0),                                   // 327: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosAccessBoardSchEnOuts.QosAccessBoardSchEnOut.QosEnable
	(Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ_DisableFlag)(0),                                                   // 328: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosDomCarToSQs.QosDomCarToSQ.DisableFlag
	(Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl_DisableFwdType)(0),                                              // 329: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosExpPhbDisbls.QosExpPhbDisbl.DisableFwdType
	(Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_Enable)(0),                                                // 330: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.Enable
	(Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_CosType)(0),            // 331: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.QosVOQStatisticss.QosVOQStatistics.CosType
	(Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics_VoqFlag)(0),            // 332: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.QosVOQStatisticss.QosVOQStatistics.VoqFlag
	(Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate_ServiceClass)(0),                                    // 333: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMcShapSrvTemplates.QosMcShapSrvTemplate.ServiceClass
	(Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper_Priority)(0),                                            // 334: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMulticastShapers.QosMulticastShaper.Priority
	(Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6_MatchMode)(0),                                           // 335: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchIpv6S.QosPolicyMatchIpv6.MatchMode
	(Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc_MatchMode)(0),                                               // 336: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMcs.QosPolicyMatchMc.MatchMode
	(Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_Direction)(0),                                           // 337: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSGlobalBufCfgs.QosQOSGlobalBufCfg.Direction
	(Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg_ServiceClass)(0),                                        // 338: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSGlobalBufCfgs.QosQOSGlobalBufCfg.ServiceClass
	(Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir_FqPirType)(0),                                                       // 339: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotFQPirs.QosSlotFQPir.FqPirType
	(Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QueueScheduleMode)(0),                                     // 340: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.QosSlotMcVpnQueue.QueueScheduleMode
	(Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_ServiceClass)(0),                                          // 341: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.QosSlotMcVpnQueue.ServiceClass
	(Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper_ShapingType)(0),                                         // 342: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnShapers.QosSlotMcVpnShaper.ShapingType
	(Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch_MatchType)(0),                                                 // 343: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotUclMatchs.QosSlotUclMatch.MatchType
	(Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig_Direction)(0),                           // 344: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueConfigs.QosSubPortQueueConfig.Direction
	(Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight_Direction)(0),                           // 345: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueWeights.QosSubPortQueueWeight.Direction
	(Qos_QosSystemViews_QosSystemView_ResType)(0),                                                                              // 346: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.ResType
	(Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_AccessType)(0),                                  // 347: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerExcludes.QosLinkLayerExclude.AccessType
	(Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude_ExcLayeType)(0),                                 // 348: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerExcludes.QosLinkLayerExclude.ExcLayeType
	(Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback_RedbackType)(0),                                 // 349: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerRedbacks.QosLinkLayerRedback.RedbackType
	(Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode_ModeType)(0),                                                    // 350: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosScheModes.QosScheMode.ModeType
	(Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable_ExcludeMode)(0),                                     // 351: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanCarDisables.QosVpnVxlanCarDisable.ExcludeMode
	(Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpndirection)(0),                                  // 352: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.Vpndirection
	(Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_Vpnlayer)(0),                                      // 353: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.Vpnlayer
	(Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust_TrustvpnType)(0),                                              // 354: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanTrusts.QosVpnVxlanTrust.TrustvpnType
	(Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor_Color)(0),                                                 // 355: huaweiV8R10_qos.Qos.QosWred.QosFlowWreds.QosFlowWred.QosWredColors.QosWredColor.Color
	(Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor_Color)(0),                                                 // 356: huaweiV8R10_qos.Qos.QosWred.QosPortWreds.QosPortWred.QosWredColors.QosWredColor.Color
	(Qos_QosWred_QosWredQueues_QosWredQueue_ServiceClass)(0),                                                                   // 357: huaweiV8R10_qos.Qos.QosWred.QosWredQueues.QosWredQueue.ServiceClass
	(Qos_QosWred_QosWredQueues_QosWredQueue_SpeedType)(0),                                                                      // 358: huaweiV8R10_qos.Qos.QosWred.QosWredQueues.QosWredQueue.SpeedType
	(Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor_Color)(0),                                                         // 359: huaweiV8R10_qos.Qos.QosWred.QosWreds.QosWred.QosWredColors.QosWredColor.Color
	(*QosResetATMPvcQueueRequest)(nil),                                                                                         // 360: huaweiV8R10_qos.QosResetATMPvcQueueRequest
	(*QosResetBdPolicyApplyRequest)(nil),                                                                                       // 361: huaweiV8R10_qos.QosResetBdPolicyApplyRequest
	(*QosResetBdVxlanPolicyApplyRequest)(nil),                                                                                  // 362: huaweiV8R10_qos.QosResetBdVxlanPolicyApplyRequest
	(*QosResetEvplVxlanPolicyApplyRequest)(nil),                                                                                // 363: huaweiV8R10_qos.QosResetEvplVxlanPolicyApplyRequest
	(*QosResetGlobalPolicyRequest)(nil),                                                                                        // 364: huaweiV8R10_qos.QosResetGlobalPolicyRequest
	(*QosResetHardPipeRequest)(nil),                                                                                            // 365: huaweiV8R10_qos.QosResetHardPipeRequest
	(*QosResetIFGQStRequest)(nil),                                                                                              // 366: huaweiV8R10_qos.QosResetIFGQStRequest
	(*QosResetIfCarRequest)(nil),                                                                                               // 367: huaweiV8R10_qos.QosResetIfCarRequest
	(*QosResetIfGQRequest)(nil),                                                                                                // 368: huaweiV8R10_qos.QosResetIfGQRequest
	(*QosResetIfQppbRequest)(nil),                                                                                              // 369: huaweiV8R10_qos.QosResetIfQppbRequest
	(*QosResetIfSQRequest)(nil),                                                                                                // 370: huaweiV8R10_qos.QosResetIfSQRequest
	(*QosResetLsPortQueueRequest)(nil),                                                                                         // 371: huaweiV8R10_qos.QosResetLsPortQueueRequest
	(*QosResetLvHardPipeRequest)(nil),                                                                                          // 372: huaweiV8R10_qos.QosResetLvHardPipeRequest
	(*QosResetPolicyApplyRequest)(nil),                                                                                         // 373: huaweiV8R10_qos.QosResetPolicyApplyRequest
	(*QosResetPortQueueRequest)(nil),                                                                                           // 374: huaweiV8R10_qos.QosResetPortQueueRequest
	(*QosResetProUStRequest)(nil),                                                                                              // 375: huaweiV8R10_qos.QosResetProUStRequest
	(*QosResetProfileRequest)(nil),                                                                                             // 376: huaweiV8R10_qos.QosResetProfileRequest
	(*QosResetSlotPortQueueRequest)(nil),                                                                                       // 377: huaweiV8R10_qos.QosResetSlotPortQueueRequest
	(*QosResetSlotVOQStRequest)(nil),                                                                                           // 378: huaweiV8R10_qos.QosResetSlotVOQStRequest
	(*QosResetSubPortQStRequest)(nil),                                                                                          // 379: huaweiV8R10_qos.QosResetSubPortQStRequest
	(*QosResetVniGQRequest)(nil),                                                                                               // 380: huaweiV8R10_qos.QosResetVniGQRequest
	(*QosResetVpnVxlanPolicyApplyRequest)(nil),                                                                                 // 381: huaweiV8R10_qos.QosResetVpnVxlanPolicyApplyRequest
	(*Empty)(nil),                                                  // 382: huaweiV8R10_qos.Empty
	(*Qos)(nil),                                                    // 383: huaweiV8R10_qos.Qos
	(*HwXQoSPortQueueAlarm)(nil),                                   // 384: huaweiV8R10_qos.HwXQoSPortQueueAlarm
	(*HwXQoSPortQueueAlarmClear)(nil),                              // 385: huaweiV8R10_qos.HwXQoSPortQueueAlarmClear
	(*Qos_Hqos)(nil),                                               // 386: huaweiV8R10_qos.Qos.Hqos
	(*Qos_QosAclLogParaCfs)(nil),                                   // 387: huaweiV8R10_qos.Qos.QosAclLogParaCfs
	(*Qos_QosBDQoss)(nil),                                          // 388: huaweiV8R10_qos.Qos.QosBDQoss
	(*Qos_QosBaHosts)(nil),                                         // 389: huaweiV8R10_qos.Qos.QosBaHosts
	(*Qos_QosBuffers)(nil),                                         // 390: huaweiV8R10_qos.Qos.QosBuffers
	(*Qos_QosCbQos)(nil),                                           // 391: huaweiV8R10_qos.Qos.QosCbQos
	(*Qos_QosChannelProfileTmps)(nil),                              // 392: huaweiV8R10_qos.Qos.QosChannelProfileTmps
	(*Qos_QosDss)(nil),                                             // 393: huaweiV8R10_qos.Qos.QosDss
	(*Qos_QosEVPLQoss)(nil),                                        // 394: huaweiV8R10_qos.Qos.QosEVPLQoss
	(*Qos_QosGlobalPolicys)(nil),                                   // 395: huaweiV8R10_qos.Qos.QosGlobalPolicys
	(*Qos_QosGlobalQppbs)(nil),                                     // 396: huaweiV8R10_qos.Qos.QosGlobalQppbs
	(*Qos_QosHardPipeAbilitys)(nil),                                // 397: huaweiV8R10_qos.Qos.QosHardPipeAbilitys
	(*Qos_QosIfQoss)(nil),                                          // 398: huaweiV8R10_qos.Qos.QosIfQoss
	(*Qos_QosIfQppbCfgs)(nil),                                      // 399: huaweiV8R10_qos.Qos.QosIfQppbCfgs
	(*Qos_QosInfUsers)(nil),                                        // 400: huaweiV8R10_qos.Qos.QosInfUsers
	(*Qos_QosLowLaEns)(nil),                                        // 401: huaweiV8R10_qos.Qos.QosLowLaEns
	(*Qos_QosLsIfQoss)(nil),                                        // 402: huaweiV8R10_qos.Qos.QosLsIfQoss
	(*Qos_QosLsQosGlobalPara)(nil),                                 // 403: huaweiV8R10_qos.Qos.QosLsQosGlobalPara
	(*Qos_QosPQschedules)(nil),                                     // 404: huaweiV8R10_qos.Qos.QosPQschedules
	(*Qos_QosPackEnables)(nil),                                     // 405: huaweiV8R10_qos.Qos.QosPackEnables
	(*Qos_QosPirPrecisions)(nil),                                   // 406: huaweiV8R10_qos.Qos.QosPirPrecisions
	(*Qos_QosPolicyMatchIpOnlys)(nil),                              // 407: huaweiV8R10_qos.Qos.QosPolicyMatchIpOnlys
	(*Qos_QosPortQueueStatInfos)(nil),                              // 408: huaweiV8R10_qos.Qos.QosPortQueueStatInfos
	(*Qos_QosQppbPolicys)(nil),                                     // 409: huaweiV8R10_qos.Qos.QosQppbPolicys
	(*Qos_QosRdrRouteFlts)(nil),                                    // 410: huaweiV8R10_qos.Qos.QosRdrRouteFlts
	(*Qos_QosRemoteIfQoss)(nil),                                    // 411: huaweiV8R10_qos.Qos.QosRemoteIfQoss
	(*Qos_QosSlotChannelAlarms)(nil),                               // 412: huaweiV8R10_qos.Qos.QosSlotChannelAlarms
	(*Qos_QosSlotChannelPres)(nil),                                 // 413: huaweiV8R10_qos.Qos.QosSlotChannelPres
	(*Qos_QosSlotChannelProfileApps)(nil),                          // 414: huaweiV8R10_qos.Qos.QosSlotChannelProfileApps
	(*Qos_QosSlotCvgPcds)(nil),                                     // 415: huaweiV8R10_qos.Qos.QosSlotCvgPcds
	(*Qos_QosSlotPQAlarms)(nil),                                    // 416: huaweiV8R10_qos.Qos.QosSlotPQAlarms
	(*Qos_QosSlotPQDiscardAlarms)(nil),                             // 417: huaweiV8R10_qos.Qos.QosSlotPQDiscardAlarms
	(*Qos_QosSlotQoss)(nil),                                        // 418: huaweiV8R10_qos.Qos.QosSlotQoss
	(*Qos_QosSubPortQueues)(nil),                                   // 419: huaweiV8R10_qos.Qos.QosSubPortQueues
	(*Qos_QosSystemViews)(nil),                                     // 420: huaweiV8R10_qos.Qos.QosSystemViews
	(*Qos_QosVPNQoss)(nil),                                         // 421: huaweiV8R10_qos.Qos.QosVPNQoss
	(*Qos_QosWred)(nil),                                            // 422: huaweiV8R10_qos.Qos.QosWred
	(*Qos_Hqos_HqosFlowMappings)(nil),                              // 423: huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings
	(*Qos_Hqos_HqosFlowQueues)(nil),                                // 424: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues
	(*Qos_Hqos_HqosFourFlowMappings)(nil),                          // 425: huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings
	(*Qos_Hqos_HqosIFUserQueues)(nil),                              // 426: huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues
	(*Qos_Hqos_HqosPortQTempApplys)(nil),                           // 427: huaweiV8R10_qos.Qos.Hqos.HqosPortQTempApplys
	(*Qos_Hqos_HqosPortQTemps)(nil),                                // 428: huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps
	(*Qos_Hqos_HqosProfileApplys)(nil),                             // 429: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys
	(*Qos_Hqos_HqosProfiles)(nil),                                  // 430: huaweiV8R10_qos.Qos.Hqos.HqosProfiles
	(*Qos_Hqos_HqosServiceTemplates)(nil),                          // 431: huaweiV8R10_qos.Qos.Hqos.HqosServiceTemplates
	(*Qos_Hqos_HqosUserGroupQueues)(nil),                           // 432: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues
	(*Qos_Hqos_HqosVNIQOSProAppNodes)(nil),                         // 433: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes
	(*Qos_Hqos_HqosFlowMappings_HqosFlowMapping)(nil),              // 434: huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.HqosFlowMapping
	(*Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams)(nil), // 435: huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.HqosFlowMapping.HqosFMParams
	(*Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam)(nil),                                                                                                // 436: huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.HqosFlowMapping.HqosFMParams.HqosFMParam
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue)(nil),                                                                                                                             // 437: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes)(nil),                                                                                                   // 438: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityScheduleModes
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings)(nil),                                                                                                   // 439: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss)(nil),                                                                                                              // 440: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueue4Coss
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys)(nil),                                                                                                          // 441: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueuePrioritys
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues)(nil),                                                                                                                  // 442: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds)(nil),                                                                                                               // 443: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosRdmDscrds
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs)(nil),                                                                                                           // 444: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms)(nil),                                                                                                          // 445: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes)(nil),                                                                                                             // 446: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode)(nil),                                                                          // 447: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityScheduleModes.HqosPriorityScheduleMode
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping)(nil),                                                                          // 448: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos)(nil),                                                                                                // 449: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueue4Coss.HqosQueue4Cos
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority)(nil),                                                                                        // 450: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueuePrioritys.HqosQueuePriority
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue)(nil),                                                                                                        // 451: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.HqosQueue
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd)(nil),                                                                                                  // 452: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosRdmDscrds.HqosRdmDscrd
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID)(nil),                                                                                          // 453: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm)(nil),                                                                                        // 454: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm
	(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape)(nil),                                                                                              // 455: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape
	(*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping)(nil),                                                                                                                 // 456: huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.HqosFourFlowMapping
	(*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams)(nil),                                                                                                // 457: huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.HqosFourFlowMapping.HqosFourFMParams
	(*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam)(nil),                                                                                // 458: huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.HqosFourFlowMapping.HqosFourFMParams.HqosFourFMParam
	(*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue)(nil),                                                                                                                         // 459: huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.HqosIFUserQueue
	(*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats)(nil),                                                                                                    // 460: huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.HqosIFUserQueue.HqosIFUserQueueStats
	(*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat)(nil),                                                                                // 461: huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.HqosIFUserQueue.HqosIFUserQueueStats.HqosIFUserQueueStat
	(*Qos_Hqos_HqosPortQTempApplys_HqosPortQTempApply)(nil),                                                                                                                   // 462: huaweiV8R10_qos.Qos.Hqos.HqosPortQTempApplys.HqosPortQTempApply
	(*Qos_Hqos_HqosPortQTemps_HqosPortQTemp)(nil),                                                                                                                             // 463: huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp
	(*Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas)(nil),                                                                                                              // 464: huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.HqosPortQParas
	(*Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara)(nil),                                                                                                // 465: huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.HqosPortQParas.HqosPortQPara
	(*Qos_Hqos_HqosProfileApplys_HqosProfileApply)(nil),                                                                                                                       // 466: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply
	(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats)(nil),                                                                                                           // 467: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosGqStats
	(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats)(nil),                                                                                                   // 468: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileCarStats
	(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats)(nil),                                                                                                      // 469: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileStats
	(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats)(nil),                                                                                                   // 470: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosShareShapeStats
	(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat)(nil),                                                                                                // 471: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosGqStats.HqosGqStat
	(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat)(nil),                                                                                // 472: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileCarStats.HqosProfileCarStat
	(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat)(nil),                                                                                      // 473: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileStats.HqosProfileStat
	(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat)(nil),                                                                                // 474: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosShareShapeStats.HqosShareShapeStat
	(*Qos_Hqos_HqosProfiles_HqosProfile)(nil),                                                                                                                                 // 475: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile
	(*Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss)(nil),                                                                                                                   // 476: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosMplsHqoss
	(*Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars)(nil),                                                                                                                     // 477: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars
	(*Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs)(nil),                                                                                                                 // 478: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProTmpDescs
	(*Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights)(nil),                                                                                                                   // 479: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosSQWeights
	(*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges)(nil),                                                                                                         // 480: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueueTimeRanges
	(*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues)(nil),                                                                                                                  // 481: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueues
	(*Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos)(nil),                                                                                                      // 482: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosMplsHqoss.HqosMplsHqos
	(*Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar)(nil),                                                                                                          // 483: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar
	(*Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs_HqosProTmpDesc)(nil),                                                                                                  // 484: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProTmpDescs.HqosProTmpDesc
	(*Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight)(nil),                                                                                                      // 485: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosSQWeights.HqosSQWeight
	(*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange)(nil),                                                                                  // 486: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueueTimeRanges.HqosUserQueueTimeRange
	(*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue)(nil),                                                                                                    // 487: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueues.HqosUserQueue
	(*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate)(nil),                                                                                                                 // 488: huaweiV8R10_qos.Qos.Hqos.HqosServiceTemplates.HqosServiceTemplate
	(*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths)(nil),                                                                                                  // 489: huaweiV8R10_qos.Qos.Hqos.HqosServiceTemplates.HqosServiceTemplate.HqosSrvLengths
	(*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength)(nil),                                                                                    // 490: huaweiV8R10_qos.Qos.Hqos.HqosServiceTemplates.HqosServiceTemplate.HqosSrvLengths.HqosSrvLength
	(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue)(nil),                                                                                                                   // 491: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue
	(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs)(nil),                                                                                                     // 492: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQCirPirs
	(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes)(nil),                                                                                                       // 493: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQModes
	(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys)(nil),                                                                                             // 494: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapingpriortys
	(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings)(nil),                                                                                                    // 495: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapings
	(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats)(nil),                                                                                                       // 496: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQStats
	(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights)(nil),                                                                                                       // 497: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosWeights
	(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir)(nil),                                                                                        // 498: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQCirPirs.HqosGQCirPir
	(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode)(nil),                                                                                            // 499: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQModes.HqosGQMode
	(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty)(nil),                                                                        // 500: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapingpriortys.HqosGQShapingpriorty
	(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping)(nil),                                                                                      // 501: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapings.HqosGQShaping
	(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat)(nil),                                                                                            // 502: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQStats.HqosGQStat
	(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight)(nil),                                                                                            // 503: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosWeights.HqosWeight
	(*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode)(nil),                                                                                                               // 504: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode
	(*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats)(nil),                                                                                        // 505: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniCarStats
	(*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats)(nil),                                                                                           // 506: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniStats
	(*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat)(nil),                                                                  // 507: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniCarStats.HqosProfileVniCarStat
	(*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat)(nil),                                                                        // 508: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniStats.HqosProfileVniStat
	(*Qos_QosAclLogParaCfs_QosAclLogParaCf)(nil),                                                                                                                              // 509: huaweiV8R10_qos.Qos.QosAclLogParaCfs.QosAclLogParaCf
	(*Qos_QosBDQoss_QosBDQos)(nil),                                                                                                                                            // 510: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos
	(*Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss)(nil),                                                                                                                  // 511: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdDefaultServiceClasss
	(*Qos_QosBDQoss_QosBDQos_QosBdPhbs)(nil),                                                                                                                                  // 512: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPhbs
	(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys)(nil),                                                                                                                          // 513: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys
	(*Qos_QosBDQoss_QosBDQos_QosBdTrusts)(nil),                                                                                                                                // 514: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdTrusts
	(*Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables)(nil),                                                                                                                      // 515: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanCarDisables
	(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs)(nil),                                                                                                                             // 516: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPhbs
	(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys)(nil),                                                                                                                     // 517: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys
	(*Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts)(nil),                                                                                                                           // 518: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanTrusts
	(*Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass)(nil),                                                                                         // 519: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdDefaultServiceClasss.QosBdDefaultServiceClass
	(*Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb)(nil),                                                                                                                         // 520: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPhbs.QosBdPhb
	(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply)(nil),                                                                                                         // 521: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply
	(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats)(nil),                                                                                         // 522: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdActSqStats
	(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats)(nil),                                                                                        // 523: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdPolicyStats
	(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat)(nil),                                                                          // 524: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdActSqStats.QosBdActSqStat
	(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat)(nil),                                                                        // 525: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdPolicyStats.QosBdPolicyStat
	(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats)(nil),                                                   // 526: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdPolicyStats.QosBdPolicyStat.QosBdClassifierStats
	(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat)(nil),                               // 527: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdPolicyStats.QosBdPolicyStat.QosBdClassifierStats.QosBdClassifierStat
	(*Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust)(nil),                                                                                                                     // 528: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdTrusts.QosBdTrust
	(*Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable)(nil),                                                                                                 // 529: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanCarDisables.QosBdVxlanCarDisable
	(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs_QosBdVxlanPhb)(nil),                                                                                                               // 530: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPhbs.QosBdVxlanPhb
	(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply)(nil),                                                                                               // 531: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply
	(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats)(nil),                                                                         // 532: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.QosBdVxlanPolicyStats
	(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat)(nil),                                                    // 533: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.QosBdVxlanPolicyStats.QosBdVxlanPolicyStat
	(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats)(nil),                          // 534: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.QosBdVxlanPolicyStats.QosBdVxlanPolicyStat.QosBdVxlanClassifierStats
	(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat)(nil), // 535: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.QosBdVxlanPolicyStats.QosBdVxlanPolicyStat.QosBdVxlanClassifierStats.QosBdVxlanClassifierStat
	(*Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust)(nil),                                                                                                           // 536: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanTrusts.QosBdVxlanTrust
	(*Qos_QosBaHosts_QosBaHost)(nil),                                                                                                                                          // 537: huaweiV8R10_qos.Qos.QosBaHosts.QosBaHost
	(*Qos_QosBuffers_QosBuffer)(nil),                                                                                                                                          // 538: huaweiV8R10_qos.Qos.QosBuffers.QosBuffer
	(*Qos_QosCbQos_QosBehaviors)(nil),                                                                                                                                         // 539: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors
	(*Qos_QosCbQos_QosClassifiers)(nil),                                                                                                                                       // 540: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers
	(*Qos_QosCbQos_QosMqcStatistics)(nil),                                                                                                                                     // 541: huaweiV8R10_qos.Qos.QosCbQos.QosMqcStatistics
	(*Qos_QosCbQos_QosPolicys)(nil),                                                                                                                                           // 542: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys
	(*Qos_QosCbQos_QosVpnGroups)(nil),                                                                                                                                         // 543: huaweiV8R10_qos.Qos.QosCbQos.QosVpnGroups
	(*Qos_QosCbQos_QosBehaviors_QosBehavior)(nil),                                                                                                                             // 544: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs)(nil),                                                                                                               // 545: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActAclLogs
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss)(nil),                                                                                                               // 546: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars)(nil),                                                                                                                  // 547: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters)(nil),                                                                                                               // 548: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActFilters
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris)(nil),                                                                                                               // 549: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActIncPris
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres)(nil),                                                                                                             // 550: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads)(nil),                                                                                                                 // 551: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActLoads
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars)(nil),                                                                                                               // 552: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActMirCars
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers)(nil),                                                                                                            // 553: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActNsSamplers
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors)(nil),                                                                                                           // 554: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActPortMirrors
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps)(nil),                                                                                                               // 555: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrLsps
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S)(nil),                                                                                                              // 556: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhp6S
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps)(nil),                                                                                                               // 557: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhps
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls)(nil),                                                                                                           // 558: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMldpTnls
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S)(nil),                                                                                                              // 559: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhp6S
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps)(nil),                                                                                                               // 560: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhps
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys)(nil),                                                                                                            // 561: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrPolicys
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls)(nil),                                                                                                               // 562: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrTnls
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns)(nil),                                                                                                               // 563: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrVpns
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks)(nil),                                                                                                               // 564: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRemarks
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss)(nil),                                                                                                               // 565: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs)(nil),                                                                                                               // 566: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSysLogs
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs)(nil),                                                                                                                 // 567: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUrpfs
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues)(nil),                                                                                                            // 568: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUserQueues
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog)(nil),                                                                                                  // 569: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActAclLogs.QosActAclLog
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps)(nil),                                                                                                  // 570: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar)(nil),                                                                                                        // 571: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter)(nil),                                                                                                  // 572: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActFilters.QosActFilter
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri)(nil),                                                                                                  // 573: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActIncPris.QosActIncPri
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre)(nil),                                                                                              // 574: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad)(nil),                                                                                                      // 575: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActLoads.QosActLoad
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar)(nil),                                                                                                  // 576: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActMirCars.QosActMirCar
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler)(nil),                                                                                            // 577: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActNsSamplers.QosActNsSampler
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror)(nil),                                                                                          // 578: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActPortMirrors.QosActPortMirror
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp)(nil),                                                                                                  // 579: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrLsps.QosActRdrLsp
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6)(nil),                                                                                                // 580: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhp6S.QosActRdrMhp6
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S)(nil),                                                                                    // 581: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhp6S.QosActRdrMhp6.QosRdrNhp6S
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6)(nil),                                                                         // 582: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhp6S.QosActRdrMhp6.QosRdrNhp6S.QosRdrNhp6
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp)(nil),                                                                                                  // 583: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhps.QosActRdrMhp
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps)(nil),                                                                                       // 584: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhps.QosActRdrMhp.QosRdrNhps
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp)(nil),                                                                             // 585: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhps.QosActRdrMhp.QosRdrNhps.QosRdrNhp
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl)(nil),                                                                                          // 586: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMldpTnls.QosActRdrMldpTnl
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6)(nil),                                                                                                // 587: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhp6S.QosActRdrNhp6
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp)(nil),                                                                                                  // 588: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhps.QosActRdrNhp
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy)(nil),                                                                                            // 589: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrPolicys.QosActRdrPolicy
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl)(nil),                                                                                                  // 590: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrTnls.QosActRdrTnl
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn)(nil),                                                                                                  // 591: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrVpns.QosActRdrVpn
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark)(nil),                                                                                                  // 592: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRemarks.QosActRemark
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls)(nil),                                                                                                  // 593: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.QosActSrvCls
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog)(nil),                                                                                                  // 594: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSysLogs.QosActSysLog
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf)(nil),                                                                                                      // 595: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUrpfs.QosActUrpf
	(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue)(nil),                                                                                            // 596: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUserQueues.QosActUserQueue
	(*Qos_QosCbQos_QosClassifiers_QosClassifier)(nil),                                                                                                                         // 597: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S)(nil),                                                                                                            // 598: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosLocalID6S
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs)(nil),                                                                                                             // 599: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosLocalIDs
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S)(nil),                                                                                                            // 600: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAcl6S
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls)(nil),                                                                                                             // 601: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAcls
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys)(nil),                                                                                                             // 602: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAnys
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs)(nil),                                                                                                        // 603: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleIPv6Addrs
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs)(nil),                                                                                                             // 604: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleMacs
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys)(nil),                                                                                                        // 605: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRulePrioritys
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S)(nil),                                                                                                          // 606: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleProto6S
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags)(nil),                                                                                                         // 607: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleTcpFlags
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S_QosLocalID6)(nil),                                                                                                // 608: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosLocalID6S.QosLocalID6
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs_QosLocalID)(nil),                                                                                                  // 609: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosLocalIDs.QosLocalID
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S_QosRuleAcl6)(nil),                                                                                                // 610: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAcl6S.QosRuleAcl6
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls_QosRuleAcl)(nil),                                                                                                  // 611: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAcls.QosRuleAcl
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny)(nil),                                                                                                  // 612: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAnys.QosRuleAny
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr)(nil),                                                                                        // 613: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleIPv6Addrs.QosRuleIPv6Addr
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac)(nil),                                                                                                  // 614: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleMacs.QosRuleMac
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority)(nil),                                                                                        // 615: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRulePrioritys.QosRulePriority
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6)(nil),                                                                                            // 616: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleProto6S.QosRuleProto6
	(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag)(nil),                                                                                          // 617: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleTcpFlags.QosRuleTcpFlag
	(*Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic)(nil),                                                                                                                     // 618: huaweiV8R10_qos.Qos.QosCbQos.QosMqcStatistics.QosMqcStatistic
	(*Qos_QosCbQos_QosPolicys_QosPolicy)(nil),                                                                                                                                 // 619: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy
	(*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes)(nil),                                                                                                           // 620: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodeNewModes
	(*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes)(nil),                                                                                                                  // 621: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodes
	(*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns)(nil),                                                                                                                 // 622: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.V6QosLocalIDEns
	(*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns)(nil),                                                                                                                     // 623: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.V6QosVniEns
	(*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode)(nil),                                                                                      // 624: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodeNewModes.QosPolicyNodeNewMode
	(*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode)(nil),                                                                                                    // 625: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodes.QosPolicyNode
	(*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns_V6QosLocalIDEn)(nil),                                                                                                  // 626: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.V6QosLocalIDEns.V6QosLocalIDEn
	(*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns_V6QosVniEn)(nil),                                                                                                          // 627: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.V6QosVniEns.V6QosVniEn
	(*Qos_QosCbQos_QosVpnGroups_QosVpnGroup)(nil),                                                                                                                             // 628: huaweiV8R10_qos.Qos.QosCbQos.QosVpnGroups.QosVpnGroup
	(*Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances)(nil),                                                                                                             // 629: huaweiV8R10_qos.Qos.QosCbQos.QosVpnGroups.QosVpnGroup.QosVpnInstances
	(*Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances_QosVpnInstance)(nil),                                                                                              // 630: huaweiV8R10_qos.Qos.QosCbQos.QosVpnGroups.QosVpnGroup.QosVpnInstances.QosVpnInstance
	(*Qos_QosChannelProfileTmps_QosChannelProfileTmp)(nil),                                                                                                                    // 631: huaweiV8R10_qos.Qos.QosChannelProfileTmps.QosChannelProfileTmp
	(*Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs)(nil),                                                                                              // 632: huaweiV8R10_qos.Qos.QosChannelProfileTmps.QosChannelProfileTmp.QosChannelProfileCfgs
	(*Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg)(nil),                                                                         // 633: huaweiV8R10_qos.Qos.QosChannelProfileTmps.QosChannelProfileTmp.QosChannelProfileCfgs.QosChannelProfileCfg
	(*Qos_QosDss_QosDs)(nil),                                                            // 634: huaweiV8R10_qos.Qos.QosDss.QosDs
	(*Qos_QosDss_QosDs_QosAppIfs)(nil),                                                  // 635: huaweiV8R10_qos.Qos.QosDss.QosDs.QosAppIfs
	(*Qos_QosDss_QosDs_QosBas)(nil),                                                     // 636: huaweiV8R10_qos.Qos.QosDss.QosDs.QosBas
	(*Qos_QosDss_QosDs_QosPhbs)(nil),                                                    // 637: huaweiV8R10_qos.Qos.QosDss.QosDs.QosPhbs
	(*Qos_QosDss_QosDs_QosAppIfs_QosAppIf)(nil),                                         // 638: huaweiV8R10_qos.Qos.QosDss.QosDs.QosAppIfs.QosAppIf
	(*Qos_QosDss_QosDs_QosBas_QosBa)(nil),                                               // 639: huaweiV8R10_qos.Qos.QosDss.QosDs.QosBas.QosBa
	(*Qos_QosDss_QosDs_QosPhbs_QosPhb)(nil),                                             // 640: huaweiV8R10_qos.Qos.QosDss.QosDs.QosPhbs.QosPhb
	(*Qos_QosEVPLQoss_QosEVPLQos)(nil),                                                  // 641: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos
	(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs)(nil),                                 // 642: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPhbs
	(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys)(nil),                         // 643: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys
	(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts)(nil),                               // 644: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanTrusts
	(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs_QosEvplVxlanPhb)(nil),                 // 645: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPhbs.QosEvplVxlanPhb
	(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply)(nil), // 646: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply
	(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats)(nil),                                                                               // 647: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.QosEvplVxlanPolicyStats
	(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat)(nil),                                                        // 648: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.QosEvplVxlanPolicyStats.QosEvplVxlanPolicyStat
	(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats)(nil),                            // 649: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.QosEvplVxlanPolicyStats.QosEvplVxlanPolicyStat.QosEvplVxlanClassifierStats
	(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat)(nil), // 650: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.QosEvplVxlanPolicyStats.QosEvplVxlanPolicyStat.QosEvplVxlanClassifierStats.QosEvplVxlanClassifierStat
	(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust)(nil),                                                                                                                   // 651: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanTrusts.QosEvplVxlanTrust
	(*Qos_QosGlobalPolicys_QosGlobalPolicy)(nil),                                                                                 // 652: huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy
	(*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats)(nil),                                                                 // 653: huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.QosGPolicyStats
	(*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat)(nil),                                                  // 654: huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.QosGPolicyStats.QosGPolicyStat
	(*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats)(nil),                              // 655: huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.QosGPolicyStats.QosGPolicyStat.QosGClassifierStats
	(*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat)(nil),           // 656: huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.QosGPolicyStats.QosGPolicyStat.QosGClassifierStats.QosGClassifierStat
	(*Qos_QosGlobalQppbs_QosGlobalQppb)(nil),                                                                                     // 657: huaweiV8R10_qos.Qos.QosGlobalQppbs.QosGlobalQppb
	(*Qos_QosHardPipeAbilitys_QosHardPipeAbility)(nil),                                                                           // 658: huaweiV8R10_qos.Qos.QosHardPipeAbilitys.QosHardPipeAbility
	(*Qos_QosIfQoss_QosIfQos)(nil),                                                                                               // 659: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos
	(*Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes)(nil),                                                                          // 660: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QOSProBasInsCfgNodes
	(*Qos_QosIfQoss_QosIfQos_QosCvgPcds)(nil),                                                                                    // 661: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosCvgPcds
	(*Qos_QosIfQoss_QosIfQos_QosDefSQCirs)(nil),                                                                                  // 662: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefSQCirs
	(*Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss)(nil),                                                                       // 663: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefaultServiceClasss
	(*Qos_QosIfQoss_QosIfQos_QosDeiEnables)(nil),                                                                                 // 664: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDeiEnables
	(*Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs)(nil),                                                                                 // 665: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomLnkAdjs
	(*Qos_QosIfQoss_QosIfQos_QosDomLnkAds)(nil),                                                                                  // 666: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomLnkAds
	(*Qos_QosIfQoss_QosIfQos_QosDomRespools)(nil),                                                                                // 667: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomRespools
	(*Qos_QosIfQoss_QosIfQos_QosGQApps)(nil),                                                                                     // 668: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosGQApps
	(*Qos_QosIfQoss_QosIfQos_QosHardPipes)(nil),                                                                                  // 669: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes
	(*Qos_QosIfQoss_QosIfQos_QosIFGQStDisps)(nil),                                                                                // 670: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIFGQStDisps
	(*Qos_QosIfQoss_QosIfQos_QosIfCars)(nil),                                                                                     // 671: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars
	(*Qos_QosIfQoss_QosIfQos_QosIfPhbs)(nil),                                                                                     // 672: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfPhbs
	(*Qos_QosIfQoss_QosIfQos_QosIfQppbs)(nil),                                                                                    // 673: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs
	(*Qos_QosIfQoss_QosIfQos_QosIfTrusts)(nil),                                                                                   // 674: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfTrusts
	(*Qos_QosIfQoss_QosIfQos_QosLdpTraffics)(nil),                                                                                // 675: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLdpTraffics
	(*Qos_QosIfQoss_QosIfQos_QosLrs)(nil),                                                                                        // 676: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLrs
	(*Qos_QosIfQoss_QosIfQos_QosLvHardPStVws)(nil),                                                                               // 677: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLvHardPStVws
	(*Qos_QosIfQoss_QosIfQos_QosMemLinkSchs)(nil),                                                                                // 678: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMemLinkSchs
	(*Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs)(nil),                                                                                  // 679: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMplsL2Vcs
	(*Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms)(nil),                                                                            // 680: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPQDiscardAlarms
	(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys)(nil),                                                                               // 681: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys
	(*Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms)(nil),                                                                            // 682: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueueAlarms
	(*Qos_QosIfQoss_QosIfQos_QosPortQueues)(nil),                                                                                 // 683: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues
	(*Qos_QosIfQoss_QosIfQos_QosPortShapings)(nil),                                                                               // 684: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortShapings
	(*Qos_QosIfQoss_QosIfQos_QosQosQueues)(nil),                                                                                  // 685: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues
	(*Qos_QosIfQoss_QosIfQos_QosShapings)(nil),                                                                                   // 686: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosShapings
	(*Qos_QosIfQoss_QosIfQos_QosSubPortQApps)(nil),                                                                               // 687: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosSubPortQApps
	(*Qos_QosIfQoss_QosIfQos_QosSubportquStaschs)(nil),                                                                           // 688: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosSubportquStaschs
	(*Qos_QosIfQoss_QosIfQos_QosUserVlanProfs)(nil),                                                                              // 689: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosUserVlanProfs
	(*Qos_QosIfQoss_QosIfQos_QosVllPipe)(nil),                                                                                    // 690: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe
	(*Qos_QosIfQoss_QosIfQos_QosWfqShapings)(nil),                                                                                // 691: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosWfqShapings
	(*Qos_QosIfQoss_QosIfQos_QosWfqWeights)(nil),                                                                                 // 692: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosWfqWeights
	(*Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode)(nil),                                                      // 693: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QOSProBasInsCfgNodes.QOSProBasInsCfgNode
	(*Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd)(nil),                                                                          // 694: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosCvgPcds.QosCvgPcd
	(*Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir)(nil),                                                                      // 695: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefSQCirs.QosDefSQCir
	(*Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass)(nil),                                                // 696: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefaultServiceClasss.QosDefaultServiceClass
	(*Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable)(nil),                                                                    // 697: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDeiEnables.QosDeiEnable
	(*Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs_QosDomLnkAdj)(nil),                                                                    // 698: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomLnkAdjs.QosDomLnkAdj
	(*Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd)(nil),                                                                      // 699: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomLnkAds.QosDomLnkAd
	(*Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool)(nil),                                                                  // 700: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomRespools.QosDomRespool
	(*Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp)(nil),                                                                            // 701: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosGQApps.QosGQApp
	(*Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe)(nil),                                                                      // 702: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.QosHardPipe
	(*Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats)(nil),                                                     // 703: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.QosHardPipe.QosHardPipeStats
	(*Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat)(nil),                                     // 704: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.QosHardPipe.QosHardPipeStats.QosHardPipeStat
	(*Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp)(nil),                                                                  // 705: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIFGQStDisps.QosIFGQStDisp
	(*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar)(nil),                                                                            // 706: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar
	(*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats)(nil),                                                           // 707: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.QosIfCarExtStats
	(*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats)(nil),                                                              // 708: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.QosIfCarStats
	(*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat)(nil),                                           // 709: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.QosIfCarExtStats.QosIfCarExtStat
	(*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat)(nil),                                                 // 710: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.QosIfCarStats.QosIfCarStat
	(*Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb)(nil),                                                                            // 711: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfPhbs.QosIfPhb
	(*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb)(nil),                                                                          // 712: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb
	(*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats)(nil),                                                           // 713: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.QosIfQppbStats
	(*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat)(nil),                                             // 714: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.QosIfQppbStats.QosIfQppbStat
	(*Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust)(nil),                                                                        // 715: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfTrusts.QosIfTrust
	(*Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic)(nil),                                                                  // 716: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLdpTraffics.QosLdpTraffic
	(*Qos_QosIfQoss_QosIfQos_QosLrs_QosLr)(nil),                                                                                  // 717: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLrs.QosLr
	(*Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw)(nil),                                                                // 718: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLvHardPStVws.QosLvHardPStVw
	(*Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch)(nil),                                                                  // 719: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMemLinkSchs.QosMemLinkSch
	(*Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs_QosMplsL2Vc)(nil),                                                                      // 720: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMplsL2Vcs.QosMplsL2Vc
	(*Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm)(nil),                                                          // 721: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPQDiscardAlarms.QosPQDiscardAlarm
	(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply)(nil),                                                                // 722: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply
	(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats)(nil),                                                  // 723: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosActSQStats
	(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats)(nil),                                                 // 724: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats
	(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat)(nil),                                     // 725: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosActSQStats.QosActSQStat
	(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat)(nil),                                   // 726: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.QosPolicyStat
	(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats)(nil),                      // 727: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.QosPolicyStat.QosRuleStats
	(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat)(nil),          // 728: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.QosPolicyStat.QosRuleStats.QosRuleStat
	(*Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm)(nil),                                                          // 729: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueueAlarms.QosPortQueueAlarm
	(*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue)(nil),                                                                    // 730: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue
	(*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats)(nil),                                                  // 731: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.QosPortQueueStats
	(*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat)(nil),                                 // 732: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.QosPortQueueStats.QosPortQueueStat
	(*Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping)(nil),                                                                // 733: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortShapings.QosPortShaping
	(*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue)(nil),                                                                      // 734: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.QosQosQueue
	(*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats)(nil),                                                     // 735: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.QosQosQueue.QosQosQueueStats
	(*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat)(nil),                                     // 736: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.QosQosQueue.QosQosQueueStats.QosQosQueueStat
	(*Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping)(nil),                                                                        // 737: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosShapings.QosShaping
	(*Qos_QosIfQoss_QosIfQos_QosSubPortQApps_QosSubPortQApp)(nil),                                                                // 738: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosSubPortQApps.QosSubPortQApp
	(*Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch)(nil),                                                        // 739: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosSubportquStaschs.QosSubportquStasch
	(*Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf)(nil),                                                              // 740: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosUserVlanProfs.QosUserVlanProf
	(*Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping)(nil),                                                                  // 741: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosWfqShapings.QosWfqShaping
	(*Qos_QosIfQoss_QosIfQos_QosWfqWeights_QosWfqWeight)(nil),                                                                    // 742: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosWfqWeights.QosWfqWeight
	(*Qos_QosIfQppbCfgs_QosIfQppbCfg)(nil),                                                                                       // 743: huaweiV8R10_qos.Qos.QosIfQppbCfgs.QosIfQppbCfg
	(*Qos_QosInfUsers_QosInfUser)(nil),                                                                                           // 744: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser
	(*Qos_QosInfUsers_QosInfUser_QosInfUserCARs)(nil),                                                                            // 745: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserCARs
	(*Qos_QosInfUsers_QosInfUser_QosInfUserSQs)(nil),                                                                             // 746: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserSQs
	(*Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR)(nil),                                                              // 747: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserCARs.QosInfUserCAR
	(*Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ)(nil),                                                                // 748: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserSQs.QosInfUserSQ
	(*Qos_QosLowLaEns_QosLowLaEn)(nil),                                                                                           // 749: huaweiV8R10_qos.Qos.QosLowLaEns.QosLowLaEn
	(*Qos_QosLsIfQoss_QosLsIfQos)(nil),                                                                                           // 750: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos
	(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs)(nil),                                                                                   // 751: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs
	(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps)(nil),                                                                                   // 752: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps
	(*Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ)(nil),                                                                          // 753: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsAtmTrafficQ
	(*Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues)(nil),                                                                           // 754: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues
	(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc)(nil),                                                                            // 755: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc
	(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues)(nil),                                                             // 756: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues
	(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ)(nil),                                                           // 757: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrafficQ
	(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps)(nil),                                                           // 758: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrustUps
	(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue)(nil),                                               // 759: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.QosLsPvcQueue
	(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat)(nil),                                  // 760: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.QosLsPvcQueue.PvcQueueStat
	(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp)(nil),                                           // 761: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrustUps.QosLsPvcTrustUp
	(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp)(nil),                                                                            // 762: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp
	(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ)(nil),                                                           // 763: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrafficQ
	(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps)(nil),                                                           // 764: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrustUps
	(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp)(nil),                                           // 765: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrustUps.QosLsPvpTrustUp
	(*Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue)(nil),                                                            // 766: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue
	(*Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat)(nil),                                         // 767: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.QosLsPortQueueStat
	(*Qos_QosPQschedules_QosPQschedule)(nil),                                                                                     // 768: huaweiV8R10_qos.Qos.QosPQschedules.QosPQschedule
	(*Qos_QosPackEnables_QosPackEnable)(nil),                                                                                     // 769: huaweiV8R10_qos.Qos.QosPackEnables.QosPackEnable
	(*Qos_QosPirPrecisions_QosPirPrecision)(nil),                                                                                 // 770: huaweiV8R10_qos.Qos.QosPirPrecisions.QosPirPrecision
	(*Qos_QosPolicyMatchIpOnlys_QosPolicyMatchIpOnly)(nil),                                                                       // 771: huaweiV8R10_qos.Qos.QosPolicyMatchIpOnlys.QosPolicyMatchIpOnly
	(*Qos_QosPortQueueStatInfos_QosPortQueueStatInfo)(nil),                                                                       // 772: huaweiV8R10_qos.Qos.QosPortQueueStatInfos.QosPortQueueStatInfo
	(*Qos_QosQppbPolicys_QosQppbPolicy)(nil),                                                                                     // 773: huaweiV8R10_qos.Qos.QosQppbPolicys.QosQppbPolicy
	(*Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs)(nil),                                                                         // 774: huaweiV8R10_qos.Qos.QosQppbPolicys.QosQppbPolicy.QosLocalIDs
	(*Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs_QosLocalID)(nil),                                                              // 775: huaweiV8R10_qos.Qos.QosQppbPolicys.QosQppbPolicy.QosLocalIDs.QosLocalID
	(*Qos_QosRdrRouteFlts_QosRdrRouteFlt)(nil),                                                                                   // 776: huaweiV8R10_qos.Qos.QosRdrRouteFlts.QosRdrRouteFlt
	(*Qos_QosRemoteIfQoss_QosRemoteIfQos)(nil),                                                                                   // 777: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos
	(*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss)(nil),                                                                // 778: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteDefClasss
	(*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts)(nil),                                                                 // 779: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteIfTrusts
	(*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass)(nil),                                              // 780: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteDefClasss.QosRemoteDefClass
	(*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust)(nil),                                                // 781: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteIfTrusts.QosRemoteIfTrust
	(*Qos_QosSlotChannelAlarms_QosSlotChannelAlarm)(nil),                                                                         // 782: huaweiV8R10_qos.Qos.QosSlotChannelAlarms.QosSlotChannelAlarm
	(*Qos_QosSlotChannelPres_QosSlotChannelPre)(nil),                                                                             // 783: huaweiV8R10_qos.Qos.QosSlotChannelPres.QosSlotChannelPre
	(*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp)(nil),                                                               // 784: huaweiV8R10_qos.Qos.QosSlotChannelProfileApps.QosSlotChannelProfileApp
	(*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles)(nil),                                     // 785: huaweiV8R10_qos.Qos.QosSlotChannelProfileApps.QosSlotChannelProfileApp.QosDisplayChannelProfiles
	(*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile)(nil),            // 786: huaweiV8R10_qos.Qos.QosSlotChannelProfileApps.QosSlotChannelProfileApp.QosDisplayChannelProfiles.QosDisplayChannelProfile
	(*Qos_QosSlotCvgPcds_QosSlotCvgPcd)(nil),                                                                                     // 787: huaweiV8R10_qos.Qos.QosSlotCvgPcds.QosSlotCvgPcd
	(*Qos_QosSlotPQAlarms_QosSlotPQAlarm)(nil),                                                                                   // 788: huaweiV8R10_qos.Qos.QosSlotPQAlarms.QosSlotPQAlarm
	(*Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm)(nil),                                                                     // 789: huaweiV8R10_qos.Qos.QosSlotPQDiscardAlarms.QosSlotPQDiscardAlarm
	(*Qos_QosSlotQoss_QosSlotQos)(nil),                                                                                           // 790: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos
	(*Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes)(nil),                                                                         // 791: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QOSObsFilterNodes
	(*Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts)(nil),                                                                   // 792: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosAccessBoardSchEnOuts
	(*Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs)(nil),                                                                            // 793: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosDomCarToSQs
	(*Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls)(nil),                                                                           // 794: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosExpPhbDisbls
	(*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables)(nil),                                                                        // 795: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables
	(*Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates)(nil),                                                                     // 796: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMcShapSrvTemplates
	(*Qos_QosSlotQoss_QosSlotQos_QosMcShapers)(nil),                                                                              // 797: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMcShapers
	(*Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers)(nil),                                                                       // 798: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMulticastShapers
	(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S)(nil),                                                                       // 799: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchIpv6S
	(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs)(nil),                                                                         // 800: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMcs
	(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S)(nil),                                                                     // 801: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMplsL2S
	(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss)(nil),                                                                       // 802: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMplss
	(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts)(nil),                                                                        // 803: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchPkts
	(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs)(nil),                                                                           // 804: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchs
	(*Qos_QosSlotQoss_QosSlotQos_QosQOSBursts)(nil),                                                                              // 805: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSBursts
	(*Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs)(nil),                                                                       // 806: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSGlobalBufCfgs
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs)(nil),                                                                             // 807: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotFQPirs
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues)(nil),                                                                        // 808: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers)(nil),                                                                       // 809: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnShapers
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums)(nil),                                                                       // 810: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideAdjNums
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles)(nil),                                                                      // 811: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideDeCycles
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables)(nil),                                                                       // 812: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideEnables
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns)(nil),                                                                  // 813: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideGradeThrdIns
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts)(nil),                                                                 // 814: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideGradeThrdOuts
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums)(nil),                                                                   // 815: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideMonitorNums
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles)(nil),                                                                      // 816: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideUpCycles
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs)(nil),                                                                          // 817: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotUclMatchs
	(*Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss)(nil),                                                                 // 818: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosUserQueueResource4Coss
	(*Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode)(nil),                                                        // 819: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QOSObsFilterNodes.QOSObsFilterNode
	(*Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut)(nil),                                            // 820: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosAccessBoardSchEnOuts.QosAccessBoardSchEnOut
	(*Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ)(nil),                                                              // 821: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosDomCarToSQs.QosDomCarToSQ
	(*Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl)(nil),                                                            // 822: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosExpPhbDisbls.QosExpPhbDisbl
	(*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable)(nil),                                                      // 823: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable
	(*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss)(nil),                                    // 824: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.QosVOQStatisticss
	(*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics)(nil),                   // 825: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.QosVOQStatisticss.QosVOQStatistics
	(*Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate)(nil),                                                // 826: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMcShapSrvTemplates.QosMcShapSrvTemplate
	(*Qos_QosSlotQoss_QosSlotQos_QosMcShapers_QosMcShaper)(nil),                                                                  // 827: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMcShapers.QosMcShaper
	(*Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper)(nil),                                                    // 828: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMulticastShapers.QosMulticastShaper
	(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6)(nil),                                                    // 829: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchIpv6S.QosPolicyMatchIpv6
	(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc)(nil),                                                        // 830: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMcs.QosPolicyMatchMc
	(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S_QosPolicyMatchMplsL2)(nil),                                                // 831: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMplsL2S.QosPolicyMatchMplsL2
	(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss_QosPolicyMatchMpls)(nil),                                                    // 832: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMplss.QosPolicyMatchMpls
	(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts_QosPolicyMatchPkt)(nil),                                                      // 833: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchPkts.QosPolicyMatchPkt
	(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs_QosPolicyMatch)(nil),                                                            // 834: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchs.QosPolicyMatch
	(*Qos_QosSlotQoss_QosSlotQos_QosQOSBursts_QosQOSBurst)(nil),                                                                  // 835: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSBursts.QosQOSBurst
	(*Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg)(nil),                                                    // 836: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSGlobalBufCfgs.QosQOSGlobalBufCfg
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir)(nil),                                                                // 837: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotFQPirs.QosSlotFQPir
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue)(nil),                                                      // 838: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.QosSlotMcVpnQueue
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats)(nil),                                // 839: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.QosSlotMcVpnQueue.QosSlotPortQueueStats
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat)(nil),           // 840: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.QosSlotMcVpnQueue.QosSlotPortQueueStats.QosSlotPortQueueStat
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper)(nil),                                                    // 841: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnShapers.QosSlotMcVpnShaper
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums_QosSlotORideAdjNum)(nil),                                                    // 842: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideAdjNums.QosSlotORideAdjNum
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles_QosSlotORideDeCycle)(nil),                                                  // 843: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideDeCycles.QosSlotORideDeCycle
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables_QosSlotORideEnable)(nil),                                                    // 844: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideEnables.QosSlotORideEnable
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns_QosSlotORideGradeThrdIn)(nil),                                          // 845: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideGradeThrdIns.QosSlotORideGradeThrdIn
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts_QosSlotORideGradeThrdOut)(nil),                                        // 846: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideGradeThrdOuts.QosSlotORideGradeThrdOut
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums_QosSlotORideMonitorNum)(nil),                                            // 847: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideMonitorNums.QosSlotORideMonitorNum
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles_QosSlotORideUpCycle)(nil),                                                  // 848: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideUpCycles.QosSlotORideUpCycle
	(*Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch)(nil),                                                          // 849: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotUclMatchs.QosSlotUclMatch
	(*Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss_QosUserQueueResource4Cos)(nil),                                        // 850: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosUserQueueResource4Coss.QosUserQueueResource4Cos
	(*Qos_QosSubPortQueues_QosSubPortQueue)(nil),                                                                                 // 851: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue
	(*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs)(nil),                                                          // 852: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueConfigs
	(*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings)(nil),                                                         // 853: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueShapings
	(*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights)(nil),                                                          // 854: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueWeights
	(*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig)(nil),                                    // 855: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueConfigs.QosSubPortQueueConfig
	(*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings_QosSubPortQueueShaping)(nil),                                  // 856: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueShapings.QosSubPortQueueShaping
	(*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight)(nil),                                    // 857: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueWeights.QosSubPortQueueWeight
	(*Qos_QosSystemViews_QosSystemView)(nil),                                                                                     // 858: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView
	(*Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes)(nil),                                                                // 859: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerExcludes
	(*Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks)(nil),                                                                // 860: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerRedbacks
	(*Qos_QosSystemViews_QosSystemView_QosScheModes)(nil),                                                                        // 861: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosScheModes
	(*Qos_QosSystemViews_QosSystemView_QosTMSchTraffs)(nil),                                                                      // 862: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosTMSchTraffs
	(*Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude)(nil),                                            // 863: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerExcludes.QosLinkLayerExclude
	(*Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback)(nil),                                            // 864: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerRedbacks.QosLinkLayerRedback
	(*Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode)(nil),                                                            // 865: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosScheModes.QosScheMode
	(*Qos_QosSystemViews_QosSystemView_QosTMSchTraffs_QosTMSchTraff)(nil),                                                        // 866: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosTMSchTraffs.QosTMSchTraff
	(*Qos_QosVPNQoss_QosVPNQos)(nil),                                                                                             // 867: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos
	(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables)(nil),                                                                      // 868: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanCarDisables
	(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs)(nil),                                                                             // 869: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPhbs
	(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys)(nil),                                                                     // 870: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys
	(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts)(nil),                                                                           // 871: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanTrusts
	(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable)(nil),                                                // 872: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanCarDisables.QosVpnVxlanCarDisable
	(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs_QosVpnVxlanPhb)(nil),                                                              // 873: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPhbs.QosVpnVxlanPhb
	(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply)(nil),                                              // 874: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply
	(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats)(nil),                       // 875: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.QosVpnVxlanPolicyStats
	(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat)(nil), // 876: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.QosVpnVxlanPolicyStats.QosVpnVxlanPolicyStat
	(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats)(nil),                           // 877: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.QosVpnVxlanPolicyStats.QosVpnVxlanPolicyStat.QosVpnVxlanClassifierStats
	(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat)(nil), // 878: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.QosVpnVxlanPolicyStats.QosVpnVxlanPolicyStat.QosVpnVxlanClassifierStats.QosVpnVxlanClassifierStat
	(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust)(nil),                                                                                                               // 879: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanTrusts.QosVpnVxlanTrust
	(*Qos_QosWred_QosFlowWreds)(nil),                                        // 880: huaweiV8R10_qos.Qos.QosWred.QosFlowWreds
	(*Qos_QosWred_QosPortWreds)(nil),                                        // 881: huaweiV8R10_qos.Qos.QosWred.QosPortWreds
	(*Qos_QosWred_QosWredQueues)(nil),                                       // 882: huaweiV8R10_qos.Qos.QosWred.QosWredQueues
	(*Qos_QosWred_QosWreds)(nil),                                            // 883: huaweiV8R10_qos.Qos.QosWred.QosWreds
	(*Qos_QosWred_QosFlowWreds_QosFlowWred)(nil),                            // 884: huaweiV8R10_qos.Qos.QosWred.QosFlowWreds.QosFlowWred
	(*Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors)(nil),              // 885: huaweiV8R10_qos.Qos.QosWred.QosFlowWreds.QosFlowWred.QosWredColors
	(*Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor)(nil), // 886: huaweiV8R10_qos.Qos.QosWred.QosFlowWreds.QosFlowWred.QosWredColors.QosWredColor
	(*Qos_QosWred_QosPortWreds_QosPortWred)(nil),                            // 887: huaweiV8R10_qos.Qos.QosWred.QosPortWreds.QosPortWred
	(*Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors)(nil),              // 888: huaweiV8R10_qos.Qos.QosWred.QosPortWreds.QosPortWred.QosWredColors
	(*Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor)(nil), // 889: huaweiV8R10_qos.Qos.QosWred.QosPortWreds.QosPortWred.QosWredColors.QosWredColor
	(*Qos_QosWred_QosWredQueues_QosWredQueue)(nil),                          // 890: huaweiV8R10_qos.Qos.QosWred.QosWredQueues.QosWredQueue
	(*Qos_QosWred_QosWreds_QosWred)(nil),                                    // 891: huaweiV8R10_qos.Qos.QosWred.QosWreds.QosWred
	(*Qos_QosWred_QosWreds_QosWred_QosWredColors)(nil),                      // 892: huaweiV8R10_qos.Qos.QosWred.QosWreds.QosWred.QosWredColors
	(*Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor)(nil),         // 893: huaweiV8R10_qos.Qos.QosWred.QosWreds.QosWred.QosWredColors.QosWredColor
}
var file_huaweiV8R10_qos_proto_depIdxs = []int32{
	0,   // 0: huaweiV8R10_qos.QosResetATMPvcQueueRequest.serviceClass:type_name -> huaweiV8R10_qos.QosResetATMPvcQueueRequest.ServiceClass
	1,   // 1: huaweiV8R10_qos.QosResetBdPolicyApplyRequest.bddirection:type_name -> huaweiV8R10_qos.QosResetBdPolicyApplyRequest.Bddirection
	2,   // 2: huaweiV8R10_qos.QosResetBdVxlanPolicyApplyRequest.bddirection:type_name -> huaweiV8R10_qos.QosResetBdVxlanPolicyApplyRequest.Bddirection
	3,   // 3: huaweiV8R10_qos.QosResetEvplVxlanPolicyApplyRequest.evpldirection:type_name -> huaweiV8R10_qos.QosResetEvplVxlanPolicyApplyRequest.Evpldirection
	4,   // 4: huaweiV8R10_qos.QosResetGlobalPolicyRequest.direction:type_name -> huaweiV8R10_qos.QosResetGlobalPolicyRequest.Direction
	5,   // 5: huaweiV8R10_qos.QosResetIFGQStRequest.direction:type_name -> huaweiV8R10_qos.QosResetIFGQStRequest.Direction
	6,   // 6: huaweiV8R10_qos.QosResetIfCarRequest.direction:type_name -> huaweiV8R10_qos.QosResetIfCarRequest.Direction
	7,   // 7: huaweiV8R10_qos.QosResetIfGQRequest.direction:type_name -> huaweiV8R10_qos.QosResetIfGQRequest.Direction
	8,   // 8: huaweiV8R10_qos.QosResetIfQppbRequest.direction:type_name -> huaweiV8R10_qos.QosResetIfQppbRequest.Direction
	9,   // 9: huaweiV8R10_qos.QosResetIfSQRequest.direction:type_name -> huaweiV8R10_qos.QosResetIfSQRequest.Direction
	10,  // 10: huaweiV8R10_qos.QosResetLsPortQueueRequest.serviceClass:type_name -> huaweiV8R10_qos.QosResetLsPortQueueRequest.ServiceClass
	11,  // 11: huaweiV8R10_qos.QosResetPolicyApplyRequest.direction:type_name -> huaweiV8R10_qos.QosResetPolicyApplyRequest.Direction
	12,  // 12: huaweiV8R10_qos.QosResetPortQueueRequest.isonboard:type_name -> huaweiV8R10_qos.QosResetPortQueueRequest.Isonboard
	13,  // 13: huaweiV8R10_qos.QosResetPortQueueRequest.serviceClass:type_name -> huaweiV8R10_qos.QosResetPortQueueRequest.ServiceClass
	14,  // 14: huaweiV8R10_qos.QosResetProUStRequest.direction:type_name -> huaweiV8R10_qos.QosResetProUStRequest.Direction
	15,  // 15: huaweiV8R10_qos.QosResetProfileRequest.serviceClass:type_name -> huaweiV8R10_qos.QosResetProfileRequest.ServiceClass
	16,  // 16: huaweiV8R10_qos.QosResetSlotPortQueueRequest.serviceClass:type_name -> huaweiV8R10_qos.QosResetSlotPortQueueRequest.ServiceClass
	17,  // 17: huaweiV8R10_qos.QosResetSlotVOQStRequest.voqFlag:type_name -> huaweiV8R10_qos.QosResetSlotVOQStRequest.VoqFlag
	18,  // 18: huaweiV8R10_qos.QosResetVniGQRequest.direction:type_name -> huaweiV8R10_qos.QosResetVniGQRequest.Direction
	19,  // 19: huaweiV8R10_qos.QosResetVpnVxlanPolicyApplyRequest.vpndirection:type_name -> huaweiV8R10_qos.QosResetVpnVxlanPolicyApplyRequest.Vpndirection
	386, // 20: huaweiV8R10_qos.Qos.hqos:type_name -> huaweiV8R10_qos.Qos.Hqos
	387, // 21: huaweiV8R10_qos.Qos.qosAclLogParaCfs:type_name -> huaweiV8R10_qos.Qos.QosAclLogParaCfs
	388, // 22: huaweiV8R10_qos.Qos.qosBDQoss:type_name -> huaweiV8R10_qos.Qos.QosBDQoss
	389, // 23: huaweiV8R10_qos.Qos.qosBaHosts:type_name -> huaweiV8R10_qos.Qos.QosBaHosts
	390, // 24: huaweiV8R10_qos.Qos.qosBuffers:type_name -> huaweiV8R10_qos.Qos.QosBuffers
	391, // 25: huaweiV8R10_qos.Qos.qosCbQos:type_name -> huaweiV8R10_qos.Qos.QosCbQos
	392, // 26: huaweiV8R10_qos.Qos.qosChannelProfileTmps:type_name -> huaweiV8R10_qos.Qos.QosChannelProfileTmps
	393, // 27: huaweiV8R10_qos.Qos.qosDss:type_name -> huaweiV8R10_qos.Qos.QosDss
	394, // 28: huaweiV8R10_qos.Qos.qosEVPLQoss:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss
	395, // 29: huaweiV8R10_qos.Qos.qosGlobalPolicys:type_name -> huaweiV8R10_qos.Qos.QosGlobalPolicys
	396, // 30: huaweiV8R10_qos.Qos.qosGlobalQppbs:type_name -> huaweiV8R10_qos.Qos.QosGlobalQppbs
	397, // 31: huaweiV8R10_qos.Qos.qosHardPipeAbilitys:type_name -> huaweiV8R10_qos.Qos.QosHardPipeAbilitys
	398, // 32: huaweiV8R10_qos.Qos.qosIfQoss:type_name -> huaweiV8R10_qos.Qos.QosIfQoss
	399, // 33: huaweiV8R10_qos.Qos.qosIfQppbCfgs:type_name -> huaweiV8R10_qos.Qos.QosIfQppbCfgs
	400, // 34: huaweiV8R10_qos.Qos.qosInfUsers:type_name -> huaweiV8R10_qos.Qos.QosInfUsers
	401, // 35: huaweiV8R10_qos.Qos.qosLowLaEns:type_name -> huaweiV8R10_qos.Qos.QosLowLaEns
	402, // 36: huaweiV8R10_qos.Qos.qosLsIfQoss:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss
	403, // 37: huaweiV8R10_qos.Qos.qosLsQosGlobalPara:type_name -> huaweiV8R10_qos.Qos.QosLsQosGlobalPara
	404, // 38: huaweiV8R10_qos.Qos.qosPQschedules:type_name -> huaweiV8R10_qos.Qos.QosPQschedules
	405, // 39: huaweiV8R10_qos.Qos.qosPackEnables:type_name -> huaweiV8R10_qos.Qos.QosPackEnables
	406, // 40: huaweiV8R10_qos.Qos.qosPirPrecisions:type_name -> huaweiV8R10_qos.Qos.QosPirPrecisions
	407, // 41: huaweiV8R10_qos.Qos.qosPolicyMatchIpOnlys:type_name -> huaweiV8R10_qos.Qos.QosPolicyMatchIpOnlys
	408, // 42: huaweiV8R10_qos.Qos.qosPortQueueStatInfos:type_name -> huaweiV8R10_qos.Qos.QosPortQueueStatInfos
	409, // 43: huaweiV8R10_qos.Qos.qosQppbPolicys:type_name -> huaweiV8R10_qos.Qos.QosQppbPolicys
	410, // 44: huaweiV8R10_qos.Qos.qosRdrRouteFlts:type_name -> huaweiV8R10_qos.Qos.QosRdrRouteFlts
	411, // 45: huaweiV8R10_qos.Qos.qosRemoteIfQoss:type_name -> huaweiV8R10_qos.Qos.QosRemoteIfQoss
	412, // 46: huaweiV8R10_qos.Qos.qosSlotChannelAlarms:type_name -> huaweiV8R10_qos.Qos.QosSlotChannelAlarms
	413, // 47: huaweiV8R10_qos.Qos.qosSlotChannelPres:type_name -> huaweiV8R10_qos.Qos.QosSlotChannelPres
	414, // 48: huaweiV8R10_qos.Qos.qosSlotChannelProfileApps:type_name -> huaweiV8R10_qos.Qos.QosSlotChannelProfileApps
	415, // 49: huaweiV8R10_qos.Qos.qosSlotCvgPcds:type_name -> huaweiV8R10_qos.Qos.QosSlotCvgPcds
	416, // 50: huaweiV8R10_qos.Qos.qosSlotPQAlarms:type_name -> huaweiV8R10_qos.Qos.QosSlotPQAlarms
	417, // 51: huaweiV8R10_qos.Qos.qosSlotPQDiscardAlarms:type_name -> huaweiV8R10_qos.Qos.QosSlotPQDiscardAlarms
	418, // 52: huaweiV8R10_qos.Qos.qosSlotQoss:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss
	419, // 53: huaweiV8R10_qos.Qos.qosSubPortQueues:type_name -> huaweiV8R10_qos.Qos.QosSubPortQueues
	420, // 54: huaweiV8R10_qos.Qos.qosSystemViews:type_name -> huaweiV8R10_qos.Qos.QosSystemViews
	421, // 55: huaweiV8R10_qos.Qos.qosVPNQoss:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss
	422, // 56: huaweiV8R10_qos.Qos.qosWred:type_name -> huaweiV8R10_qos.Qos.QosWred
	423, // 57: huaweiV8R10_qos.Qos.Hqos.hqosFlowMappings:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings
	424, // 58: huaweiV8R10_qos.Qos.Hqos.hqosFlowQueues:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues
	425, // 59: huaweiV8R10_qos.Qos.Hqos.hqosFourFlowMappings:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings
	426, // 60: huaweiV8R10_qos.Qos.Hqos.hqosIFUserQueues:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues
	427, // 61: huaweiV8R10_qos.Qos.Hqos.hqosPortQTempApplys:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosPortQTempApplys
	428, // 62: huaweiV8R10_qos.Qos.Hqos.hqosPortQTemps:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps
	429, // 63: huaweiV8R10_qos.Qos.Hqos.hqosProfileApplys:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys
	430, // 64: huaweiV8R10_qos.Qos.Hqos.hqosProfiles:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles
	431, // 65: huaweiV8R10_qos.Qos.Hqos.hqosServiceTemplates:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosServiceTemplates
	432, // 66: huaweiV8R10_qos.Qos.Hqos.hqosUserGroupQueues:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues
	433, // 67: huaweiV8R10_qos.Qos.Hqos.hqosVNIQOSProAppNodes:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes
	509, // 68: huaweiV8R10_qos.Qos.QosAclLogParaCfs.qosAclLogParaCf:type_name -> huaweiV8R10_qos.Qos.QosAclLogParaCfs.QosAclLogParaCf
	510, // 69: huaweiV8R10_qos.Qos.QosBDQoss.qosBDQos:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos
	537, // 70: huaweiV8R10_qos.Qos.QosBaHosts.qosBaHost:type_name -> huaweiV8R10_qos.Qos.QosBaHosts.QosBaHost
	538, // 71: huaweiV8R10_qos.Qos.QosBuffers.qosBuffer:type_name -> huaweiV8R10_qos.Qos.QosBuffers.QosBuffer
	539, // 72: huaweiV8R10_qos.Qos.QosCbQos.qosBehaviors:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors
	540, // 73: huaweiV8R10_qos.Qos.QosCbQos.qosClassifiers:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers
	541, // 74: huaweiV8R10_qos.Qos.QosCbQos.qosMqcStatistics:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosMqcStatistics
	542, // 75: huaweiV8R10_qos.Qos.QosCbQos.qosPolicys:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosPolicys
	543, // 76: huaweiV8R10_qos.Qos.QosCbQos.qosVpnGroups:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosVpnGroups
	631, // 77: huaweiV8R10_qos.Qos.QosChannelProfileTmps.qosChannelProfileTmp:type_name -> huaweiV8R10_qos.Qos.QosChannelProfileTmps.QosChannelProfileTmp
	634, // 78: huaweiV8R10_qos.Qos.QosDss.qosDs:type_name -> huaweiV8R10_qos.Qos.QosDss.QosDs
	641, // 79: huaweiV8R10_qos.Qos.QosEVPLQoss.qosEVPLQos:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos
	652, // 80: huaweiV8R10_qos.Qos.QosGlobalPolicys.qosGlobalPolicy:type_name -> huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy
	657, // 81: huaweiV8R10_qos.Qos.QosGlobalQppbs.qosGlobalQppb:type_name -> huaweiV8R10_qos.Qos.QosGlobalQppbs.QosGlobalQppb
	658, // 82: huaweiV8R10_qos.Qos.QosHardPipeAbilitys.qosHardPipeAbility:type_name -> huaweiV8R10_qos.Qos.QosHardPipeAbilitys.QosHardPipeAbility
	659, // 83: huaweiV8R10_qos.Qos.QosIfQoss.qosIfQos:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos
	743, // 84: huaweiV8R10_qos.Qos.QosIfQppbCfgs.qosIfQppbCfg:type_name -> huaweiV8R10_qos.Qos.QosIfQppbCfgs.QosIfQppbCfg
	744, // 85: huaweiV8R10_qos.Qos.QosInfUsers.qosInfUser:type_name -> huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser
	749, // 86: huaweiV8R10_qos.Qos.QosLowLaEns.qosLowLaEn:type_name -> huaweiV8R10_qos.Qos.QosLowLaEns.QosLowLaEn
	750, // 87: huaweiV8R10_qos.Qos.QosLsIfQoss.qosLsIfQos:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos
	309, // 88: huaweiV8R10_qos.Qos.QosLsQosGlobalPara.qosLsPortQueueWeightSpec:type_name -> huaweiV8R10_qos.Qos.QosLsQosGlobalPara.QosLsPortQueueWeightSpec
	768, // 89: huaweiV8R10_qos.Qos.QosPQschedules.qosPQschedule:type_name -> huaweiV8R10_qos.Qos.QosPQschedules.QosPQschedule
	769, // 90: huaweiV8R10_qos.Qos.QosPackEnables.qosPackEnable:type_name -> huaweiV8R10_qos.Qos.QosPackEnables.QosPackEnable
	770, // 91: huaweiV8R10_qos.Qos.QosPirPrecisions.qosPirPrecision:type_name -> huaweiV8R10_qos.Qos.QosPirPrecisions.QosPirPrecision
	771, // 92: huaweiV8R10_qos.Qos.QosPolicyMatchIpOnlys.qosPolicyMatchIpOnly:type_name -> huaweiV8R10_qos.Qos.QosPolicyMatchIpOnlys.QosPolicyMatchIpOnly
	772, // 93: huaweiV8R10_qos.Qos.QosPortQueueStatInfos.qosPortQueueStatInfo:type_name -> huaweiV8R10_qos.Qos.QosPortQueueStatInfos.QosPortQueueStatInfo
	773, // 94: huaweiV8R10_qos.Qos.QosQppbPolicys.qosQppbPolicy:type_name -> huaweiV8R10_qos.Qos.QosQppbPolicys.QosQppbPolicy
	776, // 95: huaweiV8R10_qos.Qos.QosRdrRouteFlts.qosRdrRouteFlt:type_name -> huaweiV8R10_qos.Qos.QosRdrRouteFlts.QosRdrRouteFlt
	777, // 96: huaweiV8R10_qos.Qos.QosRemoteIfQoss.qosRemoteIfQos:type_name -> huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos
	782, // 97: huaweiV8R10_qos.Qos.QosSlotChannelAlarms.qosSlotChannelAlarm:type_name -> huaweiV8R10_qos.Qos.QosSlotChannelAlarms.QosSlotChannelAlarm
	783, // 98: huaweiV8R10_qos.Qos.QosSlotChannelPres.qosSlotChannelPre:type_name -> huaweiV8R10_qos.Qos.QosSlotChannelPres.QosSlotChannelPre
	784, // 99: huaweiV8R10_qos.Qos.QosSlotChannelProfileApps.qosSlotChannelProfileApp:type_name -> huaweiV8R10_qos.Qos.QosSlotChannelProfileApps.QosSlotChannelProfileApp
	787, // 100: huaweiV8R10_qos.Qos.QosSlotCvgPcds.qosSlotCvgPcd:type_name -> huaweiV8R10_qos.Qos.QosSlotCvgPcds.QosSlotCvgPcd
	788, // 101: huaweiV8R10_qos.Qos.QosSlotPQAlarms.qosSlotPQAlarm:type_name -> huaweiV8R10_qos.Qos.QosSlotPQAlarms.QosSlotPQAlarm
	789, // 102: huaweiV8R10_qos.Qos.QosSlotPQDiscardAlarms.qosSlotPQDiscardAlarm:type_name -> huaweiV8R10_qos.Qos.QosSlotPQDiscardAlarms.QosSlotPQDiscardAlarm
	790, // 103: huaweiV8R10_qos.Qos.QosSlotQoss.qosSlotQos:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos
	851, // 104: huaweiV8R10_qos.Qos.QosSubPortQueues.qosSubPortQueue:type_name -> huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue
	858, // 105: huaweiV8R10_qos.Qos.QosSystemViews.qosSystemView:type_name -> huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView
	867, // 106: huaweiV8R10_qos.Qos.QosVPNQoss.qosVPNQos:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos
	880, // 107: huaweiV8R10_qos.Qos.QosWred.qosFlowWreds:type_name -> huaweiV8R10_qos.Qos.QosWred.QosFlowWreds
	881, // 108: huaweiV8R10_qos.Qos.QosWred.qosPortWreds:type_name -> huaweiV8R10_qos.Qos.QosWred.QosPortWreds
	882, // 109: huaweiV8R10_qos.Qos.QosWred.qosWredQueues:type_name -> huaweiV8R10_qos.Qos.QosWred.QosWredQueues
	883, // 110: huaweiV8R10_qos.Qos.QosWred.qosWreds:type_name -> huaweiV8R10_qos.Qos.QosWred.QosWreds
	434, // 111: huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.hqosFlowMapping:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.HqosFlowMapping
	437, // 112: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.hqosFlowQueue:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue
	456, // 113: huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.hqosFourFlowMapping:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.HqosFourFlowMapping
	459, // 114: huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.hqosIFUserQueue:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.HqosIFUserQueue
	462, // 115: huaweiV8R10_qos.Qos.Hqos.HqosPortQTempApplys.hqosPortQTempApply:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosPortQTempApplys.HqosPortQTempApply
	463, // 116: huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.hqosPortQTemp:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp
	466, // 117: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.hqosProfileApply:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply
	475, // 118: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.hqosProfile:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile
	488, // 119: huaweiV8R10_qos.Qos.Hqos.HqosServiceTemplates.hqosServiceTemplate:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosServiceTemplates.HqosServiceTemplate
	491, // 120: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.hqosUserGroupQueue:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue
	504, // 121: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.hqosVNIQOSProAppNode:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode
	435, // 122: huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.HqosFlowMapping.hqosFMParams:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.HqosFlowMapping.HqosFMParams
	436, // 123: huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.HqosFlowMapping.HqosFMParams.hqosFMParam:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.HqosFlowMapping.HqosFMParams.HqosFMParam
	20,  // 124: huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.HqosFlowMapping.HqosFMParams.HqosFMParam.cqServiceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.HqosFlowMapping.HqosFMParams.HqosFMParam.CqServiceClass
	21,  // 125: huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.HqosFlowMapping.HqosFMParams.HqosFMParam.fqServiceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowMappings.HqosFlowMapping.HqosFMParams.HqosFMParam.FqServiceClass
	438, // 126: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.hqosPriorityScheduleModes:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityScheduleModes
	439, // 127: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.hqosPriorityShareShapings:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings
	440, // 128: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.hqosQueue4coss:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueue4Coss
	441, // 129: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.hqosQueuePrioritys:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueuePrioritys
	442, // 130: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.hqosQueues:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues
	443, // 131: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.hqosRdmDscrds:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosRdmDscrds
	444, // 132: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.hqosShareShapeIDs:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs
	445, // 133: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.hqosShareShapeRdms:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms
	446, // 134: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.hqosShareShapes:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes
	22,  // 135: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.prioritymodefq:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.Prioritymodefq
	447, // 136: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityScheduleModes.hqosPriorityScheduleMode:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityScheduleModes.HqosPriorityScheduleMode
	448, // 137: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.hqosPriorityShareShaping:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping
	449, // 138: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueue4Coss.hqosQueue4cos:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueue4Coss.HqosQueue4Cos
	450, // 139: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueuePrioritys.hqosQueuePriority:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueuePrioritys.HqosQueuePriority
	451, // 140: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.hqosQueue:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.HqosQueue
	452, // 141: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosRdmDscrds.hqosRdmDscrd:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosRdmDscrds.HqosRdmDscrd
	453, // 142: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.hqosShareShapeID:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID
	454, // 143: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.hqosShareShapeRdm:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm
	455, // 144: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.hqosShareShape:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape
	23,  // 145: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityScheduleModes.HqosPriorityScheduleMode.queueScheduleMode:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityScheduleModes.HqosPriorityScheduleMode.QueueScheduleMode
	24,  // 146: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.af1:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Af1
	25,  // 147: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.af2:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Af2
	26,  // 148: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.af3:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Af3
	27,  // 149: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.af4:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Af4
	28,  // 150: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.be:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Be
	29,  // 151: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.cs6:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Cs6
	30,  // 152: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.cs7:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Cs7
	31,  // 153: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.ef:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.Ef
	32,  // 154: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.queueScheduleMode:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.QueueScheduleMode
	33,  // 155: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.shapId:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosPriorityShareShapings.HqosPriorityShareShaping.ShapId
	34,  // 156: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueue4Coss.HqosQueue4Cos.cosValue:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueue4Coss.HqosQueue4Cos.CosValue
	35,  // 157: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueue4Coss.HqosQueue4Cos.queueScheduleMode:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueue4Coss.HqosQueue4Cos.QueueScheduleMode
	36,  // 158: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueuePrioritys.HqosQueuePriority.serviceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueuePrioritys.HqosQueuePriority.ServiceClass
	37,  // 159: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.HqosQueue.lowjitter:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.HqosQueue.Lowjitter
	38,  // 160: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.HqosQueue.lowlatency:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.HqosQueue.Lowlatency
	39,  // 161: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.HqosQueue.queueScheduleMode:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.HqosQueue.QueueScheduleMode
	40,  // 162: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.HqosQueue.serviceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosQueues.HqosQueue.ServiceClass
	41,  // 163: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosRdmDscrds.HqosRdmDscrd.serviceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosRdmDscrds.HqosRdmDscrd.ServiceClass
	42,  // 164: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.af1:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Af1
	43,  // 165: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.af2:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Af2
	44,  // 166: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.af3:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Af3
	45,  // 167: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.af4:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Af4
	46,  // 168: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.be:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Be
	47,  // 169: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.cs6:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Cs6
	48,  // 170: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.cs7:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Cs7
	49,  // 171: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.ef:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.Ef
	50,  // 172: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.queueScheduleMode:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeIDs.HqosShareShapeID.QueueScheduleMode
	51,  // 173: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.af1:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Af1
	52,  // 174: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.af2:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Af2
	53,  // 175: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.af3:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Af3
	54,  // 176: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.af4:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Af4
	55,  // 177: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.be:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Be
	56,  // 178: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.cs6:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Cs6
	57,  // 179: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.cs7:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Cs7
	58,  // 180: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.ef:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapeRdms.HqosShareShapeRdm.Ef
	59,  // 181: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.af1:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Af1
	60,  // 182: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.af2:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Af2
	61,  // 183: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.af3:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Af3
	62,  // 184: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.af4:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Af4
	63,  // 185: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.be:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Be
	64,  // 186: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.cs6:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Cs6
	65,  // 187: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.cs7:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Cs7
	66,  // 188: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.ef:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.Ef
	67,  // 189: huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.queueScheduleMode:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFlowQueues.HqosFlowQueue.HqosShareShapes.HqosShareShape.QueueScheduleMode
	457, // 190: huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.HqosFourFlowMapping.hqosFourFMParams:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.HqosFourFlowMapping.HqosFourFMParams
	458, // 191: huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.HqosFourFlowMapping.HqosFourFMParams.hqosFourFMParam:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.HqosFourFlowMapping.HqosFourFMParams.HqosFourFMParam
	68,  // 192: huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.HqosFourFlowMapping.HqosFourFMParams.HqosFourFMParam.ffqosServiceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.HqosFourFlowMapping.HqosFourFMParams.HqosFourFMParam.FfqosServiceClass
	69,  // 193: huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.HqosFourFlowMapping.HqosFourFMParams.HqosFourFMParam.fqosServiceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosFourFlowMappings.HqosFourFlowMapping.HqosFourFMParams.HqosFourFMParam.FqosServiceClass
	70,  // 194: huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.HqosIFUserQueue.direction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.HqosIFUserQueue.Direction
	460, // 195: huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.HqosIFUserQueue.hqosIFUserQueueStats:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.HqosIFUserQueue.HqosIFUserQueueStats
	461, // 196: huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.HqosIFUserQueue.HqosIFUserQueueStats.hqosIFUserQueueStat:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.HqosIFUserQueue.HqosIFUserQueueStats.HqosIFUserQueueStat
	71,  // 197: huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.HqosIFUserQueue.HqosIFUserQueueStats.HqosIFUserQueueStat.serviceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosIFUserQueues.HqosIFUserQueue.HqosIFUserQueueStats.HqosIFUserQueueStat.ServiceClass
	464, // 198: huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.hqosPortQParas:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.HqosPortQParas
	465, // 199: huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.HqosPortQParas.hqosPortQPara:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.HqosPortQParas.HqosPortQPara
	72,  // 200: huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.HqosPortQParas.HqosPortQPara.lowlatency:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.HqosPortQParas.HqosPortQPara.Lowlatency
	73,  // 201: huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.HqosPortQParas.HqosPortQPara.queueScheduleMode:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.HqosPortQParas.HqosPortQPara.QueueScheduleMode
	74,  // 202: huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.HqosPortQParas.HqosPortQPara.serviceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosPortQTemps.HqosPortQTemp.HqosPortQParas.HqosPortQPara.ServiceClass
	75,  // 203: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.direction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.Direction
	467, // 204: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.hqosGqStats:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosGqStats
	468, // 205: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.hqosProfileCarStats:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileCarStats
	469, // 206: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.hqosProfileStats:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileStats
	470, // 207: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.hqosShareShapeStats:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosShareShapeStats
	76,  // 208: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.identifyType:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.IdentifyType
	77,  // 209: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.proAppType:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.ProAppType
	471, // 210: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosGqStats.hqosGqStat:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosGqStats.HqosGqStat
	472, // 211: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileCarStats.hqosProfileCarStat:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileCarStats.HqosProfileCarStat
	473, // 212: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileStats.hqosProfileStat:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileStats.HqosProfileStat
	474, // 213: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosShareShapeStats.hqosShareShapeStat:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosShareShapeStats.HqosShareShapeStat
	78,  // 214: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosGqStats.HqosGqStat.serviceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosGqStats.HqosGqStat.ServiceClass
	79,  // 215: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileCarStats.HqosProfileCarStat.carType:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileCarStats.HqosProfileCarStat.CarType
	80,  // 216: huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileStats.HqosProfileStat.serviceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfileApplys.HqosProfileApply.HqosProfileStats.HqosProfileStat.ServiceClass
	476, // 217: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.hqosMplsHqoss:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosMplsHqoss
	477, // 218: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.hqosProCars:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars
	478, // 219: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.hqosProTmpDescs:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProTmpDescs
	479, // 220: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.hqosSQWeights:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosSQWeights
	480, // 221: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.hqosUserQueueTimeRanges:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueueTimeRanges
	481, // 222: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.hqosUserQueues:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueues
	81,  // 223: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.timeRange:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.TimeRange
	482, // 224: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosMplsHqoss.hqosMplsHqos:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosMplsHqoss.HqosMplsHqos
	483, // 225: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.hqosProCar:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar
	484, // 226: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProTmpDescs.hqosProTmpDesc:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProTmpDescs.HqosProTmpDesc
	485, // 227: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosSQWeights.hqosSQWeight:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosSQWeights.HqosSQWeight
	486, // 228: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueueTimeRanges.hqosUserQueueTimeRange:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueueTimeRanges.HqosUserQueueTimeRange
	487, // 229: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueues.hqosUserQueue:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueues.HqosUserQueue
	82,  // 230: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.carType:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.CarType
	83,  // 231: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.direction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.Direction
	84,  // 232: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.greenAction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.GreenAction
	85,  // 233: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.greenColor:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.GreenColor
	86,  // 234: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.greenServiceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.GreenServiceClass
	87,  // 235: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.redAction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.RedAction
	88,  // 236: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.redColor:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.RedColor
	89,  // 237: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.redServiceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.RedServiceClass
	90,  // 238: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.yellowAction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.YellowAction
	91,  // 239: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.yellowColor:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.YellowColor
	92,  // 240: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.yellowServiceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosProCars.HqosProCar.YellowServiceClass
	93,  // 241: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosSQWeights.HqosSQWeight.direction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosSQWeights.HqosSQWeight.Direction
	94,  // 242: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueueTimeRanges.HqosUserQueueTimeRange.adjustOnCard:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueueTimeRanges.HqosUserQueueTimeRange.AdjustOnCard
	95,  // 243: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueueTimeRanges.HqosUserQueueTimeRange.direction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueueTimeRanges.HqosUserQueueTimeRange.Direction
	96,  // 244: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueueTimeRanges.HqosUserQueueTimeRange.priorityLevelID:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueueTimeRanges.HqosUserQueueTimeRange.PriorityLevelID
	97,  // 245: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueues.HqosUserQueue.adjustOnCard:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueues.HqosUserQueue.AdjustOnCard
	98,  // 246: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueues.HqosUserQueue.direction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueues.HqosUserQueue.Direction
	99,  // 247: huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueues.HqosUserQueue.priorityLevelID:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosProfiles.HqosProfile.HqosUserQueues.HqosUserQueue.PriorityLevelID
	489, // 248: huaweiV8R10_qos.Qos.Hqos.HqosServiceTemplates.HqosServiceTemplate.hqosSrvLengths:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosServiceTemplates.HqosServiceTemplate.HqosSrvLengths
	490, // 249: huaweiV8R10_qos.Qos.Hqos.HqosServiceTemplates.HqosServiceTemplate.HqosSrvLengths.hqosSrvLength:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosServiceTemplates.HqosServiceTemplate.HqosSrvLengths.HqosSrvLength
	100, // 250: huaweiV8R10_qos.Qos.Hqos.HqosServiceTemplates.HqosServiceTemplate.HqosSrvLengths.HqosSrvLength.direction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosServiceTemplates.HqosServiceTemplate.HqosSrvLengths.HqosSrvLength.Direction
	492, // 251: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.hqosGQCirPirs:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQCirPirs
	493, // 252: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.hqosGQModes:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQModes
	494, // 253: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.hqosGQShapingpriortys:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapingpriortys
	495, // 254: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.hqosGQShapings:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapings
	496, // 255: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.hqosGQStats:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQStats
	497, // 256: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.hqosWeights:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosWeights
	101, // 257: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.prioritymodegq:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.Prioritymodegq
	498, // 258: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQCirPirs.hqosGQCirPir:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQCirPirs.HqosGQCirPir
	499, // 259: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQModes.hqosGQMode:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQModes.HqosGQMode
	500, // 260: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapingpriortys.hqosGQShapingpriorty:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapingpriortys.HqosGQShapingpriorty
	501, // 261: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapings.hqosGQShaping:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapings.HqosGQShaping
	502, // 262: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQStats.hqosGQStat:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQStats.HqosGQStat
	503, // 263: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosWeights.hqosWeight:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosWeights.HqosWeight
	102, // 264: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQCirPirs.HqosGQCirPir.direction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQCirPirs.HqosGQCirPir.Direction
	103, // 265: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQModes.HqosGQMode.mode:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQModes.HqosGQMode.Mode
	104, // 266: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapingpriortys.HqosGQShapingpriorty.direction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapingpriortys.HqosGQShapingpriorty.Direction
	105, // 267: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapingpriortys.HqosGQShapingpriorty.priority:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapingpriortys.HqosGQShapingpriorty.Priority
	106, // 268: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapings.HqosGQShaping.direction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQShapings.HqosGQShaping.Direction
	107, // 269: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQStats.HqosGQStat.direction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQStats.HqosGQStat.Direction
	108, // 270: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQStats.HqosGQStat.serviceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosGQStats.HqosGQStat.ServiceClass
	109, // 271: huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosWeights.HqosWeight.direction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosUserGroupQueues.HqosUserGroupQueue.HqosWeights.HqosWeight.Direction
	110, // 272: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.direction:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.Direction
	505, // 273: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.hqosProfileVniCarStats:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniCarStats
	506, // 274: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.hqosProfileVniStats:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniStats
	507, // 275: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniCarStats.hqosProfileVniCarStat:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniCarStats.HqosProfileVniCarStat
	508, // 276: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniStats.hqosProfileVniStat:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniStats.HqosProfileVniStat
	111, // 277: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniCarStats.HqosProfileVniCarStat.carType:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniCarStats.HqosProfileVniCarStat.CarType
	112, // 278: huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniStats.HqosProfileVniStat.serviceClass:type_name -> huaweiV8R10_qos.Qos.Hqos.HqosVNIQOSProAppNodes.HqosVNIQOSProAppNode.HqosProfileVniStats.HqosProfileVniStat.ServiceClass
	113, // 279: huaweiV8R10_qos.Qos.QosAclLogParaCfs.QosAclLogParaCf.acllogType:type_name -> huaweiV8R10_qos.Qos.QosAclLogParaCfs.QosAclLogParaCf.AcllogType
	511, // 280: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.qosBdDefaultServiceClasss:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdDefaultServiceClasss
	512, // 281: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.qosBdPhbs:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPhbs
	513, // 282: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.qosBdPolicyApplys:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys
	514, // 283: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.qosBdTrusts:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdTrusts
	515, // 284: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.qosBdVxlanCarDisables:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanCarDisables
	516, // 285: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.qosBdVxlanPhbs:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPhbs
	517, // 286: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.qosBdVxlanPolicyApplys:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys
	518, // 287: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.qosBdVxlanTrusts:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanTrusts
	519, // 288: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdDefaultServiceClasss.qosBdDefaultServiceClass:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdDefaultServiceClasss.QosBdDefaultServiceClass
	520, // 289: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPhbs.qosBdPhb:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPhbs.QosBdPhb
	521, // 290: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.qosBdPolicyApply:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply
	528, // 291: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdTrusts.qosBdTrust:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdTrusts.QosBdTrust
	529, // 292: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanCarDisables.qosBdVxlanCarDisable:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanCarDisables.QosBdVxlanCarDisable
	530, // 293: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPhbs.qosBdVxlanPhb:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPhbs.QosBdVxlanPhb
	531, // 294: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.qosBdVxlanPolicyApply:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply
	536, // 295: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanTrusts.qosBdVxlanTrust:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanTrusts.QosBdVxlanTrust
	114, // 296: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdDefaultServiceClasss.QosBdDefaultServiceClass.servicebdClass:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdDefaultServiceClasss.QosBdDefaultServiceClass.ServicebdClass
	115, // 297: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPhbs.QosBdPhb.mapbdType:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPhbs.QosBdPhb.MapbdType
	116, // 298: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPhbs.QosBdPhb.operatebdType:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPhbs.QosBdPhb.OperatebdType
	117, // 299: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.bddirection:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.Bddirection
	118, // 300: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.bdlayer:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.Bdlayer
	522, // 301: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.qosBdActSqStats:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdActSqStats
	523, // 302: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.qosBdPolicyStats:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdPolicyStats
	524, // 303: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdActSqStats.qosBdActSqStat:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdActSqStats.QosBdActSqStat
	525, // 304: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdPolicyStats.qosBdPolicyStat:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdPolicyStats.QosBdPolicyStat
	119, // 305: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdActSqStats.QosBdActSqStat.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdActSqStats.QosBdActSqStat.ServiceClass
	526, // 306: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdPolicyStats.QosBdPolicyStat.qosBdClassifierStats:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdPolicyStats.QosBdPolicyStat.QosBdClassifierStats
	527, // 307: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdPolicyStats.QosBdPolicyStat.QosBdClassifierStats.qosBdClassifierStat:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdPolicyApplys.QosBdPolicyApply.QosBdPolicyStats.QosBdPolicyStat.QosBdClassifierStats.QosBdClassifierStat
	120, // 308: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdTrusts.QosBdTrust.directbdType:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdTrusts.QosBdTrust.DirectbdType
	121, // 309: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdTrusts.QosBdTrust.trustbdType:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdTrusts.QosBdTrust.TrustbdType
	122, // 310: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanCarDisables.QosBdVxlanCarDisable.excludeMode:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanCarDisables.QosBdVxlanCarDisable.ExcludeMode
	123, // 311: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.bddirection:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.Bddirection
	124, // 312: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.bdlayer:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.Bdlayer
	532, // 313: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.qosBdVxlanPolicyStats:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.QosBdVxlanPolicyStats
	533, // 314: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.QosBdVxlanPolicyStats.qosBdVxlanPolicyStat:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.QosBdVxlanPolicyStats.QosBdVxlanPolicyStat
	534, // 315: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.QosBdVxlanPolicyStats.QosBdVxlanPolicyStat.qosBdVxlanClassifierStats:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.QosBdVxlanPolicyStats.QosBdVxlanPolicyStat.QosBdVxlanClassifierStats
	535, // 316: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.QosBdVxlanPolicyStats.QosBdVxlanPolicyStat.QosBdVxlanClassifierStats.qosBdVxlanClassifierStat:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanPolicyApplys.QosBdVxlanPolicyApply.QosBdVxlanPolicyStats.QosBdVxlanPolicyStat.QosBdVxlanClassifierStats.QosBdVxlanClassifierStat
	125, // 317: huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanTrusts.QosBdVxlanTrust.trustbdType:type_name -> huaweiV8R10_qos.Qos.QosBDQoss.QosBDQos.QosBdVxlanTrusts.QosBdVxlanTrust.TrustbdType
	126, // 318: huaweiV8R10_qos.Qos.QosBaHosts.QosBaHost.color:type_name -> huaweiV8R10_qos.Qos.QosBaHosts.QosBaHost.Color
	127, // 319: huaweiV8R10_qos.Qos.QosBaHosts.QosBaHost.cosvalue:type_name -> huaweiV8R10_qos.Qos.QosBaHosts.QosBaHost.Cosvalue
	128, // 320: huaweiV8R10_qos.Qos.QosBuffers.QosBuffer.queueType:type_name -> huaweiV8R10_qos.Qos.QosBuffers.QosBuffer.QueueType
	544, // 321: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.qosBehavior:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior
	597, // 322: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.qosClassifier:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier
	618, // 323: huaweiV8R10_qos.Qos.QosCbQos.QosMqcStatistics.qosMqcStatistic:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosMqcStatistics.QosMqcStatistic
	619, // 324: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.qosPolicy:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy
	628, // 325: huaweiV8R10_qos.Qos.QosCbQos.QosVpnGroups.qosVpnGroup:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosVpnGroups.QosVpnGroup
	545, // 326: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActAclLogs:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActAclLogs
	546, // 327: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActCarPpss:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss
	547, // 328: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActCars:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars
	548, // 329: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActFilters:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActFilters
	549, // 330: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActIncPris:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActIncPris
	550, // 331: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActL2Suppres:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres
	551, // 332: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActLoads:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActLoads
	552, // 333: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActMirCars:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActMirCars
	553, // 334: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActNsSamplers:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActNsSamplers
	554, // 335: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActPortMirrors:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActPortMirrors
	555, // 336: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActRdrLsps:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrLsps
	556, // 337: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActRdrMhp6s:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhp6S
	557, // 338: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActRdrMhps:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhps
	558, // 339: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActRdrMldpTnls:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMldpTnls
	559, // 340: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActRdrNhp6s:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhp6S
	560, // 341: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActRdrNhps:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhps
	561, // 342: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActRdrPolicys:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrPolicys
	562, // 343: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActRdrTnls:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrTnls
	563, // 344: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActRdrVpns:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrVpns
	564, // 345: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActRemarks:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRemarks
	565, // 346: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActSrvClss:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss
	566, // 347: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActSysLogs:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSysLogs
	567, // 348: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActUrpfs:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUrpfs
	568, // 349: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.qosActUserQueues:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUserQueues
	569, // 350: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActAclLogs.qosActAclLog:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActAclLogs.QosActAclLog
	570, // 351: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.qosActCarPps:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps
	571, // 352: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.qosActCar:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar
	572, // 353: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActFilters.qosActFilter:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActFilters.QosActFilter
	573, // 354: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActIncPris.qosActIncPri:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActIncPris.QosActIncPri
	574, // 355: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.qosActL2Suppre:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre
	575, // 356: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActLoads.qosActLoad:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActLoads.QosActLoad
	576, // 357: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActMirCars.qosActMirCar:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActMirCars.QosActMirCar
	577, // 358: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActNsSamplers.qosActNsSampler:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActNsSamplers.QosActNsSampler
	578, // 359: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActPortMirrors.qosActPortMirror:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActPortMirrors.QosActPortMirror
	579, // 360: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrLsps.qosActRdrLsp:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrLsps.QosActRdrLsp
	580, // 361: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhp6S.qosActRdrMhp6:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhp6S.QosActRdrMhp6
	583, // 362: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhps.qosActRdrMhp:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhps.QosActRdrMhp
	586, // 363: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMldpTnls.qosActRdrMldpTnl:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMldpTnls.QosActRdrMldpTnl
	587, // 364: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhp6S.qosActRdrNhp6:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhp6S.QosActRdrNhp6
	588, // 365: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhps.qosActRdrNhp:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhps.QosActRdrNhp
	589, // 366: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrPolicys.qosActRdrPolicy:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrPolicys.QosActRdrPolicy
	590, // 367: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrTnls.qosActRdrTnl:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrTnls.QosActRdrTnl
	591, // 368: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrVpns.qosActRdrVpn:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrVpns.QosActRdrVpn
	592, // 369: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRemarks.qosActRemark:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRemarks.QosActRemark
	593, // 370: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.qosActSrvCls:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.QosActSrvCls
	594, // 371: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSysLogs.qosActSysLog:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSysLogs.QosActSysLog
	595, // 372: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUrpfs.qosActUrpf:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUrpfs.QosActUrpf
	596, // 373: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUserQueues.qosActUserQueue:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUserQueues.QosActUserQueue
	129, // 374: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActAclLogs.QosActAclLog.actionType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActAclLogs.QosActAclLog.ActionType
	130, // 375: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActAclLogs.QosActAclLog.isConfigure:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActAclLogs.QosActAclLog.IsConfigure
	131, // 376: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.actionType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.ActionType
	132, // 377: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.colorAware:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.ColorAware
	133, // 378: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.greenAction:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.GreenAction
	134, // 379: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.greenColor:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.GreenColor
	135, // 380: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.greenServiceClass:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.GreenServiceClass
	136, // 381: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.limitType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.LimitType
	137, // 382: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.redAction:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.RedAction
	138, // 383: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.redColor:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.RedColor
	139, // 384: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.redServiceClass:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.RedServiceClass
	140, // 385: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.yellowAction:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.YellowAction
	141, // 386: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.yellowColor:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.YellowColor
	142, // 387: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.yellowServiceClass:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCarPpss.QosActCarPps.YellowServiceClass
	143, // 388: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.actionType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.ActionType
	144, // 389: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.colorAware:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.ColorAware
	145, // 390: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.greenAction:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.GreenAction
	146, // 391: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.greenColor:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.GreenColor
	147, // 392: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.greenServiceClass:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.GreenServiceClass
	148, // 393: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.limitType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.LimitType
	149, // 394: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.redAction:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.RedAction
	150, // 395: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.redColor:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.RedColor
	151, // 396: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.redServiceClass:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.RedServiceClass
	152, // 397: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.yellowAction:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.YellowAction
	153, // 398: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.yellowColor:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.YellowColor
	154, // 399: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.yellowServiceClass:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActCars.QosActCar.YellowServiceClass
	155, // 400: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActFilters.QosActFilter.actionType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActFilters.QosActFilter.ActionType
	156, // 401: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActFilters.QosActFilter.filter:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActFilters.QosActFilter.Filter
	157, // 402: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActIncPris.QosActIncPri.priority:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActIncPris.QosActIncPri.Priority
	158, // 403: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.greenAction:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.GreenAction
	159, // 404: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.greenColor:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.GreenColor
	160, // 405: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.greenServiceClass:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.GreenServiceClass
	161, // 406: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.redAction:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.RedAction
	162, // 407: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.redColor:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.RedColor
	163, // 408: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.redServiceClass:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.RedServiceClass
	164, // 409: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.suppressType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActL2Suppres.QosActL2Suppre.SuppressType
	165, // 410: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActLoads.QosActLoad.actionType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActLoads.QosActLoad.ActionType
	166, // 411: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActLoads.QosActLoad.balanceType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActLoads.QosActLoad.BalanceType
	167, // 412: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActNsSamplers.QosActNsSampler.flowType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActNsSamplers.QosActNsSampler.FlowType
	168, // 413: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActNsSamplers.QosActNsSampler.sampleType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActNsSamplers.QosActNsSampler.SampleType
	169, // 414: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActPortMirrors.QosActPortMirror.actionType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActPortMirrors.QosActPortMirror.ActionType
	170, // 415: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActPortMirrors.QosActPortMirror.enable:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActPortMirrors.QosActPortMirror.Enable
	171, // 416: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrLsps.QosActRdrLsp.actionType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrLsps.QosActRdrLsp.ActionType
	172, // 417: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrLsps.QosActRdrLsp.configType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrLsps.QosActRdrLsp.ConfigType
	173, // 418: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrLsps.QosActRdrLsp.secondary:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrLsps.QosActRdrLsp.Secondary
	581, // 419: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhp6S.QosActRdrMhp6.qosRdrNhp6s:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhp6S.QosActRdrMhp6.QosRdrNhp6S
	174, // 420: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhp6S.QosActRdrMhp6.rdrType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhp6S.QosActRdrMhp6.RdrType
	582, // 421: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhp6S.QosActRdrMhp6.QosRdrNhp6S.qosRdrNhp6:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhp6S.QosActRdrMhp6.QosRdrNhp6S.QosRdrNhp6
	584, // 422: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhps.QosActRdrMhp.qosRdrNhps:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhps.QosActRdrMhp.QosRdrNhps
	175, // 423: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhps.QosActRdrMhp.rdrType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhps.QosActRdrMhp.RdrType
	585, // 424: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhps.QosActRdrMhp.QosRdrNhps.qosRdrNhp:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMhps.QosActRdrMhp.QosRdrNhps.QosRdrNhp
	176, // 425: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMldpTnls.QosActRdrMldpTnl.actionType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrMldpTnls.QosActRdrMldpTnl.ActionType
	177, // 426: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhp6S.QosActRdrNhp6.rdrType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhp6S.QosActRdrNhp6.RdrType
	178, // 427: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhps.QosActRdrNhp.rdrType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrNhps.QosActRdrNhp.RdrType
	179, // 428: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrPolicys.QosActRdrPolicy.qosHierarchicalCar:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrPolicys.QosActRdrPolicy.QosHierarchicalCar
	180, // 429: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrTnls.QosActRdrTnl.actionType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrTnls.QosActRdrTnl.ActionType
	181, // 430: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrVpns.QosActRdrVpn.actionType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRdrVpns.QosActRdrVpn.ActionType
	182, // 431: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRemarks.QosActRemark.actionType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActRemarks.QosActRemark.ActionType
	183, // 432: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.QosActSrvCls.actionType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.QosActSrvCls.ActionType
	184, // 433: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.QosActSrvCls.color:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.QosActSrvCls.Color
	185, // 434: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.QosActSrvCls.remarkFlag:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.QosActSrvCls.RemarkFlag
	186, // 435: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.QosActSrvCls.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSrvClss.QosActSrvCls.ServiceClass
	187, // 436: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSysLogs.QosActSysLog.statisticsType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActSysLogs.QosActSysLog.StatisticsType
	188, // 437: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUrpfs.QosActUrpf.actionType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUrpfs.QosActUrpf.ActionType
	189, // 438: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUrpfs.QosActUrpf.allowDefault:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUrpfs.QosActUrpf.AllowDefault
	190, // 439: huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUrpfs.QosActUrpf.checkType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosBehaviors.QosBehavior.QosActUrpfs.QosActUrpf.CheckType
	191, // 440: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.operator:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.Operator
	598, // 441: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.qosLocalID6s:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosLocalID6S
	599, // 442: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.qosLocalIDs:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosLocalIDs
	600, // 443: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.qosRuleAcl6s:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAcl6S
	601, // 444: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.qosRuleAcls:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAcls
	602, // 445: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.qosRuleAnys:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAnys
	603, // 446: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.qosRuleIPv6Addrs:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleIPv6Addrs
	604, // 447: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.qosRuleMacs:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleMacs
	605, // 448: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.qosRulePrioritys:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRulePrioritys
	606, // 449: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.qosRuleProto6s:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleProto6S
	607, // 450: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.qosRuleTcpFlags:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleTcpFlags
	608, // 451: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosLocalID6S.qosLocalID6:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosLocalID6S.QosLocalID6
	609, // 452: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosLocalIDs.qosLocalID:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosLocalIDs.QosLocalID
	610, // 453: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAcl6S.qosRuleAcl6:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAcl6S.QosRuleAcl6
	611, // 454: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAcls.qosRuleAcl:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAcls.QosRuleAcl
	612, // 455: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAnys.qosRuleAny:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAnys.QosRuleAny
	613, // 456: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleIPv6Addrs.qosRuleIPv6Addr:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleIPv6Addrs.QosRuleIPv6Addr
	614, // 457: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleMacs.qosRuleMac:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleMacs.QosRuleMac
	615, // 458: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRulePrioritys.qosRulePriority:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRulePrioritys.QosRulePriority
	616, // 459: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleProto6S.qosRuleProto6:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleProto6S.QosRuleProto6
	617, // 460: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleTcpFlags.qosRuleTcpFlag:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleTcpFlags.QosRuleTcpFlag
	192, // 461: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAnys.QosRuleAny.protoFamily:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleAnys.QosRuleAny.ProtoFamily
	193, // 462: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleIPv6Addrs.QosRuleIPv6Addr.addressType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleIPv6Addrs.QosRuleIPv6Addr.AddressType
	194, // 463: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleMacs.QosRuleMac.macType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleMacs.QosRuleMac.MacType
	195, // 464: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRulePrioritys.QosRulePriority.priorityType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRulePrioritys.QosRulePriority.PriorityType
	196, // 465: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRulePrioritys.QosRulePriority.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRulePrioritys.QosRulePriority.ServiceClass
	197, // 466: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleProto6S.QosRuleProto6.protoFamily:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleProto6S.QosRuleProto6.ProtoFamily
	198, // 467: huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleTcpFlags.QosRuleTcpFlag.bitMatchType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosClassifiers.QosClassifier.QosRuleTcpFlags.QosRuleTcpFlag.BitMatchType
	620, // 468: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.qosPolicyNodeNewModes:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodeNewModes
	621, // 469: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.qosPolicyNodes:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodes
	199, // 470: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.shareMode:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.ShareMode
	200, // 471: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.statFlag:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.StatFlag
	622, // 472: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.v6QosLocalIDEns:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.V6QosLocalIDEns
	623, // 473: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.v6QosVniEns:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.V6QosVniEns
	624, // 474: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodeNewModes.qosPolicyNodeNewMode:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodeNewModes.QosPolicyNodeNewMode
	625, // 475: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodes.qosPolicyNode:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodes.QosPolicyNode
	626, // 476: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.V6QosLocalIDEns.v6QosLocalIDEn:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.V6QosLocalIDEns.V6QosLocalIDEn
	627, // 477: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.V6QosVniEns.v6QosVniEn:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.V6QosVniEns.V6QosVniEn
	201, // 478: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodeNewModes.QosPolicyNodeNewMode.groupType:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodeNewModes.QosPolicyNodeNewMode.GroupType
	202, // 479: huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodeNewModes.QosPolicyNodeNewMode.streamDirection:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosPolicys.QosPolicy.QosPolicyNodeNewModes.QosPolicyNodeNewMode.StreamDirection
	629, // 480: huaweiV8R10_qos.Qos.QosCbQos.QosVpnGroups.QosVpnGroup.qosVpnInstances:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosVpnGroups.QosVpnGroup.QosVpnInstances
	630, // 481: huaweiV8R10_qos.Qos.QosCbQos.QosVpnGroups.QosVpnGroup.QosVpnInstances.qosVpnInstance:type_name -> huaweiV8R10_qos.Qos.QosCbQos.QosVpnGroups.QosVpnGroup.QosVpnInstances.QosVpnInstance
	632, // 482: huaweiV8R10_qos.Qos.QosChannelProfileTmps.QosChannelProfileTmp.qosChannelProfileCfgs:type_name -> huaweiV8R10_qos.Qos.QosChannelProfileTmps.QosChannelProfileTmp.QosChannelProfileCfgs
	633, // 483: huaweiV8R10_qos.Qos.QosChannelProfileTmps.QosChannelProfileTmp.QosChannelProfileCfgs.qosChannelProfileCfg:type_name -> huaweiV8R10_qos.Qos.QosChannelProfileTmps.QosChannelProfileTmp.QosChannelProfileCfgs.QosChannelProfileCfg
	635, // 484: huaweiV8R10_qos.Qos.QosDss.QosDs.qosAppIfs:type_name -> huaweiV8R10_qos.Qos.QosDss.QosDs.QosAppIfs
	636, // 485: huaweiV8R10_qos.Qos.QosDss.QosDs.qosBas:type_name -> huaweiV8R10_qos.Qos.QosDss.QosDs.QosBas
	637, // 486: huaweiV8R10_qos.Qos.QosDss.QosDs.qosPhbs:type_name -> huaweiV8R10_qos.Qos.QosDss.QosDs.QosPhbs
	638, // 487: huaweiV8R10_qos.Qos.QosDss.QosDs.QosAppIfs.qosAppIf:type_name -> huaweiV8R10_qos.Qos.QosDss.QosDs.QosAppIfs.QosAppIf
	639, // 488: huaweiV8R10_qos.Qos.QosDss.QosDs.QosBas.qosBa:type_name -> huaweiV8R10_qos.Qos.QosDss.QosDs.QosBas.QosBa
	640, // 489: huaweiV8R10_qos.Qos.QosDss.QosDs.QosPhbs.qosPhb:type_name -> huaweiV8R10_qos.Qos.QosDss.QosDs.QosPhbs.QosPhb
	203, // 490: huaweiV8R10_qos.Qos.QosDss.QosDs.QosAppIfs.QosAppIf.direction:type_name -> huaweiV8R10_qos.Qos.QosDss.QosDs.QosAppIfs.QosAppIf.Direction
	204, // 491: huaweiV8R10_qos.Qos.QosDss.QosDs.QosBas.QosBa.baType:type_name -> huaweiV8R10_qos.Qos.QosDss.QosDs.QosBas.QosBa.BaType
	205, // 492: huaweiV8R10_qos.Qos.QosDss.QosDs.QosBas.QosBa.color:type_name -> huaweiV8R10_qos.Qos.QosDss.QosDs.QosBas.QosBa.Color
	206, // 493: huaweiV8R10_qos.Qos.QosDss.QosDs.QosBas.QosBa.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosDss.QosDs.QosBas.QosBa.ServiceClass
	207, // 494: huaweiV8R10_qos.Qos.QosDss.QosDs.QosPhbs.QosPhb.color:type_name -> huaweiV8R10_qos.Qos.QosDss.QosDs.QosPhbs.QosPhb.Color
	208, // 495: huaweiV8R10_qos.Qos.QosDss.QosDs.QosPhbs.QosPhb.phbType:type_name -> huaweiV8R10_qos.Qos.QosDss.QosDs.QosPhbs.QosPhb.PhbType
	209, // 496: huaweiV8R10_qos.Qos.QosDss.QosDs.QosPhbs.QosPhb.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosDss.QosDs.QosPhbs.QosPhb.ServiceClass
	642, // 497: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.qosEvplVxlanPhbs:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPhbs
	643, // 498: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.qosEvplVxlanPolicyApplys:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys
	644, // 499: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.qosEvplVxlanTrusts:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanTrusts
	645, // 500: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPhbs.qosEvplVxlanPhb:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPhbs.QosEvplVxlanPhb
	646, // 501: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.qosEvplVxlanPolicyApply:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply
	651, // 502: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanTrusts.qosEvplVxlanTrust:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanTrusts.QosEvplVxlanTrust
	210, // 503: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.evpldirection:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.Evpldirection
	211, // 504: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.evpllayer:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.Evpllayer
	647, // 505: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.qosEvplVxlanPolicyStats:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.QosEvplVxlanPolicyStats
	648, // 506: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.QosEvplVxlanPolicyStats.qosEvplVxlanPolicyStat:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.QosEvplVxlanPolicyStats.QosEvplVxlanPolicyStat
	649, // 507: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.QosEvplVxlanPolicyStats.QosEvplVxlanPolicyStat.qosEvplVxlanClassifierStats:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.QosEvplVxlanPolicyStats.QosEvplVxlanPolicyStat.QosEvplVxlanClassifierStats
	650, // 508: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.QosEvplVxlanPolicyStats.QosEvplVxlanPolicyStat.QosEvplVxlanClassifierStats.qosEvplVxlanClassifierStat:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanPolicyApplys.QosEvplVxlanPolicyApply.QosEvplVxlanPolicyStats.QosEvplVxlanPolicyStat.QosEvplVxlanClassifierStats.QosEvplVxlanClassifierStat
	212, // 509: huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanTrusts.QosEvplVxlanTrust.trustevplType:type_name -> huaweiV8R10_qos.Qos.QosEVPLQoss.QosEVPLQos.QosEvplVxlanTrusts.QosEvplVxlanTrust.TrustevplType
	213, // 510: huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.direction:type_name -> huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.Direction
	653, // 511: huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.qosGPolicyStats:type_name -> huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.QosGPolicyStats
	214, // 512: huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.uclType:type_name -> huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.UclType
	654, // 513: huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.QosGPolicyStats.qosGPolicyStat:type_name -> huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.QosGPolicyStats.QosGPolicyStat
	655, // 514: huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.QosGPolicyStats.QosGPolicyStat.qosGClassifierStats:type_name -> huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.QosGPolicyStats.QosGPolicyStat.QosGClassifierStats
	656, // 515: huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.QosGPolicyStats.QosGPolicyStat.QosGClassifierStats.qosGClassifierStat:type_name -> huaweiV8R10_qos.Qos.QosGlobalPolicys.QosGlobalPolicy.QosGPolicyStats.QosGPolicyStat.QosGClassifierStats.QosGClassifierStat
	215, // 516: huaweiV8R10_qos.Qos.QosGlobalQppbs.QosGlobalQppb.value:type_name -> huaweiV8R10_qos.Qos.QosGlobalQppbs.QosGlobalQppb.Value
	216, // 517: huaweiV8R10_qos.Qos.QosHardPipeAbilitys.QosHardPipeAbility.ability:type_name -> huaweiV8R10_qos.Qos.QosHardPipeAbilitys.QosHardPipeAbility.Ability
	660, // 518: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qOSProBasInsCfgNodes:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QOSProBasInsCfgNodes
	661, // 519: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosCvgPcds:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosCvgPcds
	662, // 520: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosDefSQCirs:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefSQCirs
	663, // 521: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosDefaultServiceClasss:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefaultServiceClasss
	664, // 522: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosDeiEnables:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDeiEnables
	665, // 523: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosDomLnkAdjs:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomLnkAdjs
	666, // 524: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosDomLnkAds:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomLnkAds
	667, // 525: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosDomRespools:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomRespools
	668, // 526: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosGQApps:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosGQApps
	669, // 527: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosHardPipes:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes
	670, // 528: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosIFGQStDisps:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIFGQStDisps
	671, // 529: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosIfCars:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars
	672, // 530: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosIfPhbs:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfPhbs
	673, // 531: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosIfQppbs:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs
	674, // 532: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosIfTrusts:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfTrusts
	675, // 533: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosLdpTraffics:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLdpTraffics
	676, // 534: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosLrs:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLrs
	677, // 535: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosLvHardPStVws:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLvHardPStVws
	678, // 536: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosMemLinkSchs:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMemLinkSchs
	679, // 537: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosMplsL2vcs:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMplsL2Vcs
	680, // 538: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosPQDiscardAlarms:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPQDiscardAlarms
	681, // 539: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosPolicyApplys:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys
	682, // 540: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosPortQueueAlarms:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueueAlarms
	683, // 541: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosPortQueues:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues
	684, // 542: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosPortShapings:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortShapings
	685, // 543: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosQosQueues:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues
	686, // 544: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosShapings:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosShapings
	687, // 545: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosSubPortQApps:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosSubPortQApps
	688, // 546: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosSubportquStaschs:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosSubportquStaschs
	689, // 547: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosUserVlanProfs:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosUserVlanProfs
	690, // 548: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosVllPipe:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe
	691, // 549: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosWfqShapings:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosWfqShapings
	692, // 550: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.qosWfqWeights:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosWfqWeights
	693, // 551: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QOSProBasInsCfgNodes.qOSProBasInsCfgNode:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QOSProBasInsCfgNodes.QOSProBasInsCfgNode
	694, // 552: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosCvgPcds.qosCvgPcd:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosCvgPcds.QosCvgPcd
	695, // 553: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefSQCirs.qosDefSQCir:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefSQCirs.QosDefSQCir
	696, // 554: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefaultServiceClasss.qosDefaultServiceClass:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefaultServiceClasss.QosDefaultServiceClass
	697, // 555: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDeiEnables.qosDeiEnable:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDeiEnables.QosDeiEnable
	698, // 556: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomLnkAdjs.qosDomLnkAdj:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomLnkAdjs.QosDomLnkAdj
	699, // 557: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomLnkAds.qosDomLnkAd:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomLnkAds.QosDomLnkAd
	700, // 558: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomRespools.qosDomRespool:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomRespools.QosDomRespool
	701, // 559: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosGQApps.qosGQApp:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosGQApps.QosGQApp
	702, // 560: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.qosHardPipe:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.QosHardPipe
	705, // 561: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIFGQStDisps.qosIFGQStDisp:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIFGQStDisps.QosIFGQStDisp
	706, // 562: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.qosIfCar:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar
	711, // 563: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfPhbs.qosIfPhb:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfPhbs.QosIfPhb
	712, // 564: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.qosIfQppb:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb
	715, // 565: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfTrusts.qosIfTrust:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfTrusts.QosIfTrust
	716, // 566: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLdpTraffics.qosLdpTraffic:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLdpTraffics.QosLdpTraffic
	717, // 567: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLrs.qosLr:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLrs.QosLr
	718, // 568: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLvHardPStVws.qosLvHardPStVw:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLvHardPStVws.QosLvHardPStVw
	719, // 569: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMemLinkSchs.qosMemLinkSch:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMemLinkSchs.QosMemLinkSch
	720, // 570: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMplsL2Vcs.qosMplsL2vc:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMplsL2Vcs.QosMplsL2Vc
	721, // 571: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPQDiscardAlarms.qosPQDiscardAlarm:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPQDiscardAlarms.QosPQDiscardAlarm
	722, // 572: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.qosPolicyApply:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply
	729, // 573: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueueAlarms.qosPortQueueAlarm:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueueAlarms.QosPortQueueAlarm
	730, // 574: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.qosPortQueue:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue
	733, // 575: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortShapings.qosPortShaping:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortShapings.QosPortShaping
	734, // 576: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.qosQosQueue:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.QosQosQueue
	737, // 577: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosShapings.qosShaping:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosShapings.QosShaping
	738, // 578: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosSubPortQApps.qosSubPortQApp:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosSubPortQApps.QosSubPortQApp
	739, // 579: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosSubportquStaschs.qosSubportquStasch:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosSubportquStaschs.QosSubportquStasch
	740, // 580: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosUserVlanProfs.qosUserVlanProf:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosUserVlanProfs.QosUserVlanProf
	275, // 581: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.color:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.Color
	276, // 582: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.egPipeMode:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.EgPipeMode
	277, // 583: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.ingPipeMode:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.IngPipeMode
	278, // 584: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.pipeMode:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.PipeMode
	279, // 585: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.ServiceClass
	280, // 586: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.trustType:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosVllPipe.TrustType
	741, // 587: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosWfqShapings.qosWfqShaping:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosWfqShapings.QosWfqShaping
	742, // 588: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosWfqWeights.qosWfqWeight:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosWfqWeights.QosWfqWeight
	217, // 589: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QOSProBasInsCfgNodes.QOSProBasInsCfgNode.anyOtherType:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QOSProBasInsCfgNodes.QOSProBasInsCfgNode.AnyOtherType
	218, // 590: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QOSProBasInsCfgNodes.QOSProBasInsCfgNode.direction:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QOSProBasInsCfgNodes.QOSProBasInsCfgNode.Direction
	219, // 591: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QOSProBasInsCfgNodes.QOSProBasInsCfgNode.identifyType:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QOSProBasInsCfgNodes.QOSProBasInsCfgNode.IdentifyType
	220, // 592: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosCvgPcds.QosCvgPcd.priority:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosCvgPcds.QosCvgPcd.Priority
	221, // 593: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefSQCirs.QosDefSQCir.direction:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefSQCirs.QosDefSQCir.Direction
	222, // 594: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefaultServiceClasss.QosDefaultServiceClass.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDefaultServiceClasss.QosDefaultServiceClass.ServiceClass
	223, // 595: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDeiEnables.QosDeiEnable.deiEnable:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDeiEnables.QosDeiEnable.DeiEnable
	224, // 596: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomLnkAds.QosDomLnkAd.modeType:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomLnkAds.QosDomLnkAd.ModeType
	225, // 597: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomRespools.QosDomRespool.direction:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosDomRespools.QosDomRespool.Direction
	226, // 598: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosGQApps.QosGQApp.gqDirection:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosGQApps.QosGQApp.GqDirection
	227, // 599: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosGQApps.QosGQApp.gqIdentifier:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosGQApps.QosGQApp.GqIdentifier
	228, // 600: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.QosHardPipe.qosHardPipeMode:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.QosHardPipe.QosHardPipeMode
	703, // 601: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.QosHardPipe.qosHardPipeStats:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.QosHardPipe.QosHardPipeStats
	704, // 602: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.QosHardPipe.QosHardPipeStats.qosHardPipeStat:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.QosHardPipe.QosHardPipeStats.QosHardPipeStat
	229, // 603: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.QosHardPipe.QosHardPipeStats.QosHardPipeStat.direction:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosHardPipes.QosHardPipe.QosHardPipeStats.QosHardPipeStat.Direction
	230, // 604: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIFGQStDisps.QosIFGQStDisp.direction:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIFGQStDisps.QosIFGQStDisp.Direction
	231, // 605: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIFGQStDisps.QosIFGQStDisp.servicebdClass:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIFGQStDisps.QosIFGQStDisp.ServicebdClass
	232, // 606: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.direction:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.Direction
	233, // 607: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.greenAction:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.GreenAction
	234, // 608: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.greenColor:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.GreenColor
	235, // 609: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.greenServiceClass:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.GreenServiceClass
	236, // 610: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.identifier:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.Identifier
	707, // 611: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.qosIfCarExtStats:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.QosIfCarExtStats
	708, // 612: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.qosIfCarStats:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.QosIfCarStats
	237, // 613: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.redAction:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.RedAction
	238, // 614: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.redColor:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.RedColor
	239, // 615: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.redServiceClass:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.RedServiceClass
	240, // 616: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.yellowAction:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.YellowAction
	241, // 617: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.yellowColor:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.YellowColor
	242, // 618: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.yellowServiceClass:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.YellowServiceClass
	709, // 619: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.QosIfCarExtStats.qosIfCarExtStat:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.QosIfCarExtStats.QosIfCarExtStat
	710, // 620: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.QosIfCarStats.qosIfCarStat:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfCars.QosIfCar.QosIfCarStats.QosIfCarStat
	243, // 621: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfPhbs.QosIfPhb.mapType:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfPhbs.QosIfPhb.MapType
	244, // 622: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfPhbs.QosIfPhb.operateType:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfPhbs.QosIfPhb.OperateType
	245, // 623: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.localID:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.LocalID
	246, // 624: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.mode:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.Mode
	713, // 625: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.qosIfQppbStats:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.QosIfQppbStats
	247, // 626: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.value:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.Value
	714, // 627: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.QosIfQppbStats.qosIfQppbStat:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfQppbs.QosIfQppb.QosIfQppbStats.QosIfQppbStat
	248, // 628: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfTrusts.QosIfTrust.directType:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfTrusts.QosIfTrust.DirectType
	249, // 629: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfTrusts.QosIfTrust.trustType:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosIfTrusts.QosIfTrust.TrustType
	250, // 630: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLdpTraffics.QosLdpTraffic.traffictype:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLdpTraffics.QosLdpTraffic.Traffictype
	251, // 631: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLvHardPStVws.QosLvHardPStVw.direction:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosLvHardPStVws.QosLvHardPStVw.Direction
	252, // 632: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMemLinkSchs.QosMemLinkSch.mode:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMemLinkSchs.QosMemLinkSch.Mode
	253, // 633: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMemLinkSchs.QosMemLinkSch.qosType:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosMemLinkSchs.QosMemLinkSch.QosType
	254, // 634: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPQDiscardAlarms.QosPQDiscardAlarm.discardType:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPQDiscardAlarms.QosPQDiscardAlarm.DiscardType
	255, // 635: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPQDiscardAlarms.QosPQDiscardAlarm.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPQDiscardAlarms.QosPQDiscardAlarm.ServiceClass
	256, // 636: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.direction:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.Direction
	257, // 637: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.identifier:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.Identifier
	258, // 638: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.layer:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.Layer
	723, // 639: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.qosActSQStats:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosActSQStats
	724, // 640: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.qosPolicyStats:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats
	725, // 641: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosActSQStats.qosActSQStat:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosActSQStats.QosActSQStat
	726, // 642: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.qosPolicyStat:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.QosPolicyStat
	259, // 643: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosActSQStats.QosActSQStat.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosActSQStats.QosActSQStat.ServiceClass
	727, // 644: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.QosPolicyStat.qosRuleStats:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.QosPolicyStat.QosRuleStats
	728, // 645: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.QosPolicyStat.QosRuleStats.qosRuleStat:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.QosPolicyStat.QosRuleStats.QosRuleStat
	260, // 646: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.QosPolicyStat.QosRuleStats.QosRuleStat.direction:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.QosPolicyStat.QosRuleStats.QosRuleStat.Direction
	261, // 647: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.QosPolicyStat.QosRuleStats.QosRuleStat.protocolFamily:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPolicyApplys.QosPolicyApply.QosPolicyStats.QosPolicyStat.QosRuleStats.QosRuleStat.Protocol
	262, // 648: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueueAlarms.QosPortQueueAlarm.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueueAlarms.QosPortQueueAlarm.ServiceClass
	263, // 649: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.lowlatency:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.Lowlatency
	731, // 650: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.qosPortQueueStats:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.QosPortQueueStats
	264, // 651: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.queueScheduleMode:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.QueueScheduleMode
	265, // 652: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.ServiceClass
	732, // 653: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.QosPortQueueStats.qosPortQueueStat:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.QosPortQueueStats.QosPortQueueStat
	266, // 654: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.QosPortQueueStats.QosPortQueueStat.isonboard:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortQueues.QosPortQueue.QosPortQueueStats.QosPortQueueStat.Isonboard
	267, // 655: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortShapings.QosPortShaping.shapingType:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosPortShapings.QosPortShaping.ShapingType
	268, // 656: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.QosQosQueue.priority:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.QosQosQueue.Priority
	735, // 657: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.QosQosQueue.qosQosQueueStats:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.QosQosQueue.QosQosQueueStats
	269, // 658: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.QosQosQueue.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.QosQosQueue.ServiceClass
	736, // 659: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.QosQosQueue.QosQosQueueStats.qosQosQueueStat:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosQosQueues.QosQosQueue.QosQosQueueStats.QosQosQueueStat
	270, // 660: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosShapings.QosShaping.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosShapings.QosShaping.ServiceClass
	271, // 661: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosSubportquStaschs.QosSubportquStasch.servicebdClasssch:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosSubportquStaschs.QosSubportquStasch.ServicebdClasssch
	272, // 662: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosUserVlanProfs.QosUserVlanProf.direction:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosUserVlanProfs.QosUserVlanProf.Direction
	273, // 663: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosUserVlanProfs.QosUserVlanProf.eachvlan:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosUserVlanProfs.QosUserVlanProf.Eachvlan
	274, // 664: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosUserVlanProfs.QosUserVlanProf.vlanType:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosUserVlanProfs.QosUserVlanProf.VlanType
	281, // 665: huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosWfqShapings.QosWfqShaping.priority:type_name -> huaweiV8R10_qos.Qos.QosIfQoss.QosIfQos.QosWfqShapings.QosWfqShaping.Priority
	282, // 666: huaweiV8R10_qos.Qos.QosIfQppbCfgs.QosIfQppbCfg.direction:type_name -> huaweiV8R10_qos.Qos.QosIfQppbCfgs.QosIfQppbCfg.Direction
	283, // 667: huaweiV8R10_qos.Qos.QosIfQppbCfgs.QosIfQppbCfg.state:type_name -> huaweiV8R10_qos.Qos.QosIfQppbCfgs.QosIfQppbCfg.State
	284, // 668: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.direction:type_name -> huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.Direction
	745, // 669: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.qosInfUserCARs:type_name -> huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserCARs
	746, // 670: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.qosInfUserSQs:type_name -> huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserSQs
	747, // 671: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserCARs.qosInfUserCAR:type_name -> huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserCARs.QosInfUserCAR
	748, // 672: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserSQs.qosInfUserSQ:type_name -> huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserSQs.QosInfUserSQ
	285, // 673: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserCARs.QosInfUserCAR.resType:type_name -> huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserCARs.QosInfUserCAR.ResType
	286, // 674: huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserSQs.QosInfUserSQ.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosInfUsers.QosInfUser.QosInfUserSQs.QosInfUserSQ.ServiceClass
	287, // 675: huaweiV8R10_qos.Qos.QosLowLaEns.QosLowLaEn.enableType:type_name -> huaweiV8R10_qos.Qos.QosLowLaEns.QosLowLaEn.EnableType
	288, // 676: huaweiV8R10_qos.Qos.QosLowLaEns.QosLowLaEn.enableValue:type_name -> huaweiV8R10_qos.Qos.QosLowLaEns.QosLowLaEn.EnableValue
	751, // 677: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.atmPvcs:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs
	752, // 678: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.atmPvps:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps
	289, // 679: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.ifPhyType:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.IfPhyType
	753, // 680: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.qosLsAtmTrafficQ:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsAtmTrafficQ
	754, // 681: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.qosLsPortQueues:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues
	755, // 682: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.atmPvc:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc
	762, // 683: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.atmPvp:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp
	301, // 684: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsAtmTrafficQ.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsAtmTrafficQ.ServiceClass
	302, // 685: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsAtmTrafficQ.trafficQColor:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsAtmTrafficQ.TrafficQColor
	303, // 686: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsAtmTrafficQ.trafficQMode:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsAtmTrafficQ.TrafficQMode
	766, // 687: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.qosLsPortQueue:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue
	756, // 688: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.qosLsPvcQueues:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues
	757, // 689: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.qosLsPvcTrafficQ:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrafficQ
	758, // 690: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.qosLsPvcTrustUps:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrustUps
	759, // 691: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.qosLsPvcQueue:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.QosLsPvcQueue
	293, // 692: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrafficQ.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrafficQ.ServiceClass
	294, // 693: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrafficQ.trafficQColor:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrafficQ.TrafficQColor
	295, // 694: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrafficQ.trafficQMode:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrafficQ.TrafficQMode
	761, // 695: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrustUps.qosLsPvcTrustUp:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrustUps.QosLsPvcTrustUp
	290, // 696: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.QosLsPvcQueue.pirSetMode:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.QosLsPvcQueue.PirSetMode
	291, // 697: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.QosLsPvcQueue.pvcQueueMode:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.QosLsPvcQueue.PvcQueueMode
	760, // 698: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.QosLsPvcQueue.pvcQueueStat:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.QosLsPvcQueue.PvcQueueStat
	292, // 699: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.QosLsPvcQueue.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcQueues.QosLsPvcQueue.ServiceClass
	296, // 700: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrustUps.QosLsPvcTrustUp.directType:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvcs.AtmPvc.QosLsPvcTrustUps.QosLsPvcTrustUp.DirectType
	763, // 701: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.qosLsPvpTrafficQ:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrafficQ
	764, // 702: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.qosLsPvpTrustUps:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrustUps
	297, // 703: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrafficQ.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrafficQ.ServiceClass
	298, // 704: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrafficQ.trafficQColor:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrafficQ.TrafficQColor
	299, // 705: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrafficQ.trafficQMode:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrafficQ.TrafficQMode
	765, // 706: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrustUps.qosLsPvpTrustUp:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrustUps.QosLsPvpTrustUp
	300, // 707: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrustUps.QosLsPvpTrustUp.directType:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.AtmPvps.AtmPvp.QosLsPvpTrustUps.QosLsPvpTrustUp.DirectType
	304, // 708: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.cirMode:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.CirMode
	305, // 709: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.operType:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.OperType
	306, // 710: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.pirMode:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.PirMode
	767, // 711: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.qosLsPortQueueStat:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.QosLsPortQueueStat
	307, // 712: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.scheduleMode:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.ScheduleMode
	308, // 713: huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosLsIfQoss.QosLsIfQos.QosLsPortQueues.QosLsPortQueue.ServiceClass
	310, // 714: huaweiV8R10_qos.Qos.QosPQschedules.QosPQschedule.qosDirection:type_name -> huaweiV8R10_qos.Qos.QosPQschedules.QosPQschedule.QosDirection
	311, // 715: huaweiV8R10_qos.Qos.QosPQschedules.QosPQschedule.qosMode:type_name -> huaweiV8R10_qos.Qos.QosPQschedules.QosPQschedule.QosMode
	312, // 716: huaweiV8R10_qos.Qos.QosPackEnables.QosPackEnable.enableType:type_name -> huaweiV8R10_qos.Qos.QosPackEnables.QosPackEnable.EnableType
	313, // 717: huaweiV8R10_qos.Qos.QosPortQueueStatInfos.QosPortQueueStatInfo.queueType:type_name -> huaweiV8R10_qos.Qos.QosPortQueueStatInfos.QosPortQueueStatInfo.QueueType
	774, // 718: huaweiV8R10_qos.Qos.QosQppbPolicys.QosQppbPolicy.qosLocalIDs:type_name -> huaweiV8R10_qos.Qos.QosQppbPolicys.QosQppbPolicy.QosLocalIDs
	775, // 719: huaweiV8R10_qos.Qos.QosQppbPolicys.QosQppbPolicy.QosLocalIDs.qosLocalID:type_name -> huaweiV8R10_qos.Qos.QosQppbPolicys.QosQppbPolicy.QosLocalIDs.QosLocalID
	314, // 720: huaweiV8R10_qos.Qos.QosRdrRouteFlts.QosRdrRouteFlt.iPFamily:type_name -> huaweiV8R10_qos.Qos.QosRdrRouteFlts.QosRdrRouteFlt.IPFamily
	778, // 721: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.qosRemoteDefClasss:type_name -> huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteDefClasss
	779, // 722: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.qosRemoteIfTrusts:type_name -> huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteIfTrusts
	780, // 723: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteDefClasss.qosRemoteDefClass:type_name -> huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteDefClasss.QosRemoteDefClass
	781, // 724: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteIfTrusts.qosRemoteIfTrust:type_name -> huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteIfTrusts.QosRemoteIfTrust
	315, // 725: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteDefClasss.QosRemoteDefClass.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteDefClasss.QosRemoteDefClass.ServiceClass
	316, // 726: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteIfTrusts.QosRemoteIfTrust.directType:type_name -> huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteIfTrusts.QosRemoteIfTrust.DirectType
	317, // 727: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteIfTrusts.QosRemoteIfTrust.offLoad:type_name -> huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteIfTrusts.QosRemoteIfTrust.OffLoad
	318, // 728: huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteIfTrusts.QosRemoteIfTrust.trustType:type_name -> huaweiV8R10_qos.Qos.QosRemoteIfQoss.QosRemoteIfQos.QosRemoteIfTrusts.QosRemoteIfTrust.TrustType
	319, // 729: huaweiV8R10_qos.Qos.QosSlotChannelAlarms.QosSlotChannelAlarm.almType:type_name -> huaweiV8R10_qos.Qos.QosSlotChannelAlarms.QosSlotChannelAlarm.AlmType
	320, // 730: huaweiV8R10_qos.Qos.QosSlotChannelAlarms.QosSlotChannelAlarm.pool:type_name -> huaweiV8R10_qos.Qos.QosSlotChannelAlarms.QosSlotChannelAlarm.Pool
	321, // 731: huaweiV8R10_qos.Qos.QosSlotChannelPres.QosSlotChannelPre.upOrDown:type_name -> huaweiV8R10_qos.Qos.QosSlotChannelPres.QosSlotChannelPre.UpOrDown
	785, // 732: huaweiV8R10_qos.Qos.QosSlotChannelProfileApps.QosSlotChannelProfileApp.qosDisplayChannelProfiles:type_name -> huaweiV8R10_qos.Qos.QosSlotChannelProfileApps.QosSlotChannelProfileApp.QosDisplayChannelProfiles
	786, // 733: huaweiV8R10_qos.Qos.QosSlotChannelProfileApps.QosSlotChannelProfileApp.QosDisplayChannelProfiles.qosDisplayChannelProfile:type_name -> huaweiV8R10_qos.Qos.QosSlotChannelProfileApps.QosSlotChannelProfileApp.QosDisplayChannelProfiles.QosDisplayChannelProfile
	322, // 734: huaweiV8R10_qos.Qos.QosSlotCvgPcds.QosSlotCvgPcd.cos:type_name -> huaweiV8R10_qos.Qos.QosSlotCvgPcds.QosSlotCvgPcd.Cos
	323, // 735: huaweiV8R10_qos.Qos.QosSlotCvgPcds.QosSlotCvgPcd.priority:type_name -> huaweiV8R10_qos.Qos.QosSlotCvgPcds.QosSlotCvgPcd.Priority
	324, // 736: huaweiV8R10_qos.Qos.QosSlotPQAlarms.QosSlotPQAlarm.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosSlotPQAlarms.QosSlotPQAlarm.ServiceClass
	325, // 737: huaweiV8R10_qos.Qos.QosSlotPQDiscardAlarms.QosSlotPQDiscardAlarm.discardType:type_name -> huaweiV8R10_qos.Qos.QosSlotPQDiscardAlarms.QosSlotPQDiscardAlarm.DiscardType
	326, // 738: huaweiV8R10_qos.Qos.QosSlotPQDiscardAlarms.QosSlotPQDiscardAlarm.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosSlotPQDiscardAlarms.QosSlotPQDiscardAlarm.ServiceClass
	791, // 739: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qOSObsFilterNodes:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QOSObsFilterNodes
	792, // 740: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosAccessBoardSchEnOuts:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosAccessBoardSchEnOuts
	793, // 741: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosDomCarToSQs:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosDomCarToSQs
	794, // 742: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosExpPhbDisbls:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosExpPhbDisbls
	795, // 743: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosFabQueueEnables:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables
	796, // 744: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosMcShapSrvTemplates:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMcShapSrvTemplates
	797, // 745: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosMcShapers:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMcShapers
	798, // 746: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosMulticastShapers:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMulticastShapers
	799, // 747: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosPolicyMatchIpv6s:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchIpv6S
	800, // 748: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosPolicyMatchMcs:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMcs
	801, // 749: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosPolicyMatchMplsL2s:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMplsL2S
	802, // 750: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosPolicyMatchMplss:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMplss
	803, // 751: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosPolicyMatchPkts:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchPkts
	804, // 752: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosPolicyMatchs:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchs
	805, // 753: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosQOSBursts:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSBursts
	806, // 754: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosQOSGlobalBufCfgs:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSGlobalBufCfgs
	807, // 755: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosSlotFQPirs:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotFQPirs
	808, // 756: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosSlotMcVpnQueues:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues
	809, // 757: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosSlotMcVpnShapers:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnShapers
	810, // 758: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosSlotORideAdjNums:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideAdjNums
	811, // 759: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosSlotORideDeCycles:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideDeCycles
	812, // 760: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosSlotORideEnables:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideEnables
	813, // 761: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosSlotORideGradeThrdIns:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideGradeThrdIns
	814, // 762: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosSlotORideGradeThrdOuts:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideGradeThrdOuts
	815, // 763: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosSlotORideMonitorNums:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideMonitorNums
	816, // 764: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosSlotORideUpCycles:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideUpCycles
	817, // 765: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosSlotUclMatchs:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotUclMatchs
	818, // 766: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.qosUserQueueResource4Coss:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosUserQueueResource4Coss
	819, // 767: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QOSObsFilterNodes.qOSObsFilterNode:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QOSObsFilterNodes.QOSObsFilterNode
	820, // 768: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosAccessBoardSchEnOuts.qosAccessBoardSchEnOut:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosAccessBoardSchEnOuts.QosAccessBoardSchEnOut
	821, // 769: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosDomCarToSQs.qosDomCarToSQ:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosDomCarToSQs.QosDomCarToSQ
	822, // 770: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosExpPhbDisbls.qosExpPhbDisbl:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosExpPhbDisbls.QosExpPhbDisbl
	823, // 771: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.qosFabQueueEnable:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable
	826, // 772: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMcShapSrvTemplates.qosMcShapSrvTemplate:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMcShapSrvTemplates.QosMcShapSrvTemplate
	827, // 773: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMcShapers.qosMcShaper:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMcShapers.QosMcShaper
	828, // 774: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMulticastShapers.qosMulticastShaper:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMulticastShapers.QosMulticastShaper
	829, // 775: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchIpv6S.qosPolicyMatchIpv6:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchIpv6S.QosPolicyMatchIpv6
	830, // 776: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMcs.qosPolicyMatchMc:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMcs.QosPolicyMatchMc
	831, // 777: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMplsL2S.qosPolicyMatchMplsL2:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMplsL2S.QosPolicyMatchMplsL2
	832, // 778: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMplss.qosPolicyMatchMpls:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMplss.QosPolicyMatchMpls
	833, // 779: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchPkts.qosPolicyMatchPkt:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchPkts.QosPolicyMatchPkt
	834, // 780: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchs.qosPolicyMatch:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchs.QosPolicyMatch
	835, // 781: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSBursts.qosQOSBurst:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSBursts.QosQOSBurst
	836, // 782: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSGlobalBufCfgs.qosQOSGlobalBufCfg:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSGlobalBufCfgs.QosQOSGlobalBufCfg
	837, // 783: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotFQPirs.qosSlotFQPir:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotFQPirs.QosSlotFQPir
	838, // 784: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.qosSlotMcVpnQueue:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.QosSlotMcVpnQueue
	841, // 785: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnShapers.qosSlotMcVpnShaper:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnShapers.QosSlotMcVpnShaper
	842, // 786: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideAdjNums.qosSlotORideAdjNum:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideAdjNums.QosSlotORideAdjNum
	843, // 787: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideDeCycles.qosSlotORideDeCycle:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideDeCycles.QosSlotORideDeCycle
	844, // 788: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideEnables.qosSlotORideEnable:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideEnables.QosSlotORideEnable
	845, // 789: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideGradeThrdIns.qosSlotORideGradeThrdIn:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideGradeThrdIns.QosSlotORideGradeThrdIn
	846, // 790: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideGradeThrdOuts.qosSlotORideGradeThrdOut:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideGradeThrdOuts.QosSlotORideGradeThrdOut
	847, // 791: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideMonitorNums.qosSlotORideMonitorNum:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideMonitorNums.QosSlotORideMonitorNum
	848, // 792: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideUpCycles.qosSlotORideUpCycle:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotORideUpCycles.QosSlotORideUpCycle
	849, // 793: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotUclMatchs.qosSlotUclMatch:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotUclMatchs.QosSlotUclMatch
	850, // 794: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosUserQueueResource4Coss.qosUserQueueResource4Cos:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosUserQueueResource4Coss.QosUserQueueResource4Cos
	327, // 795: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosAccessBoardSchEnOuts.QosAccessBoardSchEnOut.qosEnable:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosAccessBoardSchEnOuts.QosAccessBoardSchEnOut.QosEnable
	328, // 796: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosDomCarToSQs.QosDomCarToSQ.disableFlag:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosDomCarToSQs.QosDomCarToSQ.DisableFlag
	329, // 797: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosExpPhbDisbls.QosExpPhbDisbl.disableFwdType:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosExpPhbDisbls.QosExpPhbDisbl.DisableFwdType
	330, // 798: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.enable:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.Enable
	824, // 799: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.qosVOQStatisticss:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.QosVOQStatisticss
	825, // 800: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.QosVOQStatisticss.qosVOQStatistics:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.QosVOQStatisticss.QosVOQStatistics
	331, // 801: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.QosVOQStatisticss.QosVOQStatistics.cosType:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.QosVOQStatisticss.QosVOQStatistics.CosType
	332, // 802: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.QosVOQStatisticss.QosVOQStatistics.voqFlag:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosFabQueueEnables.QosFabQueueEnable.QosVOQStatisticss.QosVOQStatistics.VoqFlag
	333, // 803: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMcShapSrvTemplates.QosMcShapSrvTemplate.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMcShapSrvTemplates.QosMcShapSrvTemplate.ServiceClass
	334, // 804: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMulticastShapers.QosMulticastShaper.priority:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosMulticastShapers.QosMulticastShaper.Priority
	335, // 805: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchIpv6S.QosPolicyMatchIpv6.matchMode:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchIpv6S.QosPolicyMatchIpv6.MatchMode
	336, // 806: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMcs.QosPolicyMatchMc.matchMode:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosPolicyMatchMcs.QosPolicyMatchMc.MatchMode
	337, // 807: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSGlobalBufCfgs.QosQOSGlobalBufCfg.direction:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSGlobalBufCfgs.QosQOSGlobalBufCfg.Direction
	338, // 808: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSGlobalBufCfgs.QosQOSGlobalBufCfg.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosQOSGlobalBufCfgs.QosQOSGlobalBufCfg.ServiceClass
	339, // 809: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotFQPirs.QosSlotFQPir.fqPirType:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotFQPirs.QosSlotFQPir.FqPirType
	839, // 810: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.QosSlotMcVpnQueue.qosSlotPortQueueStats:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.QosSlotMcVpnQueue.QosSlotPortQueueStats
	340, // 811: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.QosSlotMcVpnQueue.queueScheduleMode:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.QosSlotMcVpnQueue.QueueScheduleMode
	341, // 812: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.QosSlotMcVpnQueue.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.QosSlotMcVpnQueue.ServiceClass
	840, // 813: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.QosSlotMcVpnQueue.QosSlotPortQueueStats.qosSlotPortQueueStat:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnQueues.QosSlotMcVpnQueue.QosSlotPortQueueStats.QosSlotPortQueueStat
	342, // 814: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnShapers.QosSlotMcVpnShaper.shapingType:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotMcVpnShapers.QosSlotMcVpnShaper.ShapingType
	343, // 815: huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotUclMatchs.QosSlotUclMatch.matchType:type_name -> huaweiV8R10_qos.Qos.QosSlotQoss.QosSlotQos.QosSlotUclMatchs.QosSlotUclMatch.MatchType
	852, // 816: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.qosSubPortQueueConfigs:type_name -> huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueConfigs
	853, // 817: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.qosSubPortQueueShapings:type_name -> huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueShapings
	854, // 818: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.qosSubPortQueueWeights:type_name -> huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueWeights
	855, // 819: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueConfigs.qosSubPortQueueConfig:type_name -> huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueConfigs.QosSubPortQueueConfig
	856, // 820: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueShapings.qosSubPortQueueShaping:type_name -> huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueShapings.QosSubPortQueueShaping
	857, // 821: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueWeights.qosSubPortQueueWeight:type_name -> huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueWeights.QosSubPortQueueWeight
	344, // 822: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueConfigs.QosSubPortQueueConfig.direction:type_name -> huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueConfigs.QosSubPortQueueConfig.Direction
	345, // 823: huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueWeights.QosSubPortQueueWeight.direction:type_name -> huaweiV8R10_qos.Qos.QosSubPortQueues.QosSubPortQueue.QosSubPortQueueWeights.QosSubPortQueueWeight.Direction
	859, // 824: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.qosLinkLayerExcludes:type_name -> huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerExcludes
	860, // 825: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.qosLinkLayerRedbacks:type_name -> huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerRedbacks
	861, // 826: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.qosScheModes:type_name -> huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosScheModes
	862, // 827: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.qosTMSchTraffs:type_name -> huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosTMSchTraffs
	346, // 828: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.resType:type_name -> huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.ResType
	863, // 829: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerExcludes.qosLinkLayerExclude:type_name -> huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerExcludes.QosLinkLayerExclude
	864, // 830: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerRedbacks.qosLinkLayerRedback:type_name -> huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerRedbacks.QosLinkLayerRedback
	865, // 831: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosScheModes.qosScheMode:type_name -> huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosScheModes.QosScheMode
	866, // 832: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosTMSchTraffs.qosTMSchTraff:type_name -> huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosTMSchTraffs.QosTMSchTraff
	347, // 833: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerExcludes.QosLinkLayerExclude.accessType:type_name -> huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerExcludes.QosLinkLayerExclude.AccessType
	348, // 834: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerExcludes.QosLinkLayerExclude.excLayeType:type_name -> huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerExcludes.QosLinkLayerExclude.ExcLayeType
	349, // 835: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerRedbacks.QosLinkLayerRedback.redbackType:type_name -> huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosLinkLayerRedbacks.QosLinkLayerRedback.RedbackType
	350, // 836: huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosScheModes.QosScheMode.modeType:type_name -> huaweiV8R10_qos.Qos.QosSystemViews.QosSystemView.QosScheModes.QosScheMode.ModeType
	868, // 837: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.qosVpnVxlanCarDisables:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanCarDisables
	869, // 838: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.qosVpnVxlanPhbs:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPhbs
	870, // 839: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.qosVpnVxlanPolicyApplys:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys
	871, // 840: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.qosVpnVxlanTrusts:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanTrusts
	872, // 841: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanCarDisables.qosVpnVxlanCarDisable:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanCarDisables.QosVpnVxlanCarDisable
	873, // 842: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPhbs.qosVpnVxlanPhb:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPhbs.QosVpnVxlanPhb
	874, // 843: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.qosVpnVxlanPolicyApply:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply
	879, // 844: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanTrusts.qosVpnVxlanTrust:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanTrusts.QosVpnVxlanTrust
	351, // 845: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanCarDisables.QosVpnVxlanCarDisable.excludeMode:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanCarDisables.QosVpnVxlanCarDisable.ExcludeMode
	875, // 846: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.qosVpnVxlanPolicyStats:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.QosVpnVxlanPolicyStats
	352, // 847: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.vpndirection:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.Vpndirection
	353, // 848: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.vpnlayer:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.Vpnlayer
	876, // 849: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.QosVpnVxlanPolicyStats.qosVpnVxlanPolicyStat:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.QosVpnVxlanPolicyStats.QosVpnVxlanPolicyStat
	877, // 850: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.QosVpnVxlanPolicyStats.QosVpnVxlanPolicyStat.qosVpnVxlanClassifierStats:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.QosVpnVxlanPolicyStats.QosVpnVxlanPolicyStat.QosVpnVxlanClassifierStats
	878, // 851: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.QosVpnVxlanPolicyStats.QosVpnVxlanPolicyStat.QosVpnVxlanClassifierStats.qosVpnVxlanClassifierStat:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanPolicyApplys.QosVpnVxlanPolicyApply.QosVpnVxlanPolicyStats.QosVpnVxlanPolicyStat.QosVpnVxlanClassifierStats.QosVpnVxlanClassifierStat
	354, // 852: huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanTrusts.QosVpnVxlanTrust.trustvpnType:type_name -> huaweiV8R10_qos.Qos.QosVPNQoss.QosVPNQos.QosVpnVxlanTrusts.QosVpnVxlanTrust.TrustvpnType
	884, // 853: huaweiV8R10_qos.Qos.QosWred.QosFlowWreds.qosFlowWred:type_name -> huaweiV8R10_qos.Qos.QosWred.QosFlowWreds.QosFlowWred
	887, // 854: huaweiV8R10_qos.Qos.QosWred.QosPortWreds.qosPortWred:type_name -> huaweiV8R10_qos.Qos.QosWred.QosPortWreds.QosPortWred
	890, // 855: huaweiV8R10_qos.Qos.QosWred.QosWredQueues.qosWredQueue:type_name -> huaweiV8R10_qos.Qos.QosWred.QosWredQueues.QosWredQueue
	891, // 856: huaweiV8R10_qos.Qos.QosWred.QosWreds.qosWred:type_name -> huaweiV8R10_qos.Qos.QosWred.QosWreds.QosWred
	885, // 857: huaweiV8R10_qos.Qos.QosWred.QosFlowWreds.QosFlowWred.qosWredColors:type_name -> huaweiV8R10_qos.Qos.QosWred.QosFlowWreds.QosFlowWred.QosWredColors
	886, // 858: huaweiV8R10_qos.Qos.QosWred.QosFlowWreds.QosFlowWred.QosWredColors.qosWredColor:type_name -> huaweiV8R10_qos.Qos.QosWred.QosFlowWreds.QosFlowWred.QosWredColors.QosWredColor
	355, // 859: huaweiV8R10_qos.Qos.QosWred.QosFlowWreds.QosFlowWred.QosWredColors.QosWredColor.color:type_name -> huaweiV8R10_qos.Qos.QosWred.QosFlowWreds.QosFlowWred.QosWredColors.QosWredColor.Color
	888, // 860: huaweiV8R10_qos.Qos.QosWred.QosPortWreds.QosPortWred.qosWredColors:type_name -> huaweiV8R10_qos.Qos.QosWred.QosPortWreds.QosPortWred.QosWredColors
	889, // 861: huaweiV8R10_qos.Qos.QosWred.QosPortWreds.QosPortWred.QosWredColors.qosWredColor:type_name -> huaweiV8R10_qos.Qos.QosWred.QosPortWreds.QosPortWred.QosWredColors.QosWredColor
	356, // 862: huaweiV8R10_qos.Qos.QosWred.QosPortWreds.QosPortWred.QosWredColors.QosWredColor.color:type_name -> huaweiV8R10_qos.Qos.QosWred.QosPortWreds.QosPortWred.QosWredColors.QosWredColor.Color
	357, // 863: huaweiV8R10_qos.Qos.QosWred.QosWredQueues.QosWredQueue.serviceClass:type_name -> huaweiV8R10_qos.Qos.QosWred.QosWredQueues.QosWredQueue.ServiceClass
	358, // 864: huaweiV8R10_qos.Qos.QosWred.QosWredQueues.QosWredQueue.speedType:type_name -> huaweiV8R10_qos.Qos.QosWred.QosWredQueues.QosWredQueue.SpeedType
	892, // 865: huaweiV8R10_qos.Qos.QosWred.QosWreds.QosWred.qosWredColors:type_name -> huaweiV8R10_qos.Qos.QosWred.QosWreds.QosWred.QosWredColors
	893, // 866: huaweiV8R10_qos.Qos.QosWred.QosWreds.QosWred.QosWredColors.qosWredColor:type_name -> huaweiV8R10_qos.Qos.QosWred.QosWreds.QosWred.QosWredColors.QosWredColor
	359, // 867: huaweiV8R10_qos.Qos.QosWred.QosWreds.QosWred.QosWredColors.QosWredColor.color:type_name -> huaweiV8R10_qos.Qos.QosWred.QosWreds.QosWred.QosWredColors.QosWredColor.Color
	360, // 868: huaweiV8R10_qos.HuaweiQos.QosResetATMPvcQueue:input_type -> huaweiV8R10_qos.QosResetATMPvcQueueRequest
	361, // 869: huaweiV8R10_qos.HuaweiQos.QosResetBdPolicyApply:input_type -> huaweiV8R10_qos.QosResetBdPolicyApplyRequest
	362, // 870: huaweiV8R10_qos.HuaweiQos.QosResetBdVxlanPolicyApply:input_type -> huaweiV8R10_qos.QosResetBdVxlanPolicyApplyRequest
	363, // 871: huaweiV8R10_qos.HuaweiQos.QosResetEvplVxlanPolicyApply:input_type -> huaweiV8R10_qos.QosResetEvplVxlanPolicyApplyRequest
	364, // 872: huaweiV8R10_qos.HuaweiQos.QosResetGlobalPolicy:input_type -> huaweiV8R10_qos.QosResetGlobalPolicyRequest
	365, // 873: huaweiV8R10_qos.HuaweiQos.QosResetHardPipe:input_type -> huaweiV8R10_qos.QosResetHardPipeRequest
	366, // 874: huaweiV8R10_qos.HuaweiQos.QosResetIFGQSt:input_type -> huaweiV8R10_qos.QosResetIFGQStRequest
	367, // 875: huaweiV8R10_qos.HuaweiQos.QosResetIfCar:input_type -> huaweiV8R10_qos.QosResetIfCarRequest
	368, // 876: huaweiV8R10_qos.HuaweiQos.QosResetIfGQ:input_type -> huaweiV8R10_qos.QosResetIfGQRequest
	369, // 877: huaweiV8R10_qos.HuaweiQos.QosResetIfQppb:input_type -> huaweiV8R10_qos.QosResetIfQppbRequest
	370, // 878: huaweiV8R10_qos.HuaweiQos.QosResetIfSQ:input_type -> huaweiV8R10_qos.QosResetIfSQRequest
	371, // 879: huaweiV8R10_qos.HuaweiQos.QosResetLsPortQueue:input_type -> huaweiV8R10_qos.QosResetLsPortQueueRequest
	372, // 880: huaweiV8R10_qos.HuaweiQos.QosResetLvHardPipe:input_type -> huaweiV8R10_qos.QosResetLvHardPipeRequest
	373, // 881: huaweiV8R10_qos.HuaweiQos.QosResetPolicyApply:input_type -> huaweiV8R10_qos.QosResetPolicyApplyRequest
	374, // 882: huaweiV8R10_qos.HuaweiQos.QosResetPortQueue:input_type -> huaweiV8R10_qos.QosResetPortQueueRequest
	375, // 883: huaweiV8R10_qos.HuaweiQos.QosResetProUSt:input_type -> huaweiV8R10_qos.QosResetProUStRequest
	376, // 884: huaweiV8R10_qos.HuaweiQos.QosResetProfile:input_type -> huaweiV8R10_qos.QosResetProfileRequest
	377, // 885: huaweiV8R10_qos.HuaweiQos.QosResetSlotPortQueue:input_type -> huaweiV8R10_qos.QosResetSlotPortQueueRequest
	378, // 886: huaweiV8R10_qos.HuaweiQos.QosResetSlotVOQSt:input_type -> huaweiV8R10_qos.QosResetSlotVOQStRequest
	379, // 887: huaweiV8R10_qos.HuaweiQos.QosResetSubPortQSt:input_type -> huaweiV8R10_qos.QosResetSubPortQStRequest
	380, // 888: huaweiV8R10_qos.HuaweiQos.QosResetVniGQ:input_type -> huaweiV8R10_qos.QosResetVniGQRequest
	381, // 889: huaweiV8R10_qos.HuaweiQos.QosResetVpnVxlanPolicyApply:input_type -> huaweiV8R10_qos.QosResetVpnVxlanPolicyApplyRequest
	382, // 890: huaweiV8R10_qos.HuaweiQos.QosResetATMPvcQueue:output_type -> huaweiV8R10_qos.Empty
	382, // 891: huaweiV8R10_qos.HuaweiQos.QosResetBdPolicyApply:output_type -> huaweiV8R10_qos.Empty
	382, // 892: huaweiV8R10_qos.HuaweiQos.QosResetBdVxlanPolicyApply:output_type -> huaweiV8R10_qos.Empty
	382, // 893: huaweiV8R10_qos.HuaweiQos.QosResetEvplVxlanPolicyApply:output_type -> huaweiV8R10_qos.Empty
	382, // 894: huaweiV8R10_qos.HuaweiQos.QosResetGlobalPolicy:output_type -> huaweiV8R10_qos.Empty
	382, // 895: huaweiV8R10_qos.HuaweiQos.QosResetHardPipe:output_type -> huaweiV8R10_qos.Empty
	382, // 896: huaweiV8R10_qos.HuaweiQos.QosResetIFGQSt:output_type -> huaweiV8R10_qos.Empty
	382, // 897: huaweiV8R10_qos.HuaweiQos.QosResetIfCar:output_type -> huaweiV8R10_qos.Empty
	382, // 898: huaweiV8R10_qos.HuaweiQos.QosResetIfGQ:output_type -> huaweiV8R10_qos.Empty
	382, // 899: huaweiV8R10_qos.HuaweiQos.QosResetIfQppb:output_type -> huaweiV8R10_qos.Empty
	382, // 900: huaweiV8R10_qos.HuaweiQos.QosResetIfSQ:output_type -> huaweiV8R10_qos.Empty
	382, // 901: huaweiV8R10_qos.HuaweiQos.QosResetLsPortQueue:output_type -> huaweiV8R10_qos.Empty
	382, // 902: huaweiV8R10_qos.HuaweiQos.QosResetLvHardPipe:output_type -> huaweiV8R10_qos.Empty
	382, // 903: huaweiV8R10_qos.HuaweiQos.QosResetPolicyApply:output_type -> huaweiV8R10_qos.Empty
	382, // 904: huaweiV8R10_qos.HuaweiQos.QosResetPortQueue:output_type -> huaweiV8R10_qos.Empty
	382, // 905: huaweiV8R10_qos.HuaweiQos.QosResetProUSt:output_type -> huaweiV8R10_qos.Empty
	382, // 906: huaweiV8R10_qos.HuaweiQos.QosResetProfile:output_type -> huaweiV8R10_qos.Empty
	382, // 907: huaweiV8R10_qos.HuaweiQos.QosResetSlotPortQueue:output_type -> huaweiV8R10_qos.Empty
	382, // 908: huaweiV8R10_qos.HuaweiQos.QosResetSlotVOQSt:output_type -> huaweiV8R10_qos.Empty
	382, // 909: huaweiV8R10_qos.HuaweiQos.QosResetSubPortQSt:output_type -> huaweiV8R10_qos.Empty
	382, // 910: huaweiV8R10_qos.HuaweiQos.QosResetVniGQ:output_type -> huaweiV8R10_qos.Empty
	382, // 911: huaweiV8R10_qos.HuaweiQos.QosResetVpnVxlanPolicyApply:output_type -> huaweiV8R10_qos.Empty
	890, // [890:912] is the sub-list for method output_type
	868, // [868:890] is the sub-list for method input_type
	868, // [868:868] is the sub-list for extension type_name
	868, // [868:868] is the sub-list for extension extendee
	0,   // [0:868] is the sub-list for field type_name
}

func init() { file_huaweiV8R10_qos_proto_init() }
func file_huaweiV8R10_qos_proto_init() {
	if File_huaweiV8R10_qos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_huaweiV8R10_qos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetATMPvcQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetBdPolicyApplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetBdVxlanPolicyApplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetEvplVxlanPolicyApplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetGlobalPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetHardPipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetIFGQStRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetIfCarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetIfGQRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetIfQppbRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetIfSQRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetLsPortQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetLvHardPipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetPolicyApplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetPortQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetProUStRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetSlotPortQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetSlotVOQStRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetSubPortQStRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetVniGQRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QosResetVpnVxlanPolicyApplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HwXQoSPortQueueAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HwXQoSPortQueueAlarmClear); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosAclLogParaCfs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBaHosts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBuffers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosChannelProfileTmps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosDss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosEVPLQoss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosGlobalPolicys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosGlobalQppbs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosHardPipeAbilitys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQppbCfgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosInfUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLowLaEns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsQosGlobalPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosPQschedules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosPackEnables); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosPirPrecisions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosPolicyMatchIpOnlys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosPortQueueStatInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosQppbPolicys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosRdrRouteFlts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosRemoteIfQoss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotChannelAlarms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotChannelPres); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotChannelProfileApps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotCvgPcds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotPQAlarms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotPQDiscardAlarms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSubPortQueues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSystemViews); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosVPNQoss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowMappings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFourFlowMappings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosIFUserQueues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosPortQTempApplys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosPortQTemps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfileApplys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosServiceTemplates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosUserGroupQueues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosVNIQOSProAppNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowMappings_HqosFlowMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowMappings_HqosFlowMapping_HqosFMParams_HqosFMParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityScheduleModes_HqosPriorityScheduleMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosPriorityShareShapings_HqosPriorityShareShaping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueue4Coss_HqosQueue4Cos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueuePrioritys_HqosQueuePriority); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosQueues_HqosQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosRdmDscrds_HqosRdmDscrd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeIDs_HqosShareShapeID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapeRdms_HqosShareShapeRdm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFlowQueues_HqosFlowQueue_HqosShareShapes_HqosShareShape); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosFourFlowMappings_HqosFourFlowMapping_HqosFourFMParams_HqosFourFMParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosIFUserQueues_HqosIFUserQueue_HqosIFUserQueueStats_HqosIFUserQueueStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosPortQTempApplys_HqosPortQTempApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosPortQTemps_HqosPortQTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosPortQTemps_HqosPortQTemp_HqosPortQParas_HqosPortQPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfileApplys_HqosProfileApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosGqStats_HqosGqStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileCarStats_HqosProfileCarStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosProfileStats_HqosProfileStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfileApplys_HqosProfileApply_HqosShareShapeStats_HqosShareShapeStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfiles_HqosProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfiles_HqosProfile_HqosMplsHqoss_HqosMplsHqos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfiles_HqosProfile_HqosProCars_HqosProCar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfiles_HqosProfile_HqosProTmpDescs_HqosProTmpDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfiles_HqosProfile_HqosSQWeights_HqosSQWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueueTimeRanges_HqosUserQueueTimeRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosProfiles_HqosProfile_HqosUserQueues_HqosUserQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosServiceTemplates_HqosServiceTemplate_HqosSrvLengths_HqosSrvLength); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQCirPirs_HqosGQCirPir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQModes_HqosGQMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapingpriortys_HqosGQShapingpriorty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQShapings_HqosGQShaping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosGQStats_HqosGQStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosUserGroupQueues_HqosUserGroupQueue_HqosWeights_HqosWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniCarStats_HqosProfileVniCarStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_Hqos_HqosVNIQOSProAppNodes_HqosVNIQOSProAppNode_HqosProfileVniStats_HqosProfileVniStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosAclLogParaCfs_QosAclLogParaCf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdPhbs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdTrusts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdDefaultServiceClasss_QosBdDefaultServiceClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdPhbs_QosBdPhb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdActSqStats_QosBdActSqStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdPolicyApplys_QosBdPolicyApply_QosBdPolicyStats_QosBdPolicyStat_QosBdClassifierStats_QosBdClassifierStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdTrusts_QosBdTrust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdVxlanCarDisables_QosBdVxlanCarDisable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPhbs_QosBdVxlanPhb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdVxlanPolicyApplys_QosBdVxlanPolicyApply_QosBdVxlanPolicyStats_QosBdVxlanPolicyStat_QosBdVxlanClassifierStats_QosBdVxlanClassifierStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBDQoss_QosBDQos_QosBdVxlanTrusts_QosBdVxlanTrust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBaHosts_QosBaHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosBuffers_QosBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosMqcStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosPolicys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosVpnGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActAclLogs_QosActAclLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCarPpss_QosActCarPps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActCars_QosActCar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActFilters_QosActFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActIncPris_QosActIncPri); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActL2Suppres_QosActL2Suppre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActLoads_QosActLoad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActMirCars_QosActMirCar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActNsSamplers_QosActNsSampler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActPortMirrors_QosActPortMirror); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrLsps_QosActRdrLsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhp6S_QosActRdrMhp6_QosRdrNhp6S_QosRdrNhp6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMhps_QosActRdrMhp_QosRdrNhps_QosRdrNhp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrMldpTnls_QosActRdrMldpTnl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhp6S_QosActRdrNhp6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrNhps_QosActRdrNhp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrPolicys_QosActRdrPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrTnls_QosActRdrTnl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRdrVpns_QosActRdrVpn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActRemarks_QosActRemark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSrvClss_QosActSrvCls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActSysLogs_QosActSysLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUrpfs_QosActUrpf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosBehaviors_QosBehavior_QosActUserQueues_QosActUserQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalID6S_QosLocalID6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosLocalIDs_QosLocalID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcl6S_QosRuleAcl6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAcls_QosRuleAcl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleAnys_QosRuleAny); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleIPv6Addrs_QosRuleIPv6Addr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleMacs_QosRuleMac); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRulePrioritys_QosRulePriority); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleProto6S_QosRuleProto6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosClassifiers_QosClassifier_QosRuleTcpFlags_QosRuleTcpFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosMqcStatistics_QosMqcStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosPolicys_QosPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodeNewModes_QosPolicyNodeNewMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosPolicys_QosPolicy_QosPolicyNodes_QosPolicyNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosLocalIDEns_V6QosLocalIDEn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosPolicys_QosPolicy_V6QosVniEns_V6QosVniEn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosVpnGroups_QosVpnGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosCbQos_QosVpnGroups_QosVpnGroup_QosVpnInstances_QosVpnInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosChannelProfileTmps_QosChannelProfileTmp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosChannelProfileTmps_QosChannelProfileTmp_QosChannelProfileCfgs_QosChannelProfileCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosDss_QosDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosDss_QosDs_QosAppIfs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosDss_QosDs_QosBas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosDss_QosDs_QosPhbs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosDss_QosDs_QosAppIfs_QosAppIf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosDss_QosDs_QosBas_QosBa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosDss_QosDs_QosPhbs_QosPhb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosEVPLQoss_QosEVPLQos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[282].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[283].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[284].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[285].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPhbs_QosEvplVxlanPhb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[286].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[287].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[288].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[289].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[290].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanPolicyApplys_QosEvplVxlanPolicyApply_QosEvplVxlanPolicyStats_QosEvplVxlanPolicyStat_QosEvplVxlanClassifierStats_QosEvplVxlanClassifierStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[291].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosEVPLQoss_QosEVPLQos_QosEvplVxlanTrusts_QosEvplVxlanTrust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[292].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosGlobalPolicys_QosGlobalPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[293].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[294].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[295].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[296].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosGlobalPolicys_QosGlobalPolicy_QosGPolicyStats_QosGPolicyStat_QosGClassifierStats_QosGClassifierStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[297].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosGlobalQppbs_QosGlobalQppb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[298].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosHardPipeAbilitys_QosHardPipeAbility); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[299].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[300].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[301].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosCvgPcds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[302].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosDefSQCirs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[303].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[304].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosDeiEnables); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[305].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[306].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosDomLnkAds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[307].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosDomRespools); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[308].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosGQApps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[309].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosHardPipes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[310].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIFGQStDisps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[311].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIfCars); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[312].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIfPhbs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[313].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIfQppbs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[314].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIfTrusts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[315].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosLdpTraffics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[316].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosLrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[317].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosLvHardPStVws); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[318].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosMemLinkSchs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[319].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[320].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[321].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[322].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[323].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPortQueues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[324].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPortShapings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[325].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosQosQueues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[326].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosShapings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[327].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosSubPortQApps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[328].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosSubportquStaschs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[329].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosUserVlanProfs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[330].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosVllPipe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[331].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosWfqShapings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[332].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosWfqWeights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[333].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QOSProBasInsCfgNodes_QOSProBasInsCfgNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[334].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosCvgPcds_QosCvgPcd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[335].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosDefSQCirs_QosDefSQCir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[336].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosDefaultServiceClasss_QosDefaultServiceClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[337].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosDeiEnables_QosDeiEnable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[338].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosDomLnkAdjs_QosDomLnkAdj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[339].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosDomLnkAds_QosDomLnkAd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[340].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosDomRespools_QosDomRespool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[341].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosGQApps_QosGQApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[342].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[343].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[344].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosHardPipes_QosHardPipe_QosHardPipeStats_QosHardPipeStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[345].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIFGQStDisps_QosIFGQStDisp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[346].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[347].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[348].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[349].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarExtStats_QosIfCarExtStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[350].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIfCars_QosIfCar_QosIfCarStats_QosIfCarStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[351].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIfPhbs_QosIfPhb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[352].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[353].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[354].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIfQppbs_QosIfQppb_QosIfQppbStats_QosIfQppbStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[355].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosIfTrusts_QosIfTrust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[356].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosLdpTraffics_QosLdpTraffic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[357].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosLrs_QosLr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[358].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosLvHardPStVws_QosLvHardPStVw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[359].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosMemLinkSchs_QosMemLinkSch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[360].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosMplsL2Vcs_QosMplsL2Vc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[361].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPQDiscardAlarms_QosPQDiscardAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[362].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[363].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[364].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[365].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosActSQStats_QosActSQStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[366].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[367].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[368].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPolicyApplys_QosPolicyApply_QosPolicyStats_QosPolicyStat_QosRuleStats_QosRuleStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[369].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPortQueueAlarms_QosPortQueueAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[370].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[371].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[372].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPortQueues_QosPortQueue_QosPortQueueStats_QosPortQueueStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[373].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosPortShapings_QosPortShaping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[374].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[375].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[376].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosQosQueues_QosQosQueue_QosQosQueueStats_QosQosQueueStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[377].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosShapings_QosShaping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[378].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosSubPortQApps_QosSubPortQApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[379].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosSubportquStaschs_QosSubportquStasch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[380].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosUserVlanProfs_QosUserVlanProf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[381].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosWfqShapings_QosWfqShaping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[382].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQoss_QosIfQos_QosWfqWeights_QosWfqWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[383].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosIfQppbCfgs_QosIfQppbCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[384].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosInfUsers_QosInfUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[385].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosInfUsers_QosInfUser_QosInfUserCARs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[386].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosInfUsers_QosInfUser_QosInfUserSQs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[387].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosInfUsers_QosInfUser_QosInfUserCARs_QosInfUserCAR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[388].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosInfUsers_QosInfUser_QosInfUserSQs_QosInfUserSQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[389].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLowLaEns_QosLowLaEn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[390].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[391].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[392].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[393].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_QosLsAtmTrafficQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[394].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[395].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[396].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[397].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrafficQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[398].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[399].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[400].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcQueues_QosLsPvcQueue_PvcQueueStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[401].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvcs_AtmPvc_QosLsPvcTrustUps_QosLsPvcTrustUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[402].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[403].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrafficQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[404].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[405].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_AtmPvps_AtmPvp_QosLsPvpTrustUps_QosLsPvpTrustUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[406].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[407].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosLsIfQoss_QosLsIfQos_QosLsPortQueues_QosLsPortQueue_QosLsPortQueueStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[408].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosPQschedules_QosPQschedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[409].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosPackEnables_QosPackEnable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[410].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosPirPrecisions_QosPirPrecision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[411].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosPolicyMatchIpOnlys_QosPolicyMatchIpOnly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[412].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosPortQueueStatInfos_QosPortQueueStatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[413].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosQppbPolicys_QosQppbPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[414].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[415].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosQppbPolicys_QosQppbPolicy_QosLocalIDs_QosLocalID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[416].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosRdrRouteFlts_QosRdrRouteFlt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[417].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosRemoteIfQoss_QosRemoteIfQos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[418].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[419].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[420].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteDefClasss_QosRemoteDefClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[421].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosRemoteIfQoss_QosRemoteIfQos_QosRemoteIfTrusts_QosRemoteIfTrust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[422].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotChannelAlarms_QosSlotChannelAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[423].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotChannelPres_QosSlotChannelPre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[424].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[425].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[426].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotChannelProfileApps_QosSlotChannelProfileApp_QosDisplayChannelProfiles_QosDisplayChannelProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[427].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotCvgPcds_QosSlotCvgPcd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[428].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotPQAlarms_QosSlotPQAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[429].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotPQDiscardAlarms_QosSlotPQDiscardAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[430].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[431].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[432].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[433].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[434].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[435].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[436].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[437].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosMcShapers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[438].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[439].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[440].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[441].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[442].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[443].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[444].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[445].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosQOSBursts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[446].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[447].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[448].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[449].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[450].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[451].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[452].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[453].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[454].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[455].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[456].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[457].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[458].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[459].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QOSObsFilterNodes_QOSObsFilterNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[460].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosAccessBoardSchEnOuts_QosAccessBoardSchEnOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[461].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosDomCarToSQs_QosDomCarToSQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[462].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosExpPhbDisbls_QosExpPhbDisbl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[463].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[464].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[465].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosFabQueueEnables_QosFabQueueEnable_QosVOQStatisticss_QosVOQStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[466].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosMcShapSrvTemplates_QosMcShapSrvTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[467].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosMcShapers_QosMcShaper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[468].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosMulticastShapers_QosMulticastShaper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[469].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchIpv6S_QosPolicyMatchIpv6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[470].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMcs_QosPolicyMatchMc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[471].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplsL2S_QosPolicyMatchMplsL2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[472].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchMplss_QosPolicyMatchMpls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[473].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchPkts_QosPolicyMatchPkt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[474].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosPolicyMatchs_QosPolicyMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[475].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosQOSBursts_QosQOSBurst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[476].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosQOSGlobalBufCfgs_QosQOSGlobalBufCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[477].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotFQPirs_QosSlotFQPir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[478].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[479].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[480].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnQueues_QosSlotMcVpnQueue_QosSlotPortQueueStats_QosSlotPortQueueStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[481].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotMcVpnShapers_QosSlotMcVpnShaper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[482].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideAdjNums_QosSlotORideAdjNum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[483].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideDeCycles_QosSlotORideDeCycle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[484].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideEnables_QosSlotORideEnable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[485].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdIns_QosSlotORideGradeThrdIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[486].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideGradeThrdOuts_QosSlotORideGradeThrdOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[487].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideMonitorNums_QosSlotORideMonitorNum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[488].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotORideUpCycles_QosSlotORideUpCycle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[489].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosSlotUclMatchs_QosSlotUclMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[490].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSlotQoss_QosSlotQos_QosUserQueueResource4Coss_QosUserQueueResource4Cos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[491].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSubPortQueues_QosSubPortQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[492].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[493].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[494].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[495].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueConfigs_QosSubPortQueueConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[496].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueShapings_QosSubPortQueueShaping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[497].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSubPortQueues_QosSubPortQueue_QosSubPortQueueWeights_QosSubPortQueueWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[498].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSystemViews_QosSystemView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[499].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[500].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[501].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSystemViews_QosSystemView_QosScheModes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[502].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSystemViews_QosSystemView_QosTMSchTraffs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[503].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSystemViews_QosSystemView_QosLinkLayerExcludes_QosLinkLayerExclude); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[504].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSystemViews_QosSystemView_QosLinkLayerRedbacks_QosLinkLayerRedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[505].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSystemViews_QosSystemView_QosScheModes_QosScheMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[506].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosSystemViews_QosSystemView_QosTMSchTraffs_QosTMSchTraff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[507].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosVPNQoss_QosVPNQos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[508].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[509].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[510].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[511].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[512].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanCarDisables_QosVpnVxlanCarDisable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[513].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPhbs_QosVpnVxlanPhb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[514].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[515].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[516].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[517].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[518].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanPolicyApplys_QosVpnVxlanPolicyApply_QosVpnVxlanPolicyStats_QosVpnVxlanPolicyStat_QosVpnVxlanClassifierStats_QosVpnVxlanClassifierStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[519].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosVPNQoss_QosVPNQos_QosVpnVxlanTrusts_QosVpnVxlanTrust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[520].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred_QosFlowWreds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[521].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred_QosPortWreds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[522].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred_QosWredQueues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[523].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred_QosWreds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[524].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred_QosFlowWreds_QosFlowWred); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[525].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[526].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred_QosFlowWreds_QosFlowWred_QosWredColors_QosWredColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[527].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred_QosPortWreds_QosPortWred); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[528].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[529].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred_QosPortWreds_QosPortWred_QosWredColors_QosWredColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[530].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred_QosWredQueues_QosWredQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[531].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred_QosWreds_QosWred); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[532].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred_QosWreds_QosWred_QosWredColors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_qos_proto_msgTypes[533].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qos_QosWred_QosWreds_QosWred_QosWredColors_QosWredColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_huaweiV8R10_qos_proto_rawDesc,
			NumEnums:      360,
			NumMessages:   534,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_huaweiV8R10_qos_proto_goTypes,
		DependencyIndexes: file_huaweiV8R10_qos_proto_depIdxs,
		EnumInfos:         file_huaweiV8R10_qos_proto_enumTypes,
		MessageInfos:      file_huaweiV8R10_qos_proto_msgTypes,
	}.Build()
	File_huaweiV8R10_qos_proto = out.File
	file_huaweiV8R10_qos_proto_rawDesc = nil
	file_huaweiV8R10_qos_proto_goTypes = nil
	file_huaweiV8R10_qos_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: huaweiV8R10-mpls.proto

package huaweiV8R10_mpls

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_mpls_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_mpls_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_mpls_proto_rawDescGZIP(), []int{0}
}

type Session_Down_MIB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfIndex              uint32 `protobuf:"varint,1,opt,name=IfIndex,proto3" json:"IfIndex,omitempty"`
	IfName               string `protobuf:"bytes,2,opt,name=IfName,proto3" json:"IfName,omitempty"`
	LdpEntityIndex       uint32 `protobuf:"varint,3,opt,name=LdpEntityIndex,proto3" json:"LdpEntityIndex,omitempty"`
	LocalLsrId           string `protobuf:"bytes,4,opt,name=LocalLsrId,proto3" json:"LocalLsrId,omitempty"`
	PeerLsrId            string `protobuf:"bytes,5,opt,name=PeerLsrId,proto3" json:"PeerLsrId,omitempty"`
	Reason               string `protobuf:"bytes,6,opt,name=Reason,proto3" json:"Reason,omitempty"`
	ReasonValue          uint32 `protobuf:"varint,7,opt,name=ReasonValue,proto3" json:"ReasonValue,omitempty"`
	SessionType          string `protobuf:"bytes,8,opt,name=SessionType,proto3" json:"SessionType,omitempty"`
	SsnDiscoTime         uint32 `protobuf:"varint,9,opt,name=SsnDiscoTime,proto3" json:"SsnDiscoTime,omitempty"`
	SsnRecUnknownMsgErrs uint32 `protobuf:"varint,10,opt,name=SsnRecUnknownMsgErrs,proto3" json:"SsnRecUnknownMsgErrs,omitempty"`
	SsnRecUnknownTlvErrs uint32 `protobuf:"varint,11,opt,name=SsnRecUnknownTlvErrs,proto3" json:"SsnRecUnknownTlvErrs,omitempty"`
	SsnState             uint32 `protobuf:"varint,12,opt,name=SsnState,proto3" json:"SsnState,omitempty"`
	SubReason            uint32 `protobuf:"varint,13,opt,name=SubReason,proto3" json:"SubReason,omitempty"`
	VrfName              string `protobuf:"bytes,14,opt,name=VrfName,proto3" json:"VrfName,omitempty"`
	AdjIfIndex           uint32 `protobuf:"varint,15,opt,name=adjIfIndex,proto3" json:"adjIfIndex,omitempty"`
}

func (x *Session_Down_MIB) Reset() {
	*x = Session_Down_MIB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_mpls_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session_Down_MIB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session_Down_MIB) ProtoMessage() {}

func (x *Session_Down_MIB) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_mpls_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session_Down_MIB.ProtoReflect.Descriptor instead.
func (*Session_Down_MIB) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_mpls_proto_rawDescGZIP(), []int{1}
}

func (x *Session_Down_MIB) GetIfIndex() uint32 {
	if x != nil {
		return x.IfIndex
	}
	return 0
}

func (x *Session_Down_MIB) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Session_Down_MIB) GetLdpEntityIndex() uint32 {
	if x != nil {
		return x.LdpEntityIndex
	}
	return 0
}

func (x *Session_Down_MIB) GetLocalLsrId() string {
	if x != nil {
		return x.LocalLsrId
	}
	return ""
}

func (x *Session_Down_MIB) GetPeerLsrId() string {
	if x != nil {
		return x.PeerLsrId
	}
	return ""
}

func (x *Session_Down_MIB) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Session_Down_MIB) GetReasonValue() uint32 {
	if x != nil {
		return x.ReasonValue
	}
	return 0
}

func (x *Session_Down_MIB) GetSessionType() string {
	if x != nil {
		return x.SessionType
	}
	return ""
}

func (x *Session_Down_MIB) GetSsnDiscoTime() uint32 {
	if x != nil {
		return x.SsnDiscoTime
	}
	return 0
}

func (x *Session_Down_MIB) GetSsnRecUnknownMsgErrs() uint32 {
	if x != nil {
		return x.SsnRecUnknownMsgErrs
	}
	return 0
}

func (x *Session_Down_MIB) GetSsnRecUnknownTlvErrs() uint32 {
	if x != nil {
		return x.SsnRecUnknownTlvErrs
	}
	return 0
}

func (x *Session_Down_MIB) GetSsnState() uint32 {
	if x != nil {
		return x.SsnState
	}
	return 0
}

func (x *Session_Down_MIB) GetSubReason() uint32 {
	if x != nil {
		return x.SubReason
	}
	return 0
}

func (x *Session_Down_MIB) GetVrfName() string {
	if x != nil {
		return x.VrfName
	}
	return ""
}

func (x *Session_Down_MIB) GetAdjIfIndex() uint32 {
	if x != nil {
		return x.AdjIfIndex
	}
	return 0
}

type Session_Up_MIB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfIndex              uint32 `protobuf:"varint,1,opt,name=IfIndex,proto3" json:"IfIndex,omitempty"`
	IfName               string `protobuf:"bytes,2,opt,name=IfName,proto3" json:"IfName,omitempty"`
	LdpEntityIndex       uint32 `protobuf:"varint,3,opt,name=LdpEntityIndex,proto3" json:"LdpEntityIndex,omitempty"`
	LocalLsrId           string `protobuf:"bytes,4,opt,name=LocalLsrId,proto3" json:"LocalLsrId,omitempty"`
	PeerLsrId            string `protobuf:"bytes,5,opt,name=PeerLsrId,proto3" json:"PeerLsrId,omitempty"`
	Reason               string `protobuf:"bytes,6,opt,name=Reason,proto3" json:"Reason,omitempty"`
	ReasonValue          uint32 `protobuf:"varint,7,opt,name=ReasonValue,proto3" json:"ReasonValue,omitempty"`
	SessionType          string `protobuf:"bytes,8,opt,name=SessionType,proto3" json:"SessionType,omitempty"`
	SsnDiscoTime         uint32 `protobuf:"varint,9,opt,name=SsnDiscoTime,proto3" json:"SsnDiscoTime,omitempty"`
	SsnRecUnknownMsgErrs uint32 `protobuf:"varint,10,opt,name=SsnRecUnknownMsgErrs,proto3" json:"SsnRecUnknownMsgErrs,omitempty"`
	SsnRecUnknownTlvErrs uint32 `protobuf:"varint,11,opt,name=SsnRecUnknownTlvErrs,proto3" json:"SsnRecUnknownTlvErrs,omitempty"`
	SsnState             uint32 `protobuf:"varint,12,opt,name=SsnState,proto3" json:"SsnState,omitempty"`
	SubReason            uint32 `protobuf:"varint,13,opt,name=SubReason,proto3" json:"SubReason,omitempty"`
	VrfName              string `protobuf:"bytes,14,opt,name=VrfName,proto3" json:"VrfName,omitempty"`
	AdjIfIndex           uint32 `protobuf:"varint,15,opt,name=adjIfIndex,proto3" json:"adjIfIndex,omitempty"`
}

func (x *Session_Up_MIB) Reset() {
	*x = Session_Up_MIB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_mpls_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session_Up_MIB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session_Up_MIB) ProtoMessage() {}

func (x *Session_Up_MIB) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_mpls_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session_Up_MIB.ProtoReflect.Descriptor instead.
func (*Session_Up_MIB) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_mpls_proto_rawDescGZIP(), []int{2}
}

func (x *Session_Up_MIB) GetIfIndex() uint32 {
	if x != nil {
		return x.IfIndex
	}
	return 0
}

func (x *Session_Up_MIB) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *Session_Up_MIB) GetLdpEntityIndex() uint32 {
	if x != nil {
		return x.LdpEntityIndex
	}
	return 0
}

func (x *Session_Up_MIB) GetLocalLsrId() string {
	if x != nil {
		return x.LocalLsrId
	}
	return ""
}

func (x *Session_Up_MIB) GetPeerLsrId() string {
	if x != nil {
		return x.PeerLsrId
	}
	return ""
}

func (x *Session_Up_MIB) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Session_Up_MIB) GetReasonValue() uint32 {
	if x != nil {
		return x.ReasonValue
	}
	return 0
}

func (x *Session_Up_MIB) GetSessionType() string {
	if x != nil {
		return x.SessionType
	}
	return ""
}

func (x *Session_Up_MIB) GetSsnDiscoTime() uint32 {
	if x != nil {
		return x.SsnDiscoTime
	}
	return 0
}

func (x *Session_Up_MIB) GetSsnRecUnknownMsgErrs() uint32 {
	if x != nil {
		return x.SsnRecUnknownMsgErrs
	}
	return 0
}

func (x *Session_Up_MIB) GetSsnRecUnknownTlvErrs() uint32 {
	if x != nil {
		return x.SsnRecUnknownTlvErrs
	}
	return 0
}

func (x *Session_Up_MIB) GetSsnState() uint32 {
	if x != nil {
		return x.SsnState
	}
	return 0
}

func (x *Session_Up_MIB) GetSubReason() uint32 {
	if x != nil {
		return x.SubReason
	}
	return 0
}

func (x *Session_Up_MIB) GetVrfName() string {
	if x != nil {
		return x.VrfName
	}
	return ""
}

func (x *Session_Up_MIB) GetAdjIfIndex() uint32 {
	if x != nil {
		return x.AdjIfIndex
	}
	return 0
}

type Mpls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MplsTe *Mpls_MplsTe `protobuf:"bytes,3,opt,name=mplsTe,proto3" json:"mplsTe,omitempty"`
}

func (x *Mpls) Reset() {
	*x = Mpls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_mpls_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mpls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mpls) ProtoMessage() {}

func (x *Mpls) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_mpls_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mpls.ProtoReflect.Descriptor instead.
func (*Mpls) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_mpls_proto_rawDescGZIP(), []int{3}
}

func (x *Mpls) GetMplsTe() *Mpls_MplsTe {
	if x != nil {
		return x.MplsTe
	}
	return nil
}

type TNLREROUTED struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EgressLsrId       string `protobuf:"bytes,1,opt,name=EgressLsrId,proto3" json:"EgressLsrId,omitempty"`
	IngressLsrId      string `protobuf:"bytes,2,opt,name=IngressLsrId,proto3" json:"IngressLsrId,omitempty"`
	LocalLspId        int32  `protobuf:"varint,3,opt,name=LocalLspId,proto3" json:"LocalLspId,omitempty"`
	TunnelAdminStatus string `protobuf:"bytes,4,opt,name=TunnelAdminStatus,proto3" json:"TunnelAdminStatus,omitempty"`
	TunnelId          int32  `protobuf:"varint,5,opt,name=TunnelId,proto3" json:"TunnelId,omitempty"`
	TunnelOperStatus  string `protobuf:"bytes,6,opt,name=TunnelOperStatus,proto3" json:"TunnelOperStatus,omitempty"`
}

func (x *TNLREROUTED) Reset() {
	*x = TNLREROUTED{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_mpls_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TNLREROUTED) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TNLREROUTED) ProtoMessage() {}

func (x *TNLREROUTED) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_mpls_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TNLREROUTED.ProtoReflect.Descriptor instead.
func (*TNLREROUTED) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_mpls_proto_rawDescGZIP(), []int{4}
}

func (x *TNLREROUTED) GetEgressLsrId() string {
	if x != nil {
		return x.EgressLsrId
	}
	return ""
}

func (x *TNLREROUTED) GetIngressLsrId() string {
	if x != nil {
		return x.IngressLsrId
	}
	return ""
}

func (x *TNLREROUTED) GetLocalLspId() int32 {
	if x != nil {
		return x.LocalLspId
	}
	return 0
}

func (x *TNLREROUTED) GetTunnelAdminStatus() string {
	if x != nil {
		return x.TunnelAdminStatus
	}
	return ""
}

func (x *TNLREROUTED) GetTunnelId() int32 {
	if x != nil {
		return x.TunnelId
	}
	return 0
}

func (x *TNLREROUTED) GetTunnelOperStatus() string {
	if x != nil {
		return x.TunnelOperStatus
	}
	return ""
}

type Mpls_MplsTe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RsvpTeTunnels *Mpls_MplsTe_RsvpTeTunnels `protobuf:"bytes,27,opt,name=rsvpTeTunnels,proto3" json:"rsvpTeTunnels,omitempty"`
}

func (x *Mpls_MplsTe) Reset() {
	*x = Mpls_MplsTe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_mpls_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mpls_MplsTe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mpls_MplsTe) ProtoMessage() {}

func (x *Mpls_MplsTe) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_mpls_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mpls_MplsTe.ProtoReflect.Descriptor instead.
func (*Mpls_MplsTe) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_mpls_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Mpls_MplsTe) GetRsvpTeTunnels() *Mpls_MplsTe_RsvpTeTunnels {
	if x != nil {
		return x.RsvpTeTunnels
	}
	return nil
}

type Mpls_MplsTe_RsvpTeTunnels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RsvpTeTunnel []*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel `protobuf:"bytes,1,rep,name=rsvpTeTunnel,proto3" json:"rsvpTeTunnel,omitempty"`
}

func (x *Mpls_MplsTe_RsvpTeTunnels) Reset() {
	*x = Mpls_MplsTe_RsvpTeTunnels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_mpls_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mpls_MplsTe_RsvpTeTunnels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mpls_MplsTe_RsvpTeTunnels) ProtoMessage() {}

func (x *Mpls_MplsTe_RsvpTeTunnels) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_mpls_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mpls_MplsTe_RsvpTeTunnels.ProtoReflect.Descriptor instead.
func (*Mpls_MplsTe_RsvpTeTunnels) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_mpls_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *Mpls_MplsTe_RsvpTeTunnels) GetRsvpTeTunnel() []*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel {
	if x != nil {
		return x.RsvpTeTunnel
	}
	return nil
}

type Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TunnelName  string                                              `protobuf:"bytes,48,opt,name=tunnelName,proto3" json:"tunnelName,omitempty"`
	TunnelPaths *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths `protobuf:"bytes,49,opt,name=tunnelPaths,proto3" json:"tunnelPaths,omitempty"`
}

func (x *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel) Reset() {
	*x = Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_mpls_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel) ProtoMessage() {}

func (x *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_mpls_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel.ProtoReflect.Descriptor instead.
func (*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_mpls_proto_rawDescGZIP(), []int{3, 0, 0, 0}
}

func (x *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel) GetTunnelName() string {
	if x != nil {
		return x.TunnelName
	}
	return ""
}

func (x *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel) GetTunnelPaths() *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths {
	if x != nil {
		return x.TunnelPaths
	}
	return nil
}

type Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TunnelPath []*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths_TunnelPath `protobuf:"bytes,1,rep,name=tunnelPath,proto3" json:"tunnelPath,omitempty"`
}

func (x *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths) Reset() {
	*x = Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_mpls_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths) ProtoMessage() {}

func (x *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_mpls_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths.ProtoReflect.Descriptor instead.
func (*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_mpls_proto_rawDescGZIP(), []int{3, 0, 0, 0, 0}
}

func (x *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths) GetTunnelPath() []*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths_TunnelPath {
	if x != nil {
		return x.TunnelPath
	}
	return nil
}

type Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths_TunnelPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExplicitPathName string `protobuf:"bytes,3,opt,name=explicitPathName,proto3" json:"explicitPathName,omitempty"`
}

func (x *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths_TunnelPath) Reset() {
	*x = Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths_TunnelPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_mpls_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths_TunnelPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths_TunnelPath) ProtoMessage() {}

func (x *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths_TunnelPath) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_mpls_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths_TunnelPath.ProtoReflect.Descriptor instead.
func (*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths_TunnelPath) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_mpls_proto_rawDescGZIP(), []int{3, 0, 0, 0, 0, 0}
}

func (x *Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths_TunnelPath) GetExplicitPathName() string {
	if x != nil {
		return x.ExplicitPathName
	}
	return ""
}

var File_huaweiV8R10_mpls_proto protoreflect.FileDescriptor

var file_huaweiV8R10_mpls_proto_rawDesc = []byte{
	0x0a, 0x16, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x2d, 0x6d, 0x70,
	0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x6d, 0x70, 0x6c, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x86, 0x04, 0x0a, 0x10, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x44, 0x6f, 0x77, 0x6e, 0x5f, 0x4d, 0x49, 0x42, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x66, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x49, 0x66, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x49, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4c, 0x64,
	0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x4c, 0x64, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x73, 0x72, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x73, 0x72,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x73, 0x72, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x73, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x53, 0x73, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x53, 0x73, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x32, 0x0a, 0x14, 0x53, 0x73, 0x6e, 0x52, 0x65, 0x63, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14,
	0x53, 0x73, 0x6e, 0x52, 0x65, 0x63, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4d, 0x73, 0x67,
	0x45, 0x72, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x53, 0x73, 0x6e, 0x52, 0x65, 0x63, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x54, 0x6c, 0x76, 0x45, 0x72, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x14, 0x53, 0x73, 0x6e, 0x52, 0x65, 0x63, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x54, 0x6c, 0x76, 0x45, 0x72, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x73, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x73, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x53, 0x75, 0x62, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x72, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x72, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x64, 0x6a, 0x49, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x61, 0x64, 0x6a, 0x49, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x84, 0x04, 0x0a,
	0x0e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x55, 0x70, 0x5f, 0x4d, 0x49, 0x42, 0x12,
	0x18, 0x0a, 0x07, 0x49, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x49, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x66, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4c, 0x64, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x4c, 0x64, 0x70, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x4c, 0x73, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x73, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x65, 0x65,
	0x72, 0x4c, 0x73, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x65,
	0x65, 0x72, 0x4c, 0x73, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x73, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x53, 0x73, 0x6e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x53, 0x73, 0x6e, 0x52, 0x65,
	0x63, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x53, 0x73, 0x6e, 0x52, 0x65, 0x63, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x53,
	0x73, 0x6e, 0x52, 0x65, 0x63, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x54, 0x6c, 0x76, 0x45,
	0x72, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x53, 0x73, 0x6e, 0x52, 0x65,
	0x63, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x54, 0x6c, 0x76, 0x45, 0x72, 0x72, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x73, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x53, 0x73, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x75, 0x62, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x53, 0x75, 0x62, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x72, 0x66,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x72, 0x66, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x6a, 0x49, 0x66, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x64, 0x6a, 0x49, 0x66, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0xdf, 0x04, 0x0a, 0x04, 0x4d, 0x70, 0x6c, 0x73, 0x12, 0x35, 0x0a, 0x06,
	0x6d, 0x70, 0x6c, 0x73, 0x54, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x6d, 0x70, 0x6c, 0x73, 0x2e,
	0x4d, 0x70, 0x6c, 0x73, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x54, 0x65, 0x52, 0x06, 0x6d, 0x70, 0x6c,
	0x73, 0x54, 0x65, 0x1a, 0x9f, 0x04, 0x0a, 0x06, 0x4d, 0x70, 0x6c, 0x73, 0x54, 0x65, 0x12, 0x51,
	0x0a, 0x0d, 0x72, 0x73, 0x76, 0x70, 0x54, 0x65, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x6d, 0x70, 0x6c, 0x73, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x2e, 0x4d, 0x70,
	0x6c, 0x73, 0x54, 0x65, 0x2e, 0x52, 0x73, 0x76, 0x70, 0x54, 0x65, 0x54, 0x75, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x52, 0x0d, 0x72, 0x73, 0x76, 0x70, 0x54, 0x65, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x1a, 0xc1, 0x03, 0x0a, 0x0d, 0x52, 0x73, 0x76, 0x70, 0x54, 0x65, 0x54, 0x75, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x12, 0x5c, 0x0a, 0x0c, 0x72, 0x73, 0x76, 0x70, 0x54, 0x65, 0x54, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x6d, 0x70, 0x6c, 0x73, 0x2e, 0x4d, 0x70, 0x6c,
	0x73, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x54, 0x65, 0x2e, 0x52, 0x73, 0x76, 0x70, 0x54, 0x65, 0x54,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x2e, 0x52, 0x73, 0x76, 0x70, 0x54, 0x65, 0x54, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x0c, 0x72, 0x73, 0x76, 0x70, 0x54, 0x65, 0x54, 0x75, 0x6e, 0x6e, 0x65,
	0x6c, 0x1a, 0xd1, 0x02, 0x0a, 0x0c, 0x52, 0x73, 0x76, 0x70, 0x54, 0x65, 0x54, 0x75, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x66, 0x0a, 0x0b, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68,
	0x73, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x6d, 0x70, 0x6c, 0x73, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x2e,
	0x4d, 0x70, 0x6c, 0x73, 0x54, 0x65, 0x2e, 0x52, 0x73, 0x76, 0x70, 0x54, 0x65, 0x54, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x2e, 0x52, 0x73, 0x76, 0x70, 0x54, 0x65, 0x54, 0x75, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x73, 0x52, 0x0b, 0x74,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x73, 0x1a, 0xb8, 0x01, 0x0a, 0x0b, 0x54,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x6f, 0x0a, 0x0a, 0x74, 0x75,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x6d, 0x70, 0x6c,
	0x73, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x54, 0x65, 0x2e, 0x52, 0x73,
	0x76, 0x70, 0x54, 0x65, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x2e, 0x52, 0x73, 0x76, 0x70,
	0x54, 0x65, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x50,
	0x61, 0x74, 0x68, 0x73, 0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x0a, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x38, 0x0a, 0x0a, 0x54,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x70,
	0x6c, 0x69, 0x63, 0x69, 0x74, 0x50, 0x61, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe9, 0x01, 0x0a, 0x0b, 0x54, 0x4e, 0x4c, 0x52, 0x45, 0x52,
	0x4f, 0x55, 0x54, 0x45, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c,
	0x73, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x73, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x73, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x73, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x73, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x73, 0x70, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x54,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x54, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x4f,
	0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_huaweiV8R10_mpls_proto_rawDescOnce sync.Once
	file_huaweiV8R10_mpls_proto_rawDescData = file_huaweiV8R10_mpls_proto_rawDesc
)

func file_huaweiV8R10_mpls_proto_rawDescGZIP() []byte {
	file_huaweiV8R10_mpls_proto_rawDescOnce.Do(func() {
		file_huaweiV8R10_mpls_proto_rawDescData = protoimpl.X.CompressGZIP(file_huaweiV8R10_mpls_proto_rawDescData)
	})
	return file_huaweiV8R10_mpls_proto_rawDescData
}

var file_huaweiV8R10_mpls_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_huaweiV8R10_mpls_proto_goTypes = []interface{}{
	(*Empty)(nil),                                  // 0: huaweiV8R10_mpls.Empty
	(*Session_Down_MIB)(nil),                       // 1: huaweiV8R10_mpls.Session_Down_MIB
	(*Session_Up_MIB)(nil),                         // 2: huaweiV8R10_mpls.Session_Up_MIB
	(*Mpls)(nil),                                   // 3: huaweiV8R10_mpls.Mpls
	(*TNLREROUTED)(nil),                            // 4: huaweiV8R10_mpls.TNLREROUTED
	(*Mpls_MplsTe)(nil),                            // 5: huaweiV8R10_mpls.Mpls.MplsTe
	(*Mpls_MplsTe_RsvpTeTunnels)(nil),              // 6: huaweiV8R10_mpls.Mpls.MplsTe.RsvpTeTunnels
	(*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel)(nil), // 7: huaweiV8R10_mpls.Mpls.MplsTe.RsvpTeTunnels.RsvpTeTunnel
	(*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths)(nil),            // 8: huaweiV8R10_mpls.Mpls.MplsTe.RsvpTeTunnels.RsvpTeTunnel.TunnelPaths
	(*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths_TunnelPath)(nil), // 9: huaweiV8R10_mpls.Mpls.MplsTe.RsvpTeTunnels.RsvpTeTunnel.TunnelPaths.TunnelPath
}
var file_huaweiV8R10_mpls_proto_depIdxs = []int32{
	5, // 0: huaweiV8R10_mpls.Mpls.mplsTe:type_name -> huaweiV8R10_mpls.Mpls.MplsTe
	6, // 1: huaweiV8R10_mpls.Mpls.MplsTe.rsvpTeTunnels:type_name -> huaweiV8R10_mpls.Mpls.MplsTe.RsvpTeTunnels
	7, // 2: huaweiV8R10_mpls.Mpls.MplsTe.RsvpTeTunnels.rsvpTeTunnel:type_name -> huaweiV8R10_mpls.Mpls.MplsTe.RsvpTeTunnels.RsvpTeTunnel
	8, // 3: huaweiV8R10_mpls.Mpls.MplsTe.RsvpTeTunnels.RsvpTeTunnel.tunnelPaths:type_name -> huaweiV8R10_mpls.Mpls.MplsTe.RsvpTeTunnels.RsvpTeTunnel.TunnelPaths
	9, // 4: huaweiV8R10_mpls.Mpls.MplsTe.RsvpTeTunnels.RsvpTeTunnel.TunnelPaths.tunnelPath:type_name -> huaweiV8R10_mpls.Mpls.MplsTe.RsvpTeTunnels.RsvpTeTunnel.TunnelPaths.TunnelPath
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_huaweiV8R10_mpls_proto_init() }
func file_huaweiV8R10_mpls_proto_init() {
	if File_huaweiV8R10_mpls_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_huaweiV8R10_mpls_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_mpls_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session_Down_MIB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_mpls_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session_Up_MIB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_mpls_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mpls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_mpls_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TNLREROUTED); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_mpls_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mpls_MplsTe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_mpls_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mpls_MplsTe_RsvpTeTunnels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_mpls_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_mpls_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_mpls_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mpls_MplsTe_RsvpTeTunnels_RsvpTeTunnel_TunnelPaths_TunnelPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_huaweiV8R10_mpls_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_huaweiV8R10_mpls_proto_goTypes,
		DependencyIndexes: file_huaweiV8R10_mpls_proto_depIdxs,
		MessageInfos:      file_huaweiV8R10_mpls_proto_msgTypes,
	}.Build()
	File_huaweiV8R10_mpls_proto = out.File
	file_huaweiV8R10_mpls_proto_rawDesc = nil
	file_huaweiV8R10_mpls_proto_goTypes = nil
	file_huaweiV8R10_mpls_proto_depIdxs = nil
}

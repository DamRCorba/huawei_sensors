// Automatically generated by goyang https://github.com/openconfig/goyang
// compiled 2017-08-09T07:03:53Z
// do not delete the next line
// goyang-version 1
// module "huawei-devm"
// revision "2017-03-23"
// revision "2013-01-01"
// namespace "http://www.huawei.com/netconf/vrp/huawei-devm"

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: huaweiV8R10-devm.proto

package huaweiV8R10_devm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Devm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuInfos         *Devm_CpuInfos         `protobuf:"bytes,5,opt,name=cpuInfos,proto3" json:"cpuInfos,omitempty"`             //0x2a
	EthPortStaStss   *Devm_EthPortStaStss   `protobuf:"bytes,7,opt,name=ethPortStaStss,proto3" json:"ethPortStaStss,omitempty"` //0x3a
	MemoryInfos      *Devm_MemoryInfos      `protobuf:"bytes,15,opt,name=memoryInfos,proto3" json:"memoryInfos,omitempty"`      //0x7e
	Ports            *Devm_Ports            `protobuf:"bytes,22,opt,name=ports,proto3" json:"ports,omitempty"`                  //0x7e
	Fans             *Devm_Fans             `protobuf:"bytes,24,opt,name=fans,proto3" json:"fans,omitempty"`
	TemperatureInfos *Devm_TemperatureInfos `protobuf:"bytes,52,opt,name=temperatureInfos,proto3" json:"temperatureInfos,omitempty"`
	PowerSupplys     *Devm_PowerSupplys     `protobuf:"bytes,46,opt,name=powerSupplys,proto3" json:"powerSupplys,omitempty"`
}

func (x *Devm) Reset() {
	*x = Devm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm) ProtoMessage() {}

func (x *Devm) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm.ProtoReflect.Descriptor instead.
func (*Devm) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0}
}

func (x *Devm) GetCpuInfos() *Devm_CpuInfos {
	if x != nil {
		return x.CpuInfos
	}
	return nil
}

func (x *Devm) GetEthPortStaStss() *Devm_EthPortStaStss {
	if x != nil {
		return x.EthPortStaStss
	}
	return nil
}

func (x *Devm) GetMemoryInfos() *Devm_MemoryInfos {
	if x != nil {
		return x.MemoryInfos
	}
	return nil
}

func (x *Devm) GetPorts() *Devm_Ports {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Devm) GetFans() *Devm_Fans {
	if x != nil {
		return x.Fans
	}
	return nil
}

func (x *Devm) GetTemperatureInfos() *Devm_TemperatureInfos {
	if x != nil {
		return x.TemperatureInfos
	}
	return nil
}

func (x *Devm) GetPowerSupplys() *Devm_PowerSupplys {
	if x != nil {
		return x.PowerSupplys
	}
	return nil
}

type Devm_CpuInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuInfo []*Devm_CpuInfos_CpuInfo `protobuf:"bytes,1,rep,name=cpuInfo,proto3" json:"cpuInfo,omitempty"` //0x1a
}

func (x *Devm_CpuInfos) Reset() {
	*x = Devm_CpuInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_CpuInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_CpuInfos) ProtoMessage() {}

func (x *Devm_CpuInfos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_CpuInfos.ProtoReflect.Descriptor instead.
func (*Devm_CpuInfos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Devm_CpuInfos) GetCpuInfo() []*Devm_CpuInfos_CpuInfo {
	if x != nil {
		return x.CpuInfo
	}
	return nil
}

type Devm_EthPortStaStss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EthPortStaSts []*Devm_EthPortStaStss_EthPortStaSts `protobuf:"bytes,1,rep,name=ethPortStaSts,proto3" json:"ethPortStaSts,omitempty"` //0x0a
}

func (x *Devm_EthPortStaStss) Reset() {
	*x = Devm_EthPortStaStss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_EthPortStaStss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_EthPortStaStss) ProtoMessage() {}

func (x *Devm_EthPortStaStss) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_EthPortStaStss.ProtoReflect.Descriptor instead.
func (*Devm_EthPortStaStss) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Devm_EthPortStaStss) GetEthPortStaSts() []*Devm_EthPortStaStss_EthPortStaSts {
	if x != nil {
		return x.EthPortStaSts
	}
	return nil
}

type Devm_MemoryInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemoryInfo []*Devm_MemoryInfos_MemoryInfo `protobuf:"bytes,1,rep,name=memoryInfo,proto3" json:"memoryInfo,omitempty"` //0x0e
}

func (x *Devm_MemoryInfos) Reset() {
	*x = Devm_MemoryInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_MemoryInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_MemoryInfos) ProtoMessage() {}

func (x *Devm_MemoryInfos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_MemoryInfos.ProtoReflect.Descriptor instead.
func (*Devm_MemoryInfos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Devm_MemoryInfos) GetMemoryInfo() []*Devm_MemoryInfos_MemoryInfo {
	if x != nil {
		return x.MemoryInfo
	}
	return nil
}

type Devm_Ports struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port []*Devm_Ports_Port `protobuf:"bytes,1,rep,name=port,proto3" json:"port,omitempty"` //0x0e
}

func (x *Devm_Ports) Reset() {
	*x = Devm_Ports{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_Ports) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_Ports) ProtoMessage() {}

func (x *Devm_Ports) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_Ports.ProtoReflect.Descriptor instead.
func (*Devm_Ports) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Devm_Ports) GetPort() []*Devm_Ports_Port {
	if x != nil {
		return x.Port
	}
	return nil
}

type Devm_Fans struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fan []*Devm_Fans_Fan `protobuf:"bytes,1,rep,name=fan,proto3" json:"fan,omitempty"`
}

func (x *Devm_Fans) Reset() {
	*x = Devm_Fans{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_Fans) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_Fans) ProtoMessage() {}

func (x *Devm_Fans) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_Fans.ProtoReflect.Descriptor instead.
func (*Devm_Fans) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Devm_Fans) GetFan() []*Devm_Fans_Fan {
	if x != nil {
		return x.Fan
	}
	return nil
}

type Devm_TemperatureInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemperatureInfo []*Devm_TemperatureInfos_TemperatureInfo `protobuf:"bytes,1,rep,name=temperatureInfo,proto3" json:"temperatureInfo,omitempty"`
}

func (x *Devm_TemperatureInfos) Reset() {
	*x = Devm_TemperatureInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_TemperatureInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_TemperatureInfos) ProtoMessage() {}

func (x *Devm_TemperatureInfos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_TemperatureInfos.ProtoReflect.Descriptor instead.
func (*Devm_TemperatureInfos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Devm_TemperatureInfos) GetTemperatureInfo() []*Devm_TemperatureInfos_TemperatureInfo {
	if x != nil {
		return x.TemperatureInfo
	}
	return nil
}

type Devm_PowerSupplys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PowerSupply []*Devm_PowerSupplys_PowerSupply `protobuf:"bytes,1,rep,name=powerSupply,proto3" json:"powerSupply,omitempty"`
}

func (x *Devm_PowerSupplys) Reset() {
	*x = Devm_PowerSupplys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_PowerSupplys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_PowerSupplys) ProtoMessage() {}

func (x *Devm_PowerSupplys) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_PowerSupplys.ProtoReflect.Descriptor instead.
func (*Devm_PowerSupplys) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Devm_PowerSupplys) GetPowerSupply() []*Devm_PowerSupplys_PowerSupply {
	if x != nil {
		return x.PowerSupply
	}
	return nil
}

type Devm_CpuInfos_CpuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntIndex          uint32 `protobuf:"varint,1,opt,name=entIndex,proto3" json:"entIndex,omitempty"`                   //0x08
	Interval          uint32 `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`                   //0x10
	OvloadThreshold   uint32 `protobuf:"varint,3,opt,name=ovloadThreshold,proto3" json:"ovloadThreshold,omitempty"`     //0x18
	Position          string `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`                    //0x22
	SystemCpuUsage    uint32 `protobuf:"varint,5,opt,name=systemCpuUsage,proto3" json:"systemCpuUsage,omitempty"`       //0x28
	UnovloadThreshold uint32 `protobuf:"varint,6,opt,name=unovloadThreshold,proto3" json:"unovloadThreshold,omitempty"` //0x30
}

func (x *Devm_CpuInfos_CpuInfo) Reset() {
	*x = Devm_CpuInfos_CpuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_CpuInfos_CpuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_CpuInfos_CpuInfo) ProtoMessage() {}

func (x *Devm_CpuInfos_CpuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_CpuInfos_CpuInfo.ProtoReflect.Descriptor instead.
func (*Devm_CpuInfos_CpuInfo) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Devm_CpuInfos_CpuInfo) GetEntIndex() uint32 {
	if x != nil {
		return x.EntIndex
	}
	return 0
}

func (x *Devm_CpuInfos_CpuInfo) GetInterval() uint32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *Devm_CpuInfos_CpuInfo) GetOvloadThreshold() uint32 {
	if x != nil {
		return x.OvloadThreshold
	}
	return 0
}

func (x *Devm_CpuInfos_CpuInfo) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Devm_CpuInfos_CpuInfo) GetSystemCpuUsage() uint32 {
	if x != nil {
		return x.SystemCpuUsage
	}
	return 0
}

func (x *Devm_CpuInfos_CpuInfo) GetUnovloadThreshold() uint32 {
	if x != nil {
		return x.UnovloadThreshold
	}
	return 0
}

type Devm_EthPortStaStss_EthPortStaSts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IfName        uint32 `protobuf:"varint,1,opt,name=ifName,proto3" json:"ifName,omitempty"`               //0x08
	ReceiveByte   uint64 `protobuf:"varint,2,opt,name=receiveByte,proto3" json:"receiveByte,omitempty"`     //0x10
	ReceivePacket uint64 `protobuf:"varint,3,opt,name=receivePacket,proto3" json:"receivePacket,omitempty"` //0x18
	SendByte      uint64 `protobuf:"varint,4,opt,name=sendByte,proto3" json:"sendByte,omitempty"`           //0x20
	SendPacket    uint64 `protobuf:"varint,5,opt,name=sendPacket,proto3" json:"sendPacket,omitempty"`       //0x28
}

func (x *Devm_EthPortStaStss_EthPortStaSts) Reset() {
	*x = Devm_EthPortStaStss_EthPortStaSts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_EthPortStaStss_EthPortStaSts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_EthPortStaStss_EthPortStaSts) ProtoMessage() {}

func (x *Devm_EthPortStaStss_EthPortStaSts) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_EthPortStaStss_EthPortStaSts.ProtoReflect.Descriptor instead.
func (*Devm_EthPortStaStss_EthPortStaSts) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Devm_EthPortStaStss_EthPortStaSts) GetIfName() uint32 {
	if x != nil {
		return x.IfName
	}
	return 0
}

func (x *Devm_EthPortStaStss_EthPortStaSts) GetReceiveByte() uint64 {
	if x != nil {
		return x.ReceiveByte
	}
	return 0
}

func (x *Devm_EthPortStaStss_EthPortStaSts) GetReceivePacket() uint64 {
	if x != nil {
		return x.ReceivePacket
	}
	return 0
}

func (x *Devm_EthPortStaStss_EthPortStaSts) GetSendByte() uint64 {
	if x != nil {
		return x.SendByte
	}
	return 0
}

func (x *Devm_EthPortStaStss_EthPortStaSts) GetSendPacket() uint64 {
	if x != nil {
		return x.SendPacket
	}
	return 0
}

type Devm_MemoryInfos_MemoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoMemoryFree      uint32 `protobuf:"varint,1,opt,name=doMemoryFree,proto3" json:"doMemoryFree,omitempty"`            //0x08
	DoMemoryTotal     uint32 `protobuf:"varint,2,opt,name=doMemoryTotal,proto3" json:"doMemoryTotal,omitempty"`          //0x10
	DoMemoryUsage     uint32 `protobuf:"varint,3,opt,name=doMemoryUsage,proto3" json:"doMemoryUsage,omitempty"`          //0x18
	DoMemoryUse       uint32 `protobuf:"varint,4,opt,name=doMemoryUse,proto3" json:"doMemoryUse,omitempty"`              //0x20
	EntIndex          uint32 `protobuf:"varint,5,opt,name=entIndex,proto3" json:"entIndex,omitempty"`                    //0x28
	OsMemoryFree      uint32 `protobuf:"varint,6,opt,name=osMemoryFree,proto3" json:"osMemoryFree,omitempty"`            //0x30
	OsMemoryTotal     uint32 `protobuf:"varint,7,opt,name=osMemoryTotal,proto3" json:"osMemoryTotal,omitempty"`          //0x38
	OsMemoryUsage     uint32 `protobuf:"varint,8,opt,name=osMemoryUsage,proto3" json:"osMemoryUsage,omitempty"`          //0x40
	OsMemoryUse       uint32 `protobuf:"varint,9,opt,name=osMemoryUse,proto3" json:"osMemoryUse,omitempty"`              //0x48
	OvloadThreshold   uint32 `protobuf:"varint,10,opt,name=ovloadThreshold,proto3" json:"ovloadThreshold,omitempty"`     //0x50
	Position          string `protobuf:"bytes,11,opt,name=position,proto3" json:"position,omitempty"`                    //0x5a
	SimpleMemoryFree  uint32 `protobuf:"varint,12,opt,name=simpleMemoryFree,proto3" json:"simpleMemoryFree,omitempty"`   //0x60
	SimpleMemoryTotal uint32 `protobuf:"varint,13,opt,name=simpleMemoryTotal,proto3" json:"simpleMemoryTotal,omitempty"` //0x68
	SimpleMemoryUsage uint32 `protobuf:"varint,14,opt,name=simpleMemoryUsage,proto3" json:"simpleMemoryUsage,omitempty"` //0x70
	SimpleMemoryUse   uint32 `protobuf:"varint,15,opt,name=simpleMemoryUse,proto3" json:"simpleMemoryUse,omitempty"`     //0x78
	UnovloadThreshold uint32 `protobuf:"varint,16,opt,name=unovloadThreshold,proto3" json:"unovloadThreshold,omitempty"` //0x80 01
}

func (x *Devm_MemoryInfos_MemoryInfo) Reset() {
	*x = Devm_MemoryInfos_MemoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_MemoryInfos_MemoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_MemoryInfos_MemoryInfo) ProtoMessage() {}

func (x *Devm_MemoryInfos_MemoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_MemoryInfos_MemoryInfo.ProtoReflect.Descriptor instead.
func (*Devm_MemoryInfos_MemoryInfo) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *Devm_MemoryInfos_MemoryInfo) GetDoMemoryFree() uint32 {
	if x != nil {
		return x.DoMemoryFree
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetDoMemoryTotal() uint32 {
	if x != nil {
		return x.DoMemoryTotal
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetDoMemoryUsage() uint32 {
	if x != nil {
		return x.DoMemoryUsage
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetDoMemoryUse() uint32 {
	if x != nil {
		return x.DoMemoryUse
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetEntIndex() uint32 {
	if x != nil {
		return x.EntIndex
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetOsMemoryFree() uint32 {
	if x != nil {
		return x.OsMemoryFree
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetOsMemoryTotal() uint32 {
	if x != nil {
		return x.OsMemoryTotal
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetOsMemoryUsage() uint32 {
	if x != nil {
		return x.OsMemoryUsage
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetOsMemoryUse() uint32 {
	if x != nil {
		return x.OsMemoryUse
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetOvloadThreshold() uint32 {
	if x != nil {
		return x.OvloadThreshold
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Devm_MemoryInfos_MemoryInfo) GetSimpleMemoryFree() uint32 {
	if x != nil {
		return x.SimpleMemoryFree
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetSimpleMemoryTotal() uint32 {
	if x != nil {
		return x.SimpleMemoryTotal
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetSimpleMemoryUsage() uint32 {
	if x != nil {
		return x.SimpleMemoryUsage
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetSimpleMemoryUse() uint32 {
	if x != nil {
		return x.SimpleMemoryUse
	}
	return 0
}

func (x *Devm_MemoryInfos_MemoryInfo) GetUnovloadThreshold() uint32 {
	if x != nil {
		return x.UnovloadThreshold
	}
	return 0
}

type Devm_Ports_Port struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position    string                       `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`  //0x5a
	EntIndex    uint32                       `protobuf:"varint,2,opt,name=entIndex,proto3" json:"entIndex,omitempty"` //0x28
	OpticalInfo *Devm_Ports_Port_OpticalInfo `protobuf:"bytes,3,opt,name=opticalInfo,proto3" json:"opticalInfo,omitempty"`
}

func (x *Devm_Ports_Port) Reset() {
	*x = Devm_Ports_Port{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_Ports_Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_Ports_Port) ProtoMessage() {}

func (x *Devm_Ports_Port) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_Ports_Port.ProtoReflect.Descriptor instead.
func (*Devm_Ports_Port) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *Devm_Ports_Port) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Devm_Ports_Port) GetEntIndex() uint32 {
	if x != nil {
		return x.EntIndex
	}
	return 0
}

func (x *Devm_Ports_Port) GetOpticalInfo() *Devm_Ports_Port_OpticalInfo {
	if x != nil {
		return x.OpticalInfo
	}
	return nil
}

type Devm_Ports_Port_OpticalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxPower        string `protobuf:"bytes,1,opt,name=txPower,proto3" json:"txPower,omitempty"`
	RxPower        string `protobuf:"bytes,2,opt,name=rxPower,proto3" json:"rxPower,omitempty"`
	OptBias        int32  `protobuf:"varint,3,opt,name=optBias,proto3" json:"optBias,omitempty"`
	OptVoltage     int32  `protobuf:"varint,4,opt,name=optVoltage,proto3" json:"optVoltage,omitempty"`
	OptTemperature int32  `protobuf:"varint,5,opt,name=optTemperature,proto3" json:"optTemperature,omitempty"`
}

func (x *Devm_Ports_Port_OpticalInfo) Reset() {
	*x = Devm_Ports_Port_OpticalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_Ports_Port_OpticalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_Ports_Port_OpticalInfo) ProtoMessage() {}

func (x *Devm_Ports_Port_OpticalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_Ports_Port_OpticalInfo.ProtoReflect.Descriptor instead.
func (*Devm_Ports_Port_OpticalInfo) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 3, 0, 0}
}

func (x *Devm_Ports_Port_OpticalInfo) GetTxPower() string {
	if x != nil {
		return x.TxPower
	}
	return ""
}

func (x *Devm_Ports_Port_OpticalInfo) GetRxPower() string {
	if x != nil {
		return x.RxPower
	}
	return ""
}

func (x *Devm_Ports_Port_OpticalInfo) GetOptBias() int32 {
	if x != nil {
		return x.OptBias
	}
	return 0
}

func (x *Devm_Ports_Port_OpticalInfo) GetOptVoltage() int32 {
	if x != nil {
		return x.OptVoltage
	}
	return 0
}

func (x *Devm_Ports_Port_OpticalInfo) GetOptTemperature() int32 {
	if x != nil {
		return x.OptTemperature
	}
	return 0
}

type Devm_Fans_Fan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position string `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Speed    uint32 `protobuf:"varint,2,opt,name=speed,proto3" json:"speed,omitempty"`
}

func (x *Devm_Fans_Fan) Reset() {
	*x = Devm_Fans_Fan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_Fans_Fan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_Fans_Fan) ProtoMessage() {}

func (x *Devm_Fans_Fan) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_Fans_Fan.ProtoReflect.Descriptor instead.
func (*Devm_Fans_Fan) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 4, 0}
}

func (x *Devm_Fans_Fan) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Devm_Fans_Fan) GetSpeed() uint32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type Devm_TemperatureInfos_TemperatureInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address            string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Channel            uint32 `protobuf:"varint,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Position           string `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	I2C                uint32 `protobuf:"varint,4,opt,name=i2c,proto3" json:"i2c,omitempty"`
	CurrentTemperature int32  `protobuf:"varint,5,opt,name=currentTemperature,proto3" json:"currentTemperature,omitempty"`
}

func (x *Devm_TemperatureInfos_TemperatureInfo) Reset() {
	*x = Devm_TemperatureInfos_TemperatureInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_TemperatureInfos_TemperatureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_TemperatureInfos_TemperatureInfo) ProtoMessage() {}

func (x *Devm_TemperatureInfos_TemperatureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_TemperatureInfos_TemperatureInfo.ProtoReflect.Descriptor instead.
func (*Devm_TemperatureInfos_TemperatureInfo) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 5, 0}
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetI2C() uint32 {
	if x != nil {
		return x.I2C
	}
	return 0
}

func (x *Devm_TemperatureInfos_TemperatureInfo) GetCurrentTemperature() int32 {
	if x != nil {
		return x.CurrentTemperature
	}
	return 0
}

type Devm_PowerSupplys_PowerSupply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position          string                                           `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	PowerEnvironments *Devm_PowerSupplys_PowerSupply_PowerEnvironments `protobuf:"bytes,7,opt,name=powerEnvironments,proto3" json:"powerEnvironments,omitempty"`
}

func (x *Devm_PowerSupplys_PowerSupply) Reset() {
	*x = Devm_PowerSupplys_PowerSupply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_PowerSupplys_PowerSupply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_PowerSupplys_PowerSupply) ProtoMessage() {}

func (x *Devm_PowerSupplys_PowerSupply) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_PowerSupplys_PowerSupply.ProtoReflect.Descriptor instead.
func (*Devm_PowerSupplys_PowerSupply) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 6, 0}
}

func (x *Devm_PowerSupplys_PowerSupply) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Devm_PowerSupplys_PowerSupply) GetPowerEnvironments() *Devm_PowerSupplys_PowerSupply_PowerEnvironments {
	if x != nil {
		return x.PowerEnvironments
	}
	return nil
}

type Devm_PowerSupplys_PowerSupply_PowerEnvironments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PowerEnvironment []*Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment `protobuf:"bytes,1,rep,name=powerEnvironment,proto3" json:"powerEnvironment,omitempty"`
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments) Reset() {
	*x = Devm_PowerSupplys_PowerSupply_PowerEnvironments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_PowerSupplys_PowerSupply_PowerEnvironments) ProtoMessage() {}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_PowerSupplys_PowerSupply_PowerEnvironments.ProtoReflect.Descriptor instead.
func (*Devm_PowerSupplys_PowerSupply_PowerEnvironments) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 6, 0, 0}
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments) GetPowerEnvironment() []*Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment {
	if x != nil {
		return x.PowerEnvironment
	}
	return nil
}

type Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PemIndex     uint32 `protobuf:"varint,1,opt,name=pemIndex,proto3" json:"pemIndex,omitempty"`
	PowerValue   string `protobuf:"bytes,2,opt,name=powerValue,proto3" json:"powerValue,omitempty"`
	VoltageValue string `protobuf:"bytes,3,opt,name=voltageValue,proto3" json:"voltageValue,omitempty"`
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) Reset() {
	*x = Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_devm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) ProtoMessage() {}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_devm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment.ProtoReflect.Descriptor instead.
func (*Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_devm_proto_rawDescGZIP(), []int{0, 6, 0, 0, 0}
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) GetPemIndex() uint32 {
	if x != nil {
		return x.PemIndex
	}
	return 0
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) GetPowerValue() string {
	if x != nil {
		return x.PowerValue
	}
	return ""
}

func (x *Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment) GetVoltageValue() string {
	if x != nil {
		return x.VoltageValue
	}
	return ""
}

var File_huaweiV8R10_devm_proto protoreflect.FileDescriptor

var file_huaweiV8R10_devm_proto_rawDesc = []byte{
	0x0a, 0x16, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x2d, 0x64, 0x65,
	0x76, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x64, 0x65, 0x76, 0x6d, 0x22, 0x91, 0x18, 0x0a, 0x04, 0x44,
	0x65, 0x76, 0x6d, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x64, 0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d, 0x2e, 0x43, 0x70,
	0x75, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x08, 0x63, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x4d, 0x0a, 0x0e, 0x65, 0x74, 0x68, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x53, 0x74,
	0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x64, 0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d,
	0x2e, 0x45, 0x74, 0x68, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x53, 0x74, 0x73, 0x73, 0x52,
	0x0e, 0x65, 0x74, 0x68, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x53, 0x74, 0x73, 0x73, 0x12,
	0x44, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x64, 0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d, 0x2e, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x64, 0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d, 0x2e, 0x50, 0x6f, 0x72,
	0x74, 0x73, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x61, 0x6e,
	0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x64, 0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d, 0x2e,
	0x46, 0x61, 0x6e, 0x73, 0x52, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x12, 0x53, 0x0a, 0x10, 0x74, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x34,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x64, 0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x10, 0x74,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x47, 0x0a, 0x0c, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x18,
	0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38,
	0x52, 0x31, 0x30, 0x5f, 0x64, 0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d, 0x2e, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x52, 0x0c, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x1a, 0xad, 0x02, 0x0a, 0x08, 0x43, 0x70, 0x75,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x41, 0x0a, 0x07, 0x63, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x64, 0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d, 0x2e, 0x43,
	0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x43, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x63, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xdd, 0x01, 0x0a, 0x07, 0x43, 0x70, 0x75,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x0f,
	0x6f, 0x76, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6f, 0x76, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x75, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x6e,
	0x6f, 0x76, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x75, 0x6e, 0x6f, 0x76, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x1a, 0x99, 0x02, 0x0a, 0x0e, 0x45, 0x74, 0x68,
	0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x53, 0x74, 0x73, 0x73, 0x12, 0x59, 0x0a, 0x0d, 0x65,
	0x74, 0x68, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x53, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30,
	0x5f, 0x64, 0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d, 0x2e, 0x45, 0x74, 0x68, 0x50, 0x6f,
	0x72, 0x74, 0x53, 0x74, 0x61, 0x53, 0x74, 0x73, 0x73, 0x2e, 0x45, 0x74, 0x68, 0x50, 0x6f, 0x72,
	0x74, 0x53, 0x74, 0x61, 0x53, 0x74, 0x73, 0x52, 0x0d, 0x65, 0x74, 0x68, 0x50, 0x6f, 0x72, 0x74,
	0x53, 0x74, 0x61, 0x53, 0x74, 0x73, 0x1a, 0xab, 0x01, 0x0a, 0x0d, 0x45, 0x74, 0x68, 0x50, 0x6f,
	0x72, 0x74, 0x53, 0x74, 0x61, 0x53, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x66, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x66, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x42, 0x79, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x42, 0x79,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x42, 0x79, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x42, 0x79, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x1a, 0xd1, 0x05, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x4d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x64, 0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d,
	0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0xf2, 0x04, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x46, 0x72,
	0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x6f, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x46, 0x72, 0x65, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64,
	0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0d,
	0x64, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x6f, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x55, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x65, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x46, 0x72, 0x65, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6f, 0x73, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x73,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x76, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6f, 0x76, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x46, 0x72, 0x65, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x55, 0x73, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x6e,
	0x6f, 0x76, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x75, 0x6e, 0x6f, 0x76, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x1a, 0xf6, 0x02, 0x0a, 0x05, 0x50, 0x6f, 0x72,
	0x74, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x64,
	0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0xb5, 0x02, 0x0a, 0x04, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x4f, 0x0a, 0x0b, 0x6f, 0x70,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x64, 0x65,
	0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x6f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xa3, 0x01, 0x0a, 0x0b,
	0x4f, 0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x78, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x78,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x42, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x42, 0x69, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x74,
	0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f,
	0x70, 0x74, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x70, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x6f, 0x70, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x1a, 0x72, 0x0a, 0x04, 0x46, 0x61, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x03, 0x66, 0x61, 0x6e,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x64, 0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d, 0x2e, 0x46,
	0x61, 0x6e, 0x73, 0x2e, 0x46, 0x61, 0x6e, 0x52, 0x03, 0x66, 0x61, 0x6e, 0x1a, 0x37, 0x0a, 0x03,
	0x46, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x1a, 0x9b, 0x02, 0x0a, 0x10, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x61, 0x0a, 0x0f, 0x74, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31,
	0x30, 0x5f, 0x64, 0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x74, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xa3, 0x01,
	0x0a, 0x0f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x32, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x69, 0x32, 0x63, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x1a, 0x88, 0x04, 0x0a, 0x0c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x70,
	0x70, 0x6c, 0x79, 0x73, 0x12, 0x51, 0x0a, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x70,
	0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x64, 0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76,
	0x6d, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x0b, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x1a, 0xa4, 0x03, 0x0a, 0x0b, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x11, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x64, 0x65, 0x76,
	0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70,
	0x6c, 0x79, 0x73, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x2e,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x11, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x1a, 0x87, 0x02, 0x0a, 0x11, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x7e, 0x0a, 0x10, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52,
	0x31, 0x30, 0x5f, 0x64, 0x65, 0x76, 0x6d, 0x2e, 0x44, 0x65, 0x76, 0x6d, 0x2e, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x73, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x10, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x72, 0x0a, 0x10, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x65, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x65, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x6f,
	0x6c, 0x74, 0x61, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_huaweiV8R10_devm_proto_rawDescOnce sync.Once
	file_huaweiV8R10_devm_proto_rawDescData = file_huaweiV8R10_devm_proto_rawDesc
)

func file_huaweiV8R10_devm_proto_rawDescGZIP() []byte {
	file_huaweiV8R10_devm_proto_rawDescOnce.Do(func() {
		file_huaweiV8R10_devm_proto_rawDescData = protoimpl.X.CompressGZIP(file_huaweiV8R10_devm_proto_rawDescData)
	})
	return file_huaweiV8R10_devm_proto_rawDescData
}

var file_huaweiV8R10_devm_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_huaweiV8R10_devm_proto_goTypes = []interface{}{
	(*Devm)(nil),                                            // 0: huaweiV8R10_devm.Devm
	(*Devm_CpuInfos)(nil),                                   // 1: huaweiV8R10_devm.Devm.CpuInfos
	(*Devm_EthPortStaStss)(nil),                             // 2: huaweiV8R10_devm.Devm.EthPortStaStss
	(*Devm_MemoryInfos)(nil),                                // 3: huaweiV8R10_devm.Devm.MemoryInfos
	(*Devm_Ports)(nil),                                      // 4: huaweiV8R10_devm.Devm.Ports
	(*Devm_Fans)(nil),                                       // 5: huaweiV8R10_devm.Devm.Fans
	(*Devm_TemperatureInfos)(nil),                           // 6: huaweiV8R10_devm.Devm.TemperatureInfos
	(*Devm_PowerSupplys)(nil),                               // 7: huaweiV8R10_devm.Devm.PowerSupplys
	(*Devm_CpuInfos_CpuInfo)(nil),                           // 8: huaweiV8R10_devm.Devm.CpuInfos.CpuInfo
	(*Devm_EthPortStaStss_EthPortStaSts)(nil),               // 9: huaweiV8R10_devm.Devm.EthPortStaStss.EthPortStaSts
	(*Devm_MemoryInfos_MemoryInfo)(nil),                     // 10: huaweiV8R10_devm.Devm.MemoryInfos.MemoryInfo
	(*Devm_Ports_Port)(nil),                                 // 11: huaweiV8R10_devm.Devm.Ports.Port
	(*Devm_Ports_Port_OpticalInfo)(nil),                     // 12: huaweiV8R10_devm.Devm.Ports.Port.OpticalInfo
	(*Devm_Fans_Fan)(nil),                                   // 13: huaweiV8R10_devm.Devm.Fans.Fan
	(*Devm_TemperatureInfos_TemperatureInfo)(nil),           // 14: huaweiV8R10_devm.Devm.TemperatureInfos.TemperatureInfo
	(*Devm_PowerSupplys_PowerSupply)(nil),                   // 15: huaweiV8R10_devm.Devm.PowerSupplys.PowerSupply
	(*Devm_PowerSupplys_PowerSupply_PowerEnvironments)(nil), // 16: huaweiV8R10_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments
	(*Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment)(nil), // 17: huaweiV8R10_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments.PowerEnvironment
}
var file_huaweiV8R10_devm_proto_depIdxs = []int32{
	1,  // 0: huaweiV8R10_devm.Devm.cpuInfos:type_name -> huaweiV8R10_devm.Devm.CpuInfos
	2,  // 1: huaweiV8R10_devm.Devm.ethPortStaStss:type_name -> huaweiV8R10_devm.Devm.EthPortStaStss
	3,  // 2: huaweiV8R10_devm.Devm.memoryInfos:type_name -> huaweiV8R10_devm.Devm.MemoryInfos
	4,  // 3: huaweiV8R10_devm.Devm.ports:type_name -> huaweiV8R10_devm.Devm.Ports
	5,  // 4: huaweiV8R10_devm.Devm.fans:type_name -> huaweiV8R10_devm.Devm.Fans
	6,  // 5: huaweiV8R10_devm.Devm.temperatureInfos:type_name -> huaweiV8R10_devm.Devm.TemperatureInfos
	7,  // 6: huaweiV8R10_devm.Devm.powerSupplys:type_name -> huaweiV8R10_devm.Devm.PowerSupplys
	8,  // 7: huaweiV8R10_devm.Devm.CpuInfos.cpuInfo:type_name -> huaweiV8R10_devm.Devm.CpuInfos.CpuInfo
	9,  // 8: huaweiV8R10_devm.Devm.EthPortStaStss.ethPortStaSts:type_name -> huaweiV8R10_devm.Devm.EthPortStaStss.EthPortStaSts
	10, // 9: huaweiV8R10_devm.Devm.MemoryInfos.memoryInfo:type_name -> huaweiV8R10_devm.Devm.MemoryInfos.MemoryInfo
	11, // 10: huaweiV8R10_devm.Devm.Ports.port:type_name -> huaweiV8R10_devm.Devm.Ports.Port
	13, // 11: huaweiV8R10_devm.Devm.Fans.fan:type_name -> huaweiV8R10_devm.Devm.Fans.Fan
	14, // 12: huaweiV8R10_devm.Devm.TemperatureInfos.temperatureInfo:type_name -> huaweiV8R10_devm.Devm.TemperatureInfos.TemperatureInfo
	15, // 13: huaweiV8R10_devm.Devm.PowerSupplys.powerSupply:type_name -> huaweiV8R10_devm.Devm.PowerSupplys.PowerSupply
	12, // 14: huaweiV8R10_devm.Devm.Ports.Port.opticalInfo:type_name -> huaweiV8R10_devm.Devm.Ports.Port.OpticalInfo
	16, // 15: huaweiV8R10_devm.Devm.PowerSupplys.PowerSupply.powerEnvironments:type_name -> huaweiV8R10_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments
	17, // 16: huaweiV8R10_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments.powerEnvironment:type_name -> huaweiV8R10_devm.Devm.PowerSupplys.PowerSupply.PowerEnvironments.PowerEnvironment
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_huaweiV8R10_devm_proto_init() }
func file_huaweiV8R10_devm_proto_init() {
	if File_huaweiV8R10_devm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_huaweiV8R10_devm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_CpuInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_EthPortStaStss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_MemoryInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_Ports); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_Fans); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_TemperatureInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_PowerSupplys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_CpuInfos_CpuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_EthPortStaStss_EthPortStaSts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_MemoryInfos_MemoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_Ports_Port); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_Ports_Port_OpticalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_Fans_Fan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_TemperatureInfos_TemperatureInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_PowerSupplys_PowerSupply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_PowerSupplys_PowerSupply_PowerEnvironments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_devm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Devm_PowerSupplys_PowerSupply_PowerEnvironments_PowerEnvironment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_huaweiV8R10_devm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_huaweiV8R10_devm_proto_goTypes,
		DependencyIndexes: file_huaweiV8R10_devm_proto_depIdxs,
		MessageInfos:      file_huaweiV8R10_devm_proto_msgTypes,
	}.Build()
	File_huaweiV8R10_devm_proto = out.File
	file_huaweiV8R10_devm_proto_rawDesc = nil
	file_huaweiV8R10_devm_proto_goTypes = nil
	file_huaweiV8R10_devm_proto_depIdxs = nil
}

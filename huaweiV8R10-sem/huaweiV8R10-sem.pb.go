// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: huaweiV8R10-sem.proto

package huaweiV8R10_sem

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HwCPUUtilizationResume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChassisId         int32  `protobuf:"varint,1,opt,name=ChassisId,proto3" json:"ChassisId,omitempty"`
	CpuUsage          int32  `protobuf:"varint,2,opt,name=CpuUsage,proto3" json:"CpuUsage,omitempty"`
	CpuUsageThreshold int32  `protobuf:"varint,3,opt,name=CpuUsageThreshold,proto3" json:"CpuUsageThreshold,omitempty"`
	EventType         int32  `protobuf:"varint,4,opt,name=EventType,proto3" json:"EventType,omitempty"`
	PhysicalIndex     int32  `protobuf:"varint,5,opt,name=PhysicalIndex,proto3" json:"PhysicalIndex,omitempty"`
	PhysicalName      string `protobuf:"bytes,6,opt,name=PhysicalName,proto3" json:"PhysicalName,omitempty"`
	ProbableCause     int32  `protobuf:"varint,7,opt,name=ProbableCause,proto3" json:"ProbableCause,omitempty"`
	RelativeResource  string `protobuf:"bytes,8,opt,name=RelativeResource,proto3" json:"RelativeResource,omitempty"`
	SlotId            int32  `protobuf:"varint,9,opt,name=SlotId,proto3" json:"SlotId,omitempty"`
	SubIndex          int32  `protobuf:"varint,10,opt,name=SubIndex,proto3" json:"SubIndex,omitempty"`
	TrapSeverity      int32  `protobuf:"varint,11,opt,name=TrapSeverity,proto3" json:"TrapSeverity,omitempty"`
	Unit              int32  `protobuf:"varint,12,opt,name=Unit,proto3" json:"Unit,omitempty"`
	UsageType         int32  `protobuf:"varint,13,opt,name=UsageType,proto3" json:"UsageType,omitempty"`
}

func (x *HwCPUUtilizationResume) Reset() {
	*x = HwCPUUtilizationResume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_sem_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HwCPUUtilizationResume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HwCPUUtilizationResume) ProtoMessage() {}

func (x *HwCPUUtilizationResume) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_sem_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HwCPUUtilizationResume.ProtoReflect.Descriptor instead.
func (*HwCPUUtilizationResume) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_sem_proto_rawDescGZIP(), []int{0}
}

func (x *HwCPUUtilizationResume) GetChassisId() int32 {
	if x != nil {
		return x.ChassisId
	}
	return 0
}

func (x *HwCPUUtilizationResume) GetCpuUsage() int32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *HwCPUUtilizationResume) GetCpuUsageThreshold() int32 {
	if x != nil {
		return x.CpuUsageThreshold
	}
	return 0
}

func (x *HwCPUUtilizationResume) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *HwCPUUtilizationResume) GetPhysicalIndex() int32 {
	if x != nil {
		return x.PhysicalIndex
	}
	return 0
}

func (x *HwCPUUtilizationResume) GetPhysicalName() string {
	if x != nil {
		return x.PhysicalName
	}
	return ""
}

func (x *HwCPUUtilizationResume) GetProbableCause() int32 {
	if x != nil {
		return x.ProbableCause
	}
	return 0
}

func (x *HwCPUUtilizationResume) GetRelativeResource() string {
	if x != nil {
		return x.RelativeResource
	}
	return ""
}

func (x *HwCPUUtilizationResume) GetSlotId() int32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *HwCPUUtilizationResume) GetSubIndex() int32 {
	if x != nil {
		return x.SubIndex
	}
	return 0
}

func (x *HwCPUUtilizationResume) GetTrapSeverity() int32 {
	if x != nil {
		return x.TrapSeverity
	}
	return 0
}

func (x *HwCPUUtilizationResume) GetUnit() int32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

func (x *HwCPUUtilizationResume) GetUsageType() int32 {
	if x != nil {
		return x.UsageType
	}
	return 0
}

type HwCPUUtilizationRisingAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChassisId         int32  `protobuf:"varint,1,opt,name=ChassisId,proto3" json:"ChassisId,omitempty"`
	CpuUsage          int32  `protobuf:"varint,2,opt,name=CpuUsage,proto3" json:"CpuUsage,omitempty"`
	CpuUsageThreshold int32  `protobuf:"varint,3,opt,name=CpuUsageThreshold,proto3" json:"CpuUsageThreshold,omitempty"`
	EventType         int32  `protobuf:"varint,4,opt,name=EventType,proto3" json:"EventType,omitempty"`
	PhysicalIndex     int32  `protobuf:"varint,5,opt,name=PhysicalIndex,proto3" json:"PhysicalIndex,omitempty"`
	PhysicalName      string `protobuf:"bytes,6,opt,name=PhysicalName,proto3" json:"PhysicalName,omitempty"`
	ProbableCause     int32  `protobuf:"varint,7,opt,name=ProbableCause,proto3" json:"ProbableCause,omitempty"`
	RelativeResource  string `protobuf:"bytes,8,opt,name=RelativeResource,proto3" json:"RelativeResource,omitempty"`
	SlotId            int32  `protobuf:"varint,9,opt,name=SlotId,proto3" json:"SlotId,omitempty"`
	SubIndex          int32  `protobuf:"varint,10,opt,name=SubIndex,proto3" json:"SubIndex,omitempty"`
	TrapSeverity      int32  `protobuf:"varint,11,opt,name=TrapSeverity,proto3" json:"TrapSeverity,omitempty"`
	Unit              int32  `protobuf:"varint,12,opt,name=Unit,proto3" json:"Unit,omitempty"`
	UsageType         int32  `protobuf:"varint,13,opt,name=UsageType,proto3" json:"UsageType,omitempty"`
}

func (x *HwCPUUtilizationRisingAlarm) Reset() {
	*x = HwCPUUtilizationRisingAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_sem_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HwCPUUtilizationRisingAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HwCPUUtilizationRisingAlarm) ProtoMessage() {}

func (x *HwCPUUtilizationRisingAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_sem_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HwCPUUtilizationRisingAlarm.ProtoReflect.Descriptor instead.
func (*HwCPUUtilizationRisingAlarm) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_sem_proto_rawDescGZIP(), []int{1}
}

func (x *HwCPUUtilizationRisingAlarm) GetChassisId() int32 {
	if x != nil {
		return x.ChassisId
	}
	return 0
}

func (x *HwCPUUtilizationRisingAlarm) GetCpuUsage() int32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *HwCPUUtilizationRisingAlarm) GetCpuUsageThreshold() int32 {
	if x != nil {
		return x.CpuUsageThreshold
	}
	return 0
}

func (x *HwCPUUtilizationRisingAlarm) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *HwCPUUtilizationRisingAlarm) GetPhysicalIndex() int32 {
	if x != nil {
		return x.PhysicalIndex
	}
	return 0
}

func (x *HwCPUUtilizationRisingAlarm) GetPhysicalName() string {
	if x != nil {
		return x.PhysicalName
	}
	return ""
}

func (x *HwCPUUtilizationRisingAlarm) GetProbableCause() int32 {
	if x != nil {
		return x.ProbableCause
	}
	return 0
}

func (x *HwCPUUtilizationRisingAlarm) GetRelativeResource() string {
	if x != nil {
		return x.RelativeResource
	}
	return ""
}

func (x *HwCPUUtilizationRisingAlarm) GetSlotId() int32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *HwCPUUtilizationRisingAlarm) GetSubIndex() int32 {
	if x != nil {
		return x.SubIndex
	}
	return 0
}

func (x *HwCPUUtilizationRisingAlarm) GetTrapSeverity() int32 {
	if x != nil {
		return x.TrapSeverity
	}
	return 0
}

func (x *HwCPUUtilizationRisingAlarm) GetUnit() int32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

func (x *HwCPUUtilizationRisingAlarm) GetUsageType() int32 {
	if x != nil {
		return x.UsageType
	}
	return 0
}

type HwStorageUtilizationResume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChassisId        int32  `protobuf:"varint,1,opt,name=ChassisId,proto3" json:"ChassisId,omitempty"`
	EventType        int32  `protobuf:"varint,2,opt,name=EventType,proto3" json:"EventType,omitempty"`
	PhysicalIndex    int32  `protobuf:"varint,3,opt,name=PhysicalIndex,proto3" json:"PhysicalIndex,omitempty"`
	PhysicalName     string `protobuf:"bytes,4,opt,name=PhysicalName,proto3" json:"PhysicalName,omitempty"`
	ProbableCause    int32  `protobuf:"varint,5,opt,name=ProbableCause,proto3" json:"ProbableCause,omitempty"`
	ReasonId         uint32 `protobuf:"varint,6,opt,name=ReasonId,proto3" json:"ReasonId,omitempty"`
	RelativeResource string `protobuf:"bytes,7,opt,name=RelativeResource,proto3" json:"RelativeResource,omitempty"`
	SlotId           int32  `protobuf:"varint,8,opt,name=SlotId,proto3" json:"SlotId,omitempty"`
	SubIndex         int32  `protobuf:"varint,9,opt,name=SubIndex,proto3" json:"SubIndex,omitempty"`
	TrapSeverity     int32  `protobuf:"varint,10,opt,name=TrapSeverity,proto3" json:"TrapSeverity,omitempty"`
	Unit             int32  `protobuf:"varint,11,opt,name=Unit,proto3" json:"Unit,omitempty"`
	UsageThreshold   int32  `protobuf:"varint,12,opt,name=UsageThreshold,proto3" json:"UsageThreshold,omitempty"`
	UsageType        int32  `protobuf:"varint,13,opt,name=UsageType,proto3" json:"UsageType,omitempty"`
	UsageValue       int32  `protobuf:"varint,14,opt,name=UsageValue,proto3" json:"UsageValue,omitempty"`
}

func (x *HwStorageUtilizationResume) Reset() {
	*x = HwStorageUtilizationResume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_sem_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HwStorageUtilizationResume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HwStorageUtilizationResume) ProtoMessage() {}

func (x *HwStorageUtilizationResume) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_sem_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HwStorageUtilizationResume.ProtoReflect.Descriptor instead.
func (*HwStorageUtilizationResume) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_sem_proto_rawDescGZIP(), []int{2}
}

func (x *HwStorageUtilizationResume) GetChassisId() int32 {
	if x != nil {
		return x.ChassisId
	}
	return 0
}

func (x *HwStorageUtilizationResume) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *HwStorageUtilizationResume) GetPhysicalIndex() int32 {
	if x != nil {
		return x.PhysicalIndex
	}
	return 0
}

func (x *HwStorageUtilizationResume) GetPhysicalName() string {
	if x != nil {
		return x.PhysicalName
	}
	return ""
}

func (x *HwStorageUtilizationResume) GetProbableCause() int32 {
	if x != nil {
		return x.ProbableCause
	}
	return 0
}

func (x *HwStorageUtilizationResume) GetReasonId() uint32 {
	if x != nil {
		return x.ReasonId
	}
	return 0
}

func (x *HwStorageUtilizationResume) GetRelativeResource() string {
	if x != nil {
		return x.RelativeResource
	}
	return ""
}

func (x *HwStorageUtilizationResume) GetSlotId() int32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *HwStorageUtilizationResume) GetSubIndex() int32 {
	if x != nil {
		return x.SubIndex
	}
	return 0
}

func (x *HwStorageUtilizationResume) GetTrapSeverity() int32 {
	if x != nil {
		return x.TrapSeverity
	}
	return 0
}

func (x *HwStorageUtilizationResume) GetUnit() int32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

func (x *HwStorageUtilizationResume) GetUsageThreshold() int32 {
	if x != nil {
		return x.UsageThreshold
	}
	return 0
}

func (x *HwStorageUtilizationResume) GetUsageType() int32 {
	if x != nil {
		return x.UsageType
	}
	return 0
}

func (x *HwStorageUtilizationResume) GetUsageValue() int32 {
	if x != nil {
		return x.UsageValue
	}
	return 0
}

type HwStorageUtilizationRisingAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChassisId        int32  `protobuf:"varint,1,opt,name=ChassisId,proto3" json:"ChassisId,omitempty"`
	EventType        int32  `protobuf:"varint,2,opt,name=EventType,proto3" json:"EventType,omitempty"`
	PhysicalIndex    int32  `protobuf:"varint,3,opt,name=PhysicalIndex,proto3" json:"PhysicalIndex,omitempty"`
	PhysicalName     string `protobuf:"bytes,4,opt,name=PhysicalName,proto3" json:"PhysicalName,omitempty"`
	ProbableCause    int32  `protobuf:"varint,5,opt,name=ProbableCause,proto3" json:"ProbableCause,omitempty"`
	ReasonId         uint32 `protobuf:"varint,6,opt,name=ReasonId,proto3" json:"ReasonId,omitempty"`
	RelativeResource string `protobuf:"bytes,7,opt,name=RelativeResource,proto3" json:"RelativeResource,omitempty"`
	SlotId           int32  `protobuf:"varint,8,opt,name=SlotId,proto3" json:"SlotId,omitempty"`
	SubIndex         int32  `protobuf:"varint,9,opt,name=SubIndex,proto3" json:"SubIndex,omitempty"`
	TrapSeverity     int32  `protobuf:"varint,10,opt,name=TrapSeverity,proto3" json:"TrapSeverity,omitempty"`
	Unit             int32  `protobuf:"varint,11,opt,name=Unit,proto3" json:"Unit,omitempty"`
	UsageThreshold   int32  `protobuf:"varint,12,opt,name=UsageThreshold,proto3" json:"UsageThreshold,omitempty"`
	UsageType        int32  `protobuf:"varint,13,opt,name=UsageType,proto3" json:"UsageType,omitempty"`
	UsageValue       int32  `protobuf:"varint,14,opt,name=UsageValue,proto3" json:"UsageValue,omitempty"`
}

func (x *HwStorageUtilizationRisingAlarm) Reset() {
	*x = HwStorageUtilizationRisingAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_sem_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HwStorageUtilizationRisingAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HwStorageUtilizationRisingAlarm) ProtoMessage() {}

func (x *HwStorageUtilizationRisingAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_sem_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HwStorageUtilizationRisingAlarm.ProtoReflect.Descriptor instead.
func (*HwStorageUtilizationRisingAlarm) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_sem_proto_rawDescGZIP(), []int{3}
}

func (x *HwStorageUtilizationRisingAlarm) GetChassisId() int32 {
	if x != nil {
		return x.ChassisId
	}
	return 0
}

func (x *HwStorageUtilizationRisingAlarm) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *HwStorageUtilizationRisingAlarm) GetPhysicalIndex() int32 {
	if x != nil {
		return x.PhysicalIndex
	}
	return 0
}

func (x *HwStorageUtilizationRisingAlarm) GetPhysicalName() string {
	if x != nil {
		return x.PhysicalName
	}
	return ""
}

func (x *HwStorageUtilizationRisingAlarm) GetProbableCause() int32 {
	if x != nil {
		return x.ProbableCause
	}
	return 0
}

func (x *HwStorageUtilizationRisingAlarm) GetReasonId() uint32 {
	if x != nil {
		return x.ReasonId
	}
	return 0
}

func (x *HwStorageUtilizationRisingAlarm) GetRelativeResource() string {
	if x != nil {
		return x.RelativeResource
	}
	return ""
}

func (x *HwStorageUtilizationRisingAlarm) GetSlotId() int32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *HwStorageUtilizationRisingAlarm) GetSubIndex() int32 {
	if x != nil {
		return x.SubIndex
	}
	return 0
}

func (x *HwStorageUtilizationRisingAlarm) GetTrapSeverity() int32 {
	if x != nil {
		return x.TrapSeverity
	}
	return 0
}

func (x *HwStorageUtilizationRisingAlarm) GetUnit() int32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

func (x *HwStorageUtilizationRisingAlarm) GetUsageThreshold() int32 {
	if x != nil {
		return x.UsageThreshold
	}
	return 0
}

func (x *HwStorageUtilizationRisingAlarm) GetUsageType() int32 {
	if x != nil {
		return x.UsageType
	}
	return 0
}

func (x *HwStorageUtilizationRisingAlarm) GetUsageValue() int32 {
	if x != nil {
		return x.UsageValue
	}
	return 0
}

type HwSystemConfigError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityTrapFaultID int32 `protobuf:"varint,1,opt,name=EntityTrapFaultID,proto3" json:"EntityTrapFaultID,omitempty"`
}

func (x *HwSystemConfigError) Reset() {
	*x = HwSystemConfigError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_sem_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HwSystemConfigError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HwSystemConfigError) ProtoMessage() {}

func (x *HwSystemConfigError) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_sem_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HwSystemConfigError.ProtoReflect.Descriptor instead.
func (*HwSystemConfigError) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_sem_proto_rawDescGZIP(), []int{4}
}

func (x *HwSystemConfigError) GetEntityTrapFaultID() int32 {
	if x != nil {
		return x.EntityTrapFaultID
	}
	return 0
}

type HwSystemConfigResume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityTrapFaultID int32 `protobuf:"varint,1,opt,name=EntityTrapFaultID,proto3" json:"EntityTrapFaultID,omitempty"`
}

func (x *HwSystemConfigResume) Reset() {
	*x = HwSystemConfigResume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_sem_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HwSystemConfigResume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HwSystemConfigResume) ProtoMessage() {}

func (x *HwSystemConfigResume) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_sem_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HwSystemConfigResume.ProtoReflect.Descriptor instead.
func (*HwSystemConfigResume) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_sem_proto_rawDescGZIP(), []int{5}
}

func (x *HwSystemConfigResume) GetEntityTrapFaultID() int32 {
	if x != nil {
		return x.EntityTrapFaultID
	}
	return 0
}

type Sem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsGrpInfos *Sem_OsGrpInfos `protobuf:"bytes,1,opt,name=osGrpInfos,proto3" json:"osGrpInfos,omitempty"`
}

func (x *Sem) Reset() {
	*x = Sem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_sem_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sem) ProtoMessage() {}

func (x *Sem) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_sem_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sem.ProtoReflect.Descriptor instead.
func (*Sem) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_sem_proto_rawDescGZIP(), []int{6}
}

func (x *Sem) GetOsGrpInfos() *Sem_OsGrpInfos {
	if x != nil {
		return x.OsGrpInfos
	}
	return nil
}

type Sem_OsGrpInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsGrpInfo []*Sem_OsGrpInfos_OsGrpInfo `protobuf:"bytes,1,rep,name=osGrpInfo,proto3" json:"osGrpInfo,omitempty"`
}

func (x *Sem_OsGrpInfos) Reset() {
	*x = Sem_OsGrpInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_sem_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sem_OsGrpInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sem_OsGrpInfos) ProtoMessage() {}

func (x *Sem_OsGrpInfos) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_sem_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sem_OsGrpInfos.ProtoReflect.Descriptor instead.
func (*Sem_OsGrpInfos) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_sem_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Sem_OsGrpInfos) GetOsGrpInfo() []*Sem_OsGrpInfos_OsGrpInfo {
	if x != nil {
		return x.OsGrpInfo
	}
	return nil
}

type Sem_OsGrpInfos_OsGrpInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardID   string `protobuf:"bytes,1,opt,name=boardID,proto3" json:"boardID,omitempty"`
	OsGrpName string `protobuf:"bytes,2,opt,name=osGrpName,proto3" json:"osGrpName,omitempty"`
}

func (x *Sem_OsGrpInfos_OsGrpInfo) Reset() {
	*x = Sem_OsGrpInfos_OsGrpInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_sem_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sem_OsGrpInfos_OsGrpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sem_OsGrpInfos_OsGrpInfo) ProtoMessage() {}

func (x *Sem_OsGrpInfos_OsGrpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_sem_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sem_OsGrpInfos_OsGrpInfo.ProtoReflect.Descriptor instead.
func (*Sem_OsGrpInfos_OsGrpInfo) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_sem_proto_rawDescGZIP(), []int{6, 0, 0}
}

func (x *Sem_OsGrpInfos_OsGrpInfo) GetBoardID() string {
	if x != nil {
		return x.BoardID
	}
	return ""
}

func (x *Sem_OsGrpInfos_OsGrpInfo) GetOsGrpName() string {
	if x != nil {
		return x.OsGrpName
	}
	return ""
}

var File_huaweiV8R10_sem_proto protoreflect.FileDescriptor

var file_huaweiV8R10_sem_proto_rawDesc = []byte{
	0x0a, 0x15, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x2d, 0x73, 0x65,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x73, 0x65, 0x6d, 0x22, 0xc4, 0x03, 0x0a, 0x16, 0x48, 0x77, 0x43,
	0x50, 0x55, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a,
	0x11, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x22, 0x0a, 0x0c, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x61, 0x75, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x62,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x75, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x53, 0x75, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x72, 0x61,
	0x70, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x54, 0x72, 0x61, 0x70, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x55, 0x6e, 0x69,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xc9, 0x03, 0x0a, 0x1b, 0x48, 0x77, 0x43, 0x50, 0x55, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x70, 0x75,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61,
	0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x50, 0x68,
	0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x50,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x75, 0x62,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x70, 0x53, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x54, 0x72, 0x61,
	0x70, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x6e, 0x69,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe2, 0x03, 0x0a, 0x1a,
	0x48, 0x77, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43,
	0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63,
	0x61, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x50,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c,
	0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x75, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x53, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x75, 0x62, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x70, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x70, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x73, 0x61, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x55, 0x73, 0x61, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xe7, 0x03, 0x0a, 0x1f, 0x48, 0x77, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x74,
	0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61,
	0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63,
	0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x68,
	0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72,
	0x6f, 0x62, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x6c, 0x6f, 0x74,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x53, 0x75, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c,
	0x54, 0x72, 0x61, 0x70, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x70, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x43, 0x0a, 0x13, 0x48, 0x77,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2c, 0x0a, 0x11, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x72, 0x61, 0x70, 0x46,
	0x61, 0x75, 0x6c, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x54, 0x72, 0x61, 0x70, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x44, 0x22,
	0x44, 0x0a, 0x14, 0x48, 0x77, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x54, 0x72, 0x61, 0x70, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x72, 0x61, 0x70, 0x46, 0x61,
	0x75, 0x6c, 0x74, 0x49, 0x44, 0x22, 0xe3, 0x01, 0x0a, 0x03, 0x53, 0x65, 0x6d, 0x12, 0x3f, 0x0a,
	0x0a, 0x6f, 0x73, 0x47, 0x72, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f,
	0x73, 0x65, 0x6d, 0x2e, 0x53, 0x65, 0x6d, 0x2e, 0x4f, 0x73, 0x47, 0x72, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x52, 0x0a, 0x6f, 0x73, 0x47, 0x72, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x1a, 0x9a,
	0x01, 0x0a, 0x0a, 0x4f, 0x73, 0x47, 0x72, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x47, 0x0a,
	0x09, 0x6f, 0x73, 0x47, 0x72, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x5f, 0x73,
	0x65, 0x6d, 0x2e, 0x53, 0x65, 0x6d, 0x2e, 0x4f, 0x73, 0x47, 0x72, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x2e, 0x4f, 0x73, 0x47, 0x72, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6f, 0x73, 0x47,
	0x72, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x43, 0x0a, 0x09, 0x4f, 0x73, 0x47, 0x72, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x73, 0x47, 0x72, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x73, 0x47, 0x72, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_huaweiV8R10_sem_proto_rawDescOnce sync.Once
	file_huaweiV8R10_sem_proto_rawDescData = file_huaweiV8R10_sem_proto_rawDesc
)

func file_huaweiV8R10_sem_proto_rawDescGZIP() []byte {
	file_huaweiV8R10_sem_proto_rawDescOnce.Do(func() {
		file_huaweiV8R10_sem_proto_rawDescData = protoimpl.X.CompressGZIP(file_huaweiV8R10_sem_proto_rawDescData)
	})
	return file_huaweiV8R10_sem_proto_rawDescData
}

var file_huaweiV8R10_sem_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_huaweiV8R10_sem_proto_goTypes = []interface{}{
	(*HwCPUUtilizationResume)(nil),          // 0: huaweiV8R10_sem.HwCPUUtilizationResume
	(*HwCPUUtilizationRisingAlarm)(nil),     // 1: huaweiV8R10_sem.HwCPUUtilizationRisingAlarm
	(*HwStorageUtilizationResume)(nil),      // 2: huaweiV8R10_sem.HwStorageUtilizationResume
	(*HwStorageUtilizationRisingAlarm)(nil), // 3: huaweiV8R10_sem.HwStorageUtilizationRisingAlarm
	(*HwSystemConfigError)(nil),             // 4: huaweiV8R10_sem.HwSystemConfigError
	(*HwSystemConfigResume)(nil),            // 5: huaweiV8R10_sem.HwSystemConfigResume
	(*Sem)(nil),                             // 6: huaweiV8R10_sem.Sem
	(*Sem_OsGrpInfos)(nil),                  // 7: huaweiV8R10_sem.Sem.OsGrpInfos
	(*Sem_OsGrpInfos_OsGrpInfo)(nil),        // 8: huaweiV8R10_sem.Sem.OsGrpInfos.OsGrpInfo
}
var file_huaweiV8R10_sem_proto_depIdxs = []int32{
	7, // 0: huaweiV8R10_sem.Sem.osGrpInfos:type_name -> huaweiV8R10_sem.Sem.OsGrpInfos
	8, // 1: huaweiV8R10_sem.Sem.OsGrpInfos.osGrpInfo:type_name -> huaweiV8R10_sem.Sem.OsGrpInfos.OsGrpInfo
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_huaweiV8R10_sem_proto_init() }
func file_huaweiV8R10_sem_proto_init() {
	if File_huaweiV8R10_sem_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_huaweiV8R10_sem_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HwCPUUtilizationResume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_sem_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HwCPUUtilizationRisingAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_sem_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HwStorageUtilizationResume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_sem_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HwStorageUtilizationRisingAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_sem_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HwSystemConfigError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_sem_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HwSystemConfigResume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_sem_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_sem_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sem_OsGrpInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_sem_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sem_OsGrpInfos_OsGrpInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_huaweiV8R10_sem_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_huaweiV8R10_sem_proto_goTypes,
		DependencyIndexes: file_huaweiV8R10_sem_proto_depIdxs,
		MessageInfos:      file_huaweiV8R10_sem_proto_msgTypes,
	}.Build()
	File_huaweiV8R10_sem_proto = out.File
	file_huaweiV8R10_sem_proto_rawDesc = nil
	file_huaweiV8R10_sem_proto_goTypes = nil
	file_huaweiV8R10_sem_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: huaweiV8R10-bgp.proto

package huaweiV8R10_bgp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BACKWARD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddrFamilyAfi    uint32 `protobuf:"varint,1,opt,name=AddrFamilyAfi,proto3" json:"AddrFamilyAfi,omitempty"`
	AddrFamilySafi   uint32 `protobuf:"varint,2,opt,name=AddrFamilySafi,proto3" json:"AddrFamilySafi,omitempty"`
	InstanceId       string `protobuf:"bytes,3,opt,name=InstanceId,proto3" json:"InstanceId,omitempty"`
	LocalIfIndex     uint32 `protobuf:"varint,4,opt,name=LocalIfIndex,proto3" json:"LocalIfIndex,omitempty"`
	LocalIfName      string `protobuf:"bytes,5,opt,name=LocalIfName,proto3" json:"LocalIfName,omitempty"`
	PeerAddrType     uint32 `protobuf:"varint,6,opt,name=PeerAddrType,proto3" json:"PeerAddrType,omitempty"`
	PeerIpv4Addr     string `protobuf:"bytes,7,opt,name=PeerIpv4Addr,proto3" json:"PeerIpv4Addr,omitempty"`
	PeerIpv4Ipv6Addr string `protobuf:"bytes,8,opt,name=PeerIpv4Ipv6Addr,proto3" json:"PeerIpv4Ipv6Addr,omitempty"`
	PeerLastError    string `protobuf:"bytes,9,opt,name=PeerLastError,proto3" json:"PeerLastError,omitempty"`
	PeerState        uint32 `protobuf:"varint,10,opt,name=PeerState,proto3" json:"PeerState,omitempty"`
	Reason           string `protobuf:"bytes,11,opt,name=Reason,proto3" json:"Reason,omitempty"`
	IfIndex          uint32 `protobuf:"varint,12,opt,name=ifIndex,proto3" json:"ifIndex,omitempty"`
}

func (x *BACKWARD) Reset() {
	*x = BACKWARD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_bgp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BACKWARD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BACKWARD) ProtoMessage() {}

func (x *BACKWARD) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_bgp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BACKWARD.ProtoReflect.Descriptor instead.
func (*BACKWARD) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_bgp_proto_rawDescGZIP(), []int{0}
}

func (x *BACKWARD) GetAddrFamilyAfi() uint32 {
	if x != nil {
		return x.AddrFamilyAfi
	}
	return 0
}

func (x *BACKWARD) GetAddrFamilySafi() uint32 {
	if x != nil {
		return x.AddrFamilySafi
	}
	return 0
}

func (x *BACKWARD) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *BACKWARD) GetLocalIfIndex() uint32 {
	if x != nil {
		return x.LocalIfIndex
	}
	return 0
}

func (x *BACKWARD) GetLocalIfName() string {
	if x != nil {
		return x.LocalIfName
	}
	return ""
}

func (x *BACKWARD) GetPeerAddrType() uint32 {
	if x != nil {
		return x.PeerAddrType
	}
	return 0
}

func (x *BACKWARD) GetPeerIpv4Addr() string {
	if x != nil {
		return x.PeerIpv4Addr
	}
	return ""
}

func (x *BACKWARD) GetPeerIpv4Ipv6Addr() string {
	if x != nil {
		return x.PeerIpv4Ipv6Addr
	}
	return ""
}

func (x *BACKWARD) GetPeerLastError() string {
	if x != nil {
		return x.PeerLastError
	}
	return ""
}

func (x *BACKWARD) GetPeerState() uint32 {
	if x != nil {
		return x.PeerState
	}
	return 0
}

func (x *BACKWARD) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *BACKWARD) GetIfIndex() uint32 {
	if x != nil {
		return x.IfIndex
	}
	return 0
}

type ESTABLISHED struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddrFamilyAfi    uint32 `protobuf:"varint,1,opt,name=AddrFamilyAfi,proto3" json:"AddrFamilyAfi,omitempty"`
	AddrFamilySafi   uint32 `protobuf:"varint,2,opt,name=AddrFamilySafi,proto3" json:"AddrFamilySafi,omitempty"`
	InstanceId       string `protobuf:"bytes,3,opt,name=InstanceId,proto3" json:"InstanceId,omitempty"`
	LocalIfIndex     uint32 `protobuf:"varint,4,opt,name=LocalIfIndex,proto3" json:"LocalIfIndex,omitempty"`
	LocalIfName      string `protobuf:"bytes,5,opt,name=LocalIfName,proto3" json:"LocalIfName,omitempty"`
	PeerAddrType     uint32 `protobuf:"varint,6,opt,name=PeerAddrType,proto3" json:"PeerAddrType,omitempty"`
	PeerIpv4Addr     string `protobuf:"bytes,7,opt,name=PeerIpv4Addr,proto3" json:"PeerIpv4Addr,omitempty"`
	PeerIpv4Ipv6Addr string `protobuf:"bytes,8,opt,name=PeerIpv4Ipv6Addr,proto3" json:"PeerIpv4Ipv6Addr,omitempty"`
	PeerLastError    string `protobuf:"bytes,9,opt,name=PeerLastError,proto3" json:"PeerLastError,omitempty"`
	PeerState        uint32 `protobuf:"varint,10,opt,name=PeerState,proto3" json:"PeerState,omitempty"`
	Reason           string `protobuf:"bytes,11,opt,name=Reason,proto3" json:"Reason,omitempty"`
	IfIndex          uint32 `protobuf:"varint,12,opt,name=ifIndex,proto3" json:"ifIndex,omitempty"`
}

func (x *ESTABLISHED) Reset() {
	*x = ESTABLISHED{}
	if protoimpl.UnsafeEnabled {
		mi := &file_huaweiV8R10_bgp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESTABLISHED) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESTABLISHED) ProtoMessage() {}

func (x *ESTABLISHED) ProtoReflect() protoreflect.Message {
	mi := &file_huaweiV8R10_bgp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESTABLISHED.ProtoReflect.Descriptor instead.
func (*ESTABLISHED) Descriptor() ([]byte, []int) {
	return file_huaweiV8R10_bgp_proto_rawDescGZIP(), []int{1}
}

func (x *ESTABLISHED) GetAddrFamilyAfi() uint32 {
	if x != nil {
		return x.AddrFamilyAfi
	}
	return 0
}

func (x *ESTABLISHED) GetAddrFamilySafi() uint32 {
	if x != nil {
		return x.AddrFamilySafi
	}
	return 0
}

func (x *ESTABLISHED) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ESTABLISHED) GetLocalIfIndex() uint32 {
	if x != nil {
		return x.LocalIfIndex
	}
	return 0
}

func (x *ESTABLISHED) GetLocalIfName() string {
	if x != nil {
		return x.LocalIfName
	}
	return ""
}

func (x *ESTABLISHED) GetPeerAddrType() uint32 {
	if x != nil {
		return x.PeerAddrType
	}
	return 0
}

func (x *ESTABLISHED) GetPeerIpv4Addr() string {
	if x != nil {
		return x.PeerIpv4Addr
	}
	return ""
}

func (x *ESTABLISHED) GetPeerIpv4Ipv6Addr() string {
	if x != nil {
		return x.PeerIpv4Ipv6Addr
	}
	return ""
}

func (x *ESTABLISHED) GetPeerLastError() string {
	if x != nil {
		return x.PeerLastError
	}
	return ""
}

func (x *ESTABLISHED) GetPeerState() uint32 {
	if x != nil {
		return x.PeerState
	}
	return 0
}

func (x *ESTABLISHED) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ESTABLISHED) GetIfIndex() uint32 {
	if x != nil {
		return x.IfIndex
	}
	return 0
}

var File_huaweiV8R10_bgp_proto protoreflect.FileDescriptor

var file_huaweiV8R10_bgp_proto_rawDesc = []byte{
	0x0a, 0x15, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x38, 0x52, 0x31, 0x30, 0x2d, 0x62, 0x67,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x38, 0x52, 0x31, 0x30, 0x5f, 0x62, 0x67, 0x70, 0x22, 0xa8, 0x03, 0x0a, 0x08, 0x42, 0x41, 0x43,
	0x4b, 0x57, 0x41, 0x52, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x46, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x41, 0x66, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x41, 0x64,
	0x64, 0x72, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x41, 0x66, 0x69, 0x12, 0x26, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x72, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x53, 0x61, 0x66, 0x69, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x53,
	0x61, 0x66, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x66, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x49, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x49, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x49, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x65, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x50, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x50, 0x65, 0x65, 0x72, 0x49, 0x70, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x65, 0x65, 0x72, 0x49, 0x70, 0x76, 0x34, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x2a, 0x0a, 0x10, 0x50, 0x65, 0x65, 0x72, 0x49, 0x70, 0x76, 0x34, 0x49, 0x70, 0x76,
	0x36, 0x41, 0x64, 0x64, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x65, 0x65,
	0x72, 0x49, 0x70, 0x76, 0x34, 0x49, 0x70, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a,
	0x0d, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x66, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x66, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0xab, 0x03, 0x0a, 0x0b, 0x45, 0x53, 0x54, 0x41, 0x42, 0x4c, 0x49, 0x53,
	0x48, 0x45, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x46, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x41, 0x66, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x41, 0x64, 0x64, 0x72,
	0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x41, 0x66, 0x69, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x72, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x53, 0x61, 0x66, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x53, 0x61, 0x66,
	0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x66, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x66,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x66,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x49, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x65, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x50,
	0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50,
	0x65, 0x65, 0x72, 0x49, 0x70, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x50, 0x65, 0x65, 0x72, 0x49, 0x70, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x2a, 0x0a, 0x10, 0x50, 0x65, 0x65, 0x72, 0x49, 0x70, 0x76, 0x34, 0x49, 0x70, 0x76, 0x36, 0x41,
	0x64, 0x64, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x65, 0x65, 0x72, 0x49,
	0x70, 0x76, 0x34, 0x49, 0x70, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x50,
	0x65, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x65, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x66, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x66, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_huaweiV8R10_bgp_proto_rawDescOnce sync.Once
	file_huaweiV8R10_bgp_proto_rawDescData = file_huaweiV8R10_bgp_proto_rawDesc
)

func file_huaweiV8R10_bgp_proto_rawDescGZIP() []byte {
	file_huaweiV8R10_bgp_proto_rawDescOnce.Do(func() {
		file_huaweiV8R10_bgp_proto_rawDescData = protoimpl.X.CompressGZIP(file_huaweiV8R10_bgp_proto_rawDescData)
	})
	return file_huaweiV8R10_bgp_proto_rawDescData
}

var file_huaweiV8R10_bgp_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_huaweiV8R10_bgp_proto_goTypes = []interface{}{
	(*BACKWARD)(nil),    // 0: huaweiV8R10_bgp.BACKWARD
	(*ESTABLISHED)(nil), // 1: huaweiV8R10_bgp.ESTABLISHED
}
var file_huaweiV8R10_bgp_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_huaweiV8R10_bgp_proto_init() }
func file_huaweiV8R10_bgp_proto_init() {
	if File_huaweiV8R10_bgp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_huaweiV8R10_bgp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BACKWARD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_huaweiV8R10_bgp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESTABLISHED); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_huaweiV8R10_bgp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_huaweiV8R10_bgp_proto_goTypes,
		DependencyIndexes: file_huaweiV8R10_bgp_proto_depIdxs,
		MessageInfos:      file_huaweiV8R10_bgp_proto_msgTypes,
	}.Build()
	File_huaweiV8R10_bgp_proto = out.File
	file_huaweiV8R10_bgp_proto_rawDesc = nil
	file_huaweiV8R10_bgp_proto_goTypes = nil
	file_huaweiV8R10_bgp_proto_depIdxs = nil
}
